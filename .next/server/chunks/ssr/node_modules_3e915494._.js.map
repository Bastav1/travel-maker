{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/%40radix-ui/react-compose-refs/src/compose-refs.tsx"],"sourcesContent":["import * as React from 'react';\n\ntype PossibleRef<T> = React.Ref<T> | undefined;\n\n/**\n * Set a given ref to a given value\n * This utility takes care of different types of refs: callback refs and RefObject(s)\n */\nfunction setRef<T>(ref: PossibleRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    return ref(value);\n  } else if (ref !== null && ref !== undefined) {\n    ref.current = value;\n  }\n}\n\n/**\n * A utility to compose multiple refs together\n * Accepts callback refs and RefObject(s)\n */\nfunction composeRefs<T>(...refs: PossibleRef<T>[]): React.RefCallback<T> {\n  return (node) => {\n    let hasCleanup = false;\n    const cleanups = refs.map((ref) => {\n      const cleanup = setRef(ref, node);\n      if (!hasCleanup && typeof cleanup == 'function') {\n        hasCleanup = true;\n      }\n      return cleanup;\n    });\n\n    // React <19 will log an error to the console if a callback ref returns a\n    // value. We don't use ref cleanups internally so this will only happen if a\n    // user's ref callback returns a value, which we only expect if they are\n    // using the cleanup functionality added in React 19.\n    if (hasCleanup) {\n      return () => {\n        for (let i = 0; i < cleanups.length; i++) {\n          const cleanup = cleanups[i];\n          if (typeof cleanup == 'function') {\n            cleanup();\n          } else {\n            setRef(refs[i], null);\n          }\n        }\n      };\n    }\n  };\n}\n\n/**\n * A custom hook that composes multiple refs\n * Accepts callback refs and RefObject(s)\n */\nfunction useComposedRefs<T>(...refs: PossibleRef<T>[]): React.RefCallback<T> {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return React.useCallback(composeRefs(...refs), refs);\n}\n\nexport { composeRefs, useComposedRefs };\n"],"names":[],"mappings":";;;;;AAAA,YAAY,WAAW;;AAQvB,SAAS,OAAU,GAAA,EAAqB,KAAA,EAAU;IAChD,IAAI,OAAO,QAAQ,YAAY;QAC7B,OAAO,IAAI,KAAK;IAClB,OAAA,IAAW,QAAQ,QAAQ,QAAQ,KAAA,GAAW;QAC5C,IAAI,OAAA,GAAU;IAChB;AACF;AAMA,SAAS,YAAA,GAAkB,IAAA,EAA8C;IACvE,OAAO,CAAC,SAAS;QACf,IAAI,aAAa;QACjB,MAAM,WAAW,KAAK,GAAA,CAAI,CAAC,QAAQ;YACjC,MAAM,UAAU,OAAO,KAAK,IAAI;YAChC,IAAI,CAAC,cAAc,OAAO,WAAW,YAAY;gBAC/C,aAAa;YACf;YACA,OAAO;QACT,CAAC;QAMD,IAAI,YAAY;YACd,OAAO,MAAM;gBACX,IAAA,IAAS,IAAI,GAAG,IAAI,SAAS,MAAA,EAAQ,IAAK;oBACxC,MAAM,UAAU,QAAA,CAAS,CAAC,CAAA;oBAC1B,IAAI,OAAO,WAAW,YAAY;wBAChC,QAAQ;oBACV,OAAO;wBACL,OAAO,IAAA,CAAK,CAAC,CAAA,EAAG,IAAI;oBACtB;gBACF;YACF;QACF;IACF;AACF;AAMA,SAAS,gBAAA,GAAsB,IAAA,EAA8C;IAE3E,iNAAa,cAAA,EAAY,YAAY,GAAG,IAAI,GAAG,IAAI;AACrD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/%40radix-ui/react-slot/src/slot.tsx"],"sourcesContent":["import * as React from 'react';\nimport { composeRefs } from '@radix-ui/react-compose-refs';\n\n/* -------------------------------------------------------------------------------------------------\n * Slot\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotProps extends React.HTMLAttributes<HTMLElement> {\n  children?: React.ReactNode;\n}\n\n/* @__NO_SIDE_EFFECTS__ */ export function createSlot(ownerName: string) {\n  const SlotClone = createSlotClone(ownerName);\n  const Slot = React.forwardRef<HTMLElement, SlotProps>((props, forwardedRef) => {\n    const { children, ...slotProps } = props;\n    const childrenArray = React.Children.toArray(children);\n    const slottable = childrenArray.find(isSlottable);\n\n    if (slottable) {\n      // the new element to render is the one passed as a child of `Slottable`\n      const newElement = slottable.props.children;\n\n      const newChildren = childrenArray.map((child) => {\n        if (child === slottable) {\n          // because the new element will be the one rendered, we are only interested\n          // in grabbing its children (`newElement.props.children`)\n          if (React.Children.count(newElement) > 1) return React.Children.only(null);\n          return React.isValidElement(newElement)\n            ? (newElement.props as { children: React.ReactNode }).children\n            : null;\n        } else {\n          return child;\n        }\n      });\n\n      return (\n        <SlotClone {...slotProps} ref={forwardedRef}>\n          {React.isValidElement(newElement)\n            ? React.cloneElement(newElement, undefined, newChildren)\n            : null}\n        </SlotClone>\n      );\n    }\n\n    return (\n      <SlotClone {...slotProps} ref={forwardedRef}>\n        {children}\n      </SlotClone>\n    );\n  });\n\n  Slot.displayName = `${ownerName}.Slot`;\n  return Slot;\n}\n\nconst Slot = createSlot('Slot');\n\n/* -------------------------------------------------------------------------------------------------\n * SlotClone\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotCloneProps {\n  children: React.ReactNode;\n}\n\n/* @__NO_SIDE_EFFECTS__ */ function createSlotClone(ownerName: string) {\n  const SlotClone = React.forwardRef<any, SlotCloneProps>((props, forwardedRef) => {\n    const { children, ...slotProps } = props;\n\n    if (React.isValidElement(children)) {\n      const childrenRef = getElementRef(children);\n      const props = mergeProps(slotProps, children.props as AnyProps);\n      // do not pass ref to React.Fragment for React 19 compatibility\n      if (children.type !== React.Fragment) {\n        props.ref = forwardedRef ? composeRefs(forwardedRef, childrenRef) : childrenRef;\n      }\n      return React.cloneElement(children, props);\n    }\n\n    return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n  });\n\n  SlotClone.displayName = `${ownerName}.SlotClone`;\n  return SlotClone;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * Slottable\n * -----------------------------------------------------------------------------------------------*/\n\nconst SLOTTABLE_IDENTIFIER = Symbol('radix.slottable');\n\ninterface SlottableProps {\n  children: React.ReactNode;\n}\n\ninterface SlottableComponent extends React.FC<SlottableProps> {\n  __radixId: symbol;\n}\n\n/* @__NO_SIDE_EFFECTS__ */ export function createSlottable(ownerName: string) {\n  const Slottable: SlottableComponent = ({ children }) => {\n    return <>{children}</>;\n  };\n  Slottable.displayName = `${ownerName}.Slottable`;\n  Slottable.__radixId = SLOTTABLE_IDENTIFIER;\n  return Slottable;\n}\n\nconst Slottable = createSlottable('Slottable');\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype AnyProps = Record<string, any>;\n\nfunction isSlottable(\n  child: React.ReactNode\n): child is React.ReactElement<SlottableProps, typeof Slottable> {\n  return (\n    React.isValidElement(child) &&\n    typeof child.type === 'function' &&\n    '__radixId' in child.type &&\n    child.type.__radixId === SLOTTABLE_IDENTIFIER\n  );\n}\n\nfunction mergeProps(slotProps: AnyProps, childProps: AnyProps) {\n  // all child props should override\n  const overrideProps = { ...childProps };\n\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      // if the handler exists on both, we compose them\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args: unknown[]) => {\n          const result = childPropValue(...args);\n          slotPropValue(...args);\n          return result;\n        };\n      }\n      // but if it exists only on the slot, we use only this one\n      else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    }\n    // if it's `style`, we merge them\n    else if (propName === 'style') {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === 'className') {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(' ');\n    }\n  }\n\n  return { ...slotProps, ...overrideProps };\n}\n\n// Before React 19 accessing `element.props.ref` will throw a warning and suggest using `element.ref`\n// After React 19 accessing `element.ref` does the opposite.\n// https://github.com/facebook/react/pull/28348\n//\n// Access the ref using the method that doesn't yield a warning.\nfunction getElementRef(element: React.ReactElement) {\n  // React <=18 in DEV\n  let getter = Object.getOwnPropertyDescriptor(element.props, 'ref')?.get;\n  let mayWarn = getter && 'isReactWarning' in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return (element as any).ref;\n  }\n\n  // React 19 in DEV\n  getter = Object.getOwnPropertyDescriptor(element, 'ref')?.get;\n  mayWarn = getter && 'isReactWarning' in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return (element.props as { ref?: React.Ref<unknown> }).ref;\n  }\n\n  // Not DEV\n  return (element.props as { ref?: React.Ref<unknown> }).ref || (element as any).ref;\n}\n\nexport {\n  Slot,\n  Slottable,\n  //\n  Slot as Root,\n};\nexport type { SlotProps };\n"],"names":["Fragment","Slot","props","Slottable"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/clsx/dist/clsx.mjs"],"sourcesContent":["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;"],"names":[],"mappings":";;;;AAAA,SAAS,EAAE,CAAC;IAAE,IAAI,GAAE,GAAE,IAAE;IAAG,IAAG,YAAU,OAAO,KAAG,YAAU,OAAO,GAAE,KAAG;SAAO,IAAG,YAAU,OAAO,GAAE,IAAG,MAAM,OAAO,CAAC,IAAG;QAAC,IAAI,IAAE,EAAE,MAAM;QAAC,IAAI,IAAE,GAAE,IAAE,GAAE,IAAI,CAAC,CAAC,EAAE,IAAE,CAAC,IAAE,EAAE,CAAC,CAAC,EAAE,CAAC,KAAG,CAAC,KAAG,CAAC,KAAG,GAAG,GAAE,KAAG,CAAC;IAAC,OAAM,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,IAAE,CAAC,KAAG,CAAC,KAAG,GAAG,GAAE,KAAG,CAAC;IAAE,OAAO;AAAC;AAAQ,SAAS;IAAO,IAAI,IAAI,GAAE,GAAE,IAAE,GAAE,IAAE,IAAG,IAAE,UAAU,MAAM,EAAC,IAAE,GAAE,IAAI,CAAC,IAAE,SAAS,CAAC,EAAE,KAAG,CAAC,IAAE,EAAE,EAAE,KAAG,CAAC,KAAG,CAAC,KAAG,GAAG,GAAE,KAAG,CAAC;IAAE,OAAO;AAAC;uCAAgB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/class-variance-authority/dist/index.mjs"],"sourcesContent":["/**\n * Copyright 2022 Joe Bell. All rights reserved.\n *\n * This file is licensed to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with the\n * License. You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR REPRESENTATIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */ import { clsx } from \"clsx\";\nconst falsyToString = (value)=>typeof value === \"boolean\" ? `${value}` : value === 0 ? \"0\" : value;\nexport const cx = clsx;\nexport const cva = (base, config)=>(props)=>{\n        var _config_compoundVariants;\n        if ((config === null || config === void 0 ? void 0 : config.variants) == null) return cx(base, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n        const { variants, defaultVariants } = config;\n        const getVariantClassNames = Object.keys(variants).map((variant)=>{\n            const variantProp = props === null || props === void 0 ? void 0 : props[variant];\n            const defaultVariantProp = defaultVariants === null || defaultVariants === void 0 ? void 0 : defaultVariants[variant];\n            if (variantProp === null) return null;\n            const variantKey = falsyToString(variantProp) || falsyToString(defaultVariantProp);\n            return variants[variant][variantKey];\n        });\n        const propsWithoutUndefined = props && Object.entries(props).reduce((acc, param)=>{\n            let [key, value] = param;\n            if (value === undefined) {\n                return acc;\n            }\n            acc[key] = value;\n            return acc;\n        }, {});\n        const getCompoundVariantClassNames = config === null || config === void 0 ? void 0 : (_config_compoundVariants = config.compoundVariants) === null || _config_compoundVariants === void 0 ? void 0 : _config_compoundVariants.reduce((acc, param)=>{\n            let { class: cvClass, className: cvClassName, ...compoundVariantOptions } = param;\n            return Object.entries(compoundVariantOptions).every((param)=>{\n                let [key, value] = param;\n                return Array.isArray(value) ? value.includes({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                }[key]) : ({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                })[key] === value;\n            }) ? [\n                ...acc,\n                cvClass,\n                cvClassName\n            ] : acc;\n        }, []);\n        return cx(base, getVariantClassNames, getCompoundVariantClassNames, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n    };\n\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;CAcC;;;;AAAG;;AACJ,MAAM,gBAAgB,CAAC,QAAQ,OAAO,UAAU,YAAY,GAAG,OAAO,GAAG,UAAU,IAAI,MAAM;AACtF,MAAM,KAAK,qIAAA,CAAA,OAAI;AACf,MAAM,MAAM,CAAC,MAAM,SAAS,CAAC;QAC5B,IAAI;QACJ,IAAI,CAAC,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,QAAQ,KAAK,MAAM,OAAO,GAAG,MAAM,UAAU,QAAQ,UAAU,KAAK,IAAI,KAAK,IAAI,MAAM,KAAK,EAAE,UAAU,QAAQ,UAAU,KAAK,IAAI,KAAK,IAAI,MAAM,SAAS;QACvN,MAAM,EAAE,QAAQ,EAAE,eAAe,EAAE,GAAG;QACtC,MAAM,uBAAuB,OAAO,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACpD,MAAM,cAAc,UAAU,QAAQ,UAAU,KAAK,IAAI,KAAK,IAAI,KAAK,CAAC,QAAQ;YAChF,MAAM,qBAAqB,oBAAoB,QAAQ,oBAAoB,KAAK,IAAI,KAAK,IAAI,eAAe,CAAC,QAAQ;YACrH,IAAI,gBAAgB,MAAM,OAAO;YACjC,MAAM,aAAa,cAAc,gBAAgB,cAAc;YAC/D,OAAO,QAAQ,CAAC,QAAQ,CAAC,WAAW;QACxC;QACA,MAAM,wBAAwB,SAAS,OAAO,OAAO,CAAC,OAAO,MAAM,CAAC,CAAC,KAAK;YACtE,IAAI,CAAC,KAAK,MAAM,GAAG;YACnB,IAAI,UAAU,WAAW;gBACrB,OAAO;YACX;YACA,GAAG,CAAC,IAAI,GAAG;YACX,OAAO;QACX,GAAG,CAAC;QACJ,MAAM,+BAA+B,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,CAAC,2BAA2B,OAAO,gBAAgB,MAAM,QAAQ,6BAA6B,KAAK,IAAI,KAAK,IAAI,yBAAyB,MAAM,CAAC,CAAC,KAAK;YACvO,IAAI,EAAE,OAAO,OAAO,EAAE,WAAW,WAAW,EAAE,GAAG,wBAAwB,GAAG;YAC5E,OAAO,OAAO,OAAO,CAAC,wBAAwB,KAAK,CAAC,CAAC;gBACjD,IAAI,CAAC,KAAK,MAAM,GAAG;gBACnB,OAAO,MAAM,OAAO,CAAC,SAAS,MAAM,QAAQ,CAAC;oBACzC,GAAG,eAAe;oBAClB,GAAG,qBAAqB;gBAC5B,CAAC,CAAC,IAAI,IAAI,CAAC;oBACP,GAAG,eAAe;oBAClB,GAAG,qBAAqB;gBAC5B,CAAC,CAAC,CAAC,IAAI,KAAK;YAChB,KAAK;mBACE;gBACH;gBACA;aACH,GAAG;QACR,GAAG,EAAE;QACL,OAAO,GAAG,MAAM,sBAAsB,8BAA8B,UAAU,QAAQ,UAAU,KAAK,IAAI,KAAK,IAAI,MAAM,KAAK,EAAE,UAAU,QAAQ,UAAU,KAAK,IAAI,KAAK,IAAI,MAAM,SAAS;IAChM","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 282, "column": 0}, "map": {"version":3,"file":"bundle-mjs.mjs","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/tailwind-merge/src/lib/class-group-utils.ts","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/tailwind-merge/src/lib/lru-cache.ts","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/tailwind-merge/src/lib/parse-class-name.ts","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/tailwind-merge/src/lib/sort-modifiers.ts","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/tailwind-merge/src/lib/config-utils.ts","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/tailwind-merge/src/lib/merge-classlist.ts","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/tailwind-merge/src/lib/tw-join.ts","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/tailwind-merge/src/lib/create-tailwind-merge.ts","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/tailwind-merge/src/lib/from-theme.ts","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/tailwind-merge/src/lib/validators.ts","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/tailwind-merge/src/lib/default-config.ts","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/tailwind-merge/src/lib/merge-configs.ts","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/tailwind-merge/src/lib/extend-tailwind-merge.ts","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/tailwind-merge/src/lib/tw-merge.ts"],"sourcesContent":["import {\n    AnyClassGroupIds,\n    AnyConfig,\n    AnyThemeGroupIds,\n    ClassGroup,\n    ClassValidator,\n    Config,\n    ThemeGetter,\n    ThemeObject,\n} from './types'\n\nexport interface ClassPartObject {\n    nextPart: Map<string, ClassPartObject>\n    validators: ClassValidatorObject[]\n    classGroupId?: AnyClassGroupIds\n}\n\ninterface ClassValidatorObject {\n    classGroupId: AnyClassGroupIds\n    validator: ClassValidator\n}\n\nconst CLASS_PART_SEPARATOR = '-'\n\nexport const createClassGroupUtils = (config: AnyConfig) => {\n    const classMap = createClassMap(config)\n    const { conflictingClassGroups, conflictingClassGroupModifiers } = config\n\n    const getClassGroupId = (className: string) => {\n        const classParts = className.split(CLASS_PART_SEPARATOR)\n\n        // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\n        if (classParts[0] === '' && classParts.length !== 1) {\n            classParts.shift()\n        }\n\n        return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className)\n    }\n\n    const getConflictingClassGroupIds = (\n        classGroupId: AnyClassGroupIds,\n        hasPostfixModifier: boolean,\n    ) => {\n        const conflicts = conflictingClassGroups[classGroupId] || []\n\n        if (hasPostfixModifier && conflictingClassGroupModifiers[classGroupId]) {\n            return [...conflicts, ...conflictingClassGroupModifiers[classGroupId]!]\n        }\n\n        return conflicts\n    }\n\n    return {\n        getClassGroupId,\n        getConflictingClassGroupIds,\n    }\n}\n\nconst getGroupRecursive = (\n    classParts: string[],\n    classPartObject: ClassPartObject,\n): AnyClassGroupIds | undefined => {\n    if (classParts.length === 0) {\n        return classPartObject.classGroupId\n    }\n\n    const currentClassPart = classParts[0]!\n    const nextClassPartObject = classPartObject.nextPart.get(currentClassPart)\n    const classGroupFromNextClassPart = nextClassPartObject\n        ? getGroupRecursive(classParts.slice(1), nextClassPartObject)\n        : undefined\n\n    if (classGroupFromNextClassPart) {\n        return classGroupFromNextClassPart\n    }\n\n    if (classPartObject.validators.length === 0) {\n        return undefined\n    }\n\n    const classRest = classParts.join(CLASS_PART_SEPARATOR)\n\n    return classPartObject.validators.find(({ validator }) => validator(classRest))?.classGroupId\n}\n\nconst arbitraryPropertyRegex = /^\\[(.+)\\]$/\n\nconst getGroupIdForArbitraryProperty = (className: string) => {\n    if (arbitraryPropertyRegex.test(className)) {\n        const arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)![1]\n        const property = arbitraryPropertyClassName?.substring(\n            0,\n            arbitraryPropertyClassName.indexOf(':'),\n        )\n\n        if (property) {\n            // I use two dots here because one dot is used as prefix for class groups in plugins\n            return 'arbitrary..' + property\n        }\n    }\n}\n\n/**\n * Exported for testing only\n */\nexport const createClassMap = (config: Config<AnyClassGroupIds, AnyThemeGroupIds>) => {\n    const { theme, classGroups } = config\n    const classMap: ClassPartObject = {\n        nextPart: new Map<string, ClassPartObject>(),\n        validators: [],\n    }\n\n    for (const classGroupId in classGroups) {\n        processClassesRecursively(classGroups[classGroupId]!, classMap, classGroupId, theme)\n    }\n\n    return classMap\n}\n\nconst processClassesRecursively = (\n    classGroup: ClassGroup<AnyThemeGroupIds>,\n    classPartObject: ClassPartObject,\n    classGroupId: AnyClassGroupIds,\n    theme: ThemeObject<AnyThemeGroupIds>,\n) => {\n    classGroup.forEach((classDefinition) => {\n        if (typeof classDefinition === 'string') {\n            const classPartObjectToEdit =\n                classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition)\n            classPartObjectToEdit.classGroupId = classGroupId\n            return\n        }\n\n        if (typeof classDefinition === 'function') {\n            if (isThemeGetter(classDefinition)) {\n                processClassesRecursively(\n                    classDefinition(theme),\n                    classPartObject,\n                    classGroupId,\n                    theme,\n                )\n                return\n            }\n\n            classPartObject.validators.push({\n                validator: classDefinition,\n                classGroupId,\n            })\n\n            return\n        }\n\n        Object.entries(classDefinition).forEach(([key, classGroup]) => {\n            processClassesRecursively(\n                classGroup,\n                getPart(classPartObject, key),\n                classGroupId,\n                theme,\n            )\n        })\n    })\n}\n\nconst getPart = (classPartObject: ClassPartObject, path: string) => {\n    let currentClassPartObject = classPartObject\n\n    path.split(CLASS_PART_SEPARATOR).forEach((pathPart) => {\n        if (!currentClassPartObject.nextPart.has(pathPart)) {\n            currentClassPartObject.nextPart.set(pathPart, {\n                nextPart: new Map(),\n                validators: [],\n            })\n        }\n\n        currentClassPartObject = currentClassPartObject.nextPart.get(pathPart)!\n    })\n\n    return currentClassPartObject\n}\n\nconst isThemeGetter = (func: ClassValidator | ThemeGetter): func is ThemeGetter =>\n    (func as ThemeGetter).isThemeGetter\n","// Export is needed because TypeScript complains about an error otherwise:\n// Error: …/tailwind-merge/src/config-utils.ts(8,17): semantic error TS4058: Return type of exported function has or is using name 'LruCache' from external module \"…/tailwind-merge/src/lru-cache\" but cannot be named.\nexport interface LruCache<Key, Value> {\n    get(key: Key): Value | undefined\n    set(key: Key, value: Value): void\n}\n\n// LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance\nexport const createLruCache = <Key, Value>(maxCacheSize: number): LruCache<Key, Value> => {\n    if (maxCacheSize < 1) {\n        return {\n            get: () => undefined,\n            set: () => {},\n        }\n    }\n\n    let cacheSize = 0\n    let cache = new Map<Key, Value>()\n    let previousCache = new Map<Key, Value>()\n\n    const update = (key: Key, value: Value) => {\n        cache.set(key, value)\n        cacheSize++\n\n        if (cacheSize > maxCacheSize) {\n            cacheSize = 0\n            previousCache = cache\n            cache = new Map()\n        }\n    }\n\n    return {\n        get(key) {\n            let value = cache.get(key)\n\n            if (value !== undefined) {\n                return value\n            }\n            if ((value = previousCache.get(key)) !== undefined) {\n                update(key, value)\n                return value\n            }\n        },\n        set(key, value) {\n            if (cache.has(key)) {\n                cache.set(key, value)\n            } else {\n                update(key, value)\n            }\n        },\n    }\n}\n","import { AnyConfig, ParsedClassName } from './types'\n\nexport const IMPORTANT_MODIFIER = '!'\nconst MODIFIER_SEPARATOR = ':'\nconst MODIFIER_SEPARATOR_LENGTH = MODIFIER_SEPARATOR.length\n\nexport const createParseClassName = (config: AnyConfig) => {\n    const { prefix, experimentalParseClassName } = config\n\n    /**\n     * Parse class name into parts.\n     *\n     * Inspired by `splitAtTopLevelOnly` used in Tailwind CSS\n     * @see https://github.com/tailwindlabs/tailwindcss/blob/v3.2.2/src/util/splitAtTopLevelOnly.js\n     */\n    let parseClassName = (className: string): ParsedClassName => {\n        const modifiers = []\n\n        let bracketDepth = 0\n        let parenDepth = 0\n        let modifierStart = 0\n        let postfixModifierPosition: number | undefined\n\n        for (let index = 0; index < className.length; index++) {\n            let currentCharacter = className[index]\n\n            if (bracketDepth === 0 && parenDepth === 0) {\n                if (currentCharacter === MODIFIER_SEPARATOR) {\n                    modifiers.push(className.slice(modifierStart, index))\n                    modifierStart = index + MODIFIER_SEPARATOR_LENGTH\n                    continue\n                }\n\n                if (currentCharacter === '/') {\n                    postfixModifierPosition = index\n                    continue\n                }\n            }\n\n            if (currentCharacter === '[') {\n                bracketDepth++\n            } else if (currentCharacter === ']') {\n                bracketDepth--\n            } else if (currentCharacter === '(') {\n                parenDepth++\n            } else if (currentCharacter === ')') {\n                parenDepth--\n            }\n        }\n\n        const baseClassNameWithImportantModifier =\n            modifiers.length === 0 ? className : className.substring(modifierStart)\n        const baseClassName = stripImportantModifier(baseClassNameWithImportantModifier)\n        const hasImportantModifier = baseClassName !== baseClassNameWithImportantModifier\n        const maybePostfixModifierPosition =\n            postfixModifierPosition && postfixModifierPosition > modifierStart\n                ? postfixModifierPosition - modifierStart\n                : undefined\n\n        return {\n            modifiers,\n            hasImportantModifier,\n            baseClassName,\n            maybePostfixModifierPosition,\n        }\n    }\n\n    if (prefix) {\n        const fullPrefix = prefix + MODIFIER_SEPARATOR\n        const parseClassNameOriginal = parseClassName\n        parseClassName = (className) =>\n            className.startsWith(fullPrefix)\n                ? parseClassNameOriginal(className.substring(fullPrefix.length))\n                : {\n                      isExternal: true,\n                      modifiers: [],\n                      hasImportantModifier: false,\n                      baseClassName: className,\n                      maybePostfixModifierPosition: undefined,\n                  }\n    }\n\n    if (experimentalParseClassName) {\n        const parseClassNameOriginal = parseClassName\n        parseClassName = (className) =>\n            experimentalParseClassName({ className, parseClassName: parseClassNameOriginal })\n    }\n\n    return parseClassName\n}\n\nconst stripImportantModifier = (baseClassName: string) => {\n    if (baseClassName.endsWith(IMPORTANT_MODIFIER)) {\n        return baseClassName.substring(0, baseClassName.length - 1)\n    }\n\n    /**\n     * In Tailwind CSS v3 the important modifier was at the start of the base class name. This is still supported for legacy reasons.\n     * @see https://github.com/dcastil/tailwind-merge/issues/513#issuecomment-2614029864\n     */\n    if (baseClassName.startsWith(IMPORTANT_MODIFIER)) {\n        return baseClassName.substring(1)\n    }\n\n    return baseClassName\n}\n","import { AnyConfig } from './types'\n\n/**\n * Sorts modifiers according to following schema:\n * - Predefined modifiers are sorted alphabetically\n * - When an arbitrary variant appears, it must be preserved which modifiers are before and after it\n */\nexport const createSortModifiers = (config: AnyConfig) => {\n    const orderSensitiveModifiers = Object.fromEntries(\n        config.orderSensitiveModifiers.map((modifier) => [modifier, true]),\n    )\n\n    const sortModifiers = (modifiers: string[]) => {\n        if (modifiers.length <= 1) {\n            return modifiers\n        }\n\n        const sortedModifiers: string[] = []\n        let unsortedModifiers: string[] = []\n\n        modifiers.forEach((modifier) => {\n            const isPositionSensitive = modifier[0] === '[' || orderSensitiveModifiers[modifier]\n\n            if (isPositionSensitive) {\n                sortedModifiers.push(...unsortedModifiers.sort(), modifier)\n                unsortedModifiers = []\n            } else {\n                unsortedModifiers.push(modifier)\n            }\n        })\n\n        sortedModifiers.push(...unsortedModifiers.sort())\n\n        return sortedModifiers\n    }\n\n    return sortModifiers\n}\n","import { createClassGroupUtils } from './class-group-utils'\nimport { createLruCache } from './lru-cache'\nimport { createParseClassName } from './parse-class-name'\nimport { createSortModifiers } from './sort-modifiers'\nimport { AnyConfig } from './types'\n\nexport type ConfigUtils = ReturnType<typeof createConfigUtils>\n\nexport const createConfigUtils = (config: AnyConfig) => ({\n    cache: createLruCache<string, string>(config.cacheSize),\n    parseClassName: createParseClassName(config),\n    sortModifiers: createSortModifiers(config),\n    ...createClassGroupUtils(config),\n})\n","import { ConfigUtils } from './config-utils'\nimport { IMPORTANT_MODIFIER } from './parse-class-name'\n\nconst SPLIT_CLASSES_REGEX = /\\s+/\n\nexport const mergeClassList = (classList: string, configUtils: ConfigUtils) => {\n    const { parseClassName, getClassGroupId, getConflictingClassGroupIds, sortModifiers } =\n        configUtils\n\n    /**\n     * Set of classGroupIds in following format:\n     * `{importantModifier}{variantModifiers}{classGroupId}`\n     * @example 'float'\n     * @example 'hover:focus:bg-color'\n     * @example 'md:!pr'\n     */\n    const classGroupsInConflict: string[] = []\n    const classNames = classList.trim().split(SPLIT_CLASSES_REGEX)\n\n    let result = ''\n\n    for (let index = classNames.length - 1; index >= 0; index -= 1) {\n        const originalClassName = classNames[index]!\n\n        const {\n            isExternal,\n            modifiers,\n            hasImportantModifier,\n            baseClassName,\n            maybePostfixModifierPosition,\n        } = parseClassName(originalClassName)\n\n        if (isExternal) {\n            result = originalClassName + (result.length > 0 ? ' ' + result : result)\n            continue\n        }\n\n        let hasPostfixModifier = !!maybePostfixModifierPosition\n        let classGroupId = getClassGroupId(\n            hasPostfixModifier\n                ? baseClassName.substring(0, maybePostfixModifierPosition)\n                : baseClassName,\n        )\n\n        if (!classGroupId) {\n            if (!hasPostfixModifier) {\n                // Not a Tailwind class\n                result = originalClassName + (result.length > 0 ? ' ' + result : result)\n                continue\n            }\n\n            classGroupId = getClassGroupId(baseClassName)\n\n            if (!classGroupId) {\n                // Not a Tailwind class\n                result = originalClassName + (result.length > 0 ? ' ' + result : result)\n                continue\n            }\n\n            hasPostfixModifier = false\n        }\n\n        const variantModifier = sortModifiers(modifiers).join(':')\n\n        const modifierId = hasImportantModifier\n            ? variantModifier + IMPORTANT_MODIFIER\n            : variantModifier\n\n        const classId = modifierId + classGroupId\n\n        if (classGroupsInConflict.includes(classId)) {\n            // Tailwind class omitted due to conflict\n            continue\n        }\n\n        classGroupsInConflict.push(classId)\n\n        const conflictGroups = getConflictingClassGroupIds(classGroupId, hasPostfixModifier)\n        for (let i = 0; i < conflictGroups.length; ++i) {\n            const group = conflictGroups[i]!\n            classGroupsInConflict.push(modifierId + group)\n        }\n\n        // Tailwind class not in conflict\n        result = originalClassName + (result.length > 0 ? ' ' + result : result)\n    }\n\n    return result\n}\n","/**\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\n *\n * Specifically:\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\n *\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\n */\n\nexport type ClassNameValue = ClassNameArray | string | null | undefined | 0 | 0n | false\ntype ClassNameArray = ClassNameValue[]\n\nexport function twJoin(...classLists: ClassNameValue[]): string\nexport function twJoin() {\n    let index = 0\n    let argument: ClassNameValue\n    let resolvedValue: string\n    let string = ''\n\n    while (index < arguments.length) {\n        if ((argument = arguments[index++])) {\n            if ((resolvedValue = toValue(argument))) {\n                string && (string += ' ')\n                string += resolvedValue\n            }\n        }\n    }\n    return string\n}\n\nconst toValue = (mix: ClassNameArray | string) => {\n    if (typeof mix === 'string') {\n        return mix\n    }\n\n    let resolvedValue: string\n    let string = ''\n\n    for (let k = 0; k < mix.length; k++) {\n        if (mix[k]) {\n            if ((resolvedValue = toValue(mix[k] as ClassNameArray | string))) {\n                string && (string += ' ')\n                string += resolvedValue\n            }\n        }\n    }\n\n    return string\n}\n","import { createConfigUtils } from './config-utils'\nimport { mergeClassList } from './merge-classlist'\nimport { ClassNameValue, twJoin } from './tw-join'\nimport { AnyConfig } from './types'\n\ntype CreateConfigFirst = () => AnyConfig\ntype CreateConfigSubsequent = (config: AnyConfig) => AnyConfig\ntype TailwindMerge = (...classLists: ClassNameValue[]) => string\ntype ConfigUtils = ReturnType<typeof createConfigUtils>\n\nexport function createTailwindMerge(\n    createConfigFirst: CreateConfigFirst,\n    ...createConfigRest: CreateConfigSubsequent[]\n): TailwindMerge {\n    let configUtils: ConfigUtils\n    let cacheGet: ConfigUtils['cache']['get']\n    let cacheSet: ConfigUtils['cache']['set']\n    let functionToCall = initTailwindMerge\n\n    function initTailwindMerge(classList: string) {\n        const config = createConfigRest.reduce(\n            (previousConfig, createConfigCurrent) => createConfigCurrent(previousConfig),\n            createConfigFirst() as AnyConfig,\n        )\n\n        configUtils = createConfigUtils(config)\n        cacheGet = configUtils.cache.get\n        cacheSet = configUtils.cache.set\n        functionToCall = tailwindMerge\n\n        return tailwindMerge(classList)\n    }\n\n    function tailwindMerge(classList: string) {\n        const cachedResult = cacheGet(classList)\n\n        if (cachedResult) {\n            return cachedResult\n        }\n\n        const result = mergeClassList(classList, configUtils)\n        cacheSet(classList, result)\n\n        return result\n    }\n\n    return function callTailwindMerge() {\n        return functionToCall(twJoin.apply(null, arguments as any))\n    }\n}\n","import { DefaultThemeGroupIds, NoInfer, ThemeGetter, ThemeObject } from './types'\n\nexport const fromTheme = <\n    AdditionalThemeGroupIds extends string = never,\n    DefaultThemeGroupIdsInner extends string = DefaultThemeGroupIds,\n>(key: NoInfer<DefaultThemeGroupIdsInner | AdditionalThemeGroupIds>): ThemeGetter => {\n    const themeGetter = (theme: ThemeObject<DefaultThemeGroupIdsInner | AdditionalThemeGroupIds>) =>\n        theme[key] || []\n\n    themeGetter.isThemeGetter = true as const\n\n    return themeGetter\n}\n","const arbitraryValueRegex = /^\\[(?:(\\w[\\w-]*):)?(.+)\\]$/i\nconst arbitraryVariableRegex = /^\\((?:(\\w[\\w-]*):)?(.+)\\)$/i\nconst fractionRegex = /^\\d+\\/\\d+$/\nconst tshirtUnitRegex = /^(\\d+(\\.\\d+)?)?(xs|sm|md|lg|xl)$/\nconst lengthUnitRegex =\n    /\\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\\b(calc|min|max|clamp)\\(.+\\)|^0$/\nconst colorFunctionRegex = /^(rgba?|hsla?|hwb|(ok)?(lab|lch)|color-mix)\\(.+\\)$/\n// Shadow always begins with x and y offset separated by underscore optionally prepended by inset\nconst shadowRegex = /^(inset_)?-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/\nconst imageRegex =\n    /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\\(.+\\)$/\n\nexport const isFraction = (value: string) => fractionRegex.test(value)\n\nexport const isNumber = (value: string) => !!value && !Number.isNaN(Number(value))\n\nexport const isInteger = (value: string) => !!value && Number.isInteger(Number(value))\n\nexport const isPercent = (value: string) => value.endsWith('%') && isNumber(value.slice(0, -1))\n\nexport const isTshirtSize = (value: string) => tshirtUnitRegex.test(value)\n\nexport const isAny = () => true\n\nconst isLengthOnly = (value: string) =>\n    // `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.\n    // For example, `hsl(0 0% 0%)` would be classified as a length without this check.\n    // I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.\n    lengthUnitRegex.test(value) && !colorFunctionRegex.test(value)\n\nconst isNever = () => false\n\nconst isShadow = (value: string) => shadowRegex.test(value)\n\nconst isImage = (value: string) => imageRegex.test(value)\n\nexport const isAnyNonArbitrary = (value: string) =>\n    !isArbitraryValue(value) && !isArbitraryVariable(value)\n\nexport const isArbitrarySize = (value: string) => getIsArbitraryValue(value, isLabelSize, isNever)\n\nexport const isArbitraryValue = (value: string) => arbitraryValueRegex.test(value)\n\nexport const isArbitraryLength = (value: string) =>\n    getIsArbitraryValue(value, isLabelLength, isLengthOnly)\n\nexport const isArbitraryNumber = (value: string) =>\n    getIsArbitraryValue(value, isLabelNumber, isNumber)\n\nexport const isArbitraryPosition = (value: string) =>\n    getIsArbitraryValue(value, isLabelPosition, isNever)\n\nexport const isArbitraryImage = (value: string) => getIsArbitraryValue(value, isLabelImage, isImage)\n\nexport const isArbitraryShadow = (value: string) =>\n    getIsArbitraryValue(value, isLabelShadow, isShadow)\n\nexport const isArbitraryVariable = (value: string) => arbitraryVariableRegex.test(value)\n\nexport const isArbitraryVariableLength = (value: string) =>\n    getIsArbitraryVariable(value, isLabelLength)\n\nexport const isArbitraryVariableFamilyName = (value: string) =>\n    getIsArbitraryVariable(value, isLabelFamilyName)\n\nexport const isArbitraryVariablePosition = (value: string) =>\n    getIsArbitraryVariable(value, isLabelPosition)\n\nexport const isArbitraryVariableSize = (value: string) => getIsArbitraryVariable(value, isLabelSize)\n\nexport const isArbitraryVariableImage = (value: string) =>\n    getIsArbitraryVariable(value, isLabelImage)\n\nexport const isArbitraryVariableShadow = (value: string) =>\n    getIsArbitraryVariable(value, isLabelShadow, true)\n\n// Helpers\n\nconst getIsArbitraryValue = (\n    value: string,\n    testLabel: (label: string) => boolean,\n    testValue: (value: string) => boolean,\n) => {\n    const result = arbitraryValueRegex.exec(value)\n\n    if (result) {\n        if (result[1]) {\n            return testLabel(result[1])\n        }\n\n        return testValue(result[2]!)\n    }\n\n    return false\n}\n\nconst getIsArbitraryVariable = (\n    value: string,\n    testLabel: (label: string) => boolean,\n    shouldMatchNoLabel = false,\n) => {\n    const result = arbitraryVariableRegex.exec(value)\n\n    if (result) {\n        if (result[1]) {\n            return testLabel(result[1])\n        }\n        return shouldMatchNoLabel\n    }\n\n    return false\n}\n\n// Labels\n\nconst isLabelPosition = (label: string) => label === 'position' || label === 'percentage'\n\nconst isLabelImage = (label: string) => label === 'image' || label === 'url'\n\nconst isLabelSize = (label: string) => label === 'length' || label === 'size' || label === 'bg-size'\n\nconst isLabelLength = (label: string) => label === 'length'\n\nconst isLabelNumber = (label: string) => label === 'number'\n\nconst isLabelFamilyName = (label: string) => label === 'family-name'\n\nconst isLabelShadow = (label: string) => label === 'shadow'\n","import { fromTheme } from './from-theme'\nimport { Config, DefaultClassGroupIds, DefaultThemeGroupIds } from './types'\nimport {\n    isAny,\n    isAnyNonArbitrary,\n    isArbitraryImage,\n    isArbitraryLength,\n    isArbitraryNumber,\n    isArbitraryPosition,\n    isArbitraryShadow,\n    isArbitrarySize,\n    isArbitraryValue,\n    isArbitraryVariable,\n    isArbitraryVariableFamilyName,\n    isArbitraryVariableImage,\n    isArbitraryVariableLength,\n    isArbitraryVariablePosition,\n    isArbitraryVariableShadow,\n    isArbitraryVariableSize,\n    isFraction,\n    isInteger,\n    isNumber,\n    isPercent,\n    isTshirtSize,\n} from './validators'\n\nexport const getDefaultConfig = () => {\n    /**\n     * Theme getters for theme variable namespaces\n     * @see https://tailwindcss.com/docs/theme#theme-variable-namespaces\n     */\n    /***/\n\n    const themeColor = fromTheme('color')\n    const themeFont = fromTheme('font')\n    const themeText = fromTheme('text')\n    const themeFontWeight = fromTheme('font-weight')\n    const themeTracking = fromTheme('tracking')\n    const themeLeading = fromTheme('leading')\n    const themeBreakpoint = fromTheme('breakpoint')\n    const themeContainer = fromTheme('container')\n    const themeSpacing = fromTheme('spacing')\n    const themeRadius = fromTheme('radius')\n    const themeShadow = fromTheme('shadow')\n    const themeInsetShadow = fromTheme('inset-shadow')\n    const themeTextShadow = fromTheme('text-shadow')\n    const themeDropShadow = fromTheme('drop-shadow')\n    const themeBlur = fromTheme('blur')\n    const themePerspective = fromTheme('perspective')\n    const themeAspect = fromTheme('aspect')\n    const themeEase = fromTheme('ease')\n    const themeAnimate = fromTheme('animate')\n\n    /**\n     * Helpers to avoid repeating the same scales\n     *\n     * We use functions that create a new array every time they're called instead of static arrays.\n     * This ensures that users who modify any scale by mutating the array (e.g. with `array.push(element)`) don't accidentally mutate arrays in other parts of the config.\n     */\n    /***/\n\n    const scaleBreak = () =>\n        ['auto', 'avoid', 'all', 'avoid-page', 'page', 'left', 'right', 'column'] as const\n    const scalePosition = () =>\n        [\n            'center',\n            'top',\n            'bottom',\n            'left',\n            'right',\n            'top-left',\n            // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378\n            'left-top',\n            'top-right',\n            // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378\n            'right-top',\n            'bottom-right',\n            // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378\n            'right-bottom',\n            'bottom-left',\n            // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378\n            'left-bottom',\n        ] as const\n    const scalePositionWithArbitrary = () =>\n        [...scalePosition(), isArbitraryVariable, isArbitraryValue] as const\n    const scaleOverflow = () => ['auto', 'hidden', 'clip', 'visible', 'scroll'] as const\n    const scaleOverscroll = () => ['auto', 'contain', 'none'] as const\n    const scaleUnambiguousSpacing = () =>\n        [isArbitraryVariable, isArbitraryValue, themeSpacing] as const\n    const scaleInset = () => [isFraction, 'full', 'auto', ...scaleUnambiguousSpacing()] as const\n    const scaleGridTemplateColsRows = () =>\n        [isInteger, 'none', 'subgrid', isArbitraryVariable, isArbitraryValue] as const\n    const scaleGridColRowStartAndEnd = () =>\n        [\n            'auto',\n            { span: ['full', isInteger, isArbitraryVariable, isArbitraryValue] },\n            isInteger,\n            isArbitraryVariable,\n            isArbitraryValue,\n        ] as const\n    const scaleGridColRowStartOrEnd = () =>\n        [isInteger, 'auto', isArbitraryVariable, isArbitraryValue] as const\n    const scaleGridAutoColsRows = () =>\n        ['auto', 'min', 'max', 'fr', isArbitraryVariable, isArbitraryValue] as const\n    const scaleAlignPrimaryAxis = () =>\n        [\n            'start',\n            'end',\n            'center',\n            'between',\n            'around',\n            'evenly',\n            'stretch',\n            'baseline',\n            'center-safe',\n            'end-safe',\n        ] as const\n    const scaleAlignSecondaryAxis = () =>\n        ['start', 'end', 'center', 'stretch', 'center-safe', 'end-safe'] as const\n    const scaleMargin = () => ['auto', ...scaleUnambiguousSpacing()] as const\n    const scaleSizing = () =>\n        [\n            isFraction,\n            'auto',\n            'full',\n            'dvw',\n            'dvh',\n            'lvw',\n            'lvh',\n            'svw',\n            'svh',\n            'min',\n            'max',\n            'fit',\n            ...scaleUnambiguousSpacing(),\n        ] as const\n    const scaleColor = () => [themeColor, isArbitraryVariable, isArbitraryValue] as const\n    const scaleBgPosition = () =>\n        [\n            ...scalePosition(),\n            isArbitraryVariablePosition,\n            isArbitraryPosition,\n            { position: [isArbitraryVariable, isArbitraryValue] },\n        ] as const\n    const scaleBgRepeat = () => ['no-repeat', { repeat: ['', 'x', 'y', 'space', 'round'] }] as const\n    const scaleBgSize = () =>\n        [\n            'auto',\n            'cover',\n            'contain',\n            isArbitraryVariableSize,\n            isArbitrarySize,\n            { size: [isArbitraryVariable, isArbitraryValue] },\n        ] as const\n    const scaleGradientStopPosition = () =>\n        [isPercent, isArbitraryVariableLength, isArbitraryLength] as const\n    const scaleRadius = () =>\n        [\n            // Deprecated since Tailwind CSS v4.0.0\n            '',\n            'none',\n            'full',\n            themeRadius,\n            isArbitraryVariable,\n            isArbitraryValue,\n        ] as const\n    const scaleBorderWidth = () =>\n        ['', isNumber, isArbitraryVariableLength, isArbitraryLength] as const\n    const scaleLineStyle = () => ['solid', 'dashed', 'dotted', 'double'] as const\n    const scaleBlendMode = () =>\n        [\n            'normal',\n            'multiply',\n            'screen',\n            'overlay',\n            'darken',\n            'lighten',\n            'color-dodge',\n            'color-burn',\n            'hard-light',\n            'soft-light',\n            'difference',\n            'exclusion',\n            'hue',\n            'saturation',\n            'color',\n            'luminosity',\n        ] as const\n    const scaleMaskImagePosition = () =>\n        [isNumber, isPercent, isArbitraryVariablePosition, isArbitraryPosition] as const\n    const scaleBlur = () =>\n        [\n            // Deprecated since Tailwind CSS v4.0.0\n            '',\n            'none',\n            themeBlur,\n            isArbitraryVariable,\n            isArbitraryValue,\n        ] as const\n    const scaleRotate = () => ['none', isNumber, isArbitraryVariable, isArbitraryValue] as const\n    const scaleScale = () => ['none', isNumber, isArbitraryVariable, isArbitraryValue] as const\n    const scaleSkew = () => [isNumber, isArbitraryVariable, isArbitraryValue] as const\n    const scaleTranslate = () => [isFraction, 'full', ...scaleUnambiguousSpacing()] as const\n\n    return {\n        cacheSize: 500,\n        theme: {\n            animate: ['spin', 'ping', 'pulse', 'bounce'],\n            aspect: ['video'],\n            blur: [isTshirtSize],\n            breakpoint: [isTshirtSize],\n            color: [isAny],\n            container: [isTshirtSize],\n            'drop-shadow': [isTshirtSize],\n            ease: ['in', 'out', 'in-out'],\n            font: [isAnyNonArbitrary],\n            'font-weight': [\n                'thin',\n                'extralight',\n                'light',\n                'normal',\n                'medium',\n                'semibold',\n                'bold',\n                'extrabold',\n                'black',\n            ],\n            'inset-shadow': [isTshirtSize],\n            leading: ['none', 'tight', 'snug', 'normal', 'relaxed', 'loose'],\n            perspective: ['dramatic', 'near', 'normal', 'midrange', 'distant', 'none'],\n            radius: [isTshirtSize],\n            shadow: [isTshirtSize],\n            spacing: ['px', isNumber],\n            text: [isTshirtSize],\n            'text-shadow': [isTshirtSize],\n            tracking: ['tighter', 'tight', 'normal', 'wide', 'wider', 'widest'],\n        },\n        classGroups: {\n            // --------------\n            // --- Layout ---\n            // --------------\n\n            /**\n             * Aspect Ratio\n             * @see https://tailwindcss.com/docs/aspect-ratio\n             */\n            aspect: [\n                {\n                    aspect: [\n                        'auto',\n                        'square',\n                        isFraction,\n                        isArbitraryValue,\n                        isArbitraryVariable,\n                        themeAspect,\n                    ],\n                },\n            ],\n            /**\n             * Container\n             * @see https://tailwindcss.com/docs/container\n             * @deprecated since Tailwind CSS v4.0.0\n             */\n            container: ['container'],\n            /**\n             * Columns\n             * @see https://tailwindcss.com/docs/columns\n             */\n            columns: [\n                { columns: [isNumber, isArbitraryValue, isArbitraryVariable, themeContainer] },\n            ],\n            /**\n             * Break After\n             * @see https://tailwindcss.com/docs/break-after\n             */\n            'break-after': [{ 'break-after': scaleBreak() }],\n            /**\n             * Break Before\n             * @see https://tailwindcss.com/docs/break-before\n             */\n            'break-before': [{ 'break-before': scaleBreak() }],\n            /**\n             * Break Inside\n             * @see https://tailwindcss.com/docs/break-inside\n             */\n            'break-inside': [{ 'break-inside': ['auto', 'avoid', 'avoid-page', 'avoid-column'] }],\n            /**\n             * Box Decoration Break\n             * @see https://tailwindcss.com/docs/box-decoration-break\n             */\n            'box-decoration': [{ 'box-decoration': ['slice', 'clone'] }],\n            /**\n             * Box Sizing\n             * @see https://tailwindcss.com/docs/box-sizing\n             */\n            box: [{ box: ['border', 'content'] }],\n            /**\n             * Display\n             * @see https://tailwindcss.com/docs/display\n             */\n            display: [\n                'block',\n                'inline-block',\n                'inline',\n                'flex',\n                'inline-flex',\n                'table',\n                'inline-table',\n                'table-caption',\n                'table-cell',\n                'table-column',\n                'table-column-group',\n                'table-footer-group',\n                'table-header-group',\n                'table-row-group',\n                'table-row',\n                'flow-root',\n                'grid',\n                'inline-grid',\n                'contents',\n                'list-item',\n                'hidden',\n            ],\n            /**\n             * Screen Reader Only\n             * @see https://tailwindcss.com/docs/display#screen-reader-only\n             */\n            sr: ['sr-only', 'not-sr-only'],\n            /**\n             * Floats\n             * @see https://tailwindcss.com/docs/float\n             */\n            float: [{ float: ['right', 'left', 'none', 'start', 'end'] }],\n            /**\n             * Clear\n             * @see https://tailwindcss.com/docs/clear\n             */\n            clear: [{ clear: ['left', 'right', 'both', 'none', 'start', 'end'] }],\n            /**\n             * Isolation\n             * @see https://tailwindcss.com/docs/isolation\n             */\n            isolation: ['isolate', 'isolation-auto'],\n            /**\n             * Object Fit\n             * @see https://tailwindcss.com/docs/object-fit\n             */\n            'object-fit': [{ object: ['contain', 'cover', 'fill', 'none', 'scale-down'] }],\n            /**\n             * Object Position\n             * @see https://tailwindcss.com/docs/object-position\n             */\n            'object-position': [{ object: scalePositionWithArbitrary() }],\n            /**\n             * Overflow\n             * @see https://tailwindcss.com/docs/overflow\n             */\n            overflow: [{ overflow: scaleOverflow() }],\n            /**\n             * Overflow X\n             * @see https://tailwindcss.com/docs/overflow\n             */\n            'overflow-x': [{ 'overflow-x': scaleOverflow() }],\n            /**\n             * Overflow Y\n             * @see https://tailwindcss.com/docs/overflow\n             */\n            'overflow-y': [{ 'overflow-y': scaleOverflow() }],\n            /**\n             * Overscroll Behavior\n             * @see https://tailwindcss.com/docs/overscroll-behavior\n             */\n            overscroll: [{ overscroll: scaleOverscroll() }],\n            /**\n             * Overscroll Behavior X\n             * @see https://tailwindcss.com/docs/overscroll-behavior\n             */\n            'overscroll-x': [{ 'overscroll-x': scaleOverscroll() }],\n            /**\n             * Overscroll Behavior Y\n             * @see https://tailwindcss.com/docs/overscroll-behavior\n             */\n            'overscroll-y': [{ 'overscroll-y': scaleOverscroll() }],\n            /**\n             * Position\n             * @see https://tailwindcss.com/docs/position\n             */\n            position: ['static', 'fixed', 'absolute', 'relative', 'sticky'],\n            /**\n             * Top / Right / Bottom / Left\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            inset: [{ inset: scaleInset() }],\n            /**\n             * Right / Left\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            'inset-x': [{ 'inset-x': scaleInset() }],\n            /**\n             * Top / Bottom\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            'inset-y': [{ 'inset-y': scaleInset() }],\n            /**\n             * Start\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            start: [{ start: scaleInset() }],\n            /**\n             * End\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            end: [{ end: scaleInset() }],\n            /**\n             * Top\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            top: [{ top: scaleInset() }],\n            /**\n             * Right\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            right: [{ right: scaleInset() }],\n            /**\n             * Bottom\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            bottom: [{ bottom: scaleInset() }],\n            /**\n             * Left\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            left: [{ left: scaleInset() }],\n            /**\n             * Visibility\n             * @see https://tailwindcss.com/docs/visibility\n             */\n            visibility: ['visible', 'invisible', 'collapse'],\n            /**\n             * Z-Index\n             * @see https://tailwindcss.com/docs/z-index\n             */\n            z: [{ z: [isInteger, 'auto', isArbitraryVariable, isArbitraryValue] }],\n\n            // ------------------------\n            // --- Flexbox and Grid ---\n            // ------------------------\n\n            /**\n             * Flex Basis\n             * @see https://tailwindcss.com/docs/flex-basis\n             */\n            basis: [\n                {\n                    basis: [\n                        isFraction,\n                        'full',\n                        'auto',\n                        themeContainer,\n                        ...scaleUnambiguousSpacing(),\n                    ],\n                },\n            ],\n            /**\n             * Flex Direction\n             * @see https://tailwindcss.com/docs/flex-direction\n             */\n            'flex-direction': [{ flex: ['row', 'row-reverse', 'col', 'col-reverse'] }],\n            /**\n             * Flex Wrap\n             * @see https://tailwindcss.com/docs/flex-wrap\n             */\n            'flex-wrap': [{ flex: ['nowrap', 'wrap', 'wrap-reverse'] }],\n            /**\n             * Flex\n             * @see https://tailwindcss.com/docs/flex\n             */\n            flex: [{ flex: [isNumber, isFraction, 'auto', 'initial', 'none', isArbitraryValue] }],\n            /**\n             * Flex Grow\n             * @see https://tailwindcss.com/docs/flex-grow\n             */\n            grow: [{ grow: ['', isNumber, isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * Flex Shrink\n             * @see https://tailwindcss.com/docs/flex-shrink\n             */\n            shrink: [{ shrink: ['', isNumber, isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * Order\n             * @see https://tailwindcss.com/docs/order\n             */\n            order: [\n                {\n                    order: [\n                        isInteger,\n                        'first',\n                        'last',\n                        'none',\n                        isArbitraryVariable,\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Grid Template Columns\n             * @see https://tailwindcss.com/docs/grid-template-columns\n             */\n            'grid-cols': [{ 'grid-cols': scaleGridTemplateColsRows() }],\n            /**\n             * Grid Column Start / End\n             * @see https://tailwindcss.com/docs/grid-column\n             */\n            'col-start-end': [{ col: scaleGridColRowStartAndEnd() }],\n            /**\n             * Grid Column Start\n             * @see https://tailwindcss.com/docs/grid-column\n             */\n            'col-start': [{ 'col-start': scaleGridColRowStartOrEnd() }],\n            /**\n             * Grid Column End\n             * @see https://tailwindcss.com/docs/grid-column\n             */\n            'col-end': [{ 'col-end': scaleGridColRowStartOrEnd() }],\n            /**\n             * Grid Template Rows\n             * @see https://tailwindcss.com/docs/grid-template-rows\n             */\n            'grid-rows': [{ 'grid-rows': scaleGridTemplateColsRows() }],\n            /**\n             * Grid Row Start / End\n             * @see https://tailwindcss.com/docs/grid-row\n             */\n            'row-start-end': [{ row: scaleGridColRowStartAndEnd() }],\n            /**\n             * Grid Row Start\n             * @see https://tailwindcss.com/docs/grid-row\n             */\n            'row-start': [{ 'row-start': scaleGridColRowStartOrEnd() }],\n            /**\n             * Grid Row End\n             * @see https://tailwindcss.com/docs/grid-row\n             */\n            'row-end': [{ 'row-end': scaleGridColRowStartOrEnd() }],\n            /**\n             * Grid Auto Flow\n             * @see https://tailwindcss.com/docs/grid-auto-flow\n             */\n            'grid-flow': [{ 'grid-flow': ['row', 'col', 'dense', 'row-dense', 'col-dense'] }],\n            /**\n             * Grid Auto Columns\n             * @see https://tailwindcss.com/docs/grid-auto-columns\n             */\n            'auto-cols': [{ 'auto-cols': scaleGridAutoColsRows() }],\n            /**\n             * Grid Auto Rows\n             * @see https://tailwindcss.com/docs/grid-auto-rows\n             */\n            'auto-rows': [{ 'auto-rows': scaleGridAutoColsRows() }],\n            /**\n             * Gap\n             * @see https://tailwindcss.com/docs/gap\n             */\n            gap: [{ gap: scaleUnambiguousSpacing() }],\n            /**\n             * Gap X\n             * @see https://tailwindcss.com/docs/gap\n             */\n            'gap-x': [{ 'gap-x': scaleUnambiguousSpacing() }],\n            /**\n             * Gap Y\n             * @see https://tailwindcss.com/docs/gap\n             */\n            'gap-y': [{ 'gap-y': scaleUnambiguousSpacing() }],\n            /**\n             * Justify Content\n             * @see https://tailwindcss.com/docs/justify-content\n             */\n            'justify-content': [{ justify: [...scaleAlignPrimaryAxis(), 'normal'] }],\n            /**\n             * Justify Items\n             * @see https://tailwindcss.com/docs/justify-items\n             */\n            'justify-items': [{ 'justify-items': [...scaleAlignSecondaryAxis(), 'normal'] }],\n            /**\n             * Justify Self\n             * @see https://tailwindcss.com/docs/justify-self\n             */\n            'justify-self': [{ 'justify-self': ['auto', ...scaleAlignSecondaryAxis()] }],\n            /**\n             * Align Content\n             * @see https://tailwindcss.com/docs/align-content\n             */\n            'align-content': [{ content: ['normal', ...scaleAlignPrimaryAxis()] }],\n            /**\n             * Align Items\n             * @see https://tailwindcss.com/docs/align-items\n             */\n            'align-items': [{ items: [...scaleAlignSecondaryAxis(), { baseline: ['', 'last'] }] }],\n            /**\n             * Align Self\n             * @see https://tailwindcss.com/docs/align-self\n             */\n            'align-self': [\n                { self: ['auto', ...scaleAlignSecondaryAxis(), { baseline: ['', 'last'] }] },\n            ],\n            /**\n             * Place Content\n             * @see https://tailwindcss.com/docs/place-content\n             */\n            'place-content': [{ 'place-content': scaleAlignPrimaryAxis() }],\n            /**\n             * Place Items\n             * @see https://tailwindcss.com/docs/place-items\n             */\n            'place-items': [{ 'place-items': [...scaleAlignSecondaryAxis(), 'baseline'] }],\n            /**\n             * Place Self\n             * @see https://tailwindcss.com/docs/place-self\n             */\n            'place-self': [{ 'place-self': ['auto', ...scaleAlignSecondaryAxis()] }],\n            // Spacing\n            /**\n             * Padding\n             * @see https://tailwindcss.com/docs/padding\n             */\n            p: [{ p: scaleUnambiguousSpacing() }],\n            /**\n             * Padding X\n             * @see https://tailwindcss.com/docs/padding\n             */\n            px: [{ px: scaleUnambiguousSpacing() }],\n            /**\n             * Padding Y\n             * @see https://tailwindcss.com/docs/padding\n             */\n            py: [{ py: scaleUnambiguousSpacing() }],\n            /**\n             * Padding Start\n             * @see https://tailwindcss.com/docs/padding\n             */\n            ps: [{ ps: scaleUnambiguousSpacing() }],\n            /**\n             * Padding End\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pe: [{ pe: scaleUnambiguousSpacing() }],\n            /**\n             * Padding Top\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pt: [{ pt: scaleUnambiguousSpacing() }],\n            /**\n             * Padding Right\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pr: [{ pr: scaleUnambiguousSpacing() }],\n            /**\n             * Padding Bottom\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pb: [{ pb: scaleUnambiguousSpacing() }],\n            /**\n             * Padding Left\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pl: [{ pl: scaleUnambiguousSpacing() }],\n            /**\n             * Margin\n             * @see https://tailwindcss.com/docs/margin\n             */\n            m: [{ m: scaleMargin() }],\n            /**\n             * Margin X\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mx: [{ mx: scaleMargin() }],\n            /**\n             * Margin Y\n             * @see https://tailwindcss.com/docs/margin\n             */\n            my: [{ my: scaleMargin() }],\n            /**\n             * Margin Start\n             * @see https://tailwindcss.com/docs/margin\n             */\n            ms: [{ ms: scaleMargin() }],\n            /**\n             * Margin End\n             * @see https://tailwindcss.com/docs/margin\n             */\n            me: [{ me: scaleMargin() }],\n            /**\n             * Margin Top\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mt: [{ mt: scaleMargin() }],\n            /**\n             * Margin Right\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mr: [{ mr: scaleMargin() }],\n            /**\n             * Margin Bottom\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mb: [{ mb: scaleMargin() }],\n            /**\n             * Margin Left\n             * @see https://tailwindcss.com/docs/margin\n             */\n            ml: [{ ml: scaleMargin() }],\n            /**\n             * Space Between X\n             * @see https://tailwindcss.com/docs/margin#adding-space-between-children\n             */\n            'space-x': [{ 'space-x': scaleUnambiguousSpacing() }],\n            /**\n             * Space Between X Reverse\n             * @see https://tailwindcss.com/docs/margin#adding-space-between-children\n             */\n            'space-x-reverse': ['space-x-reverse'],\n            /**\n             * Space Between Y\n             * @see https://tailwindcss.com/docs/margin#adding-space-between-children\n             */\n            'space-y': [{ 'space-y': scaleUnambiguousSpacing() }],\n            /**\n             * Space Between Y Reverse\n             * @see https://tailwindcss.com/docs/margin#adding-space-between-children\n             */\n            'space-y-reverse': ['space-y-reverse'],\n\n            // --------------\n            // --- Sizing ---\n            // --------------\n\n            /**\n             * Size\n             * @see https://tailwindcss.com/docs/width#setting-both-width-and-height\n             */\n            size: [{ size: scaleSizing() }],\n            /**\n             * Width\n             * @see https://tailwindcss.com/docs/width\n             */\n            w: [{ w: [themeContainer, 'screen', ...scaleSizing()] }],\n            /**\n             * Min-Width\n             * @see https://tailwindcss.com/docs/min-width\n             */\n            'min-w': [\n                {\n                    'min-w': [\n                        themeContainer,\n                        'screen',\n                        /** Deprecated. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */\n                        'none',\n                        ...scaleSizing(),\n                    ],\n                },\n            ],\n            /**\n             * Max-Width\n             * @see https://tailwindcss.com/docs/max-width\n             */\n            'max-w': [\n                {\n                    'max-w': [\n                        themeContainer,\n                        'screen',\n                        'none',\n                        /** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */\n                        'prose',\n                        /** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */\n                        { screen: [themeBreakpoint] },\n                        ...scaleSizing(),\n                    ],\n                },\n            ],\n            /**\n             * Height\n             * @see https://tailwindcss.com/docs/height\n             */\n            h: [{ h: ['screen', 'lh', ...scaleSizing()] }],\n            /**\n             * Min-Height\n             * @see https://tailwindcss.com/docs/min-height\n             */\n            'min-h': [{ 'min-h': ['screen', 'lh', 'none', ...scaleSizing()] }],\n            /**\n             * Max-Height\n             * @see https://tailwindcss.com/docs/max-height\n             */\n            'max-h': [{ 'max-h': ['screen', 'lh', ...scaleSizing()] }],\n\n            // ------------------\n            // --- Typography ---\n            // ------------------\n\n            /**\n             * Font Size\n             * @see https://tailwindcss.com/docs/font-size\n             */\n            'font-size': [\n                { text: ['base', themeText, isArbitraryVariableLength, isArbitraryLength] },\n            ],\n            /**\n             * Font Smoothing\n             * @see https://tailwindcss.com/docs/font-smoothing\n             */\n            'font-smoothing': ['antialiased', 'subpixel-antialiased'],\n            /**\n             * Font Style\n             * @see https://tailwindcss.com/docs/font-style\n             */\n            'font-style': ['italic', 'not-italic'],\n            /**\n             * Font Weight\n             * @see https://tailwindcss.com/docs/font-weight\n             */\n            'font-weight': [{ font: [themeFontWeight, isArbitraryVariable, isArbitraryNumber] }],\n            /**\n             * Font Stretch\n             * @see https://tailwindcss.com/docs/font-stretch\n             */\n            'font-stretch': [\n                {\n                    'font-stretch': [\n                        'ultra-condensed',\n                        'extra-condensed',\n                        'condensed',\n                        'semi-condensed',\n                        'normal',\n                        'semi-expanded',\n                        'expanded',\n                        'extra-expanded',\n                        'ultra-expanded',\n                        isPercent,\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Font Family\n             * @see https://tailwindcss.com/docs/font-family\n             */\n            'font-family': [{ font: [isArbitraryVariableFamilyName, isArbitraryValue, themeFont] }],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-normal': ['normal-nums'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-ordinal': ['ordinal'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-slashed-zero': ['slashed-zero'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-figure': ['lining-nums', 'oldstyle-nums'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-spacing': ['proportional-nums', 'tabular-nums'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-fraction': ['diagonal-fractions', 'stacked-fractions'],\n            /**\n             * Letter Spacing\n             * @see https://tailwindcss.com/docs/letter-spacing\n             */\n            tracking: [{ tracking: [themeTracking, isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * Line Clamp\n             * @see https://tailwindcss.com/docs/line-clamp\n             */\n            'line-clamp': [\n                { 'line-clamp': [isNumber, 'none', isArbitraryVariable, isArbitraryNumber] },\n            ],\n            /**\n             * Line Height\n             * @see https://tailwindcss.com/docs/line-height\n             */\n            leading: [\n                {\n                    leading: [\n                        /** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */\n                        themeLeading,\n                        ...scaleUnambiguousSpacing(),\n                    ],\n                },\n            ],\n            /**\n             * List Style Image\n             * @see https://tailwindcss.com/docs/list-style-image\n             */\n            'list-image': [{ 'list-image': ['none', isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * List Style Position\n             * @see https://tailwindcss.com/docs/list-style-position\n             */\n            'list-style-position': [{ list: ['inside', 'outside'] }],\n            /**\n             * List Style Type\n             * @see https://tailwindcss.com/docs/list-style-type\n             */\n            'list-style-type': [\n                { list: ['disc', 'decimal', 'none', isArbitraryVariable, isArbitraryValue] },\n            ],\n            /**\n             * Text Alignment\n             * @see https://tailwindcss.com/docs/text-align\n             */\n            'text-alignment': [{ text: ['left', 'center', 'right', 'justify', 'start', 'end'] }],\n            /**\n             * Placeholder Color\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://v3.tailwindcss.com/docs/placeholder-color\n             */\n            'placeholder-color': [{ placeholder: scaleColor() }],\n            /**\n             * Text Color\n             * @see https://tailwindcss.com/docs/text-color\n             */\n            'text-color': [{ text: scaleColor() }],\n            /**\n             * Text Decoration\n             * @see https://tailwindcss.com/docs/text-decoration\n             */\n            'text-decoration': ['underline', 'overline', 'line-through', 'no-underline'],\n            /**\n             * Text Decoration Style\n             * @see https://tailwindcss.com/docs/text-decoration-style\n             */\n            'text-decoration-style': [{ decoration: [...scaleLineStyle(), 'wavy'] }],\n            /**\n             * Text Decoration Thickness\n             * @see https://tailwindcss.com/docs/text-decoration-thickness\n             */\n            'text-decoration-thickness': [\n                {\n                    decoration: [\n                        isNumber,\n                        'from-font',\n                        'auto',\n                        isArbitraryVariable,\n                        isArbitraryLength,\n                    ],\n                },\n            ],\n            /**\n             * Text Decoration Color\n             * @see https://tailwindcss.com/docs/text-decoration-color\n             */\n            'text-decoration-color': [{ decoration: scaleColor() }],\n            /**\n             * Text Underline Offset\n             * @see https://tailwindcss.com/docs/text-underline-offset\n             */\n            'underline-offset': [\n                { 'underline-offset': [isNumber, 'auto', isArbitraryVariable, isArbitraryValue] },\n            ],\n            /**\n             * Text Transform\n             * @see https://tailwindcss.com/docs/text-transform\n             */\n            'text-transform': ['uppercase', 'lowercase', 'capitalize', 'normal-case'],\n            /**\n             * Text Overflow\n             * @see https://tailwindcss.com/docs/text-overflow\n             */\n            'text-overflow': ['truncate', 'text-ellipsis', 'text-clip'],\n            /**\n             * Text Wrap\n             * @see https://tailwindcss.com/docs/text-wrap\n             */\n            'text-wrap': [{ text: ['wrap', 'nowrap', 'balance', 'pretty'] }],\n            /**\n             * Text Indent\n             * @see https://tailwindcss.com/docs/text-indent\n             */\n            indent: [{ indent: scaleUnambiguousSpacing() }],\n            /**\n             * Vertical Alignment\n             * @see https://tailwindcss.com/docs/vertical-align\n             */\n            'vertical-align': [\n                {\n                    align: [\n                        'baseline',\n                        'top',\n                        'middle',\n                        'bottom',\n                        'text-top',\n                        'text-bottom',\n                        'sub',\n                        'super',\n                        isArbitraryVariable,\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Whitespace\n             * @see https://tailwindcss.com/docs/whitespace\n             */\n            whitespace: [\n                { whitespace: ['normal', 'nowrap', 'pre', 'pre-line', 'pre-wrap', 'break-spaces'] },\n            ],\n            /**\n             * Word Break\n             * @see https://tailwindcss.com/docs/word-break\n             */\n            break: [{ break: ['normal', 'words', 'all', 'keep'] }],\n            /**\n             * Overflow Wrap\n             * @see https://tailwindcss.com/docs/overflow-wrap\n             */\n            wrap: [{ wrap: ['break-word', 'anywhere', 'normal'] }],\n            /**\n             * Hyphens\n             * @see https://tailwindcss.com/docs/hyphens\n             */\n            hyphens: [{ hyphens: ['none', 'manual', 'auto'] }],\n            /**\n             * Content\n             * @see https://tailwindcss.com/docs/content\n             */\n            content: [{ content: ['none', isArbitraryVariable, isArbitraryValue] }],\n\n            // -------------------\n            // --- Backgrounds ---\n            // -------------------\n\n            /**\n             * Background Attachment\n             * @see https://tailwindcss.com/docs/background-attachment\n             */\n            'bg-attachment': [{ bg: ['fixed', 'local', 'scroll'] }],\n            /**\n             * Background Clip\n             * @see https://tailwindcss.com/docs/background-clip\n             */\n            'bg-clip': [{ 'bg-clip': ['border', 'padding', 'content', 'text'] }],\n            /**\n             * Background Origin\n             * @see https://tailwindcss.com/docs/background-origin\n             */\n            'bg-origin': [{ 'bg-origin': ['border', 'padding', 'content'] }],\n            /**\n             * Background Position\n             * @see https://tailwindcss.com/docs/background-position\n             */\n            'bg-position': [{ bg: scaleBgPosition() }],\n            /**\n             * Background Repeat\n             * @see https://tailwindcss.com/docs/background-repeat\n             */\n            'bg-repeat': [{ bg: scaleBgRepeat() }],\n            /**\n             * Background Size\n             * @see https://tailwindcss.com/docs/background-size\n             */\n            'bg-size': [{ bg: scaleBgSize() }],\n            /**\n             * Background Image\n             * @see https://tailwindcss.com/docs/background-image\n             */\n            'bg-image': [\n                {\n                    bg: [\n                        'none',\n                        {\n                            linear: [\n                                { to: ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl'] },\n                                isInteger,\n                                isArbitraryVariable,\n                                isArbitraryValue,\n                            ],\n                            radial: ['', isArbitraryVariable, isArbitraryValue],\n                            conic: [isInteger, isArbitraryVariable, isArbitraryValue],\n                        },\n                        isArbitraryVariableImage,\n                        isArbitraryImage,\n                    ],\n                },\n            ],\n            /**\n             * Background Color\n             * @see https://tailwindcss.com/docs/background-color\n             */\n            'bg-color': [{ bg: scaleColor() }],\n            /**\n             * Gradient Color Stops From Position\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-from-pos': [{ from: scaleGradientStopPosition() }],\n            /**\n             * Gradient Color Stops Via Position\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-via-pos': [{ via: scaleGradientStopPosition() }],\n            /**\n             * Gradient Color Stops To Position\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-to-pos': [{ to: scaleGradientStopPosition() }],\n            /**\n             * Gradient Color Stops From\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-from': [{ from: scaleColor() }],\n            /**\n             * Gradient Color Stops Via\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-via': [{ via: scaleColor() }],\n            /**\n             * Gradient Color Stops To\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-to': [{ to: scaleColor() }],\n\n            // ---------------\n            // --- Borders ---\n            // ---------------\n\n            /**\n             * Border Radius\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            rounded: [{ rounded: scaleRadius() }],\n            /**\n             * Border Radius Start\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-s': [{ 'rounded-s': scaleRadius() }],\n            /**\n             * Border Radius End\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-e': [{ 'rounded-e': scaleRadius() }],\n            /**\n             * Border Radius Top\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-t': [{ 'rounded-t': scaleRadius() }],\n            /**\n             * Border Radius Right\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-r': [{ 'rounded-r': scaleRadius() }],\n            /**\n             * Border Radius Bottom\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-b': [{ 'rounded-b': scaleRadius() }],\n            /**\n             * Border Radius Left\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-l': [{ 'rounded-l': scaleRadius() }],\n            /**\n             * Border Radius Start Start\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-ss': [{ 'rounded-ss': scaleRadius() }],\n            /**\n             * Border Radius Start End\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-se': [{ 'rounded-se': scaleRadius() }],\n            /**\n             * Border Radius End End\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-ee': [{ 'rounded-ee': scaleRadius() }],\n            /**\n             * Border Radius End Start\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-es': [{ 'rounded-es': scaleRadius() }],\n            /**\n             * Border Radius Top Left\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-tl': [{ 'rounded-tl': scaleRadius() }],\n            /**\n             * Border Radius Top Right\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-tr': [{ 'rounded-tr': scaleRadius() }],\n            /**\n             * Border Radius Bottom Right\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-br': [{ 'rounded-br': scaleRadius() }],\n            /**\n             * Border Radius Bottom Left\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-bl': [{ 'rounded-bl': scaleRadius() }],\n            /**\n             * Border Width\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w': [{ border: scaleBorderWidth() }],\n            /**\n             * Border Width X\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-x': [{ 'border-x': scaleBorderWidth() }],\n            /**\n             * Border Width Y\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-y': [{ 'border-y': scaleBorderWidth() }],\n            /**\n             * Border Width Start\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-s': [{ 'border-s': scaleBorderWidth() }],\n            /**\n             * Border Width End\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-e': [{ 'border-e': scaleBorderWidth() }],\n            /**\n             * Border Width Top\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-t': [{ 'border-t': scaleBorderWidth() }],\n            /**\n             * Border Width Right\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-r': [{ 'border-r': scaleBorderWidth() }],\n            /**\n             * Border Width Bottom\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-b': [{ 'border-b': scaleBorderWidth() }],\n            /**\n             * Border Width Left\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-l': [{ 'border-l': scaleBorderWidth() }],\n            /**\n             * Divide Width X\n             * @see https://tailwindcss.com/docs/border-width#between-children\n             */\n            'divide-x': [{ 'divide-x': scaleBorderWidth() }],\n            /**\n             * Divide Width X Reverse\n             * @see https://tailwindcss.com/docs/border-width#between-children\n             */\n            'divide-x-reverse': ['divide-x-reverse'],\n            /**\n             * Divide Width Y\n             * @see https://tailwindcss.com/docs/border-width#between-children\n             */\n            'divide-y': [{ 'divide-y': scaleBorderWidth() }],\n            /**\n             * Divide Width Y Reverse\n             * @see https://tailwindcss.com/docs/border-width#between-children\n             */\n            'divide-y-reverse': ['divide-y-reverse'],\n            /**\n             * Border Style\n             * @see https://tailwindcss.com/docs/border-style\n             */\n            'border-style': [{ border: [...scaleLineStyle(), 'hidden', 'none'] }],\n            /**\n             * Divide Style\n             * @see https://tailwindcss.com/docs/border-style#setting-the-divider-style\n             */\n            'divide-style': [{ divide: [...scaleLineStyle(), 'hidden', 'none'] }],\n            /**\n             * Border Color\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color': [{ border: scaleColor() }],\n            /**\n             * Border Color X\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-x': [{ 'border-x': scaleColor() }],\n            /**\n             * Border Color Y\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-y': [{ 'border-y': scaleColor() }],\n            /**\n             * Border Color S\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-s': [{ 'border-s': scaleColor() }],\n            /**\n             * Border Color E\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-e': [{ 'border-e': scaleColor() }],\n            /**\n             * Border Color Top\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-t': [{ 'border-t': scaleColor() }],\n            /**\n             * Border Color Right\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-r': [{ 'border-r': scaleColor() }],\n            /**\n             * Border Color Bottom\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-b': [{ 'border-b': scaleColor() }],\n            /**\n             * Border Color Left\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-l': [{ 'border-l': scaleColor() }],\n            /**\n             * Divide Color\n             * @see https://tailwindcss.com/docs/divide-color\n             */\n            'divide-color': [{ divide: scaleColor() }],\n            /**\n             * Outline Style\n             * @see https://tailwindcss.com/docs/outline-style\n             */\n            'outline-style': [{ outline: [...scaleLineStyle(), 'none', 'hidden'] }],\n            /**\n             * Outline Offset\n             * @see https://tailwindcss.com/docs/outline-offset\n             */\n            'outline-offset': [\n                { 'outline-offset': [isNumber, isArbitraryVariable, isArbitraryValue] },\n            ],\n            /**\n             * Outline Width\n             * @see https://tailwindcss.com/docs/outline-width\n             */\n            'outline-w': [\n                { outline: ['', isNumber, isArbitraryVariableLength, isArbitraryLength] },\n            ],\n            /**\n             * Outline Color\n             * @see https://tailwindcss.com/docs/outline-color\n             */\n            'outline-color': [{ outline: scaleColor() }],\n\n            // ---------------\n            // --- Effects ---\n            // ---------------\n\n            /**\n             * Box Shadow\n             * @see https://tailwindcss.com/docs/box-shadow\n             */\n            shadow: [\n                {\n                    shadow: [\n                        // Deprecated since Tailwind CSS v4.0.0\n                        '',\n                        'none',\n                        themeShadow,\n                        isArbitraryVariableShadow,\n                        isArbitraryShadow,\n                    ],\n                },\n            ],\n            /**\n             * Box Shadow Color\n             * @see https://tailwindcss.com/docs/box-shadow#setting-the-shadow-color\n             */\n            'shadow-color': [{ shadow: scaleColor() }],\n            /**\n             * Inset Box Shadow\n             * @see https://tailwindcss.com/docs/box-shadow#adding-an-inset-shadow\n             */\n            'inset-shadow': [\n                {\n                    'inset-shadow': [\n                        'none',\n                        themeInsetShadow,\n                        isArbitraryVariableShadow,\n                        isArbitraryShadow,\n                    ],\n                },\n            ],\n            /**\n             * Inset Box Shadow Color\n             * @see https://tailwindcss.com/docs/box-shadow#setting-the-inset-shadow-color\n             */\n            'inset-shadow-color': [{ 'inset-shadow': scaleColor() }],\n            /**\n             * Ring Width\n             * @see https://tailwindcss.com/docs/box-shadow#adding-a-ring\n             */\n            'ring-w': [{ ring: scaleBorderWidth() }],\n            /**\n             * Ring Width Inset\n             * @see https://v3.tailwindcss.com/docs/ring-width#inset-rings\n             * @deprecated since Tailwind CSS v4.0.0\n             * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158\n             */\n            'ring-w-inset': ['ring-inset'],\n            /**\n             * Ring Color\n             * @see https://tailwindcss.com/docs/box-shadow#setting-the-ring-color\n             */\n            'ring-color': [{ ring: scaleColor() }],\n            /**\n             * Ring Offset Width\n             * @see https://v3.tailwindcss.com/docs/ring-offset-width\n             * @deprecated since Tailwind CSS v4.0.0\n             * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158\n             */\n            'ring-offset-w': [{ 'ring-offset': [isNumber, isArbitraryLength] }],\n            /**\n             * Ring Offset Color\n             * @see https://v3.tailwindcss.com/docs/ring-offset-color\n             * @deprecated since Tailwind CSS v4.0.0\n             * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158\n             */\n            'ring-offset-color': [{ 'ring-offset': scaleColor() }],\n            /**\n             * Inset Ring Width\n             * @see https://tailwindcss.com/docs/box-shadow#adding-an-inset-ring\n             */\n            'inset-ring-w': [{ 'inset-ring': scaleBorderWidth() }],\n            /**\n             * Inset Ring Color\n             * @see https://tailwindcss.com/docs/box-shadow#setting-the-inset-ring-color\n             */\n            'inset-ring-color': [{ 'inset-ring': scaleColor() }],\n            /**\n             * Text Shadow\n             * @see https://tailwindcss.com/docs/text-shadow\n             */\n            'text-shadow': [\n                {\n                    'text-shadow': [\n                        'none',\n                        themeTextShadow,\n                        isArbitraryVariableShadow,\n                        isArbitraryShadow,\n                    ],\n                },\n            ],\n            /**\n             * Text Shadow Color\n             * @see https://tailwindcss.com/docs/text-shadow#setting-the-shadow-color\n             */\n            'text-shadow-color': [{ 'text-shadow': scaleColor() }],\n            /**\n             * Opacity\n             * @see https://tailwindcss.com/docs/opacity\n             */\n            opacity: [{ opacity: [isNumber, isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * Mix Blend Mode\n             * @see https://tailwindcss.com/docs/mix-blend-mode\n             */\n            'mix-blend': [{ 'mix-blend': [...scaleBlendMode(), 'plus-darker', 'plus-lighter'] }],\n            /**\n             * Background Blend Mode\n             * @see https://tailwindcss.com/docs/background-blend-mode\n             */\n            'bg-blend': [{ 'bg-blend': scaleBlendMode() }],\n            /**\n             * Mask Clip\n             * @see https://tailwindcss.com/docs/mask-clip\n             */\n            'mask-clip': [\n                { 'mask-clip': ['border', 'padding', 'content', 'fill', 'stroke', 'view'] },\n                'mask-no-clip',\n            ],\n            /**\n             * Mask Composite\n             * @see https://tailwindcss.com/docs/mask-composite\n             */\n            'mask-composite': [{ mask: ['add', 'subtract', 'intersect', 'exclude'] }],\n            /**\n             * Mask Image\n             * @see https://tailwindcss.com/docs/mask-image\n             */\n            'mask-image-linear-pos': [{ 'mask-linear': [isNumber] }],\n            'mask-image-linear-from-pos': [{ 'mask-linear-from': scaleMaskImagePosition() }],\n            'mask-image-linear-to-pos': [{ 'mask-linear-to': scaleMaskImagePosition() }],\n            'mask-image-linear-from-color': [{ 'mask-linear-from': scaleColor() }],\n            'mask-image-linear-to-color': [{ 'mask-linear-to': scaleColor() }],\n            'mask-image-t-from-pos': [{ 'mask-t-from': scaleMaskImagePosition() }],\n            'mask-image-t-to-pos': [{ 'mask-t-to': scaleMaskImagePosition() }],\n            'mask-image-t-from-color': [{ 'mask-t-from': scaleColor() }],\n            'mask-image-t-to-color': [{ 'mask-t-to': scaleColor() }],\n            'mask-image-r-from-pos': [{ 'mask-r-from': scaleMaskImagePosition() }],\n            'mask-image-r-to-pos': [{ 'mask-r-to': scaleMaskImagePosition() }],\n            'mask-image-r-from-color': [{ 'mask-r-from': scaleColor() }],\n            'mask-image-r-to-color': [{ 'mask-r-to': scaleColor() }],\n            'mask-image-b-from-pos': [{ 'mask-b-from': scaleMaskImagePosition() }],\n            'mask-image-b-to-pos': [{ 'mask-b-to': scaleMaskImagePosition() }],\n            'mask-image-b-from-color': [{ 'mask-b-from': scaleColor() }],\n            'mask-image-b-to-color': [{ 'mask-b-to': scaleColor() }],\n            'mask-image-l-from-pos': [{ 'mask-l-from': scaleMaskImagePosition() }],\n            'mask-image-l-to-pos': [{ 'mask-l-to': scaleMaskImagePosition() }],\n            'mask-image-l-from-color': [{ 'mask-l-from': scaleColor() }],\n            'mask-image-l-to-color': [{ 'mask-l-to': scaleColor() }],\n            'mask-image-x-from-pos': [{ 'mask-x-from': scaleMaskImagePosition() }],\n            'mask-image-x-to-pos': [{ 'mask-x-to': scaleMaskImagePosition() }],\n            'mask-image-x-from-color': [{ 'mask-x-from': scaleColor() }],\n            'mask-image-x-to-color': [{ 'mask-x-to': scaleColor() }],\n            'mask-image-y-from-pos': [{ 'mask-y-from': scaleMaskImagePosition() }],\n            'mask-image-y-to-pos': [{ 'mask-y-to': scaleMaskImagePosition() }],\n            'mask-image-y-from-color': [{ 'mask-y-from': scaleColor() }],\n            'mask-image-y-to-color': [{ 'mask-y-to': scaleColor() }],\n            'mask-image-radial': [{ 'mask-radial': [isArbitraryVariable, isArbitraryValue] }],\n            'mask-image-radial-from-pos': [{ 'mask-radial-from': scaleMaskImagePosition() }],\n            'mask-image-radial-to-pos': [{ 'mask-radial-to': scaleMaskImagePosition() }],\n            'mask-image-radial-from-color': [{ 'mask-radial-from': scaleColor() }],\n            'mask-image-radial-to-color': [{ 'mask-radial-to': scaleColor() }],\n            'mask-image-radial-shape': [{ 'mask-radial': ['circle', 'ellipse'] }],\n            'mask-image-radial-size': [\n                { 'mask-radial': [{ closest: ['side', 'corner'], farthest: ['side', 'corner'] }] },\n            ],\n            'mask-image-radial-pos': [{ 'mask-radial-at': scalePosition() }],\n            'mask-image-conic-pos': [{ 'mask-conic': [isNumber] }],\n            'mask-image-conic-from-pos': [{ 'mask-conic-from': scaleMaskImagePosition() }],\n            'mask-image-conic-to-pos': [{ 'mask-conic-to': scaleMaskImagePosition() }],\n            'mask-image-conic-from-color': [{ 'mask-conic-from': scaleColor() }],\n            'mask-image-conic-to-color': [{ 'mask-conic-to': scaleColor() }],\n            /**\n             * Mask Mode\n             * @see https://tailwindcss.com/docs/mask-mode\n             */\n            'mask-mode': [{ mask: ['alpha', 'luminance', 'match'] }],\n            /**\n             * Mask Origin\n             * @see https://tailwindcss.com/docs/mask-origin\n             */\n            'mask-origin': [\n                { 'mask-origin': ['border', 'padding', 'content', 'fill', 'stroke', 'view'] },\n            ],\n            /**\n             * Mask Position\n             * @see https://tailwindcss.com/docs/mask-position\n             */\n            'mask-position': [{ mask: scaleBgPosition() }],\n            /**\n             * Mask Repeat\n             * @see https://tailwindcss.com/docs/mask-repeat\n             */\n            'mask-repeat': [{ mask: scaleBgRepeat() }],\n            /**\n             * Mask Size\n             * @see https://tailwindcss.com/docs/mask-size\n             */\n            'mask-size': [{ mask: scaleBgSize() }],\n            /**\n             * Mask Type\n             * @see https://tailwindcss.com/docs/mask-type\n             */\n            'mask-type': [{ 'mask-type': ['alpha', 'luminance'] }],\n            /**\n             * Mask Image\n             * @see https://tailwindcss.com/docs/mask-image\n             */\n            'mask-image': [{ mask: ['none', isArbitraryVariable, isArbitraryValue] }],\n\n            // ---------------\n            // --- Filters ---\n            // ---------------\n\n            /**\n             * Filter\n             * @see https://tailwindcss.com/docs/filter\n             */\n            filter: [\n                {\n                    filter: [\n                        // Deprecated since Tailwind CSS v3.0.0\n                        '',\n                        'none',\n                        isArbitraryVariable,\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Blur\n             * @see https://tailwindcss.com/docs/blur\n             */\n            blur: [{ blur: scaleBlur() }],\n            /**\n             * Brightness\n             * @see https://tailwindcss.com/docs/brightness\n             */\n            brightness: [{ brightness: [isNumber, isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * Contrast\n             * @see https://tailwindcss.com/docs/contrast\n             */\n            contrast: [{ contrast: [isNumber, isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * Drop Shadow\n             * @see https://tailwindcss.com/docs/drop-shadow\n             */\n            'drop-shadow': [\n                {\n                    'drop-shadow': [\n                        // Deprecated since Tailwind CSS v4.0.0\n                        '',\n                        'none',\n                        themeDropShadow,\n                        isArbitraryVariableShadow,\n                        isArbitraryShadow,\n                    ],\n                },\n            ],\n            /**\n             * Drop Shadow Color\n             * @see https://tailwindcss.com/docs/filter-drop-shadow#setting-the-shadow-color\n             */\n            'drop-shadow-color': [{ 'drop-shadow': scaleColor() }],\n            /**\n             * Grayscale\n             * @see https://tailwindcss.com/docs/grayscale\n             */\n            grayscale: [{ grayscale: ['', isNumber, isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * Hue Rotate\n             * @see https://tailwindcss.com/docs/hue-rotate\n             */\n            'hue-rotate': [{ 'hue-rotate': [isNumber, isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * Invert\n             * @see https://tailwindcss.com/docs/invert\n             */\n            invert: [{ invert: ['', isNumber, isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * Saturate\n             * @see https://tailwindcss.com/docs/saturate\n             */\n            saturate: [{ saturate: [isNumber, isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * Sepia\n             * @see https://tailwindcss.com/docs/sepia\n             */\n            sepia: [{ sepia: ['', isNumber, isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * Backdrop Filter\n             * @see https://tailwindcss.com/docs/backdrop-filter\n             */\n            'backdrop-filter': [\n                {\n                    'backdrop-filter': [\n                        // Deprecated since Tailwind CSS v3.0.0\n                        '',\n                        'none',\n                        isArbitraryVariable,\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Backdrop Blur\n             * @see https://tailwindcss.com/docs/backdrop-blur\n             */\n            'backdrop-blur': [{ 'backdrop-blur': scaleBlur() }],\n            /**\n             * Backdrop Brightness\n             * @see https://tailwindcss.com/docs/backdrop-brightness\n             */\n            'backdrop-brightness': [\n                { 'backdrop-brightness': [isNumber, isArbitraryVariable, isArbitraryValue] },\n            ],\n            /**\n             * Backdrop Contrast\n             * @see https://tailwindcss.com/docs/backdrop-contrast\n             */\n            'backdrop-contrast': [\n                { 'backdrop-contrast': [isNumber, isArbitraryVariable, isArbitraryValue] },\n            ],\n            /**\n             * Backdrop Grayscale\n             * @see https://tailwindcss.com/docs/backdrop-grayscale\n             */\n            'backdrop-grayscale': [\n                { 'backdrop-grayscale': ['', isNumber, isArbitraryVariable, isArbitraryValue] },\n            ],\n            /**\n             * Backdrop Hue Rotate\n             * @see https://tailwindcss.com/docs/backdrop-hue-rotate\n             */\n            'backdrop-hue-rotate': [\n                { 'backdrop-hue-rotate': [isNumber, isArbitraryVariable, isArbitraryValue] },\n            ],\n            /**\n             * Backdrop Invert\n             * @see https://tailwindcss.com/docs/backdrop-invert\n             */\n            'backdrop-invert': [\n                { 'backdrop-invert': ['', isNumber, isArbitraryVariable, isArbitraryValue] },\n            ],\n            /**\n             * Backdrop Opacity\n             * @see https://tailwindcss.com/docs/backdrop-opacity\n             */\n            'backdrop-opacity': [\n                { 'backdrop-opacity': [isNumber, isArbitraryVariable, isArbitraryValue] },\n            ],\n            /**\n             * Backdrop Saturate\n             * @see https://tailwindcss.com/docs/backdrop-saturate\n             */\n            'backdrop-saturate': [\n                { 'backdrop-saturate': [isNumber, isArbitraryVariable, isArbitraryValue] },\n            ],\n            /**\n             * Backdrop Sepia\n             * @see https://tailwindcss.com/docs/backdrop-sepia\n             */\n            'backdrop-sepia': [\n                { 'backdrop-sepia': ['', isNumber, isArbitraryVariable, isArbitraryValue] },\n            ],\n\n            // --------------\n            // --- Tables ---\n            // --------------\n\n            /**\n             * Border Collapse\n             * @see https://tailwindcss.com/docs/border-collapse\n             */\n            'border-collapse': [{ border: ['collapse', 'separate'] }],\n            /**\n             * Border Spacing\n             * @see https://tailwindcss.com/docs/border-spacing\n             */\n            'border-spacing': [{ 'border-spacing': scaleUnambiguousSpacing() }],\n            /**\n             * Border Spacing X\n             * @see https://tailwindcss.com/docs/border-spacing\n             */\n            'border-spacing-x': [{ 'border-spacing-x': scaleUnambiguousSpacing() }],\n            /**\n             * Border Spacing Y\n             * @see https://tailwindcss.com/docs/border-spacing\n             */\n            'border-spacing-y': [{ 'border-spacing-y': scaleUnambiguousSpacing() }],\n            /**\n             * Table Layout\n             * @see https://tailwindcss.com/docs/table-layout\n             */\n            'table-layout': [{ table: ['auto', 'fixed'] }],\n            /**\n             * Caption Side\n             * @see https://tailwindcss.com/docs/caption-side\n             */\n            caption: [{ caption: ['top', 'bottom'] }],\n\n            // ---------------------------------\n            // --- Transitions and Animation ---\n            // ---------------------------------\n\n            /**\n             * Transition Property\n             * @see https://tailwindcss.com/docs/transition-property\n             */\n            transition: [\n                {\n                    transition: [\n                        '',\n                        'all',\n                        'colors',\n                        'opacity',\n                        'shadow',\n                        'transform',\n                        'none',\n                        isArbitraryVariable,\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Transition Behavior\n             * @see https://tailwindcss.com/docs/transition-behavior\n             */\n            'transition-behavior': [{ transition: ['normal', 'discrete'] }],\n            /**\n             * Transition Duration\n             * @see https://tailwindcss.com/docs/transition-duration\n             */\n            duration: [{ duration: [isNumber, 'initial', isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * Transition Timing Function\n             * @see https://tailwindcss.com/docs/transition-timing-function\n             */\n            ease: [\n                { ease: ['linear', 'initial', themeEase, isArbitraryVariable, isArbitraryValue] },\n            ],\n            /**\n             * Transition Delay\n             * @see https://tailwindcss.com/docs/transition-delay\n             */\n            delay: [{ delay: [isNumber, isArbitraryVariable, isArbitraryValue] }],\n            /**\n             * Animation\n             * @see https://tailwindcss.com/docs/animation\n             */\n            animate: [{ animate: ['none', themeAnimate, isArbitraryVariable, isArbitraryValue] }],\n\n            // ------------------\n            // --- Transforms ---\n            // ------------------\n\n            /**\n             * Backface Visibility\n             * @see https://tailwindcss.com/docs/backface-visibility\n             */\n            backface: [{ backface: ['hidden', 'visible'] }],\n            /**\n             * Perspective\n             * @see https://tailwindcss.com/docs/perspective\n             */\n            perspective: [\n                { perspective: [themePerspective, isArbitraryVariable, isArbitraryValue] },\n            ],\n            /**\n             * Perspective Origin\n             * @see https://tailwindcss.com/docs/perspective-origin\n             */\n            'perspective-origin': [{ 'perspective-origin': scalePositionWithArbitrary() }],\n            /**\n             * Rotate\n             * @see https://tailwindcss.com/docs/rotate\n             */\n            rotate: [{ rotate: scaleRotate() }],\n            /**\n             * Rotate X\n             * @see https://tailwindcss.com/docs/rotate\n             */\n            'rotate-x': [{ 'rotate-x': scaleRotate() }],\n            /**\n             * Rotate Y\n             * @see https://tailwindcss.com/docs/rotate\n             */\n            'rotate-y': [{ 'rotate-y': scaleRotate() }],\n            /**\n             * Rotate Z\n             * @see https://tailwindcss.com/docs/rotate\n             */\n            'rotate-z': [{ 'rotate-z': scaleRotate() }],\n            /**\n             * Scale\n             * @see https://tailwindcss.com/docs/scale\n             */\n            scale: [{ scale: scaleScale() }],\n            /**\n             * Scale X\n             * @see https://tailwindcss.com/docs/scale\n             */\n            'scale-x': [{ 'scale-x': scaleScale() }],\n            /**\n             * Scale Y\n             * @see https://tailwindcss.com/docs/scale\n             */\n            'scale-y': [{ 'scale-y': scaleScale() }],\n            /**\n             * Scale Z\n             * @see https://tailwindcss.com/docs/scale\n             */\n            'scale-z': [{ 'scale-z': scaleScale() }],\n            /**\n             * Scale 3D\n             * @see https://tailwindcss.com/docs/scale\n             */\n            'scale-3d': ['scale-3d'],\n            /**\n             * Skew\n             * @see https://tailwindcss.com/docs/skew\n             */\n            skew: [{ skew: scaleSkew() }],\n            /**\n             * Skew X\n             * @see https://tailwindcss.com/docs/skew\n             */\n            'skew-x': [{ 'skew-x': scaleSkew() }],\n            /**\n             * Skew Y\n             * @see https://tailwindcss.com/docs/skew\n             */\n            'skew-y': [{ 'skew-y': scaleSkew() }],\n            /**\n             * Transform\n             * @see https://tailwindcss.com/docs/transform\n             */\n            transform: [\n                { transform: [isArbitraryVariable, isArbitraryValue, '', 'none', 'gpu', 'cpu'] },\n            ],\n            /**\n             * Transform Origin\n             * @see https://tailwindcss.com/docs/transform-origin\n             */\n            'transform-origin': [{ origin: scalePositionWithArbitrary() }],\n            /**\n             * Transform Style\n             * @see https://tailwindcss.com/docs/transform-style\n             */\n            'transform-style': [{ transform: ['3d', 'flat'] }],\n            /**\n             * Translate\n             * @see https://tailwindcss.com/docs/translate\n             */\n            translate: [{ translate: scaleTranslate() }],\n            /**\n             * Translate X\n             * @see https://tailwindcss.com/docs/translate\n             */\n            'translate-x': [{ 'translate-x': scaleTranslate() }],\n            /**\n             * Translate Y\n             * @see https://tailwindcss.com/docs/translate\n             */\n            'translate-y': [{ 'translate-y': scaleTranslate() }],\n            /**\n             * Translate Z\n             * @see https://tailwindcss.com/docs/translate\n             */\n            'translate-z': [{ 'translate-z': scaleTranslate() }],\n            /**\n             * Translate None\n             * @see https://tailwindcss.com/docs/translate\n             */\n            'translate-none': ['translate-none'],\n\n            // ---------------------\n            // --- Interactivity ---\n            // ---------------------\n\n            /**\n             * Accent Color\n             * @see https://tailwindcss.com/docs/accent-color\n             */\n            accent: [{ accent: scaleColor() }],\n            /**\n             * Appearance\n             * @see https://tailwindcss.com/docs/appearance\n             */\n            appearance: [{ appearance: ['none', 'auto'] }],\n            /**\n             * Caret Color\n             * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\n             */\n            'caret-color': [{ caret: scaleColor() }],\n            /**\n             * Color Scheme\n             * @see https://tailwindcss.com/docs/color-scheme\n             */\n            'color-scheme': [\n                { scheme: ['normal', 'dark', 'light', 'light-dark', 'only-dark', 'only-light'] },\n            ],\n            /**\n             * Cursor\n             * @see https://tailwindcss.com/docs/cursor\n             */\n            cursor: [\n                {\n                    cursor: [\n                        'auto',\n                        'default',\n                        'pointer',\n                        'wait',\n                        'text',\n                        'move',\n                        'help',\n                        'not-allowed',\n                        'none',\n                        'context-menu',\n                        'progress',\n                        'cell',\n                        'crosshair',\n                        'vertical-text',\n                        'alias',\n                        'copy',\n                        'no-drop',\n                        'grab',\n                        'grabbing',\n                        'all-scroll',\n                        'col-resize',\n                        'row-resize',\n                        'n-resize',\n                        'e-resize',\n                        's-resize',\n                        'w-resize',\n                        'ne-resize',\n                        'nw-resize',\n                        'se-resize',\n                        'sw-resize',\n                        'ew-resize',\n                        'ns-resize',\n                        'nesw-resize',\n                        'nwse-resize',\n                        'zoom-in',\n                        'zoom-out',\n                        isArbitraryVariable,\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Field Sizing\n             * @see https://tailwindcss.com/docs/field-sizing\n             */\n            'field-sizing': [{ 'field-sizing': ['fixed', 'content'] }],\n            /**\n             * Pointer Events\n             * @see https://tailwindcss.com/docs/pointer-events\n             */\n            'pointer-events': [{ 'pointer-events': ['auto', 'none'] }],\n            /**\n             * Resize\n             * @see https://tailwindcss.com/docs/resize\n             */\n            resize: [{ resize: ['none', '', 'y', 'x'] }],\n            /**\n             * Scroll Behavior\n             * @see https://tailwindcss.com/docs/scroll-behavior\n             */\n            'scroll-behavior': [{ scroll: ['auto', 'smooth'] }],\n            /**\n             * Scroll Margin\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-m': [{ 'scroll-m': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Margin X\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mx': [{ 'scroll-mx': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Margin Y\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-my': [{ 'scroll-my': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Margin Start\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-ms': [{ 'scroll-ms': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Margin End\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-me': [{ 'scroll-me': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Margin Top\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mt': [{ 'scroll-mt': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Margin Right\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mr': [{ 'scroll-mr': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Margin Bottom\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mb': [{ 'scroll-mb': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Margin Left\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-ml': [{ 'scroll-ml': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Padding\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-p': [{ 'scroll-p': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Padding X\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-px': [{ 'scroll-px': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Padding Y\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-py': [{ 'scroll-py': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Padding Start\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-ps': [{ 'scroll-ps': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Padding End\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pe': [{ 'scroll-pe': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Padding Top\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pt': [{ 'scroll-pt': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Padding Right\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pr': [{ 'scroll-pr': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Padding Bottom\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pb': [{ 'scroll-pb': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Padding Left\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pl': [{ 'scroll-pl': scaleUnambiguousSpacing() }],\n            /**\n             * Scroll Snap Align\n             * @see https://tailwindcss.com/docs/scroll-snap-align\n             */\n            'snap-align': [{ snap: ['start', 'end', 'center', 'align-none'] }],\n            /**\n             * Scroll Snap Stop\n             * @see https://tailwindcss.com/docs/scroll-snap-stop\n             */\n            'snap-stop': [{ snap: ['normal', 'always'] }],\n            /**\n             * Scroll Snap Type\n             * @see https://tailwindcss.com/docs/scroll-snap-type\n             */\n            'snap-type': [{ snap: ['none', 'x', 'y', 'both'] }],\n            /**\n             * Scroll Snap Type Strictness\n             * @see https://tailwindcss.com/docs/scroll-snap-type\n             */\n            'snap-strictness': [{ snap: ['mandatory', 'proximity'] }],\n            /**\n             * Touch Action\n             * @see https://tailwindcss.com/docs/touch-action\n             */\n            touch: [{ touch: ['auto', 'none', 'manipulation'] }],\n            /**\n             * Touch Action X\n             * @see https://tailwindcss.com/docs/touch-action\n             */\n            'touch-x': [{ 'touch-pan': ['x', 'left', 'right'] }],\n            /**\n             * Touch Action Y\n             * @see https://tailwindcss.com/docs/touch-action\n             */\n            'touch-y': [{ 'touch-pan': ['y', 'up', 'down'] }],\n            /**\n             * Touch Action Pinch Zoom\n             * @see https://tailwindcss.com/docs/touch-action\n             */\n            'touch-pz': ['touch-pinch-zoom'],\n            /**\n             * User Select\n             * @see https://tailwindcss.com/docs/user-select\n             */\n            select: [{ select: ['none', 'text', 'all', 'auto'] }],\n            /**\n             * Will Change\n             * @see https://tailwindcss.com/docs/will-change\n             */\n            'will-change': [\n                {\n                    'will-change': [\n                        'auto',\n                        'scroll',\n                        'contents',\n                        'transform',\n                        isArbitraryVariable,\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n\n            // -----------\n            // --- SVG ---\n            // -----------\n\n            /**\n             * Fill\n             * @see https://tailwindcss.com/docs/fill\n             */\n            fill: [{ fill: ['none', ...scaleColor()] }],\n            /**\n             * Stroke Width\n             * @see https://tailwindcss.com/docs/stroke-width\n             */\n            'stroke-w': [\n                {\n                    stroke: [\n                        isNumber,\n                        isArbitraryVariableLength,\n                        isArbitraryLength,\n                        isArbitraryNumber,\n                    ],\n                },\n            ],\n            /**\n             * Stroke\n             * @see https://tailwindcss.com/docs/stroke\n             */\n            stroke: [{ stroke: ['none', ...scaleColor()] }],\n\n            // ---------------------\n            // --- Accessibility ---\n            // ---------------------\n\n            /**\n             * Forced Color Adjust\n             * @see https://tailwindcss.com/docs/forced-color-adjust\n             */\n            'forced-color-adjust': [{ 'forced-color-adjust': ['auto', 'none'] }],\n        },\n        conflictingClassGroups: {\n            overflow: ['overflow-x', 'overflow-y'],\n            overscroll: ['overscroll-x', 'overscroll-y'],\n            inset: ['inset-x', 'inset-y', 'start', 'end', 'top', 'right', 'bottom', 'left'],\n            'inset-x': ['right', 'left'],\n            'inset-y': ['top', 'bottom'],\n            flex: ['basis', 'grow', 'shrink'],\n            gap: ['gap-x', 'gap-y'],\n            p: ['px', 'py', 'ps', 'pe', 'pt', 'pr', 'pb', 'pl'],\n            px: ['pr', 'pl'],\n            py: ['pt', 'pb'],\n            m: ['mx', 'my', 'ms', 'me', 'mt', 'mr', 'mb', 'ml'],\n            mx: ['mr', 'ml'],\n            my: ['mt', 'mb'],\n            size: ['w', 'h'],\n            'font-size': ['leading'],\n            'fvn-normal': [\n                'fvn-ordinal',\n                'fvn-slashed-zero',\n                'fvn-figure',\n                'fvn-spacing',\n                'fvn-fraction',\n            ],\n            'fvn-ordinal': ['fvn-normal'],\n            'fvn-slashed-zero': ['fvn-normal'],\n            'fvn-figure': ['fvn-normal'],\n            'fvn-spacing': ['fvn-normal'],\n            'fvn-fraction': ['fvn-normal'],\n            'line-clamp': ['display', 'overflow'],\n            rounded: [\n                'rounded-s',\n                'rounded-e',\n                'rounded-t',\n                'rounded-r',\n                'rounded-b',\n                'rounded-l',\n                'rounded-ss',\n                'rounded-se',\n                'rounded-ee',\n                'rounded-es',\n                'rounded-tl',\n                'rounded-tr',\n                'rounded-br',\n                'rounded-bl',\n            ],\n            'rounded-s': ['rounded-ss', 'rounded-es'],\n            'rounded-e': ['rounded-se', 'rounded-ee'],\n            'rounded-t': ['rounded-tl', 'rounded-tr'],\n            'rounded-r': ['rounded-tr', 'rounded-br'],\n            'rounded-b': ['rounded-br', 'rounded-bl'],\n            'rounded-l': ['rounded-tl', 'rounded-bl'],\n            'border-spacing': ['border-spacing-x', 'border-spacing-y'],\n            'border-w': [\n                'border-w-x',\n                'border-w-y',\n                'border-w-s',\n                'border-w-e',\n                'border-w-t',\n                'border-w-r',\n                'border-w-b',\n                'border-w-l',\n            ],\n            'border-w-x': ['border-w-r', 'border-w-l'],\n            'border-w-y': ['border-w-t', 'border-w-b'],\n            'border-color': [\n                'border-color-x',\n                'border-color-y',\n                'border-color-s',\n                'border-color-e',\n                'border-color-t',\n                'border-color-r',\n                'border-color-b',\n                'border-color-l',\n            ],\n            'border-color-x': ['border-color-r', 'border-color-l'],\n            'border-color-y': ['border-color-t', 'border-color-b'],\n            translate: ['translate-x', 'translate-y', 'translate-none'],\n            'translate-none': ['translate', 'translate-x', 'translate-y', 'translate-z'],\n            'scroll-m': [\n                'scroll-mx',\n                'scroll-my',\n                'scroll-ms',\n                'scroll-me',\n                'scroll-mt',\n                'scroll-mr',\n                'scroll-mb',\n                'scroll-ml',\n            ],\n            'scroll-mx': ['scroll-mr', 'scroll-ml'],\n            'scroll-my': ['scroll-mt', 'scroll-mb'],\n            'scroll-p': [\n                'scroll-px',\n                'scroll-py',\n                'scroll-ps',\n                'scroll-pe',\n                'scroll-pt',\n                'scroll-pr',\n                'scroll-pb',\n                'scroll-pl',\n            ],\n            'scroll-px': ['scroll-pr', 'scroll-pl'],\n            'scroll-py': ['scroll-pt', 'scroll-pb'],\n            touch: ['touch-x', 'touch-y', 'touch-pz'],\n            'touch-x': ['touch'],\n            'touch-y': ['touch'],\n            'touch-pz': ['touch'],\n        },\n        conflictingClassGroupModifiers: {\n            'font-size': ['leading'],\n        },\n        orderSensitiveModifiers: [\n            '*',\n            '**',\n            'after',\n            'backdrop',\n            'before',\n            'details-content',\n            'file',\n            'first-letter',\n            'first-line',\n            'marker',\n            'placeholder',\n            'selection',\n        ],\n    } as const satisfies Config<DefaultClassGroupIds, DefaultThemeGroupIds>\n}\n","import { AnyConfig, ConfigExtension, NoInfer } from './types'\n\n/**\n * @param baseConfig Config where other config will be merged into. This object will be mutated.\n * @param configExtension Partial config to merge into the `baseConfig`.\n */\nexport const mergeConfigs = <ClassGroupIds extends string, ThemeGroupIds extends string = never>(\n    baseConfig: AnyConfig,\n    {\n        cacheSize,\n        prefix,\n        experimentalParseClassName,\n        extend = {},\n        override = {},\n    }: ConfigExtension<ClassGroupIds, ThemeGroupIds>,\n) => {\n    overrideProperty(baseConfig, 'cacheSize', cacheSize)\n    overrideProperty(baseConfig, 'prefix', prefix)\n    overrideProperty(baseConfig, 'experimentalParseClassName', experimentalParseClassName)\n\n    overrideConfigProperties(baseConfig.theme, override.theme)\n    overrideConfigProperties(baseConfig.classGroups, override.classGroups)\n    overrideConfigProperties(baseConfig.conflictingClassGroups, override.conflictingClassGroups)\n    overrideConfigProperties(\n        baseConfig.conflictingClassGroupModifiers,\n        override.conflictingClassGroupModifiers,\n    )\n    overrideProperty(baseConfig, 'orderSensitiveModifiers', override.orderSensitiveModifiers)\n\n    mergeConfigProperties(baseConfig.theme, extend.theme)\n    mergeConfigProperties(baseConfig.classGroups, extend.classGroups)\n    mergeConfigProperties(baseConfig.conflictingClassGroups, extend.conflictingClassGroups)\n    mergeConfigProperties(\n        baseConfig.conflictingClassGroupModifiers,\n        extend.conflictingClassGroupModifiers,\n    )\n    mergeArrayProperties(baseConfig, extend, 'orderSensitiveModifiers')\n\n    return baseConfig\n}\n\nconst overrideProperty = <T extends object, K extends keyof T>(\n    baseObject: T,\n    overrideKey: K,\n    overrideValue: T[K] | undefined,\n) => {\n    if (overrideValue !== undefined) {\n        baseObject[overrideKey] = overrideValue\n    }\n}\n\nconst overrideConfigProperties = (\n    baseObject: Partial<Record<string, readonly unknown[]>>,\n    overrideObject: Partial<Record<string, readonly unknown[]>> | undefined,\n) => {\n    if (overrideObject) {\n        for (const key in overrideObject) {\n            overrideProperty(baseObject, key, overrideObject[key])\n        }\n    }\n}\n\nconst mergeConfigProperties = (\n    baseObject: Partial<Record<string, readonly unknown[]>>,\n    mergeObject: Partial<Record<string, readonly unknown[]>> | undefined,\n) => {\n    if (mergeObject) {\n        for (const key in mergeObject) {\n            mergeArrayProperties(baseObject, mergeObject, key)\n        }\n    }\n}\n\nconst mergeArrayProperties = <Key extends string>(\n    baseObject: Partial<Record<NoInfer<Key>, readonly unknown[]>>,\n    mergeObject: Partial<Record<NoInfer<Key>, readonly unknown[]>>,\n    key: Key,\n) => {\n    const mergeValue = mergeObject[key]\n\n    if (mergeValue !== undefined) {\n        baseObject[key] = baseObject[key] ? baseObject[key].concat(mergeValue) : mergeValue\n    }\n}\n","import { createTailwindMerge } from './create-tailwind-merge'\nimport { getDefaultConfig } from './default-config'\nimport { mergeConfigs } from './merge-configs'\nimport { AnyConfig, ConfigExtension, DefaultClassGroupIds, DefaultThemeGroupIds } from './types'\n\ntype CreateConfigSubsequent = (config: AnyConfig) => AnyConfig\n\nexport const extendTailwindMerge = <\n    AdditionalClassGroupIds extends string = never,\n    AdditionalThemeGroupIds extends string = never,\n>(\n    configExtension:\n        | ConfigExtension<\n              DefaultClassGroupIds | AdditionalClassGroupIds,\n              DefaultThemeGroupIds | AdditionalThemeGroupIds\n          >\n        | CreateConfigSubsequent,\n    ...createConfig: CreateConfigSubsequent[]\n) =>\n    typeof configExtension === 'function'\n        ? createTailwindMerge(getDefaultConfig, configExtension, ...createConfig)\n        : createTailwindMerge(\n              () => mergeConfigs(getDefaultConfig(), configExtension),\n              ...createConfig,\n          )\n","import { createTailwindMerge } from './create-tailwind-merge'\nimport { getDefaultConfig } from './default-config'\n\nexport const twMerge = createTailwindMerge(getDefaultConfig)\n"],"names":["CLASS_PART_SEPARATOR","createClassGroupUtils","config","classMap","createClassMap","conflictingClassGroups","conflictingClassGroupModifiers","getClassGroupId","className","classParts","split","length","shift","getGroupRecursive","getGroupIdForArbitraryProperty","getConflictingClassGroupIds","classGroupId","hasPostfixModifier","conflicts","classPartObject","currentClassPart","nextClassPartObject","nextPart","get","classGroupFromNextClassPart","slice","undefined","validators","classRest","join","find","validator","arbitraryPropertyRegex","test","arbitraryPropertyClassName","exec","property","substring","indexOf","theme","classGroups","Map","processClassesRecursively","classGroup","forEach","classDefinition","classPartObjectToEdit","getPart","isThemeGetter","push","Object","entries","key","path","currentClassPartObject","pathPart","has","set","func","createLruCache","maxCacheSize","cacheSize","cache","previousCache","update","value","IMPORTANT_MODIFIER","MODIFIER_SEPARATOR","MODIFIER_SEPARATOR_LENGTH","createParseClassName","prefix","experimentalParseClassName","parseClassName","modifiers","bracketDepth","parenDepth","modifierStart","postfixModifierPosition","index","currentCharacter","baseClassNameWithImportantModifier","baseClassName","stripImportantModifier","hasImportantModifier","maybePostfixModifierPosition","fullPrefix","parseClassNameOriginal","startsWith","isExternal","endsWith","createSortModifiers","orderSensitiveModifiers","fromEntries","map","modifier","sortModifiers","sortedModifiers","unsortedModifiers","isPositionSensitive","sort","createConfigUtils","SPLIT_CLASSES_REGEX","mergeClassList","classList","configUtils","classGroupsInConflict","classNames","trim","result","originalClassName","variantModifier","modifierId","classId","includes","conflictGroups","i","group","twJoin","argument","resolvedValue","string","arguments","toValue","mix","k","createTailwindMerge","createConfigFirst","createConfigRest","cacheGet","cacheSet","functionToCall","initTailwindMerge","reduce","previousConfig","createConfigCurrent","tailwindMerge","cachedResult","callTailwindMerge","apply","fromTheme","themeGetter","arbitraryValueRegex","arbitraryVariableRegex","fractionRegex","tshirtUnitRegex","lengthUnitRegex","colorFunctionRegex","shadowRegex","imageRegex","isFraction","isNumber","Number","isNaN","isInteger","isPercent","isTshirtSize","isAny","isLengthOnly","isNever","isShadow","isImage","isAnyNonArbitrary","isArbitraryValue","isArbitraryVariable","isArbitrarySize","getIsArbitraryValue","isLabelSize","isArbitraryLength","isLabelLength","isArbitraryNumber","isLabelNumber","isArbitraryPosition","isLabelPosition","isArbitraryImage","isLabelImage","isArbitraryShadow","isLabelShadow","isArbitraryVariableLength","getIsArbitraryVariable","isArbitraryVariableFamilyName","isLabelFamilyName","isArbitraryVariablePosition","isArbitraryVariableSize","isArbitraryVariableImage","isArbitraryVariableShadow","testLabel","testValue","shouldMatchNoLabel","label","getDefaultConfig","themeColor","themeFont","themeText","themeFontWeight","themeTracking","themeLeading","themeBreakpoint","themeContainer","themeSpacing","themeRadius","themeShadow","themeInsetShadow","themeTextShadow","themeDropShadow","themeBlur","themePerspective","themeAspect","themeEase","themeAnimate","scaleBreak","scalePosition","scalePositionWithArbitrary","scaleOverflow","scaleOverscroll","scaleUnambiguousSpacing","scaleInset","scaleGridTemplateColsRows","scaleGridColRowStartAndEnd","span","scaleGridColRowStartOrEnd","scaleGridAutoColsRows","scaleAlignPrimaryAxis","scaleAlignSecondaryAxis","scaleMargin","scaleSizing","scaleColor","scaleBgPosition","position","scaleBgRepeat","repeat","scaleBgSize","size","scaleGradientStopPosition","scaleRadius","scaleBorderWidth","scaleLineStyle","scaleBlendMode","scaleMaskImagePosition","scaleBlur","scaleRotate","scaleScale","scaleSkew","scaleTranslate","animate","aspect","blur","breakpoint","color","container","ease","font","leading","perspective","radius","shadow","spacing","text","tracking","columns","box","display","sr","float","clear","isolation","object","overflow","overscroll","inset","start","end","top","right","bottom","left","visibility","z","basis","flex","grow","shrink","order","col","row","gap","justify","content","items","baseline","self","p","px","py","ps","pe","pt","pr","pb","pl","m","mx","my","ms","me","mt","mr","mb","ml","w","screen","h","list","placeholder","decoration","indent","align","whitespace","break","wrap","hyphens","bg","linear","to","radial","conic","from","via","rounded","border","divide","outline","ring","opacity","mask","closest","farthest","filter","brightness","contrast","grayscale","invert","saturate","sepia","table","caption","transition","duration","delay","backface","rotate","scale","skew","transform","origin","translate","accent","appearance","caret","scheme","cursor","resize","scroll","snap","touch","select","fill","stroke","mergeConfigs","baseConfig","extend","override","overrideProperty","overrideConfigProperties","mergeConfigProperties","mergeArrayProperties","baseObject","overrideKey","overrideValue","overrideObject","mergeObject","mergeValue","concat","extendTailwindMerge","configExtension","createConfig","twMerge"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"debugId":null}},
    {"offset": {"line": 4859, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/goober/dist/goober.modern.js"],"sourcesContent":["let e={data:\"\"},t=t=>\"object\"==typeof window?((t?t.querySelector(\"#_goober\"):window._goober)||Object.assign((t||document.head).appendChild(document.createElement(\"style\")),{innerHTML:\" \",id:\"_goober\"})).firstChild:t||e,r=e=>{let r=t(e),l=r.data;return r.data=\"\",l},l=/(?:([\\u0080-\\uFFFF\\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\\s*)/g,a=/\\/\\*[^]*?\\*\\/|  +/g,n=/\\n+/g,o=(e,t)=>{let r=\"\",l=\"\",a=\"\";for(let n in e){let c=e[n];\"@\"==n[0]?\"i\"==n[1]?r=n+\" \"+c+\";\":l+=\"f\"==n[1]?o(c,n):n+\"{\"+o(c,\"k\"==n[1]?\"\":t)+\"}\":\"object\"==typeof c?l+=o(c,t?t.replace(/([^,])+/g,e=>n.replace(/([^,]*:\\S+\\([^)]*\\))|([^,])+/g,t=>/&/.test(t)?t.replace(/&/g,e):e?e+\" \"+t:t)):n):null!=c&&(n=/^--/.test(n)?n:n.replace(/[A-Z]/g,\"-$&\").toLowerCase(),a+=o.p?o.p(n,c):n+\":\"+c+\";\")}return r+(t&&a?t+\"{\"+a+\"}\":a)+l},c={},s=e=>{if(\"object\"==typeof e){let t=\"\";for(let r in e)t+=r+s(e[r]);return t}return e},i=(e,t,r,i,p)=>{let u=s(e),d=c[u]||(c[u]=(e=>{let t=0,r=11;for(;t<e.length;)r=101*r+e.charCodeAt(t++)>>>0;return\"go\"+r})(u));if(!c[d]){let t=u!==e?e:(e=>{let t,r,o=[{}];for(;t=l.exec(e.replace(a,\"\"));)t[4]?o.shift():t[3]?(r=t[3].replace(n,\" \").trim(),o.unshift(o[0][r]=o[0][r]||{})):o[0][t[1]]=t[2].replace(n,\" \").trim();return o[0]})(e);c[d]=o(p?{[\"@keyframes \"+d]:t}:t,r?\"\":\".\"+d)}let f=r&&c.g?c.g:null;return r&&(c.g=c[d]),((e,t,r,l)=>{l?t.data=t.data.replace(l,e):-1===t.data.indexOf(e)&&(t.data=r?e+t.data:t.data+e)})(c[d],t,i,f),d},p=(e,t,r)=>e.reduce((e,l,a)=>{let n=t[a];if(n&&n.call){let e=n(r),t=e&&e.props&&e.props.className||/^go/.test(e)&&e;n=t?\".\"+t:e&&\"object\"==typeof e?e.props?\"\":o(e,\"\"):!1===e?\"\":e}return e+l+(null==n?\"\":n)},\"\");function u(e){let r=this||{},l=e.call?e(r.p):e;return i(l.unshift?l.raw?p(l,[].slice.call(arguments,1),r.p):l.reduce((e,t)=>Object.assign(e,t&&t.call?t(r.p):t),{}):l,t(r.target),r.g,r.o,r.k)}let d,f,g,b=u.bind({g:1}),h=u.bind({k:1});function m(e,t,r,l){o.p=t,d=e,f=r,g=l}function j(e,t){let r=this||{};return function(){let l=arguments;function a(n,o){let c=Object.assign({},n),s=c.className||a.className;r.p=Object.assign({theme:f&&f()},c),r.o=/ *go\\d+/.test(s),c.className=u.apply(r,l)+(s?\" \"+s:\"\"),t&&(c.ref=o);let i=e;return e[0]&&(i=c.as||e,delete c.as),g&&i[0]&&g(c),d(i,c)}return t?t(a):a}}export{u as css,r as extractCss,b as glob,h as keyframes,m as setup,j as styled};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4953, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/react-hot-toast/src/core/types.ts","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/react-hot-toast/src/core/utils.ts","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/react-hot-toast/src/core/store.ts","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/react-hot-toast/src/core/toast.ts","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/react-hot-toast/src/core/use-toaster.ts","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/react-hot-toast/src/components/toast-bar.tsx","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/react-hot-toast/src/components/toast-icon.tsx","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/react-hot-toast/src/components/error.tsx","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/react-hot-toast/src/components/loader.tsx","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/react-hot-toast/src/components/checkmark.tsx","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/react-hot-toast/src/components/toaster.tsx","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/react-hot-toast/src/index.ts"],"sourcesContent":["import { CSSProperties } from 'react';\n\nexport type ToastType = 'success' | 'error' | 'loading' | 'blank' | 'custom';\nexport type ToastPosition =\n  | 'top-left'\n  | 'top-center'\n  | 'top-right'\n  | 'bottom-left'\n  | 'bottom-center'\n  | 'bottom-right';\n\nexport type Renderable = React.ReactElement | string | null;\n\nexport interface IconTheme {\n  primary: string;\n  secondary: string;\n}\n\nexport type ValueFunction<TValue, TArg> = (arg: TArg) => TValue;\nexport type ValueOrFunction<TValue, TArg> =\n  | TValue\n  | ValueFunction<TValue, TArg>;\n\nconst isFunction = <TValue, TArg>(\n  valOrFunction: ValueOrFunction<TValue, TArg>\n): valOrFunction is ValueFunction<TValue, TArg> =>\n  typeof valOrFunction === 'function';\n\nexport const resolveValue = <TValue, TArg>(\n  valOrFunction: ValueOrFunction<TValue, TArg>,\n  arg: TArg\n): TValue => (isFunction(valOrFunction) ? valOrFunction(arg) : valOrFunction);\n\nexport interface Toast {\n  type: ToastType;\n  id: string;\n  message: ValueOrFunction<Renderable, Toast>;\n  icon?: Renderable;\n  duration?: number;\n  pauseDuration: number;\n  position?: ToastPosition;\n  removeDelay?: number;\n\n  ariaProps: {\n    role: 'status' | 'alert';\n    'aria-live': 'assertive' | 'off' | 'polite';\n  };\n\n  style?: CSSProperties;\n  className?: string;\n  iconTheme?: IconTheme;\n\n  createdAt: number;\n  visible: boolean;\n  dismissed: boolean;\n  height?: number;\n}\n\nexport type ToastOptions = Partial<\n  Pick<\n    Toast,\n    | 'id'\n    | 'icon'\n    | 'duration'\n    | 'ariaProps'\n    | 'className'\n    | 'style'\n    | 'position'\n    | 'iconTheme'\n    | 'removeDelay'\n  >\n>;\n\nexport type DefaultToastOptions = ToastOptions & {\n  [key in ToastType]?: ToastOptions;\n};\n\nexport interface ToasterProps {\n  position?: ToastPosition;\n  toastOptions?: DefaultToastOptions;\n  reverseOrder?: boolean;\n  gutter?: number;\n  containerStyle?: React.CSSProperties;\n  containerClassName?: string;\n  children?: (toast: Toast) => React.ReactElement;\n}\n\nexport interface ToastWrapperProps {\n  id: string;\n  className?: string;\n  style?: React.CSSProperties;\n  onHeightUpdate: (id: string, height: number) => void;\n  children?: React.ReactNode;\n}\n","export const genId = (() => {\n  let count = 0;\n  return () => {\n    return (++count).toString();\n  };\n})();\n\nexport const prefersReducedMotion = (() => {\n  // Cache result\n  let shouldReduceMotion: boolean | undefined = undefined;\n\n  return () => {\n    if (shouldReduceMotion === undefined && typeof window !== 'undefined') {\n      const mediaQuery = matchMedia('(prefers-reduced-motion: reduce)');\n      shouldReduceMotion = !mediaQuery || mediaQuery.matches;\n    }\n    return shouldReduceMotion;\n  };\n})();\n","import { useEffect, useState, useRef } from 'react';\nimport { DefaultToastOptions, Toast, ToastType } from './types';\n\nconst TOAST_LIMIT = 20;\n\nexport enum ActionType {\n  ADD_TOAST,\n  UPDATE_TOAST,\n  UPSERT_TOAST,\n  DISMISS_TOAST,\n  REMOVE_TOAST,\n  START_PAUSE,\n  END_PAUSE,\n}\n\ntype Action =\n  | {\n      type: ActionType.ADD_TOAST;\n      toast: Toast;\n    }\n  | {\n      type: ActionType.UPSERT_TOAST;\n      toast: Toast;\n    }\n  | {\n      type: ActionType.UPDATE_TOAST;\n      toast: Partial<Toast>;\n    }\n  | {\n      type: ActionType.DISMISS_TOAST;\n      toastId?: string;\n    }\n  | {\n      type: ActionType.REMOVE_TOAST;\n      toastId?: string;\n    }\n  | {\n      type: ActionType.START_PAUSE;\n      time: number;\n    }\n  | {\n      type: ActionType.END_PAUSE;\n      time: number;\n    };\n\ninterface State {\n  toasts: Toast[];\n  pausedAt: number | undefined;\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case ActionType.ADD_TOAST:\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      };\n\n    case ActionType.UPDATE_TOAST:\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      };\n\n    case ActionType.UPSERT_TOAST:\n      const { toast } = action;\n      return reducer(state, {\n        type: state.toasts.find((t) => t.id === toast.id)\n          ? ActionType.UPDATE_TOAST\n          : ActionType.ADD_TOAST,\n        toast,\n      });\n\n    case ActionType.DISMISS_TOAST:\n      const { toastId } = action;\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                dismissed: true,\n                visible: false,\n              }\n            : t\n        ),\n      };\n    case ActionType.REMOVE_TOAST:\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        };\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      };\n\n    case ActionType.START_PAUSE:\n      return {\n        ...state,\n        pausedAt: action.time,\n      };\n\n    case ActionType.END_PAUSE:\n      const diff = action.time - (state.pausedAt || 0);\n\n      return {\n        ...state,\n        pausedAt: undefined,\n        toasts: state.toasts.map((t) => ({\n          ...t,\n          pauseDuration: t.pauseDuration + diff,\n        })),\n      };\n  }\n};\n\nconst listeners: Array<(state: State) => void> = [];\n\nlet memoryState: State = { toasts: [], pausedAt: undefined };\n\nexport const dispatch = (action: Action) => {\n  memoryState = reducer(memoryState, action);\n  listeners.forEach((listener) => {\n    listener(memoryState);\n  });\n};\n\nexport const defaultTimeouts: {\n  [key in ToastType]: number;\n} = {\n  blank: 4000,\n  error: 4000,\n  success: 2000,\n  loading: Infinity,\n  custom: 4000,\n};\n\nexport const useStore = (toastOptions: DefaultToastOptions = {}): State => {\n  const [state, setState] = useState<State>(memoryState);\n  const initial = useRef(memoryState);\n\n  // TODO: Switch to useSyncExternalStore when targeting React 18+\n  useEffect(() => {\n    if (initial.current !== memoryState) {\n      setState(memoryState);\n    }\n    listeners.push(setState);\n    return () => {\n      const index = listeners.indexOf(setState);\n      if (index > -1) {\n        listeners.splice(index, 1);\n      }\n    };\n  }, []);\n\n  const mergedToasts = state.toasts.map((t) => ({\n    ...toastOptions,\n    ...toastOptions[t.type],\n    ...t,\n    removeDelay:\n      t.removeDelay ||\n      toastOptions[t.type]?.removeDelay ||\n      toastOptions?.removeDelay,\n    duration:\n      t.duration ||\n      toastOptions[t.type]?.duration ||\n      toastOptions?.duration ||\n      defaultTimeouts[t.type],\n    style: {\n      ...toastOptions.style,\n      ...toastOptions[t.type]?.style,\n      ...t.style,\n    },\n  }));\n\n  return {\n    ...state,\n    toasts: mergedToasts,\n  };\n};\n","import {\n  Renderable,\n  Toast,\n  ToastOptions,\n  ToastType,\n  DefaultToastOptions,\n  ValueOrFunction,\n  resolveValue,\n} from './types';\nimport { genId } from './utils';\nimport { dispatch, ActionType } from './store';\n\ntype Message = ValueOrFunction<Renderable, Toast>;\n\ntype ToastHandler = (message: Message, options?: ToastOptions) => string;\n\nconst createToast = (\n  message: Message,\n  type: ToastType = 'blank',\n  opts?: ToastOptions\n): Toast => ({\n  createdAt: Date.now(),\n  visible: true,\n  dismissed: false,\n  type,\n  ariaProps: {\n    role: 'status',\n    'aria-live': 'polite',\n  },\n  message,\n  pauseDuration: 0,\n  ...opts,\n  id: opts?.id || genId(),\n});\n\nconst createHandler =\n  (type?: ToastType): ToastHandler =>\n  (message, options) => {\n    const toast = createToast(message, type, options);\n    dispatch({ type: ActionType.UPSERT_TOAST, toast });\n    return toast.id;\n  };\n\nconst toast = (message: Message, opts?: ToastOptions) =>\n  createHandler('blank')(message, opts);\n\ntoast.error = createHandler('error');\ntoast.success = createHandler('success');\ntoast.loading = createHandler('loading');\ntoast.custom = createHandler('custom');\n\ntoast.dismiss = (toastId?: string) => {\n  dispatch({\n    type: ActionType.DISMISS_TOAST,\n    toastId,\n  });\n};\n\ntoast.remove = (toastId?: string) =>\n  dispatch({ type: ActionType.REMOVE_TOAST, toastId });\n\ntoast.promise = <T>(\n  promise: Promise<T> | (() => Promise<T>),\n  msgs: {\n    loading: Renderable;\n    success?: ValueOrFunction<Renderable, T>;\n    error?: ValueOrFunction<Renderable, any>;\n  },\n  opts?: DefaultToastOptions\n) => {\n  const id = toast.loading(msgs.loading, { ...opts, ...opts?.loading });\n\n  if (typeof promise === 'function') {\n    promise = promise();\n  }\n\n  promise\n    .then((p) => {\n      const successMessage = msgs.success\n        ? resolveValue(msgs.success, p)\n        : undefined;\n\n      if (successMessage) {\n        toast.success(successMessage, {\n          id,\n          ...opts,\n          ...opts?.success,\n        });\n      } else {\n        toast.dismiss(id);\n      }\n      return p;\n    })\n    .catch((e) => {\n      const errorMessage = msgs.error ? resolveValue(msgs.error, e) : undefined;\n\n      if (errorMessage) {\n        toast.error(errorMessage, {\n          id,\n          ...opts,\n          ...opts?.error,\n        });\n      } else {\n        toast.dismiss(id);\n      }\n    });\n\n  return promise;\n};\n\nexport { toast };\n","import { useEffect, useCallback } from 'react';\nimport { dispatch, ActionType, useStore } from './store';\nimport { toast } from './toast';\nimport { DefaultToastOptions, Toast, ToastPosition } from './types';\n\nconst updateHeight = (toastId: string, height: number) => {\n  dispatch({\n    type: ActionType.UPDATE_TOAST,\n    toast: { id: toastId, height },\n  });\n};\nconst startPause = () => {\n  dispatch({\n    type: ActionType.START_PAUSE,\n    time: Date.now(),\n  });\n};\n\nconst toastTimeouts = new Map<Toast['id'], ReturnType<typeof setTimeout>>();\n\nexport const REMOVE_DELAY = 1000;\n\nconst addToRemoveQueue = (toastId: string, removeDelay = REMOVE_DELAY) => {\n  if (toastTimeouts.has(toastId)) {\n    return;\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId);\n    dispatch({\n      type: ActionType.REMOVE_TOAST,\n      toastId: toastId,\n    });\n  }, removeDelay);\n\n  toastTimeouts.set(toastId, timeout);\n};\n\nexport const useToaster = (toastOptions?: DefaultToastOptions) => {\n  const { toasts, pausedAt } = useStore(toastOptions);\n\n  useEffect(() => {\n    if (pausedAt) {\n      return;\n    }\n\n    const now = Date.now();\n    const timeouts = toasts.map((t) => {\n      if (t.duration === Infinity) {\n        return;\n      }\n\n      const durationLeft =\n        (t.duration || 0) + t.pauseDuration - (now - t.createdAt);\n\n      if (durationLeft < 0) {\n        if (t.visible) {\n          toast.dismiss(t.id);\n        }\n        return;\n      }\n      return setTimeout(() => toast.dismiss(t.id), durationLeft);\n    });\n\n    return () => {\n      timeouts.forEach((timeout) => timeout && clearTimeout(timeout));\n    };\n  }, [toasts, pausedAt]);\n\n  const endPause = useCallback(() => {\n    if (pausedAt) {\n      dispatch({ type: ActionType.END_PAUSE, time: Date.now() });\n    }\n  }, [pausedAt]);\n\n  const calculateOffset = useCallback(\n    (\n      toast: Toast,\n      opts?: {\n        reverseOrder?: boolean;\n        gutter?: number;\n        defaultPosition?: ToastPosition;\n      }\n    ) => {\n      const { reverseOrder = false, gutter = 8, defaultPosition } = opts || {};\n\n      const relevantToasts = toasts.filter(\n        (t) =>\n          (t.position || defaultPosition) ===\n            (toast.position || defaultPosition) && t.height\n      );\n      const toastIndex = relevantToasts.findIndex((t) => t.id === toast.id);\n      const toastsBefore = relevantToasts.filter(\n        (toast, i) => i < toastIndex && toast.visible\n      ).length;\n\n      const offset = relevantToasts\n        .filter((t) => t.visible)\n        .slice(...(reverseOrder ? [toastsBefore + 1] : [0, toastsBefore]))\n        .reduce((acc, t) => acc + (t.height || 0) + gutter, 0);\n\n      return offset;\n    },\n    [toasts]\n  );\n\n  useEffect(() => {\n    // Add dismissed toasts to remove queue\n    toasts.forEach((toast) => {\n      if (toast.dismissed) {\n        addToRemoveQueue(toast.id, toast.removeDelay);\n      } else {\n        // If toast becomes visible again, remove it from the queue\n        const timeout = toastTimeouts.get(toast.id);\n        if (timeout) {\n          clearTimeout(timeout);\n          toastTimeouts.delete(toast.id);\n        }\n      }\n    });\n  }, [toasts]);\n\n  return {\n    toasts,\n    handlers: {\n      updateHeight,\n      startPause,\n      endPause,\n      calculateOffset,\n    },\n  };\n};\n","import * as React from 'react';\nimport { styled, keyframes } from 'goober';\n\nimport { Toast, ToastPosition, resolveValue, Renderable } from '../core/types';\nimport { ToastIcon } from './toast-icon';\nimport { prefersReducedMotion } from '../core/utils';\n\nconst enterAnimation = (factor: number) => `\n0% {transform: translate3d(0,${factor * -200}%,0) scale(.6); opacity:.5;}\n100% {transform: translate3d(0,0,0) scale(1); opacity:1;}\n`;\n\nconst exitAnimation = (factor: number) => `\n0% {transform: translate3d(0,0,-1px) scale(1); opacity:1;}\n100% {transform: translate3d(0,${factor * -150}%,-1px) scale(.6); opacity:0;}\n`;\n\nconst fadeInAnimation = `0%{opacity:0;} 100%{opacity:1;}`;\nconst fadeOutAnimation = `0%{opacity:1;} 100%{opacity:0;}`;\n\nconst ToastBarBase = styled('div')`\n  display: flex;\n  align-items: center;\n  background: #fff;\n  color: #363636;\n  line-height: 1.3;\n  will-change: transform;\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1), 0 3px 3px rgba(0, 0, 0, 0.05);\n  max-width: 350px;\n  pointer-events: auto;\n  padding: 8px 10px;\n  border-radius: 8px;\n`;\n\nconst Message = styled('div')`\n  display: flex;\n  justify-content: center;\n  margin: 4px 10px;\n  color: inherit;\n  flex: 1 1 auto;\n  white-space: pre-line;\n`;\n\ninterface ToastBarProps {\n  toast: Toast;\n  position?: ToastPosition;\n  style?: React.CSSProperties;\n  children?: (components: {\n    icon: Renderable;\n    message: Renderable;\n  }) => Renderable;\n}\n\nconst getAnimationStyle = (\n  position: ToastPosition,\n  visible: boolean\n): React.CSSProperties => {\n  const top = position.includes('top');\n  const factor = top ? 1 : -1;\n\n  const [enter, exit] = prefersReducedMotion()\n    ? [fadeInAnimation, fadeOutAnimation]\n    : [enterAnimation(factor), exitAnimation(factor)];\n\n  return {\n    animation: visible\n      ? `${keyframes(enter)} 0.35s cubic-bezier(.21,1.02,.73,1) forwards`\n      : `${keyframes(exit)} 0.4s forwards cubic-bezier(.06,.71,.55,1)`,\n  };\n};\n\nexport const ToastBar: React.FC<ToastBarProps> = React.memo(\n  ({ toast, position, style, children }) => {\n    const animationStyle: React.CSSProperties = toast.height\n      ? getAnimationStyle(\n          toast.position || position || 'top-center',\n          toast.visible\n        )\n      : { opacity: 0 };\n\n    const icon = <ToastIcon toast={toast} />;\n    const message = (\n      <Message {...toast.ariaProps}>\n        {resolveValue(toast.message, toast)}\n      </Message>\n    );\n\n    return (\n      <ToastBarBase\n        className={toast.className}\n        style={{\n          ...animationStyle,\n          ...style,\n          ...toast.style,\n        }}\n      >\n        {typeof children === 'function' ? (\n          children({\n            icon,\n            message,\n          })\n        ) : (\n          <>\n            {icon}\n            {message}\n          </>\n        )}\n      </ToastBarBase>\n    );\n  }\n);\n","import * as React from 'react';\nimport { styled, keyframes } from 'goober';\n\nimport { Toast } from '../core/types';\nimport { ErrorIcon, ErrorTheme } from './error';\nimport { LoaderIcon, LoaderTheme } from './loader';\nimport { CheckmarkIcon, CheckmarkTheme } from './checkmark';\n\nconst StatusWrapper = styled('div')`\n  position: absolute;\n`;\n\nconst IndicatorWrapper = styled('div')`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 20px;\n  min-height: 20px;\n`;\n\nconst enter = keyframes`\nfrom {\n  transform: scale(0.6);\n  opacity: 0.4;\n}\nto {\n  transform: scale(1);\n  opacity: 1;\n}`;\n\nexport const AnimatedIconWrapper = styled('div')`\n  position: relative;\n  transform: scale(0.6);\n  opacity: 0.4;\n  min-width: 20px;\n  animation: ${enter} 0.3s 0.12s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n`;\n\nexport type IconThemes = Partial<{\n  success: CheckmarkTheme;\n  error: ErrorTheme;\n  loading: LoaderTheme;\n}>;\n\nexport const ToastIcon: React.FC<{\n  toast: Toast;\n}> = ({ toast }) => {\n  const { icon, type, iconTheme } = toast;\n  if (icon !== undefined) {\n    if (typeof icon === 'string') {\n      return <AnimatedIconWrapper>{icon}</AnimatedIconWrapper>;\n    } else {\n      return icon;\n    }\n  }\n\n  if (type === 'blank') {\n    return null;\n  }\n\n  return (\n    <IndicatorWrapper>\n      <LoaderIcon {...iconTheme} />\n      {type !== 'loading' && (\n        <StatusWrapper>\n          {type === 'error' ? (\n            <ErrorIcon {...iconTheme} />\n          ) : (\n            <CheckmarkIcon {...iconTheme} />\n          )}\n        </StatusWrapper>\n      )}\n    </IndicatorWrapper>\n  );\n};\n","import { styled, keyframes } from 'goober';\n\nconst circleAnimation = keyframes`\nfrom {\n  transform: scale(0) rotate(45deg);\n\topacity: 0;\n}\nto {\n transform: scale(1) rotate(45deg);\n  opacity: 1;\n}`;\n\nconst firstLineAnimation = keyframes`\nfrom {\n  transform: scale(0);\n  opacity: 0;\n}\nto {\n  transform: scale(1);\n  opacity: 1;\n}`;\n\nconst secondLineAnimation = keyframes`\nfrom {\n  transform: scale(0) rotate(90deg);\n\topacity: 0;\n}\nto {\n  transform: scale(1) rotate(90deg);\n\topacity: 1;\n}`;\n\nexport interface ErrorTheme {\n  primary?: string;\n  secondary?: string;\n}\n\nexport const ErrorIcon = styled('div')<ErrorTheme>`\n  width: 20px;\n  opacity: 0;\n  height: 20px;\n  border-radius: 10px;\n  background: ${(p) => p.primary || '#ff4b4b'};\n  position: relative;\n  transform: rotate(45deg);\n\n  animation: ${circleAnimation} 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n  animation-delay: 100ms;\n\n  &:after,\n  &:before {\n    content: '';\n    animation: ${firstLineAnimation} 0.15s ease-out forwards;\n    animation-delay: 150ms;\n    position: absolute;\n    border-radius: 3px;\n    opacity: 0;\n    background: ${(p) => p.secondary || '#fff'};\n    bottom: 9px;\n    left: 4px;\n    height: 2px;\n    width: 12px;\n  }\n\n  &:before {\n    animation: ${secondLineAnimation} 0.15s ease-out forwards;\n    animation-delay: 180ms;\n    transform: rotate(90deg);\n  }\n`;\n","import { styled, keyframes } from 'goober';\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nexport interface LoaderTheme {\n  primary?: string;\n  secondary?: string;\n}\n\nexport const LoaderIcon = styled('div')<LoaderTheme>`\n  width: 12px;\n  height: 12px;\n  box-sizing: border-box;\n  border: 2px solid;\n  border-radius: 100%;\n  border-color: ${(p) => p.secondary || '#e0e0e0'};\n  border-right-color: ${(p) => p.primary || '#616161'};\n  animation: ${rotate} 1s linear infinite;\n`;\n","import { styled, keyframes } from 'goober';\n\nconst circleAnimation = keyframes`\nfrom {\n  transform: scale(0) rotate(45deg);\n\topacity: 0;\n}\nto {\n  transform: scale(1) rotate(45deg);\n\topacity: 1;\n}`;\n\nconst checkmarkAnimation = keyframes`\n0% {\n\theight: 0;\n\twidth: 0;\n\topacity: 0;\n}\n40% {\n  height: 0;\n\twidth: 6px;\n\topacity: 1;\n}\n100% {\n  opacity: 1;\n  height: 10px;\n}`;\n\nexport interface CheckmarkTheme {\n  primary?: string;\n  secondary?: string;\n}\n\nexport const CheckmarkIcon = styled('div')<CheckmarkTheme>`\n  width: 20px;\n  opacity: 0;\n  height: 20px;\n  border-radius: 10px;\n  background: ${(p) => p.primary || '#61d345'};\n  position: relative;\n  transform: rotate(45deg);\n\n  animation: ${circleAnimation} 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n  animation-delay: 100ms;\n  &:after {\n    content: '';\n    box-sizing: border-box;\n    animation: ${checkmarkAnimation} 0.2s ease-out forwards;\n    opacity: 0;\n    animation-delay: 200ms;\n    position: absolute;\n    border-right: 2px solid;\n    border-bottom: 2px solid;\n    border-color: ${(p) => p.secondary || '#fff'};\n    bottom: 6px;\n    left: 6px;\n    height: 10px;\n    width: 6px;\n  }\n`;\n","import { css, setup } from 'goober';\nimport * as React from 'react';\nimport {\n  resolveValue,\n  ToasterProps,\n  ToastPosition,\n  ToastWrapperProps,\n} from '../core/types';\nimport { useToaster } from '../core/use-toaster';\nimport { prefersReducedMotion } from '../core/utils';\nimport { ToastBar } from './toast-bar';\n\nsetup(React.createElement);\n\nconst ToastWrapper = ({\n  id,\n  className,\n  style,\n  onHeightUpdate,\n  children,\n}: ToastWrapperProps) => {\n  const ref = React.useCallback(\n    (el: HTMLElement | null) => {\n      if (el) {\n        const updateHeight = () => {\n          const height = el.getBoundingClientRect().height;\n          onHeightUpdate(id, height);\n        };\n        updateHeight();\n        new MutationObserver(updateHeight).observe(el, {\n          subtree: true,\n          childList: true,\n          characterData: true,\n        });\n      }\n    },\n    [id, onHeightUpdate]\n  );\n\n  return (\n    <div ref={ref} className={className} style={style}>\n      {children}\n    </div>\n  );\n};\n\nconst getPositionStyle = (\n  position: ToastPosition,\n  offset: number\n): React.CSSProperties => {\n  const top = position.includes('top');\n  const verticalStyle: React.CSSProperties = top ? { top: 0 } : { bottom: 0 };\n  const horizontalStyle: React.CSSProperties = position.includes('center')\n    ? {\n        justifyContent: 'center',\n      }\n    : position.includes('right')\n    ? {\n        justifyContent: 'flex-end',\n      }\n    : {};\n  return {\n    left: 0,\n    right: 0,\n    display: 'flex',\n    position: 'absolute',\n    transition: prefersReducedMotion()\n      ? undefined\n      : `all 230ms cubic-bezier(.21,1.02,.73,1)`,\n    transform: `translateY(${offset * (top ? 1 : -1)}px)`,\n    ...verticalStyle,\n    ...horizontalStyle,\n  };\n};\n\nconst activeClass = css`\n  z-index: 9999;\n  > * {\n    pointer-events: auto;\n  }\n`;\n\nconst DEFAULT_OFFSET = 16;\n\nexport const Toaster: React.FC<ToasterProps> = ({\n  reverseOrder,\n  position = 'top-center',\n  toastOptions,\n  gutter,\n  children,\n  containerStyle,\n  containerClassName,\n}) => {\n  const { toasts, handlers } = useToaster(toastOptions);\n\n  return (\n    <div\n      id=\"_rht_toaster\"\n      style={{\n        position: 'fixed',\n        zIndex: 9999,\n        top: DEFAULT_OFFSET,\n        left: DEFAULT_OFFSET,\n        right: DEFAULT_OFFSET,\n        bottom: DEFAULT_OFFSET,\n        pointerEvents: 'none',\n        ...containerStyle,\n      }}\n      className={containerClassName}\n      onMouseEnter={handlers.startPause}\n      onMouseLeave={handlers.endPause}\n    >\n      {toasts.map((t) => {\n        const toastPosition = t.position || position;\n        const offset = handlers.calculateOffset(t, {\n          reverseOrder,\n          gutter,\n          defaultPosition: position,\n        });\n        const positionStyle = getPositionStyle(toastPosition, offset);\n\n        return (\n          <ToastWrapper\n            id={t.id}\n            key={t.id}\n            onHeightUpdate={handlers.updateHeight}\n            className={t.visible ? activeClass : ''}\n            style={positionStyle}\n          >\n            {t.type === 'custom' ? (\n              resolveValue(t.message, t)\n            ) : children ? (\n              children(t)\n            ) : (\n              <ToastBar toast={t} position={toastPosition} />\n            )}\n          </ToastWrapper>\n        );\n      })}\n    </div>\n  );\n};\n","import { toast } from './core/toast';\n\nexport * from './headless';\n\nexport { ToastBar } from './components/toast-bar';\nexport { ToastIcon } from './components/toast-icon';\nexport { Toaster } from './components/toaster';\nexport { CheckmarkIcon } from './components/checkmark';\nexport { ErrorIcon } from './components/error';\nexport { LoaderIcon } from './components/loader';\n\nexport { toast };\nexport default toast;\n"],"names":["isFunction","valOrFunction","resolveValue","arg","genId","count","prefersReducedMotion","shouldReduceMotion","mediaQuery","useEffect","useState","useRef","TOAST_LIMIT","reducer","state","action","TOAST_LIMIT","t","toast","toastId","diff","listeners","memoryState","dispatch","listener","defaultTimeouts","useStore","toastOptions","setState","useState","initial","useRef","useEffect","index","mergedToasts","_a","_b","_c","createToast","message","type","opts","genId","createHandler","options","toast","dispatch","toastId","promise","msgs","id","p","successMessage","resolveValue","e","errorMessage","useEffect","useCallback","updateHeight","toastId","height","dispatch","startPause","toastTimeouts","REMOVE_DELAY","addToRemoveQueue","removeDelay","timeout","useToaster","toastOptions","toasts","pausedAt","useStore","useEffect","now","timeouts","t","durationLeft","toast","endPause","useCallback","calculateOffset","opts","reverseOrder","gutter","defaultPosition","relevantToasts","toastIndex","toastsBefore","i","acc","React","styled","keyframes","React","styled","keyframes","styled","keyframes","circleAnimation","firstLineAnimation","secondLineAnimation","ErrorIcon","p","styled","keyframes","rotate","LoaderIcon","p","styled","keyframes","circleAnimation","checkmarkAnimation","CheckmarkIcon","p","StatusWrapper","styled","IndicatorWrapper","enter","keyframes","AnimatedIconWrapper","ToastIcon","toast","icon","type","iconTheme","LoaderIcon","ErrorIcon","CheckmarkIcon","enterAnimation","factor","exitAnimation","fadeInAnimation","fadeOutAnimation","ToastBarBase","styled","Message","getAnimationStyle","position","visible","enter","exit","prefersReducedMotion","keyframes","ToastBar","toast","style","children","animationStyle","icon","ToastIcon","message","resolveValue","css","setup","React","setup","ToastWrapper","id","className","style","onHeightUpdate","children","ref","el","updateHeight","height","getPositionStyle","position","offset","top","verticalStyle","horizontalStyle","prefersReducedMotion","activeClass","css","DEFAULT_OFFSET","Toaster","reverseOrder","toastOptions","gutter","containerStyle","containerClassName","toasts","handlers","useToaster","t","toastPosition","positionStyle","resolveValue","ToastBar","src_default","toast"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11],"debugId":null}},
    {"offset": {"line": 5534, "column": 0}, "map": {"version":3,"file":"Function.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/effect/src/Function.ts"],"sourcesContent":["/**\n * @since 2.0.0\n */\nimport type { TypeLambda } from \"./HKT.js\"\n\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexport interface FunctionTypeLambda extends TypeLambda {\n  readonly type: (a: this[\"In\"]) => this[\"Target\"]\n}\n\n/**\n * Tests if a value is a `function`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isFunction } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isFunction(isFunction), true)\n * assert.deepStrictEqual(isFunction(\"function\"), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isFunction = (input: unknown): input is Function => typeof input === \"function\"\n\n/**\n * Creates a function that can be used in a data-last (aka `pipe`able) or\n * data-first style.\n *\n * The first parameter to `dual` is either the arity of the uncurried function\n * or a predicate that determines if the function is being used in a data-first\n * or data-last style.\n *\n * Using the arity is the most common use case, but there are some cases where\n * you may want to use a predicate. For example, if you have a function that\n * takes an optional argument, you can use a predicate to determine if the\n * function is being used in a data-first or data-last style.\n *\n * You can pass either the arity of the uncurried function or a predicate\n * which determines if the function is being used in a data-first or\n * data-last style.\n *\n * **Example** (Using arity to determine data-first or data-last style)\n *\n * ```ts\n * import { dual, pipe } from \"effect/Function\"\n *\n * const sum = dual<\n *   (that: number) => (self: number) => number,\n *   (self: number, that: number) => number\n * >(2, (self, that) => self + that)\n *\n * console.log(sum(2, 3)) // 5\n * console.log(pipe(2, sum(3))) // 5\n * ```\n *\n * **Example** (Using call signatures to define the overloads)\n *\n * ```ts\n * import { dual, pipe } from \"effect/Function\"\n *\n * const sum: {\n *   (that: number): (self: number) => number\n *   (self: number, that: number): number\n * } = dual(2, (self: number, that: number): number => self + that)\n *\n * console.log(sum(2, 3)) // 5\n * console.log(pipe(2, sum(3))) // 5\n * ```\n *\n * **Example** (Using a predicate to determine data-first or data-last style)\n *\n * ```ts\n * import { dual, pipe } from \"effect/Function\"\n *\n * const sum = dual<\n *   (that: number) => (self: number) => number,\n *   (self: number, that: number) => number\n * >(\n *   (args) => args.length === 2,\n *   (self, that) => self + that\n * )\n *\n * console.log(sum(2, 3)) // 5\n * console.log(pipe(2, sum(3))) // 5\n * ```\n *\n * @since 2.0.0\n */\nexport const dual: {\n  /**\n   * Creates a function that can be used in a data-last (aka `pipe`able) or\n   * data-first style.\n   *\n   * The first parameter to `dual` is either the arity of the uncurried function\n   * or a predicate that determines if the function is being used in a data-first\n   * or data-last style.\n   *\n   * Using the arity is the most common use case, but there are some cases where\n   * you may want to use a predicate. For example, if you have a function that\n   * takes an optional argument, you can use a predicate to determine if the\n   * function is being used in a data-first or data-last style.\n   *\n   * You can pass either the arity of the uncurried function or a predicate\n   * which determines if the function is being used in a data-first or\n   * data-last style.\n   *\n   * **Example** (Using arity to determine data-first or data-last style)\n   *\n   * ```ts\n   * import { dual, pipe } from \"effect/Function\"\n   *\n   * const sum = dual<\n   *   (that: number) => (self: number) => number,\n   *   (self: number, that: number) => number\n   * >(2, (self, that) => self + that)\n   *\n   * console.log(sum(2, 3)) // 5\n   * console.log(pipe(2, sum(3))) // 5\n   * ```\n   *\n   * **Example** (Using call signatures to define the overloads)\n   *\n   * ```ts\n   * import { dual, pipe } from \"effect/Function\"\n   *\n   * const sum: {\n   *   (that: number): (self: number) => number\n   *   (self: number, that: number): number\n   * } = dual(2, (self: number, that: number): number => self + that)\n   *\n   * console.log(sum(2, 3)) // 5\n   * console.log(pipe(2, sum(3))) // 5\n   * ```\n   *\n   * **Example** (Using a predicate to determine data-first or data-last style)\n   *\n   * ```ts\n   * import { dual, pipe } from \"effect/Function\"\n   *\n   * const sum = dual<\n   *   (that: number) => (self: number) => number,\n   *   (self: number, that: number) => number\n   * >(\n   *   (args) => args.length === 2,\n   *   (self, that) => self + that\n   * )\n   *\n   * console.log(sum(2, 3)) // 5\n   * console.log(pipe(2, sum(3))) // 5\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <DataLast extends (...args: Array<any>) => any, DataFirst extends (...args: Array<any>) => any>(arity: Parameters<DataFirst>[\"length\"], body: DataFirst): DataLast & DataFirst\n  /**\n   * Creates a function that can be used in a data-last (aka `pipe`able) or\n   * data-first style.\n   *\n   * The first parameter to `dual` is either the arity of the uncurried function\n   * or a predicate that determines if the function is being used in a data-first\n   * or data-last style.\n   *\n   * Using the arity is the most common use case, but there are some cases where\n   * you may want to use a predicate. For example, if you have a function that\n   * takes an optional argument, you can use a predicate to determine if the\n   * function is being used in a data-first or data-last style.\n   *\n   * You can pass either the arity of the uncurried function or a predicate\n   * which determines if the function is being used in a data-first or\n   * data-last style.\n   *\n   * **Example** (Using arity to determine data-first or data-last style)\n   *\n   * ```ts\n   * import { dual, pipe } from \"effect/Function\"\n   *\n   * const sum = dual<\n   *   (that: number) => (self: number) => number,\n   *   (self: number, that: number) => number\n   * >(2, (self, that) => self + that)\n   *\n   * console.log(sum(2, 3)) // 5\n   * console.log(pipe(2, sum(3))) // 5\n   * ```\n   *\n   * **Example** (Using call signatures to define the overloads)\n   *\n   * ```ts\n   * import { dual, pipe } from \"effect/Function\"\n   *\n   * const sum: {\n   *   (that: number): (self: number) => number\n   *   (self: number, that: number): number\n   * } = dual(2, (self: number, that: number): number => self + that)\n   *\n   * console.log(sum(2, 3)) // 5\n   * console.log(pipe(2, sum(3))) // 5\n   * ```\n   *\n   * **Example** (Using a predicate to determine data-first or data-last style)\n   *\n   * ```ts\n   * import { dual, pipe } from \"effect/Function\"\n   *\n   * const sum = dual<\n   *   (that: number) => (self: number) => number,\n   *   (self: number, that: number) => number\n   * >(\n   *   (args) => args.length === 2,\n   *   (self, that) => self + that\n   * )\n   *\n   * console.log(sum(2, 3)) // 5\n   * console.log(pipe(2, sum(3))) // 5\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <DataLast extends (...args: Array<any>) => any, DataFirst extends (...args: Array<any>) => any>(isDataFirst: (args: IArguments) => boolean, body: DataFirst): DataLast & DataFirst\n} = function(arity, body) {\n  if (typeof arity === \"function\") {\n    return function() {\n      if (arity(arguments)) {\n        // @ts-expect-error\n        return body.apply(this, arguments)\n      }\n      return ((self: any) => body(self, ...arguments)) as any\n    }\n  }\n\n  switch (arity) {\n    case 0:\n    case 1:\n      throw new RangeError(`Invalid arity ${arity}`)\n\n    case 2:\n      return function(a, b) {\n        if (arguments.length >= 2) {\n          return body(a, b)\n        }\n        return function(self: any) {\n          return body(self, a)\n        }\n      }\n\n    case 3:\n      return function(a, b, c) {\n        if (arguments.length >= 3) {\n          return body(a, b, c)\n        }\n        return function(self: any) {\n          return body(self, a, b)\n        }\n      }\n\n    case 4:\n      return function(a, b, c, d) {\n        if (arguments.length >= 4) {\n          return body(a, b, c, d)\n        }\n        return function(self: any) {\n          return body(self, a, b, c)\n        }\n      }\n\n    case 5:\n      return function(a, b, c, d, e) {\n        if (arguments.length >= 5) {\n          return body(a, b, c, d, e)\n        }\n        return function(self: any) {\n          return body(self, a, b, c, d)\n        }\n      }\n\n    default:\n      return function() {\n        if (arguments.length >= arity) {\n          // @ts-expect-error\n          return body.apply(this, arguments)\n        }\n        const args = arguments\n        return function(self: any) {\n          return body(self, ...args)\n        }\n      }\n  }\n}\n/**\n * Apply a function to given values.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { pipe, apply } from \"effect/Function\"\n * import { length } from \"effect/String\"\n *\n * assert.deepStrictEqual(pipe(length, apply(\"hello\")), 5)\n * ```\n *\n * @since 2.0.0\n */\nexport const apply = <A extends ReadonlyArray<unknown>>(...a: A) => <B>(self: (...a: A) => B): B => self(...a)\n\n/**\n * A lazy argument.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { LazyArg, constant } from \"effect/Function\"\n *\n * const constNull: LazyArg<null> = constant(null)\n * ```\n *\n * @since 2.0.0\n */\nexport interface LazyArg<A> {\n  (): A\n}\n\n/**\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { FunctionN } from \"effect/Function\"\n *\n * const sum: FunctionN<[number, number], number> = (a, b) => a + b\n * ```\n *\n * @since 2.0.0\n */\nexport interface FunctionN<A extends ReadonlyArray<unknown>, B> {\n  (...args: A): B\n}\n\n/**\n * The identity function, i.e. A function that returns its input argument.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { identity } from \"effect/Function\"\n *\n * assert.deepStrictEqual(identity(5), 5)\n * ```\n *\n * @since 2.0.0\n */\nexport const identity = <A>(a: A): A => a\n\n/**\n * A function that ensures that the type of an expression matches some type,\n * without changing the resulting type of that expression.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { satisfies } from \"effect/Function\"\n *\n * const test1 = satisfies<number>()(5 as const)\n *     //^? const test: 5\n *     // @ts-expect-error\n * const test2 = satisfies<string>()(5)\n *     //^? Argument of type 'number' is not assignable to parameter of type 'string'\n *\n * assert.deepStrictEqual(satisfies<number>()(5), 5)\n * ```\n *\n * @since 2.0.0\n */\nexport const satisfies = <A>() => <B extends A>(b: B) => b\n\n/**\n * Casts the result to the specified type.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { unsafeCoerce, identity } from \"effect/Function\"\n *\n * assert.deepStrictEqual(unsafeCoerce, identity)\n * ```\n *\n * @since 2.0.0\n */\nexport const unsafeCoerce: <A, B>(a: A) => B = identity as any\n\n/**\n * Creates a constant value that never changes.\n *\n * This is useful when you want to pass a value to a higher-order function (a function that takes another function as its argument)\n * and want that inner function to always use the same value, no matter how many times it is called.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { constant } from \"effect/Function\"\n *\n * const constNull = constant(null)\n *\n * assert.deepStrictEqual(constNull(), null)\n * assert.deepStrictEqual(constNull(), null)\n * ```\n *\n * @since 2.0.0\n */\nexport const constant = <A>(value: A): LazyArg<A> => () => value\n\n/**\n * A thunk that returns always `true`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { constTrue } from \"effect/Function\"\n *\n * assert.deepStrictEqual(constTrue(), true)\n * ```\n *\n * @since 2.0.0\n */\nexport const constTrue: LazyArg<boolean> = constant(true)\n\n/**\n * A thunk that returns always `false`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { constFalse } from \"effect/Function\"\n *\n * assert.deepStrictEqual(constFalse(), false)\n * ```\n *\n * @since 2.0.0\n */\nexport const constFalse: LazyArg<boolean> = constant(false)\n\n/**\n * A thunk that returns always `null`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { constNull } from \"effect/Function\"\n *\n * assert.deepStrictEqual(constNull(), null)\n * ```\n *\n * @since 2.0.0\n */\nexport const constNull: LazyArg<null> = constant(null)\n\n/**\n * A thunk that returns always `undefined`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { constUndefined } from \"effect/Function\"\n *\n * assert.deepStrictEqual(constUndefined(), undefined)\n * ```\n *\n * @since 2.0.0\n */\nexport const constUndefined: LazyArg<undefined> = constant(undefined)\n\n/**\n * A thunk that returns always `void`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { constVoid } from \"effect/Function\"\n *\n * assert.deepStrictEqual(constVoid(), undefined)\n * ```\n *\n * @since 2.0.0\n */\nexport const constVoid: LazyArg<void> = constUndefined\n\n/**\n * Reverses the order of arguments for a curried function.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { flip } from \"effect/Function\"\n *\n * const f = (a: number) => (b: string) => a - b.length\n *\n * assert.deepStrictEqual(flip(f)('aaa')(2), -1)\n * ```\n *\n * @since 2.0.0\n */\nexport const flip = <A extends Array<unknown>, B extends Array<unknown>, C>(\n  f: (...a: A) => (...b: B) => C\n): (...b: B) => (...a: A) => C =>\n(...b) =>\n(...a) => f(...a)(...b)\n\n/**\n * Composes two functions, `ab` and `bc` into a single function that takes in an argument `a` of type `A` and returns a result of type `C`.\n * The result is obtained by first applying the `ab` function to `a` and then applying the `bc` function to the result of `ab`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { compose } from \"effect/Function\"\n *\n * const increment = (n: number) => n + 1;\n * const square = (n: number) => n * n;\n *\n * assert.strictEqual(compose(increment, square)(2), 9);\n * ```\n *\n * @since 2.0.0\n */\nexport const compose: {\n  /**\n   * Composes two functions, `ab` and `bc` into a single function that takes in an argument `a` of type `A` and returns a result of type `C`.\n   * The result is obtained by first applying the `ab` function to `a` and then applying the `bc` function to the result of `ab`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { compose } from \"effect/Function\"\n   *\n   * const increment = (n: number) => n + 1;\n   * const square = (n: number) => n * n;\n   *\n   * assert.strictEqual(compose(increment, square)(2), 9);\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <B, C>(bc: (b: B) => C): <A>(self: (a: A) => B) => (a: A) => C\n  /**\n   * Composes two functions, `ab` and `bc` into a single function that takes in an argument `a` of type `A` and returns a result of type `C`.\n   * The result is obtained by first applying the `ab` function to `a` and then applying the `bc` function to the result of `ab`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { compose } from \"effect/Function\"\n   *\n   * const increment = (n: number) => n + 1;\n   * const square = (n: number) => n * n;\n   *\n   * assert.strictEqual(compose(increment, square)(2), 9);\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A, B, C>(self: (a: A) => B, bc: (b: B) => C): (a: A) => C\n} = dual(2, <A, B, C>(ab: (a: A) => B, bc: (b: B) => C): (a: A) => C => (a) => bc(ab(a)))\n\n/**\n * The `absurd` function is a stub for cases where a value of type `never` is encountered in your code,\n * meaning that it should be impossible for this code to be executed.\n *\n * This function is particularly useful when it's necessary to specify that certain cases are impossible.\n *\n * @since 2.0.0\n */\nexport const absurd = <A>(_: never): A => {\n  throw new Error(\"Called `absurd` function which should be uncallable\")\n}\n\n/**\n * Creates a   version of this function: instead of `n` arguments, it accepts a single tuple argument.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { tupled } from \"effect/Function\"\n *\n * const sumTupled = tupled((x: number, y: number): number => x + y)\n *\n * assert.deepStrictEqual(sumTupled([1, 2]), 3)\n * ```\n *\n * @since 2.0.0\n */\nexport const tupled = <A extends ReadonlyArray<unknown>, B>(f: (...a: A) => B): (a: A) => B => (a) => f(...a)\n\n/**\n * Inverse function of `tupled`\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { untupled } from \"effect/Function\"\n *\n * const getFirst = untupled(<A, B>(tuple: [A, B]): A => tuple[0])\n *\n * assert.deepStrictEqual(getFirst(1, 2), 1)\n * ```\n *\n * @since 2.0.0\n */\nexport const untupled = <A extends ReadonlyArray<unknown>, B>(f: (a: A) => B): (...a: A) => B => (...a) => f(a)\n\n/**\n * Pipes the value of an expression into a pipeline of functions.\n *\n * **Details**\n *\n * The `pipe` function is a utility that allows us to compose functions in a\n * readable and sequential manner. It takes the output of one function and\n * passes it as the input to the next function in the pipeline. This enables us\n * to build complex transformations by chaining multiple functions together.\n *\n * ```ts skip-type-checking\n * import { pipe } from \"effect\"\n *\n * const result = pipe(input, func1, func2, ..., funcN)\n * ```\n *\n * In this syntax, `input` is the initial value, and `func1`, `func2`, ...,\n * `funcN` are the functions to be applied in sequence. The result of each\n * function becomes the input for the next function, and the final result is\n * returned.\n *\n * Here's an illustration of how `pipe` works:\n *\n * ```\n * ┌───────┐    ┌───────┐    ┌───────┐    ┌───────┐    ┌───────┐    ┌────────┐\n * │ input │───►│ func1 │───►│ func2 │───►│  ...  │───►│ funcN │───►│ result │\n * └───────┘    └───────┘    └───────┘    └───────┘    └───────┘    └────────┘\n * ```\n *\n * It's important to note that functions passed to `pipe` must have a **single\n * argument** because they are only called with a single argument.\n *\n * **When to Use**\n *\n * This is useful in combination with data-last functions as a simulation of\n * methods:\n *\n * ```ts skip-type-checking\n * as.map(f).filter(g)\n * ```\n *\n * becomes:\n *\n * ```ts skip-type-checking\n * import { pipe, Array } from \"effect\"\n *\n * pipe(as, Array.map(f), Array.filter(g))\n * ```\n *\n * **Example** (Chaining Arithmetic Operations)\n *\n * ```ts\n * import { pipe } from \"effect\"\n *\n * // Define simple arithmetic operations\n * const increment = (x: number) => x + 1\n * const double = (x: number) => x * 2\n * const subtractTen = (x: number) => x - 10\n *\n * // Sequentially apply these operations using `pipe`\n * const result = pipe(5, increment, double, subtractTen)\n *\n * console.log(result)\n * // Output: 2\n * ```\n *\n * @since 2.0.0\n */\nexport function pipe<A>(a: A): A\nexport function pipe<A, B = never>(a: A, ab: (a: A) => B): B\nexport function pipe<A, B = never, C = never>(\n  a: A,\n  ab: (a: A) => B,\n  bc: (b: B) => C\n): C\nexport function pipe<A, B = never, C = never, D = never>(\n  a: A,\n  ab: (a: A) => B,\n  bc: (b: B) => C,\n  cd: (c: C) => D\n): D\nexport function pipe<A, B = never, C = never, D = never, E = never>(\n  a: A,\n  ab: (a: A) => B,\n  bc: (b: B) => C,\n  cd: (c: C) => D,\n  de: (d: D) => E\n): E\nexport function pipe<A, B = never, C = never, D = never, E = never, F = never>(\n  a: A,\n  ab: (a: A) => B,\n  bc: (b: B) => C,\n  cd: (c: C) => D,\n  de: (d: D) => E,\n  ef: (e: E) => F\n): F\nexport function pipe<\n  A,\n  B = never,\n  C = never,\n  D = never,\n  E = never,\n  F = never,\n  G = never\n>(\n  a: A,\n  ab: (a: A) => B,\n  bc: (b: B) => C,\n  cd: (c: C) => D,\n  de: (d: D) => E,\n  ef: (e: E) => F,\n  fg: (f: F) => G\n): G\nexport function pipe<\n  A,\n  B = never,\n  C = never,\n  D = never,\n  E = never,\n  F = never,\n  G = never,\n  H = never\n>(\n  a: A,\n  ab: (a: A) => B,\n  bc: (b: B) => C,\n  cd: (c: C) => D,\n  de: (d: D) => E,\n  ef: (e: E) => F,\n  fg: (f: F) => G,\n  gh: (g: G) => H\n): H\nexport function pipe<\n  A,\n  B = never,\n  C = never,\n  D = never,\n  E = never,\n  F = never,\n  G = never,\n  H = never,\n  I = never\n>(\n  a: A,\n  ab: (a: A) => B,\n  bc: (b: B) => C,\n  cd: (c: C) => D,\n  de: (d: D) => E,\n  ef: (e: E) => F,\n  fg: (f: F) => G,\n  gh: (g: G) => H,\n  hi: (h: H) => I\n): I\nexport function pipe<\n  A,\n  B = never,\n  C = never,\n  D = never,\n  E = never,\n  F = never,\n  G = never,\n  H = never,\n  I = never,\n  J = never\n>(\n  a: A,\n  ab: (a: A) => B,\n  bc: (b: B) => C,\n  cd: (c: C) => D,\n  de: (d: D) => E,\n  ef: (e: E) => F,\n  fg: (f: F) => G,\n  gh: (g: G) => H,\n  hi: (h: H) => I,\n  ij: (i: I) => J\n): J\nexport function pipe<\n  A,\n  B = never,\n  C = never,\n  D = never,\n  E = never,\n  F = never,\n  G = never,\n  H = never,\n  I = never,\n  J = never,\n  K = never\n>(\n  a: A,\n  ab: (a: A) => B,\n  bc: (b: B) => C,\n  cd: (c: C) => D,\n  de: (d: D) => E,\n  ef: (e: E) => F,\n  fg: (f: F) => G,\n  gh: (g: G) => H,\n  hi: (h: H) => I,\n  ij: (i: I) => J,\n  jk: (j: J) => K\n): K\nexport function pipe<\n  A,\n  B = never,\n  C = never,\n  D = never,\n  E = never,\n  F = never,\n  G = never,\n  H = never,\n  I = never,\n  J = never,\n  K = never,\n  L = never\n>(\n  a: A,\n  ab: (a: A) => B,\n  bc: (b: B) => C,\n  cd: (c: C) => D,\n  de: (d: D) => E,\n  ef: (e: E) => F,\n  fg: (f: F) => G,\n  gh: (g: G) => H,\n  hi: (h: H) => I,\n  ij: (i: I) => J,\n  jk: (j: J) => K,\n  kl: (k: K) => L\n): L\nexport function pipe<\n  A,\n  B = never,\n  C = never,\n  D = never,\n  E = never,\n  F = never,\n  G = never,\n  H = never,\n  I = never,\n  J = never,\n  K = never,\n  L = never,\n  M = never\n>(\n  a: A,\n  ab: (a: A) => B,\n  bc: (b: B) => C,\n  cd: (c: C) => D,\n  de: (d: D) => E,\n  ef: (e: E) => F,\n  fg: (f: F) => G,\n  gh: (g: G) => H,\n  hi: (h: H) => I,\n  ij: (i: I) => J,\n  jk: (j: J) => K,\n  kl: (k: K) => L,\n  lm: (l: L) => M\n): M\nexport function pipe<\n  A,\n  B = never,\n  C = never,\n  D = never,\n  E = never,\n  F = never,\n  G = never,\n  H = never,\n  I = never,\n  J = never,\n  K = never,\n  L = never,\n  M = never,\n  N = never\n>(\n  a: A,\n  ab: (a: A) => B,\n  bc: (b: B) => C,\n  cd: (c: C) => D,\n  de: (d: D) => E,\n  ef: (e: E) => F,\n  fg: (f: F) => G,\n  gh: (g: G) => H,\n  hi: (h: H) => I,\n  ij: (i: I) => J,\n  jk: (j: J) => K,\n  kl: (k: K) => L,\n  lm: (l: L) => M,\n  mn: (m: M) => N\n): N\nexport function pipe<\n  A,\n  B = never,\n  C = never,\n  D = never,\n  E = never,\n  F = never,\n  G = never,\n  H = never,\n  I = never,\n  J = never,\n  K = never,\n  L = never,\n  M = never,\n  N = never,\n  O = never\n>(\n  a: A,\n  ab: (a: A) => B,\n  bc: (b: B) => C,\n  cd: (c: C) => D,\n  de: (d: D) => E,\n  ef: (e: E) => F,\n  fg: (f: F) => G,\n  gh: (g: G) => H,\n  hi: (h: H) => I,\n  ij: (i: I) => J,\n  jk: (j: J) => K,\n  kl: (k: K) => L,\n  lm: (l: L) => M,\n  mn: (m: M) => N,\n  no: (n: N) => O\n): O\nexport function pipe<\n  A,\n  B = never,\n  C = never,\n  D = never,\n  E = never,\n  F = never,\n  G = never,\n  H = never,\n  I = never,\n  J = never,\n  K = never,\n  L = never,\n  M = never,\n  N = never,\n  O = never,\n  P = never\n>(\n  a: A,\n  ab: (a: A) => B,\n  bc: (b: B) => C,\n  cd: (c: C) => D,\n  de: (d: D) => E,\n  ef: (e: E) => F,\n  fg: (f: F) => G,\n  gh: (g: G) => H,\n  hi: (h: H) => I,\n  ij: (i: I) => J,\n  jk: (j: J) => K,\n  kl: (k: K) => L,\n  lm: (l: L) => M,\n  mn: (m: M) => N,\n  no: (n: N) => O,\n  op: (o: O) => P\n): P\nexport function pipe<\n  A,\n  B = never,\n  C = never,\n  D = never,\n  E = never,\n  F = never,\n  G = never,\n  H = never,\n  I = never,\n  J = never,\n  K = never,\n  L = never,\n  M = never,\n  N = never,\n  O = never,\n  P = never,\n  Q = never\n>(\n  a: A,\n  ab: (a: A) => B,\n  bc: (b: B) => C,\n  cd: (c: C) => D,\n  de: (d: D) => E,\n  ef: (e: E) => F,\n  fg: (f: F) => G,\n  gh: (g: G) => H,\n  hi: (h: H) => I,\n  ij: (i: I) => J,\n  jk: (j: J) => K,\n  kl: (k: K) => L,\n  lm: (l: L) => M,\n  mn: (m: M) => N,\n  no: (n: N) => O,\n  op: (o: O) => P,\n  pq: (p: P) => Q\n): Q\nexport function pipe<\n  A,\n  B = never,\n  C = never,\n  D = never,\n  E = never,\n  F = never,\n  G = never,\n  H = never,\n  I = never,\n  J = never,\n  K = never,\n  L = never,\n  M = never,\n  N = never,\n  O = never,\n  P = never,\n  Q = never,\n  R = never\n>(\n  a: A,\n  ab: (a: A) => B,\n  bc: (b: B) => C,\n  cd: (c: C) => D,\n  de: (d: D) => E,\n  ef: (e: E) => F,\n  fg: (f: F) => G,\n  gh: (g: G) => H,\n  hi: (h: H) => I,\n  ij: (i: I) => J,\n  jk: (j: J) => K,\n  kl: (k: K) => L,\n  lm: (l: L) => M,\n  mn: (m: M) => N,\n  no: (n: N) => O,\n  op: (o: O) => P,\n  pq: (p: P) => Q,\n  qr: (q: Q) => R\n): R\nexport function pipe<\n  A,\n  B = never,\n  C = never,\n  D = never,\n  E = never,\n  F = never,\n  G = never,\n  H = never,\n  I = never,\n  J = never,\n  K = never,\n  L = never,\n  M = never,\n  N = never,\n  O = never,\n  P = never,\n  Q = never,\n  R = never,\n  S = never\n>(\n  a: A,\n  ab: (a: A) => B,\n  bc: (b: B) => C,\n  cd: (c: C) => D,\n  de: (d: D) => E,\n  ef: (e: E) => F,\n  fg: (f: F) => G,\n  gh: (g: G) => H,\n  hi: (h: H) => I,\n  ij: (i: I) => J,\n  jk: (j: J) => K,\n  kl: (k: K) => L,\n  lm: (l: L) => M,\n  mn: (m: M) => N,\n  no: (n: N) => O,\n  op: (o: O) => P,\n  pq: (p: P) => Q,\n  qr: (q: Q) => R,\n  rs: (r: R) => S\n): S\nexport function pipe<\n  A,\n  B = never,\n  C = never,\n  D = never,\n  E = never,\n  F = never,\n  G = never,\n  H = never,\n  I = never,\n  J = never,\n  K = never,\n  L = never,\n  M = never,\n  N = never,\n  O = never,\n  P = never,\n  Q = never,\n  R = never,\n  S = never,\n  T = never\n>(\n  a: A,\n  ab: (a: A) => B,\n  bc: (b: B) => C,\n  cd: (c: C) => D,\n  de: (d: D) => E,\n  ef: (e: E) => F,\n  fg: (f: F) => G,\n  gh: (g: G) => H,\n  hi: (h: H) => I,\n  ij: (i: I) => J,\n  jk: (j: J) => K,\n  kl: (k: K) => L,\n  lm: (l: L) => M,\n  mn: (m: M) => N,\n  no: (n: N) => O,\n  op: (o: O) => P,\n  pq: (p: P) => Q,\n  qr: (q: Q) => R,\n  rs: (r: R) => S,\n  st: (s: S) => T\n): T\nexport function pipe(\n  a: unknown,\n  ab?: Function,\n  bc?: Function,\n  cd?: Function,\n  de?: Function,\n  ef?: Function,\n  fg?: Function,\n  gh?: Function,\n  hi?: Function\n): unknown {\n  switch (arguments.length) {\n    case 1:\n      return a\n    case 2:\n      return ab!(a)\n    case 3:\n      return bc!(ab!(a))\n    case 4:\n      return cd!(bc!(ab!(a)))\n    case 5:\n      return de!(cd!(bc!(ab!(a))))\n    case 6:\n      return ef!(de!(cd!(bc!(ab!(a)))))\n    case 7:\n      return fg!(ef!(de!(cd!(bc!(ab!(a))))))\n    case 8:\n      return gh!(fg!(ef!(de!(cd!(bc!(ab!(a)))))))\n    case 9:\n      return hi!(gh!(fg!(ef!(de!(cd!(bc!(ab!(a))))))))\n    default: {\n      let ret = arguments[0]\n      for (let i = 1; i < arguments.length; i++) {\n        ret = arguments[i](ret)\n      }\n      return ret\n    }\n  }\n}\n\n/**\n * Performs left-to-right function composition. The first argument may have any arity, the remaining arguments must be unary.\n *\n * See also [`pipe`](#pipe).\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { flow } from \"effect/Function\"\n *\n * const len = (s: string): number => s.length\n * const double = (n: number): number => n * 2\n *\n * const f = flow(len, double)\n *\n * assert.strictEqual(f('aaa'), 6)\n * ```\n *\n * @since 2.0.0\n */\nexport function flow<A extends ReadonlyArray<unknown>, B = never>(\n  ab: (...a: A) => B\n): (...a: A) => B\nexport function flow<A extends ReadonlyArray<unknown>, B = never, C = never>(\n  ab: (...a: A) => B,\n  bc: (b: B) => C\n): (...a: A) => C\nexport function flow<\n  A extends ReadonlyArray<unknown>,\n  B = never,\n  C = never,\n  D = never\n>(ab: (...a: A) => B, bc: (b: B) => C, cd: (c: C) => D): (...a: A) => D\nexport function flow<\n  A extends ReadonlyArray<unknown>,\n  B = never,\n  C = never,\n  D = never,\n  E = never\n>(\n  ab: (...a: A) => B,\n  bc: (b: B) => C,\n  cd: (c: C) => D,\n  de: (d: D) => E\n): (...a: A) => E\nexport function flow<\n  A extends ReadonlyArray<unknown>,\n  B = never,\n  C = never,\n  D = never,\n  E = never,\n  F = never\n>(\n  ab: (...a: A) => B,\n  bc: (b: B) => C,\n  cd: (c: C) => D,\n  de: (d: D) => E,\n  ef: (e: E) => F\n): (...a: A) => F\nexport function flow<\n  A extends ReadonlyArray<unknown>,\n  B = never,\n  C = never,\n  D = never,\n  E = never,\n  F = never,\n  G = never\n>(\n  ab: (...a: A) => B,\n  bc: (b: B) => C,\n  cd: (c: C) => D,\n  de: (d: D) => E,\n  ef: (e: E) => F,\n  fg: (f: F) => G\n): (...a: A) => G\nexport function flow<\n  A extends ReadonlyArray<unknown>,\n  B = never,\n  C = never,\n  D = never,\n  E = never,\n  F = never,\n  G = never,\n  H = never\n>(\n  ab: (...a: A) => B,\n  bc: (b: B) => C,\n  cd: (c: C) => D,\n  de: (d: D) => E,\n  ef: (e: E) => F,\n  fg: (f: F) => G,\n  gh: (g: G) => H\n): (...a: A) => H\nexport function flow<\n  A extends ReadonlyArray<unknown>,\n  B = never,\n  C = never,\n  D = never,\n  E = never,\n  F = never,\n  G = never,\n  H = never,\n  I = never\n>(\n  ab: (...a: A) => B,\n  bc: (b: B) => C,\n  cd: (c: C) => D,\n  de: (d: D) => E,\n  ef: (e: E) => F,\n  fg: (f: F) => G,\n  gh: (g: G) => H,\n  hi: (h: H) => I\n): (...a: A) => I\nexport function flow<\n  A extends ReadonlyArray<unknown>,\n  B = never,\n  C = never,\n  D = never,\n  E = never,\n  F = never,\n  G = never,\n  H = never,\n  I = never,\n  J = never\n>(\n  ab: (...a: A) => B,\n  bc: (b: B) => C,\n  cd: (c: C) => D,\n  de: (d: D) => E,\n  ef: (e: E) => F,\n  fg: (f: F) => G,\n  gh: (g: G) => H,\n  hi: (h: H) => I,\n  ij: (i: I) => J\n): (...a: A) => J\nexport function flow(\n  ab: Function,\n  bc?: Function,\n  cd?: Function,\n  de?: Function,\n  ef?: Function,\n  fg?: Function,\n  gh?: Function,\n  hi?: Function,\n  ij?: Function\n): unknown {\n  switch (arguments.length) {\n    case 1:\n      return ab\n    case 2:\n      return function(this: unknown) {\n        return bc!(ab.apply(this, arguments))\n      }\n    case 3:\n      return function(this: unknown) {\n        return cd!(bc!(ab.apply(this, arguments)))\n      }\n    case 4:\n      return function(this: unknown) {\n        return de!(cd!(bc!(ab.apply(this, arguments))))\n      }\n    case 5:\n      return function(this: unknown) {\n        return ef!(de!(cd!(bc!(ab.apply(this, arguments)))))\n      }\n    case 6:\n      return function(this: unknown) {\n        return fg!(ef!(de!(cd!(bc!(ab.apply(this, arguments))))))\n      }\n    case 7:\n      return function(this: unknown) {\n        return gh!(fg!(ef!(de!(cd!(bc!(ab.apply(this, arguments)))))))\n      }\n    case 8:\n      return function(this: unknown) {\n        return hi!(gh!(fg!(ef!(de!(cd!(bc!(ab.apply(this, arguments))))))))\n      }\n    case 9:\n      return function(this: unknown) {\n        return ij!(hi!(gh!(fg!(ef!(de!(cd!(bc!(ab.apply(this, arguments)))))))))\n      }\n  }\n  return\n}\n\n/**\n * Type hole simulation.\n *\n * @since 2.0.0\n */\nexport const hole: <T>() => T = unsafeCoerce(absurd)\n\n/**\n * The SK combinator, also known as the \"S-K combinator\" or \"S-combinator\", is a fundamental combinator in the\n * lambda calculus and the SKI combinator calculus.\n *\n * This function is useful for discarding the first argument passed to it and returning the second argument.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { SK } from \"effect/Function\";\n *\n * assert.deepStrictEqual(SK(0, \"hello\"), \"hello\")\n * ```\n *\n * @since 2.0.0\n */\nexport const SK = <A, B>(_: A, b: B): B => b\n"],"names":["isFunction","input","dual","arity","body","arguments","apply","self","RangeError","a","b","length","c","d","e","args","identity","satisfies","unsafeCoerce","constant","value","constTrue","constFalse","constNull","constUndefined","undefined","constVoid","flip","f","compose","ab","bc","absurd","_","Error","tupled","untupled","pipe","cd","de","ef","fg","gh","hi","ret","i","flow","ij","hole","SK"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5729, "column": 0}, "map": {"version":3,"file":"Equivalence.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/effect/src/Equivalence.ts"],"sourcesContent":["/**\n * This module provides an implementation of the `Equivalence` type class, which defines a binary relation\n * that is reflexive, symmetric, and transitive. In other words, it defines a notion of equivalence between values of a certain type.\n * These properties are also known in mathematics as an \"equivalence relation\".\n *\n * @since 2.0.0\n */\nimport { dual } from \"./Function.js\"\nimport type { TypeLambda } from \"./HKT.js\"\n\n/**\n * @category type class\n * @since 2.0.0\n */\nexport interface Equivalence<in A> {\n  (self: A, that: A): boolean\n}\n\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexport interface EquivalenceTypeLambda extends TypeLambda {\n  readonly type: Equivalence<this[\"Target\"]>\n}\n\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport const make = <A>(isEquivalent: (self: A, that: A) => boolean): Equivalence<A> => (self: A, that: A): boolean =>\n  self === that || isEquivalent(self, that)\n\nconst isStrictEquivalent = (x: unknown, y: unknown) => x === y\n\n/**\n * Return an `Equivalence` that uses strict equality (===) to compare values.\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const strict: <A>() => Equivalence<A> = () => isStrictEquivalent\n\n/**\n * @category instances\n * @since 2.0.0\n */\nexport const string: Equivalence<string> = strict()\n\n/**\n * @category instances\n * @since 2.0.0\n */\nexport const number: Equivalence<number> = strict()\n\n/**\n * @category instances\n * @since 2.0.0\n */\nexport const boolean: Equivalence<boolean> = strict()\n\n/**\n * @category instances\n * @since 2.0.0\n */\nexport const bigint: Equivalence<bigint> = strict()\n\n/**\n * @category instances\n * @since 2.0.0\n */\nexport const symbol: Equivalence<symbol> = strict()\n\n/**\n * @category combining\n * @since 2.0.0\n */\nexport const combine: {\n  /**\n   * @category combining\n   * @since 2.0.0\n   */\n  <A>(that: Equivalence<A>): (self: Equivalence<A>) => Equivalence<A>\n  /**\n   * @category combining\n   * @since 2.0.0\n   */\n  <A>(self: Equivalence<A>, that: Equivalence<A>): Equivalence<A>\n} = dual(2, <A>(self: Equivalence<A>, that: Equivalence<A>): Equivalence<A> => make((x, y) => self(x, y) && that(x, y)))\n\n/**\n * @category combining\n * @since 2.0.0\n */\nexport const combineMany: {\n  /**\n   * @category combining\n   * @since 2.0.0\n   */\n  <A>(collection: Iterable<Equivalence<A>>): (self: Equivalence<A>) => Equivalence<A>\n  /**\n   * @category combining\n   * @since 2.0.0\n   */\n  <A>(self: Equivalence<A>, collection: Iterable<Equivalence<A>>): Equivalence<A>\n} = dual(2, <A>(self: Equivalence<A>, collection: Iterable<Equivalence<A>>): Equivalence<A> =>\n  make((x, y) => {\n    if (!self(x, y)) {\n      return false\n    }\n    for (const equivalence of collection) {\n      if (!equivalence(x, y)) {\n        return false\n      }\n    }\n    return true\n  }))\n\nconst isAlwaysEquivalent: Equivalence<unknown> = (_x, _y) => true\n\n/**\n * @category combining\n * @since 2.0.0\n */\nexport const combineAll = <A>(collection: Iterable<Equivalence<A>>): Equivalence<A> =>\n  combineMany(isAlwaysEquivalent, collection)\n\n/**\n * @category mapping\n * @since 2.0.0\n */\nexport const mapInput: {\n  /**\n   * @category mapping\n   * @since 2.0.0\n   */\n  <B, A>(f: (b: B) => A): (self: Equivalence<A>) => Equivalence<B>\n  /**\n   * @category mapping\n   * @since 2.0.0\n   */\n  <A, B>(self: Equivalence<A>, f: (b: B) => A): Equivalence<B>\n} = dual(\n  2,\n  <A, B>(self: Equivalence<A>, f: (b: B) => A): Equivalence<B> => make((x, y) => self(f(x), f(y)))\n)\n\n/**\n * @category instances\n * @since 2.0.0\n */\nexport const Date: Equivalence<Date> = mapInput(number, (date) => date.getTime())\n\n/**\n * @category combining\n * @since 2.0.0\n */\nexport const product: {\n  <B>(that: Equivalence<B>): <A>(self: Equivalence<A>) => Equivalence<readonly [A, B]> // readonly because invariant\n  <A, B>(self: Equivalence<A>, that: Equivalence<B>): Equivalence<readonly [A, B]> // readonly because invariant\n} = dual(\n  2,\n  <A, B>(self: Equivalence<A>, that: Equivalence<B>): Equivalence<readonly [A, B]> =>\n    make(([xa, xb], [ya, yb]) => self(xa, ya) && that(xb, yb))\n)\n\n/**\n * @category combining\n * @since 2.0.0\n */\nexport const all = <A>(collection: Iterable<Equivalence<A>>): Equivalence<ReadonlyArray<A>> => {\n  return make((x, y) => {\n    const len = Math.min(x.length, y.length)\n\n    let collectionLength = 0\n    for (const equivalence of collection) {\n      if (collectionLength >= len) {\n        break\n      }\n      if (!equivalence(x[collectionLength], y[collectionLength])) {\n        return false\n      }\n      collectionLength++\n    }\n    return true\n  })\n}\n\n/**\n * @category combining\n * @since 2.0.0\n */\nexport const productMany = <A>(\n  self: Equivalence<A>,\n  collection: Iterable<Equivalence<A>>\n): Equivalence<readonly [A, ...Array<A>]> /* readonly because invariant */ => {\n  const equivalence = all(collection)\n  return make((x, y) => !self(x[0], y[0]) ? false : equivalence(x.slice(1), y.slice(1)))\n}\n\n/**\n * Similar to `Promise.all` but operates on `Equivalence`s.\n *\n * ```ts skip-type-checking\n * [Equivalence<A>, Equivalence<B>, ...] -> Equivalence<[A, B, ...]>\n * ```\n *\n * Given a tuple of `Equivalence`s returns a new `Equivalence` that compares values of a tuple\n * by applying each `Equivalence` to the corresponding element of the tuple.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport const tuple = <T extends ReadonlyArray<Equivalence<any>>>(\n  ...elements: T\n): Equivalence<Readonly<{ [I in keyof T]: [T[I]] extends [Equivalence<infer A>] ? A : never }>> => all(elements) as any\n\n/**\n * Creates a new `Equivalence` for an array of values based on a given `Equivalence` for the elements of the array.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport const array = <A>(item: Equivalence<A>): Equivalence<ReadonlyArray<A>> =>\n  make((self, that) => {\n    if (self.length !== that.length) {\n      return false\n    }\n\n    for (let i = 0; i < self.length; i++) {\n      const isEq = item(self[i], that[i])\n      if (!isEq) {\n        return false\n      }\n    }\n\n    return true\n  })\n\n/**\n * Given a struct of `Equivalence`s returns a new `Equivalence` that compares values of a struct\n * by applying each `Equivalence` to the corresponding property of the struct.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport const struct = <R extends Record<string, Equivalence<any>>>(\n  fields: R\n): Equivalence<{ readonly [K in keyof R]: [R[K]] extends [Equivalence<infer A>] ? A : never }> => {\n  const keys = Object.keys(fields)\n  return make((self, that) => {\n    for (const key of keys) {\n      if (!fields[key](self[key], that[key])) {\n        return false\n      }\n    }\n    return true\n  })\n}\n"],"names":["dual","make","isEquivalent","self","that","isStrictEquivalent","x","y","strict","string","number","boolean","bigint","symbol","combine","combineMany","collection","equivalence","isAlwaysEquivalent","_x","_y","combineAll","mapInput","f","Date","date","getTime","product","xa","xb","ya","yb","all","len","Math","min","length","collectionLength","productMany","slice","tuple","elements","array","item","i","isEq","struct","fields","keys","Object","key"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5832, "column": 0}, "map": {"version":3,"file":"doNotation.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/effect/src/internal/doNotation.ts"],"sourcesContent":["import { dual } from \"../Function.js\"\nimport type { Kind, TypeLambda } from \"../HKT.js\"\nimport type { NoInfer } from \"../Types.js\"\n\ntype Map<F extends TypeLambda> = {\n  <A, B>(f: (a: A) => B): <R, O, E>(self: Kind<F, R, O, E, A>) => Kind<F, R, O, E, B>\n  <R, O, E, A, B>(self: Kind<F, R, O, E, A>, f: (a: A) => B): Kind<F, R, O, E, B>\n}\n\ntype FlatMap<F extends TypeLambda> = {\n  <A, R2, O2, E2, B>(\n    f: (a: A) => Kind<F, R2, O2, E2, B>\n  ): <R1, O1, E1>(self: Kind<F, R1, O1, E1, A>) => Kind<F, R1 & R2, O1 | O2, E1 | E2, B>\n  <R1, O1, E1, A, R2, O2, E2, B>(\n    self: Kind<F, R1, O1, E1, A>,\n    f: (a: A) => Kind<F, R2, O2, E2, B>\n  ): Kind<F, R1 & R2, O1 | O2, E1 | E2, B>\n}\n\n/** @internal */\nexport const let_ = <F extends TypeLambda>(\n  map: Map<F>\n): {\n  <N extends string, A extends object, B>(\n    name: Exclude<N, keyof A>,\n    f: (a: NoInfer<A>) => B\n  ): <R, O, E>(\n    self: Kind<F, R, O, E, A>\n  ) => Kind<F, R, O, E, { [K in keyof A | N]: K extends keyof A ? A[K] : B }>\n  <R, O, E, A extends object, N extends string, B>(\n    self: Kind<F, R, O, E, A>,\n    name: Exclude<N, keyof A>,\n    f: (a: NoInfer<A>) => B\n  ): Kind<F, R, O, E, { [K in keyof A | N]: K extends keyof A ? A[K] : B }>\n} =>\n  dual(3, <R, O, E, A extends object, N extends string, B>(\n    self: Kind<F, R, O, E, A>,\n    name: Exclude<N, keyof A>,\n    f: (a: NoInfer<A>) => B\n  ): Kind<F, R, O, E, { [K in keyof A | N]: K extends keyof A ? A[K] : B }> =>\n    map(self, (a) => ({ ...a, [name]: f(a) }) as any))\n\n/** @internal */\nexport const bindTo = <F extends TypeLambda>(map: Map<F>): {\n  <N extends string>(\n    name: N\n  ): <R, O, E, A>(self: Kind<F, R, O, E, A>) => Kind<F, R, O, E, { [K in N]: A }>\n  <R, O, E, A, N extends string>(\n    self: Kind<F, R, O, E, A>,\n    name: N\n  ): Kind<F, R, O, E, { [K in N]: A }>\n} =>\n  dual(2, <R, O, E, A, N extends string>(\n    self: Kind<F, R, O, E, A>,\n    name: N\n  ): Kind<F, R, O, E, { [K in N]: A }> => map(self, (a) => ({ [name]: a } as { [K in N]: A })))\n\n/** @internal */\nexport const bind = <F extends TypeLambda>(map: Map<F>, flatMap: FlatMap<F>): {\n  <N extends string, A extends object, R2, O2, E2, B>(\n    name: Exclude<N, keyof A>,\n    f: (a: NoInfer<A>) => Kind<F, R2, O2, E2, B>\n  ): <R1, O1, E1>(\n    self: Kind<F, R1, O1, E1, A>\n  ) => Kind<F, R1 & R2, O1 | O2, E1 | E2, { [K in keyof A | N]: K extends keyof A ? A[K] : B }>\n  <R1, O1, E1, A extends object, N extends string, R2, O2, E2, B>(\n    self: Kind<F, R1, O1, E1, A>,\n    name: Exclude<N, keyof A>,\n    f: (a: NoInfer<A>) => Kind<F, R2, O2, E2, B>\n  ): Kind<F, R1 & R2, O1 | O2, E1 | E2, { [K in keyof A | N]: K extends keyof A ? A[K] : B }>\n} =>\n  dual(3, <R1, O1, E1, A, N extends string, R2, O2, E2, B>(\n    self: Kind<F, R1, O1, E1, A>,\n    name: Exclude<N, keyof A>,\n    f: (a: NoInfer<A>) => Kind<F, R2, O2, E2, B>\n  ): Kind<F, R1 & R2, O1 | O2, E1 | E2, { [K in keyof A | N]: K extends keyof A ? A[K] : B }> =>\n    flatMap(\n      self,\n      (a) => map(f(a), (b) => ({ ...a, [name]: b }) as { [K in keyof A | N]: K extends keyof A ? A[K] : B })\n    ))\n"],"names":["dual","let_","map","self","name","f","a","bindTo","bind","flatMap","b"],"mappings":";;;;;AAAA,SAASA,IAAI,QAAQ,gBAAgB;;AAoB9B,MAAMC,IAAI,IACfC,GAAW,yJAcXF,OAAAA,AAAI,EAAC,CAAC,EAAE,CACNG,IAAyB,EACzBC,IAAyB,EACzBC,CAAuB,GAEvBH,GAAG,CAACC,IAAI,GAAGG,CAAC,GAAA,CAAM;gBAAE,GAAGA,CAAC;gBAAE,CAACF,IAAI,CAAA,EAAGC,CAAC,CAACC,CAAC;YAAC,CAAE,CAAQ,CAAC,CAAC;AAG/C,MAAMC,MAAM,IAA0BL,GAAW,yJAStDF,OAAAA,AAAI,EAAC,CAAC,EAAE,CACNG,IAAyB,EACzBC,IAAO,GAC+BF,GAAG,CAACC,IAAI,GAAGG,CAAC,GAAA,CAAM;gBAAE,CAACF,IAAI,CAAA,EAAGE;YAAC,CAAsB,EAAC,CAAC;AAGxF,MAAME,IAAI,GAAGA,CAAuBN,GAAW,EAAEO,OAAmB,yJAazET,OAAAA,AAAI,EAAC,CAAC,EAAE,CACNG,IAA4B,EAC5BC,IAAyB,EACzBC,CAA4C,GAE5CI,OAAO,CACLN,IAAI,GACHG,CAAC,GAAKJ,GAAG,CAACG,CAAC,CAACC,CAAC,CAAC,GAAGI,CAAC,GAAA,CAAM;oBAAE,GAAGJ,CAAC;oBAAE,CAACF,IAAI,CAAA,EAAGM;gBAAC,CAAE,CAAyD,CAAC,CACvG,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5856, "column": 0}, "map": {"version":3,"file":"version.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/effect/src/internal/version.ts"],"sourcesContent":["let moduleVersion = \"3.16.8\"\n\nexport const getCurrentVersion = () => moduleVersion\n\nexport const setCurrentVersion = (version: string) => {\n  moduleVersion = version\n}\n"],"names":["moduleVersion","getCurrentVersion","setCurrentVersion","version"],"mappings":";;;;AAAA,IAAIA,aAAa,GAAG,QAAQ;AAErB,MAAMC,iBAAiB,GAAGA,CAAA,GAAMD,aAAa;AAE7C,MAAME,iBAAiB,IAAIC,OAAe,IAAI;IACnDH,aAAa,GAAGG,OAAO;AACzB,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5871, "column": 0}, "map": {"version":3,"file":"GlobalValue.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/effect/src/GlobalValue.ts"],"sourcesContent":["/**\n * The `GlobalValue` module ensures that a single instance of a value is created globally,\n * even when modules are imported multiple times (e.g., due to mixing CommonJS and ESM builds)\n * or during hot-reloading in development environments like Next.js or Remix.\n *\n * It achieves this by using a versioned global store, identified by a unique `Symbol` tied to\n * the current version of the `effect` library. The store holds values that are keyed by an identifier,\n * allowing the reuse of previously computed instances across imports or reloads.\n *\n * This pattern is particularly useful in scenarios where frequent reloading can cause services or\n * single-instance objects to be recreated unnecessarily, such as in development environments with hot-reloading.\n *\n * @since 2.0.0\n */\nimport * as version from \"./internal/version.js\"\n\nconst globalStoreId = `effect/GlobalValue/globalStoreId/${version.getCurrentVersion()}`\n\nlet globalStore: Map<unknown, any>\n\n/**\n * Retrieves or computes a global value associated with the given `id`. If the value for this `id`\n * has already been computed, it will be returned from the global store. If it does not exist yet,\n * the provided `compute` function will be executed to compute the value, store it, and then return it.\n *\n * This ensures that even in cases where the module is imported multiple times (e.g., in mixed environments\n * like CommonJS and ESM, or during hot-reloading in development), the value is computed only once and reused\n * thereafter.\n *\n * @example\n * ```ts\n * import { globalValue } from \"effect/GlobalValue\"\n *\n * // This cache will persist as long as the module is running,\n * // even if reloaded or imported elsewhere\n * const myCache = globalValue(\n *   Symbol.for(\"myCache\"),\n *   () => new WeakMap<object, number>()\n * )\n * ```\n *\n * @since 2.0.0\n */\nexport const globalValue = <A>(id: unknown, compute: () => A): A => {\n  if (!globalStore) {\n    // @ts-expect-error\n    globalThis[globalStoreId] ??= new Map()\n    // @ts-expect-error\n    globalStore = globalThis[globalStoreId] as Map<unknown, any>\n  }\n  if (!globalStore.has(id)) {\n    globalStore.set(id, compute())\n  }\n  return globalStore.get(id)!\n}\n"],"names":["version","globalStoreId","getCurrentVersion","globalStore","globalValue","id","compute","globalThis","Map","has","set","get"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAcA,OAAO,KAAKA,OAAO,MAAM,uBAAuB;;AAEhD,MAAMC,aAAa,GAAG,CAAA,iCAAA,mKAAoCD,OAAO,CAACE,YAAAA,AAAiB,EAAE,GAAE;AAEvF,IAAIC,WAA8B;AAyB3B,MAAMC,WAAW,GAAGA,CAAIC,EAAW,EAAEC,OAAgB,KAAO;IACjE,IAAI,CAACH,WAAW,EAAE;QAChB,mBAAA;QACAI,UAAU,CAACN,aAAa,CAAC,KAAK,IAAIO,GAAG,EAAE;QACvC,mBAAA;QACAL,WAAW,GAAGI,UAAU,CAACN,aAAa,CAAsB;IAC9D;IACA,IAAI,CAACE,WAAW,CAACM,GAAG,CAACJ,EAAE,CAAC,EAAE;QACxBF,WAAW,CAACO,GAAG,CAACL,EAAE,EAAEC,OAAO,EAAE,CAAC;IAChC;IACA,OAAOH,WAAW,CAACQ,GAAG,CAACN,EAAE,CAAE;AAC7B,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5909, "column": 0}, "map": {"version":3,"file":"Predicate.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/effect/src/Predicate.ts"],"sourcesContent":["/**\n * @since 2.0.0\n */\nimport { dual, isFunction as isFunction_ } from \"./Function.js\"\nimport type { TypeLambda } from \"./HKT.js\"\nimport type { TupleOf, TupleOfAtLeast } from \"./Types.js\"\n\n/**\n * @category models\n * @since 2.0.0\n */\nexport interface Predicate<in A> {\n  (a: A): boolean\n}\n\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexport interface PredicateTypeLambda extends TypeLambda {\n  readonly type: Predicate<this[\"Target\"]>\n}\n\n/**\n * @category models\n * @since 2.0.0\n */\nexport interface Refinement<in A, out B extends A> {\n  (a: A): a is B\n}\n\n/**\n * @since 3.6.0\n * @category type-level\n */\nexport declare namespace Predicate {\n  /**\n   * @since 3.6.0\n   * @category type-level\n   */\n  export type In<T extends Any> = [T] extends [Predicate<infer _A>] ? _A : never\n  /**\n   * @since 3.6.0\n   * @category type-level\n   */\n  export type Any = Predicate<never>\n}\n\n/**\n * @since 3.6.0\n * @category type-level\n */\nexport declare namespace Refinement {\n  /**\n   * @since 3.6.0\n   * @category type-level\n   */\n  export type In<T extends Any> = [T] extends [Refinement<infer _A, infer _>] ? _A : never\n  /**\n   * @since 3.6.0\n   * @category type-level\n   */\n  export type Out<T extends Any> = [T] extends [Refinement<infer _, infer _B>] ? _B : never\n  /**\n   * @since 3.6.0\n   * @category type-level\n   */\n  export type Any = Refinement<any, any>\n}\n\n/**\n * Given a `Predicate<A>` returns a `Predicate<B>`\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Predicate, Number } from \"effect\"\n *\n * const minLength3 = Predicate.mapInput(Number.greaterThan(2), (s: string) => s.length)\n *\n * assert.deepStrictEqual(minLength3(\"a\"), false)\n * assert.deepStrictEqual(minLength3(\"aa\"), false)\n * assert.deepStrictEqual(minLength3(\"aaa\"), true)\n * assert.deepStrictEqual(minLength3(\"aaaa\"), true)\n * ```\n *\n * @category combinators\n * @since 2.0.0\n */\nexport const mapInput: {\n  /**\n   * Given a `Predicate<A>` returns a `Predicate<B>`\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Predicate, Number } from \"effect\"\n   *\n   * const minLength3 = Predicate.mapInput(Number.greaterThan(2), (s: string) => s.length)\n   *\n   * assert.deepStrictEqual(minLength3(\"a\"), false)\n   * assert.deepStrictEqual(minLength3(\"aa\"), false)\n   * assert.deepStrictEqual(minLength3(\"aaa\"), true)\n   * assert.deepStrictEqual(minLength3(\"aaaa\"), true)\n   * ```\n   *\n   * @category combinators\n   * @since 2.0.0\n   */\n  <B, A>(f: (b: B) => A): (self: Predicate<A>) => Predicate<B>\n  /**\n   * Given a `Predicate<A>` returns a `Predicate<B>`\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Predicate, Number } from \"effect\"\n   *\n   * const minLength3 = Predicate.mapInput(Number.greaterThan(2), (s: string) => s.length)\n   *\n   * assert.deepStrictEqual(minLength3(\"a\"), false)\n   * assert.deepStrictEqual(minLength3(\"aa\"), false)\n   * assert.deepStrictEqual(minLength3(\"aaa\"), true)\n   * assert.deepStrictEqual(minLength3(\"aaaa\"), true)\n   * ```\n   *\n   * @category combinators\n   * @since 2.0.0\n   */\n  <A, B>(self: Predicate<A>, f: (b: B) => A): Predicate<B>\n} = dual(2, <A, B>(self: Predicate<A>, f: (b: B) => A): Predicate<B> => (b) => self(f(b)))\n\n/**\n * Determine if an `Array` is a tuple with exactly `N` elements, narrowing down the type to `TupleOf`.\n *\n * An `Array` is considered to be a `TupleOf` if its length is exactly `N`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isTupleOf } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isTupleOf([1, 2, 3], 3), true);\n * assert.deepStrictEqual(isTupleOf([1, 2, 3], 2), false);\n * assert.deepStrictEqual(isTupleOf([1, 2, 3], 4), false);\n *\n * const arr: number[] = [1, 2, 3];\n * if (isTupleOf(arr, 3)) {\n *   console.log(arr);\n *   // ^? [number, number, number]\n * }\n * ```\n *\n * @category guards\n * @since 3.3.0\n */\nexport const isTupleOf: {\n  /**\n   * Determine if an `Array` is a tuple with exactly `N` elements, narrowing down the type to `TupleOf`.\n   *\n   * An `Array` is considered to be a `TupleOf` if its length is exactly `N`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { isTupleOf } from \"effect/Predicate\"\n   *\n   * assert.deepStrictEqual(isTupleOf([1, 2, 3], 3), true);\n   * assert.deepStrictEqual(isTupleOf([1, 2, 3], 2), false);\n   * assert.deepStrictEqual(isTupleOf([1, 2, 3], 4), false);\n   *\n   * const arr: number[] = [1, 2, 3];\n   * if (isTupleOf(arr, 3)) {\n   *   console.log(arr);\n   *   // ^? [number, number, number]\n   * }\n   * ```\n   *\n   * @category guards\n   * @since 3.3.0\n   */\n  <N extends number>(n: N): <T>(self: ReadonlyArray<T>) => self is TupleOf<N, T>\n  /**\n   * Determine if an `Array` is a tuple with exactly `N` elements, narrowing down the type to `TupleOf`.\n   *\n   * An `Array` is considered to be a `TupleOf` if its length is exactly `N`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { isTupleOf } from \"effect/Predicate\"\n   *\n   * assert.deepStrictEqual(isTupleOf([1, 2, 3], 3), true);\n   * assert.deepStrictEqual(isTupleOf([1, 2, 3], 2), false);\n   * assert.deepStrictEqual(isTupleOf([1, 2, 3], 4), false);\n   *\n   * const arr: number[] = [1, 2, 3];\n   * if (isTupleOf(arr, 3)) {\n   *   console.log(arr);\n   *   // ^? [number, number, number]\n   * }\n   * ```\n   *\n   * @category guards\n   * @since 3.3.0\n   */\n  <T, N extends number>(self: ReadonlyArray<T>, n: N): self is TupleOf<N, T>\n} = dual(2, <T, N extends number>(self: ReadonlyArray<T>, n: N): self is TupleOf<N, T> => self.length === n)\n\n/**\n * Determine if an `Array` is a tuple with at least `N` elements, narrowing down the type to `TupleOfAtLeast`.\n *\n * An `Array` is considered to be a `TupleOfAtLeast` if its length is at least `N`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isTupleOfAtLeast } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isTupleOfAtLeast([1, 2, 3], 3), true);\n * assert.deepStrictEqual(isTupleOfAtLeast([1, 2, 3], 2), true);\n * assert.deepStrictEqual(isTupleOfAtLeast([1, 2, 3], 4), false);\n *\n * const arr: number[] = [1, 2, 3, 4];\n * if (isTupleOfAtLeast(arr, 3)) {\n *   console.log(arr);\n *   // ^? [number, number, number, ...number[]]\n * }\n * ```\n *\n * @category guards\n * @since 3.3.0\n */\nexport const isTupleOfAtLeast: {\n  /**\n   * Determine if an `Array` is a tuple with at least `N` elements, narrowing down the type to `TupleOfAtLeast`.\n   *\n   * An `Array` is considered to be a `TupleOfAtLeast` if its length is at least `N`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { isTupleOfAtLeast } from \"effect/Predicate\"\n   *\n   * assert.deepStrictEqual(isTupleOfAtLeast([1, 2, 3], 3), true);\n   * assert.deepStrictEqual(isTupleOfAtLeast([1, 2, 3], 2), true);\n   * assert.deepStrictEqual(isTupleOfAtLeast([1, 2, 3], 4), false);\n   *\n   * const arr: number[] = [1, 2, 3, 4];\n   * if (isTupleOfAtLeast(arr, 3)) {\n   *   console.log(arr);\n   *   // ^? [number, number, number, ...number[]]\n   * }\n   * ```\n   *\n   * @category guards\n   * @since 3.3.0\n   */\n  <N extends number>(n: N): <T>(self: ReadonlyArray<T>) => self is TupleOfAtLeast<N, T>\n  /**\n   * Determine if an `Array` is a tuple with at least `N` elements, narrowing down the type to `TupleOfAtLeast`.\n   *\n   * An `Array` is considered to be a `TupleOfAtLeast` if its length is at least `N`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { isTupleOfAtLeast } from \"effect/Predicate\"\n   *\n   * assert.deepStrictEqual(isTupleOfAtLeast([1, 2, 3], 3), true);\n   * assert.deepStrictEqual(isTupleOfAtLeast([1, 2, 3], 2), true);\n   * assert.deepStrictEqual(isTupleOfAtLeast([1, 2, 3], 4), false);\n   *\n   * const arr: number[] = [1, 2, 3, 4];\n   * if (isTupleOfAtLeast(arr, 3)) {\n   *   console.log(arr);\n   *   // ^? [number, number, number, ...number[]]\n   * }\n   * ```\n   *\n   * @category guards\n   * @since 3.3.0\n   */\n  <T, N extends number>(self: ReadonlyArray<T>, n: N): self is TupleOfAtLeast<N, T>\n} = dual(2, <T, N extends number>(self: ReadonlyArray<T>, n: N): self is TupleOfAtLeast<N, T> => self.length >= n)\n\n/**\n * Tests if a value is `truthy`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isTruthy } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isTruthy(1), true)\n * assert.deepStrictEqual(isTruthy(0), false)\n * assert.deepStrictEqual(isTruthy(\"\"), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isTruthy = (input: unknown) => !!input\n\n/**\n * Tests if a value is a `Set`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isSet } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isSet(new Set([1, 2])), true)\n * assert.deepStrictEqual(isSet(new Set()), true)\n * assert.deepStrictEqual(isSet({}), false)\n * assert.deepStrictEqual(isSet(null), false)\n * assert.deepStrictEqual(isSet(undefined), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isSet = (input: unknown): input is Set<unknown> => input instanceof Set\n\n/**\n * Tests if a value is a `Map`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isMap } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isMap(new Map()), true)\n * assert.deepStrictEqual(isMap({}), false)\n * assert.deepStrictEqual(isMap(null), false)\n * assert.deepStrictEqual(isMap(undefined), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isMap = (input: unknown): input is Map<unknown, unknown> => input instanceof Map\n\n/**\n * Tests if a value is a `string`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isString } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isString(\"a\"), true)\n *\n * assert.deepStrictEqual(isString(1), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isString = (input: unknown): input is string => typeof input === \"string\"\n\n/**\n * Tests if a value is a `number`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isNumber } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isNumber(2), true)\n *\n * assert.deepStrictEqual(isNumber(\"2\"), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isNumber = (input: unknown): input is number => typeof input === \"number\"\n\n/**\n * Tests if a value is a `boolean`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isBoolean } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isBoolean(true), true)\n *\n * assert.deepStrictEqual(isBoolean(\"true\"), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isBoolean = (input: unknown): input is boolean => typeof input === \"boolean\"\n\n/**\n * Tests if a value is a `bigint`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isBigInt } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isBigInt(1n), true)\n *\n * assert.deepStrictEqual(isBigInt(1), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isBigInt = (input: unknown): input is bigint => typeof input === \"bigint\"\n\n/**\n * Tests if a value is a `symbol`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isSymbol } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isSymbol(Symbol.for(\"a\")), true)\n *\n * assert.deepStrictEqual(isSymbol(\"a\"), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isSymbol = (input: unknown): input is symbol => typeof input === \"symbol\"\n\n// TODO: make public\n/** @internal */\nexport const isPropertyKey = (u: unknown): u is PropertyKey => isString(u) || isNumber(u) || isSymbol(u)\n\n/**\n * Tests if a value is a `function`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isFunction } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isFunction(isFunction), true)\n *\n * assert.deepStrictEqual(isFunction(\"function\"), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isFunction: (input: unknown) => input is Function = isFunction_\n\n/**\n * Tests if a value is `undefined`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isUndefined } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isUndefined(undefined), true)\n *\n * assert.deepStrictEqual(isUndefined(null), false)\n * assert.deepStrictEqual(isUndefined(\"undefined\"), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isUndefined = (input: unknown): input is undefined => input === undefined\n\n/**\n * Tests if a value is not `undefined`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isNotUndefined } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isNotUndefined(null), true)\n * assert.deepStrictEqual(isNotUndefined(\"undefined\"), true)\n *\n * assert.deepStrictEqual(isNotUndefined(undefined), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isNotUndefined = <A>(input: A): input is Exclude<A, undefined> => input !== undefined\n\n/**\n * Tests if a value is `null`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isNull } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isNull(null), true)\n *\n * assert.deepStrictEqual(isNull(undefined), false)\n * assert.deepStrictEqual(isNull(\"null\"), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isNull = (input: unknown): input is null => input === null\n\n/**\n * Tests if a value is not `null`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isNotNull } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isNotNull(undefined), true)\n * assert.deepStrictEqual(isNotNull(\"null\"), true)\n *\n * assert.deepStrictEqual(isNotNull(null), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isNotNull = <A>(input: A): input is Exclude<A, null> => input !== null\n\n/**\n * A guard that always fails.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isNever } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isNever(null), false)\n * assert.deepStrictEqual(isNever(undefined), false)\n * assert.deepStrictEqual(isNever({}), false)\n * assert.deepStrictEqual(isNever([]), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isNever: (input: unknown) => input is never = (_: unknown): _ is never => false\n\n/**\n * A guard that always succeeds.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isUnknown } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isUnknown(null), true)\n * assert.deepStrictEqual(isUnknown(undefined), true)\n *\n * assert.deepStrictEqual(isUnknown({}), true)\n * assert.deepStrictEqual(isUnknown([]), true)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isUnknown: (input: unknown) => input is unknown = (_): _ is unknown => true\n\n/** @internal */\nexport const isRecordOrArray = (input: unknown): input is { [x: PropertyKey]: unknown } =>\n  typeof input === \"object\" && input !== null\n\n/**\n * Tests if a value is an `object`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isObject } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isObject({}), true)\n * assert.deepStrictEqual(isObject([]), true)\n *\n * assert.deepStrictEqual(isObject(null), false)\n * assert.deepStrictEqual(isObject(undefined), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isObject = (input: unknown): input is object => isRecordOrArray(input) || isFunction(input)\n\n/**\n * Checks whether a value is an `object` containing a specified property key.\n *\n * @category guards\n * @since 2.0.0\n */\nexport const hasProperty: {\n  /**\n   * Checks whether a value is an `object` containing a specified property key.\n   *\n   * @category guards\n   * @since 2.0.0\n   */\n  <P extends PropertyKey>(property: P): (self: unknown) => self is { [K in P]: unknown }\n  /**\n   * Checks whether a value is an `object` containing a specified property key.\n   *\n   * @category guards\n   * @since 2.0.0\n   */\n  <P extends PropertyKey>(self: unknown, property: P): self is { [K in P]: unknown }\n} = dual(\n  2,\n  <P extends PropertyKey>(self: unknown, property: P): self is { [K in P]: unknown } =>\n    isObject(self) && (property in self)\n)\n\n/**\n * Tests if a value is an `object` with a property `_tag` that matches the given tag.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isTagged } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isTagged(1, \"a\"), false)\n * assert.deepStrictEqual(isTagged(null, \"a\"), false)\n * assert.deepStrictEqual(isTagged({}, \"a\"), false)\n * assert.deepStrictEqual(isTagged({ a: \"a\" }, \"a\"), false)\n * assert.deepStrictEqual(isTagged({ _tag: \"a\" }, \"a\"), true)\n * assert.deepStrictEqual(isTagged(\"a\")({ _tag: \"a\" }), true)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isTagged: {\n  /**\n   * Tests if a value is an `object` with a property `_tag` that matches the given tag.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { isTagged } from \"effect/Predicate\"\n   *\n   * assert.deepStrictEqual(isTagged(1, \"a\"), false)\n   * assert.deepStrictEqual(isTagged(null, \"a\"), false)\n   * assert.deepStrictEqual(isTagged({}, \"a\"), false)\n   * assert.deepStrictEqual(isTagged({ a: \"a\" }, \"a\"), false)\n   * assert.deepStrictEqual(isTagged({ _tag: \"a\" }, \"a\"), true)\n   * assert.deepStrictEqual(isTagged(\"a\")({ _tag: \"a\" }), true)\n   * ```\n   *\n   * @category guards\n   * @since 2.0.0\n   */\n  <K extends string>(tag: K): (self: unknown) => self is { _tag: K }\n  /**\n   * Tests if a value is an `object` with a property `_tag` that matches the given tag.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { isTagged } from \"effect/Predicate\"\n   *\n   * assert.deepStrictEqual(isTagged(1, \"a\"), false)\n   * assert.deepStrictEqual(isTagged(null, \"a\"), false)\n   * assert.deepStrictEqual(isTagged({}, \"a\"), false)\n   * assert.deepStrictEqual(isTagged({ a: \"a\" }, \"a\"), false)\n   * assert.deepStrictEqual(isTagged({ _tag: \"a\" }, \"a\"), true)\n   * assert.deepStrictEqual(isTagged(\"a\")({ _tag: \"a\" }), true)\n   * ```\n   *\n   * @category guards\n   * @since 2.0.0\n   */\n  <K extends string>(self: unknown, tag: K): self is { _tag: K }\n} = dual(\n  2,\n  <K extends string>(self: unknown, tag: K): self is { _tag: K } => hasProperty(self, \"_tag\") && self[\"_tag\"] === tag\n)\n\n/**\n * A guard that succeeds when the input is `null` or `undefined`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isNullable } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isNullable(null), true)\n * assert.deepStrictEqual(isNullable(undefined), true)\n *\n * assert.deepStrictEqual(isNullable({}), false)\n * assert.deepStrictEqual(isNullable([]), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isNullable = <A>(input: A): input is Extract<A, null | undefined> => input === null || input === undefined\n\n/**\n * A guard that succeeds when the input is not `null` or `undefined`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isNotNullable } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isNotNullable({}), true)\n * assert.deepStrictEqual(isNotNullable([]), true)\n *\n * assert.deepStrictEqual(isNotNullable(null), false)\n * assert.deepStrictEqual(isNotNullable(undefined), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isNotNullable = <A>(input: A): input is NonNullable<A> => input !== null && input !== undefined\n\n/**\n * A guard that succeeds when the input is an `Error`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isError } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isError(new Error()), true)\n *\n * assert.deepStrictEqual(isError(null), false)\n * assert.deepStrictEqual(isError({}), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isError = (input: unknown): input is Error => input instanceof Error\n\n/**\n * A guard that succeeds when the input is a `Uint8Array`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isUint8Array } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isUint8Array(new Uint8Array()), true)\n *\n * assert.deepStrictEqual(isUint8Array(null), false)\n * assert.deepStrictEqual(isUint8Array({}), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isUint8Array = (input: unknown): input is Uint8Array => input instanceof Uint8Array\n\n/**\n * A guard that succeeds when the input is a `Date`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isDate } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isDate(new Date()), true)\n *\n * assert.deepStrictEqual(isDate(null), false)\n * assert.deepStrictEqual(isDate({}), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isDate = (input: unknown): input is Date => input instanceof Date\n\n/**\n * A guard that succeeds when the input is an `Iterable`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isIterable } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isIterable([]), true)\n * assert.deepStrictEqual(isIterable(new Set()), true)\n *\n * assert.deepStrictEqual(isIterable(null), false)\n * assert.deepStrictEqual(isIterable({}), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isIterable = (input: unknown): input is Iterable<unknown> => hasProperty(input, Symbol.iterator)\n\n/**\n * A guard that succeeds when the input is a record.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isRecord } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isRecord({}), true)\n * assert.deepStrictEqual(isRecord({ a: 1 }), true)\n *\n * assert.deepStrictEqual(isRecord([]), false)\n * assert.deepStrictEqual(isRecord([1, 2, 3]), false)\n * assert.deepStrictEqual(isRecord(null), false)\n * assert.deepStrictEqual(isRecord(undefined), false)\n * assert.deepStrictEqual(isRecord(() => null), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isRecord = (input: unknown): input is { [x: string | symbol]: unknown } =>\n  isRecordOrArray(input) && !Array.isArray(input)\n\n/**\n * A guard that succeeds when the input is a readonly record.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isReadonlyRecord } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isReadonlyRecord({}), true)\n * assert.deepStrictEqual(isReadonlyRecord({ a: 1 }), true)\n *\n * assert.deepStrictEqual(isReadonlyRecord([]), false)\n * assert.deepStrictEqual(isReadonlyRecord([1, 2, 3]), false)\n * assert.deepStrictEqual(isReadonlyRecord(null), false)\n * assert.deepStrictEqual(isReadonlyRecord(undefined), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isReadonlyRecord: (\n  input: unknown\n) => input is { readonly [x: string | symbol]: unknown } = isRecord\n\n/**\n * A guard that succeeds when the input is a Promise.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isPromise } from \"effect/Predicate\"\n *\n * assert.deepStrictEqual(isPromise({}), false)\n * assert.deepStrictEqual(isPromise(Promise.resolve(\"hello\")), true)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isPromise = (\n  input: unknown\n): input is Promise<unknown> =>\n  hasProperty(input, \"then\") && \"catch\" in input && isFunction(input.then) && isFunction(input.catch)\n\n/**\n * @category guards\n * @since 2.0.0\n */\nexport const isPromiseLike = (\n  input: unknown\n): input is PromiseLike<unknown> => hasProperty(input, \"then\") && isFunction(input.then)\n\n/**\n * Tests if a value is a `RegExp`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Predicate } from \"effect\"\n *\n * assert.deepStrictEqual(Predicate.isRegExp(/a/), true)\n * assert.deepStrictEqual(Predicate.isRegExp(\"a\"), false)\n * ```\n *\n * @category guards\n * @since 3.9.0\n */\nexport const isRegExp = (input: unknown): input is RegExp => input instanceof RegExp\n\n/**\n * @since 2.0.0\n */\nexport const compose: {\n  /**\n   * @since 2.0.0\n   */\n  <A, B extends A, C extends B>(bc: Refinement<B, C>): (ab: Refinement<A, B>) => Refinement<A, C>\n  /**\n   * @since 2.0.0\n   */\n  <A, B extends A>(bc: Predicate<NoInfer<B>>): (ab: Refinement<A, B>) => Refinement<A, B>\n  /**\n   * @since 2.0.0\n   */\n  <A, B extends A, C extends B>(ab: Refinement<A, B>, bc: Refinement<B, C>): Refinement<A, C>\n  /**\n   * @since 2.0.0\n   */\n  <A, B extends A>(ab: Refinement<A, B>, bc: Predicate<NoInfer<B>>): Refinement<A, B>\n} = dual(\n  2,\n  <A, B extends A, C extends B>(ab: Refinement<A, B>, bc: Refinement<B, C>): Refinement<A, C> => (a): a is C =>\n    ab(a) && bc(a)\n)\n\n/**\n * @category combining\n * @since 2.0.0\n */\nexport const product =\n  <A, B>(self: Predicate<A>, that: Predicate<B>): Predicate<readonly [A, B]> /* readonly because contravariant */ =>\n  ([a, b]) => self(a) && that(b)\n\n/**\n * @category combining\n * @since 2.0.0\n */\nexport const all = <A>(\n  collection: Iterable<Predicate<A>>\n): Predicate<ReadonlyArray<A>> => {\n  return (as) => {\n    let collectionIndex = 0\n    for (const p of collection) {\n      if (collectionIndex >= as.length) {\n        break\n      }\n      if (p(as[collectionIndex]) === false) {\n        return false\n      }\n      collectionIndex++\n    }\n    return true\n  }\n}\n\n/**\n * @category combining\n * @since 2.0.0\n */\nexport const productMany = <A>(\n  self: Predicate<A>,\n  collection: Iterable<Predicate<A>>\n): Predicate<readonly [A, ...Array<A>]> /* readonly because contravariant */ => {\n  const rest = all(collection)\n  return ([head, ...tail]) => self(head) === false ? false : rest(tail)\n}\n\n/**\n * Similar to `Promise.all` but operates on `Predicate`s.\n *\n * ```ts skip-type-checking\n * [Refinement<A, B>, Refinement<C, D>, ...] -> Refinement<[A, C, ...], [B, D, ...]>\n * [Predicate<A>, Predicate<B>, ...] -> Predicate<[A, B, ...]>\n * [Refinement<A, B>, Predicate<C>, ...] -> Refinement<[A, C, ...], [B, C, ...]>\n * ```\n *\n * @since 2.0.0\n */\nexport const tuple: {\n  /**\n   * Similar to `Promise.all` but operates on `Predicate`s.\n   *\n   * ```ts skip-type-checking\n   * [Refinement<A, B>, Refinement<C, D>, ...] -> Refinement<[A, C, ...], [B, D, ...]>\n   * [Predicate<A>, Predicate<B>, ...] -> Predicate<[A, B, ...]>\n   * [Refinement<A, B>, Predicate<C>, ...] -> Refinement<[A, C, ...], [B, C, ...]>\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <T extends ReadonlyArray<Predicate.Any>>(...elements: T): [Extract<T[number], Refinement.Any>] extends [never] ? Predicate<{ readonly [I in keyof T]: Predicate.In<T[I]> }>\n    : Refinement<\n      { readonly [I in keyof T]: T[I] extends Refinement.Any ? Refinement.In<T[I]> : Predicate.In<T[I]> },\n      { readonly [I in keyof T]: T[I] extends Refinement.Any ? Refinement.Out<T[I]> : Predicate.In<T[I]> }\n    >\n} = (...elements: ReadonlyArray<Predicate.Any>) => all(elements) as any\n\n/**\n * ```ts skip-type-checking\n * { ab: Refinement<A, B>; cd: Refinement<C, D>, ... } -> Refinement<{ ab: A; cd: C; ... }, { ab: B; cd: D; ... }>\n * { a: Predicate<A, B>; b: Predicate<B>, ... } -> Predicate<{ a: A; b: B; ... }>\n * { ab: Refinement<A, B>; c: Predicate<C>, ... } -> Refinement<{ ab: A; c: C; ... }, { ab: B; c: С; ... }>\n * ```\n *\n * @since 2.0.0\n */\nexport const struct: {\n  /**\n   * ```ts skip-type-checking\n   * { ab: Refinement<A, B>; cd: Refinement<C, D>, ... } -> Refinement<{ ab: A; cd: C; ... }, { ab: B; cd: D; ... }>\n   * { a: Predicate<A, B>; b: Predicate<B>, ... } -> Predicate<{ a: A; b: B; ... }>\n   * { ab: Refinement<A, B>; c: Predicate<C>, ... } -> Refinement<{ ab: A; c: C; ... }, { ab: B; c: С; ... }>\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <R extends Record<string, Predicate.Any>>(fields: R): [Extract<R[keyof R], Refinement.Any>] extends [never] ?\n    Predicate<{ readonly [K in keyof R]: Predicate.In<R[K]> }> :\n    Refinement<\n      { readonly [K in keyof R]: R[K] extends Refinement.Any ? Refinement.In<R[K]> : Predicate.In<R[K]> },\n      { readonly [K in keyof R]: R[K] extends Refinement.Any ? Refinement.Out<R[K]> : Predicate.In<R[K]> }\n    >\n} = (<R extends Record<string, Predicate.Any>>(fields: R) => {\n  const keys = Object.keys(fields)\n  return (a: Record<string, unknown>) => {\n    for (const key of keys) {\n      if (!fields[key](a[key] as never)) {\n        return false\n      }\n    }\n    return true\n  }\n}) as any\n\n/**\n * Negates the result of a given predicate.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Predicate, Number } from \"effect\"\n *\n * const isPositive = Predicate.not(Number.lessThan(0))\n *\n * assert.deepStrictEqual(isPositive(-1), false)\n * assert.deepStrictEqual(isPositive(0), true)\n * assert.deepStrictEqual(isPositive(1), true)\n * ```\n *\n * @category combinators\n * @since 2.0.0\n */\nexport const not = <A>(self: Predicate<A>): Predicate<A> => (a) => !self(a)\n\n/**\n * Combines two predicates into a new predicate that returns `true` if at least one of the predicates returns `true`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Predicate, Number } from \"effect\"\n *\n * const nonZero = Predicate.or(Number.lessThan(0), Number.greaterThan(0))\n *\n * assert.deepStrictEqual(nonZero(-1), true)\n * assert.deepStrictEqual(nonZero(0), false)\n * assert.deepStrictEqual(nonZero(1), true)\n * ```\n *\n * @category combinators\n * @since 2.0.0\n */\nexport const or: {\n  /**\n   * Combines two predicates into a new predicate that returns `true` if at least one of the predicates returns `true`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Predicate, Number } from \"effect\"\n   *\n   * const nonZero = Predicate.or(Number.lessThan(0), Number.greaterThan(0))\n   *\n   * assert.deepStrictEqual(nonZero(-1), true)\n   * assert.deepStrictEqual(nonZero(0), false)\n   * assert.deepStrictEqual(nonZero(1), true)\n   * ```\n   *\n   * @category combinators\n   * @since 2.0.0\n   */\n  <A, C extends A>(that: Refinement<A, C>): <B extends A>(self: Refinement<A, B>) => Refinement<A, B | C>\n  /**\n   * Combines two predicates into a new predicate that returns `true` if at least one of the predicates returns `true`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Predicate, Number } from \"effect\"\n   *\n   * const nonZero = Predicate.or(Number.lessThan(0), Number.greaterThan(0))\n   *\n   * assert.deepStrictEqual(nonZero(-1), true)\n   * assert.deepStrictEqual(nonZero(0), false)\n   * assert.deepStrictEqual(nonZero(1), true)\n   * ```\n   *\n   * @category combinators\n   * @since 2.0.0\n   */\n  <A, B extends A, C extends A>(self: Refinement<A, B>, that: Refinement<A, C>): Refinement<A, B | C>\n  /**\n   * Combines two predicates into a new predicate that returns `true` if at least one of the predicates returns `true`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Predicate, Number } from \"effect\"\n   *\n   * const nonZero = Predicate.or(Number.lessThan(0), Number.greaterThan(0))\n   *\n   * assert.deepStrictEqual(nonZero(-1), true)\n   * assert.deepStrictEqual(nonZero(0), false)\n   * assert.deepStrictEqual(nonZero(1), true)\n   * ```\n   *\n   * @category combinators\n   * @since 2.0.0\n   */\n  <A>(that: Predicate<A>): (self: Predicate<A>) => Predicate<A>\n  /**\n   * Combines two predicates into a new predicate that returns `true` if at least one of the predicates returns `true`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Predicate, Number } from \"effect\"\n   *\n   * const nonZero = Predicate.or(Number.lessThan(0), Number.greaterThan(0))\n   *\n   * assert.deepStrictEqual(nonZero(-1), true)\n   * assert.deepStrictEqual(nonZero(0), false)\n   * assert.deepStrictEqual(nonZero(1), true)\n   * ```\n   *\n   * @category combinators\n   * @since 2.0.0\n   */\n  <A>(self: Predicate<A>, that: Predicate<A>): Predicate<A>\n} = dual(2, <A>(self: Predicate<A>, that: Predicate<A>): Predicate<A> => (a) => self(a) || that(a))\n\n/**\n * Combines two predicates into a new predicate that returns `true` if both of the predicates returns `true`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Predicate } from \"effect\"\n *\n * const minLength = (n: number) => (s: string) => s.length >= n\n * const maxLength = (n: number) => (s: string) => s.length <= n\n *\n * const length = (n: number) => Predicate.and(minLength(n), maxLength(n))\n *\n * assert.deepStrictEqual(length(2)(\"aa\"), true)\n * assert.deepStrictEqual(length(2)(\"a\"), false)\n * assert.deepStrictEqual(length(2)(\"aaa\"), false)\n * ```\n *\n * @category combinators\n * @since 2.0.0\n */\nexport const and: {\n  /**\n   * Combines two predicates into a new predicate that returns `true` if both of the predicates returns `true`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Predicate } from \"effect\"\n   *\n   * const minLength = (n: number) => (s: string) => s.length >= n\n   * const maxLength = (n: number) => (s: string) => s.length <= n\n   *\n   * const length = (n: number) => Predicate.and(minLength(n), maxLength(n))\n   *\n   * assert.deepStrictEqual(length(2)(\"aa\"), true)\n   * assert.deepStrictEqual(length(2)(\"a\"), false)\n   * assert.deepStrictEqual(length(2)(\"aaa\"), false)\n   * ```\n   *\n   * @category combinators\n   * @since 2.0.0\n   */\n  <A, C extends A>(that: Refinement<A, C>): <B extends A>(self: Refinement<A, B>) => Refinement<A, B & C>\n  /**\n   * Combines two predicates into a new predicate that returns `true` if both of the predicates returns `true`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Predicate } from \"effect\"\n   *\n   * const minLength = (n: number) => (s: string) => s.length >= n\n   * const maxLength = (n: number) => (s: string) => s.length <= n\n   *\n   * const length = (n: number) => Predicate.and(minLength(n), maxLength(n))\n   *\n   * assert.deepStrictEqual(length(2)(\"aa\"), true)\n   * assert.deepStrictEqual(length(2)(\"a\"), false)\n   * assert.deepStrictEqual(length(2)(\"aaa\"), false)\n   * ```\n   *\n   * @category combinators\n   * @since 2.0.0\n   */\n  <A, B extends A, C extends A>(self: Refinement<A, B>, that: Refinement<A, C>): Refinement<A, B & C>\n  /**\n   * Combines two predicates into a new predicate that returns `true` if both of the predicates returns `true`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Predicate } from \"effect\"\n   *\n   * const minLength = (n: number) => (s: string) => s.length >= n\n   * const maxLength = (n: number) => (s: string) => s.length <= n\n   *\n   * const length = (n: number) => Predicate.and(minLength(n), maxLength(n))\n   *\n   * assert.deepStrictEqual(length(2)(\"aa\"), true)\n   * assert.deepStrictEqual(length(2)(\"a\"), false)\n   * assert.deepStrictEqual(length(2)(\"aaa\"), false)\n   * ```\n   *\n   * @category combinators\n   * @since 2.0.0\n   */\n  <A>(that: Predicate<A>): (self: Predicate<A>) => Predicate<A>\n  /**\n   * Combines two predicates into a new predicate that returns `true` if both of the predicates returns `true`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Predicate } from \"effect\"\n   *\n   * const minLength = (n: number) => (s: string) => s.length >= n\n   * const maxLength = (n: number) => (s: string) => s.length <= n\n   *\n   * const length = (n: number) => Predicate.and(minLength(n), maxLength(n))\n   *\n   * assert.deepStrictEqual(length(2)(\"aa\"), true)\n   * assert.deepStrictEqual(length(2)(\"a\"), false)\n   * assert.deepStrictEqual(length(2)(\"aaa\"), false)\n   * ```\n   *\n   * @category combinators\n   * @since 2.0.0\n   */\n  <A>(self: Predicate<A>, that: Predicate<A>): Predicate<A>\n} = dual(2, <A>(self: Predicate<A>, that: Predicate<A>): Predicate<A> => (a) => self(a) && that(a))\n\n/**\n * @category combinators\n * @since 2.0.0\n */\nexport const xor: {\n  /**\n   * @category combinators\n   * @since 2.0.0\n   */\n  <A>(that: Predicate<A>): (self: Predicate<A>) => Predicate<A>\n  /**\n   * @category combinators\n   * @since 2.0.0\n   */\n  <A>(self: Predicate<A>, that: Predicate<A>): Predicate<A>\n} = dual(2, <A>(self: Predicate<A>, that: Predicate<A>): Predicate<A> => (a) => self(a) !== that(a))\n\n/**\n * @category combinators\n * @since 2.0.0\n */\nexport const eqv: {\n  /**\n   * @category combinators\n   * @since 2.0.0\n   */\n  <A>(that: Predicate<A>): (self: Predicate<A>) => Predicate<A>\n  /**\n   * @category combinators\n   * @since 2.0.0\n   */\n  <A>(self: Predicate<A>, that: Predicate<A>): Predicate<A>\n} = dual(2, <A>(self: Predicate<A>, that: Predicate<A>): Predicate<A> => (a) => self(a) === that(a))\n\n/**\n * Represents the logical implication combinator for predicates. In formal\n * logic, the implication operator `->` denotes that if the first proposition\n * (antecedent) is true, then the second proposition (consequent) must also be\n * true. In simpler terms, `p implies q` can be interpreted as \"if p then q\". If\n * the first predicate holds, then the second predicate must hold\n * for the given context.\n *\n * In practical terms within TypeScript, `p implies q` is equivalent to `!p || (p && q)`.\n *\n * Note that if the antecedent is `false`, the result is `true` by default\n * because the outcome of the consequent cannot be determined.\n *\n * This function is useful in situations where you need to enforce rules or\n * constraints that are contingent on certain conditions.\n * It proves especially helpful in defining property tests.\n *\n * The example below illustrates the transitive property of order using the\n * `implies` function. In simple terms, if `a <= b` and `b <= c`, then `a <= c`\n * must be true.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Predicate } from \"effect\"\n *\n * type Triple = {\n *   readonly a: number\n *   readonly b: number\n *   readonly c: number\n * }\n *\n * const transitivity = Predicate.implies(\n *   // antecedent\n *   (input: Triple) => input.a <= input.b && input.b <= input.c,\n *   // consequent\n *   (input: Triple) => input.a <= input.c\n * )\n *\n * assert.equal(transitivity({ a: 1, b: 2, c: 3 }), true)\n * // antecedent is `false`, so the result is `true`\n * assert.equal(transitivity({ a: 1, b: 0, c: 0 }), true)\n * ```\n *\n * @category combinators\n * @since 2.0.0\n */\nexport const implies: {\n  /**\n   * Represents the logical implication combinator for predicates. In formal\n   * logic, the implication operator `->` denotes that if the first proposition\n   * (antecedent) is true, then the second proposition (consequent) must also be\n   * true. In simpler terms, `p implies q` can be interpreted as \"if p then q\". If\n   * the first predicate holds, then the second predicate must hold\n   * for the given context.\n   *\n   * In practical terms within TypeScript, `p implies q` is equivalent to `!p || (p && q)`.\n   *\n   * Note that if the antecedent is `false`, the result is `true` by default\n   * because the outcome of the consequent cannot be determined.\n   *\n   * This function is useful in situations where you need to enforce rules or\n   * constraints that are contingent on certain conditions.\n   * It proves especially helpful in defining property tests.\n   *\n   * The example below illustrates the transitive property of order using the\n   * `implies` function. In simple terms, if `a <= b` and `b <= c`, then `a <= c`\n   * must be true.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Predicate } from \"effect\"\n   *\n   * type Triple = {\n   *   readonly a: number\n   *   readonly b: number\n   *   readonly c: number\n   * }\n   *\n   * const transitivity = Predicate.implies(\n   *   // antecedent\n   *   (input: Triple) => input.a <= input.b && input.b <= input.c,\n   *   // consequent\n   *   (input: Triple) => input.a <= input.c\n   * )\n   *\n   * assert.equal(transitivity({ a: 1, b: 2, c: 3 }), true)\n   * // antecedent is `false`, so the result is `true`\n   * assert.equal(transitivity({ a: 1, b: 0, c: 0 }), true)\n   * ```\n   *\n   * @category combinators\n   * @since 2.0.0\n   */\n  <A>(consequent: Predicate<A>): (antecedent: Predicate<A>) => Predicate<A>\n  /**\n   * Represents the logical implication combinator for predicates. In formal\n   * logic, the implication operator `->` denotes that if the first proposition\n   * (antecedent) is true, then the second proposition (consequent) must also be\n   * true. In simpler terms, `p implies q` can be interpreted as \"if p then q\". If\n   * the first predicate holds, then the second predicate must hold\n   * for the given context.\n   *\n   * In practical terms within TypeScript, `p implies q` is equivalent to `!p || (p && q)`.\n   *\n   * Note that if the antecedent is `false`, the result is `true` by default\n   * because the outcome of the consequent cannot be determined.\n   *\n   * This function is useful in situations where you need to enforce rules or\n   * constraints that are contingent on certain conditions.\n   * It proves especially helpful in defining property tests.\n   *\n   * The example below illustrates the transitive property of order using the\n   * `implies` function. In simple terms, if `a <= b` and `b <= c`, then `a <= c`\n   * must be true.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Predicate } from \"effect\"\n   *\n   * type Triple = {\n   *   readonly a: number\n   *   readonly b: number\n   *   readonly c: number\n   * }\n   *\n   * const transitivity = Predicate.implies(\n   *   // antecedent\n   *   (input: Triple) => input.a <= input.b && input.b <= input.c,\n   *   // consequent\n   *   (input: Triple) => input.a <= input.c\n   * )\n   *\n   * assert.equal(transitivity({ a: 1, b: 2, c: 3 }), true)\n   * // antecedent is `false`, so the result is `true`\n   * assert.equal(transitivity({ a: 1, b: 0, c: 0 }), true)\n   * ```\n   *\n   * @category combinators\n   * @since 2.0.0\n   */\n  <A>(antecedent: Predicate<A>, consequent: Predicate<A>): Predicate<A>\n} = dual(\n  2,\n  <A>(antecedent: Predicate<A>, consequent: Predicate<A>): Predicate<A> => (a) => antecedent(a) ? consequent(a) : true\n)\n\n/**\n * @category combinators\n * @since 2.0.0\n */\nexport const nor: {\n  /**\n   * @category combinators\n   * @since 2.0.0\n   */\n  <A>(that: Predicate<A>): (self: Predicate<A>) => Predicate<A>\n  /**\n   * @category combinators\n   * @since 2.0.0\n   */\n  <A>(self: Predicate<A>, that: Predicate<A>): Predicate<A>\n} = dual(\n  2,\n  <A>(self: Predicate<A>, that: Predicate<A>): Predicate<A> => (a) => !(self(a) || that(a))\n)\n\n/**\n * @category combinators\n * @since 2.0.0\n */\nexport const nand: {\n  /**\n   * @category combinators\n   * @since 2.0.0\n   */\n  <A>(that: Predicate<A>): (self: Predicate<A>) => Predicate<A>\n  /**\n   * @category combinators\n   * @since 2.0.0\n   */\n  <A>(self: Predicate<A>, that: Predicate<A>): Predicate<A>\n} = dual(\n  2,\n  <A>(self: Predicate<A>, that: Predicate<A>): Predicate<A> => (a) => !(self(a) && that(a))\n)\n\n/**\n * @category elements\n * @since 2.0.0\n */\nexport const every = <A>(collection: Iterable<Predicate<A>>): Predicate<A> => (a: A) => {\n  for (const p of collection) {\n    if (!p(a)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * @category elements\n * @since 2.0.0\n */\nexport const some = <A>(collection: Iterable<Predicate<A>>): Predicate<A> => (a) => {\n  for (const p of collection) {\n    if (p(a)) {\n      return true\n    }\n  }\n  return false\n}\n"],"names":["dual","isFunction","isFunction_","mapInput","self","f","b","isTupleOf","n","length","isTupleOfAtLeast","isTruthy","input","isSet","Set","isMap","Map","isString","isNumber","isBoolean","isBigInt","isSymbol","isPropertyKey","u","isUndefined","undefined","isNotUndefined","isNull","isNotNull","isNever","_","isUnknown","isRecordOrArray","isObject","hasProperty","property","isTagged","tag","isNullable","isNotNullable","isError","Error","isUint8Array","Uint8Array","isDate","Date","isIterable","Symbol","iterator","isRecord","Array","isArray","isReadonlyRecord","isPromise","then","catch","isPromiseLike","isRegExp","RegExp","compose","ab","bc","a","product","that","all","collection","as","collectionIndex","p","productMany","rest","head","tail","tuple","elements","struct","fields","keys","Object","key","not","or","and","xor","eqv","implies","antecedent","consequent","nor","nand","every","some"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6062, "column": 0}, "map": {"version":3,"file":"errors.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/effect/src/internal/errors.ts"],"sourcesContent":["/**\n * @since 2.0.0\n */\n\n/** @internal */\nexport const getBugErrorMessage = (message: string) =>\n  `BUG: ${message} - please report an issue at https://github.com/Effect-TS/effect/issues`\n"],"names":["getBugErrorMessage","message"],"mappings":"AAAA;;IAIA,cAAA;;;AACO,MAAMA,kBAAkB,IAAIC,OAAe,GAChD,CAAA,KAAA,EAAQA,OAAO,CAAA,uEAAA,CAAyE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6074, "column": 0}, "map": {"version":3,"file":"Utils.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/effect/src/Utils.ts"],"sourcesContent":["/**\n * @since 2.0.0\n */\nimport { identity } from \"./Function.js\"\nimport { globalValue } from \"./GlobalValue.js\"\nimport type { Kind, TypeLambda } from \"./HKT.js\"\nimport { getBugErrorMessage } from \"./internal/errors.js\"\nimport { isNullable, isObject } from \"./Predicate.js\"\nimport type * as Types from \"./Types.js\"\n\n/*\n * Copyright 2014 Thom Chiovoloni, released under the MIT license.\n *\n * A random number generator based on the basic implementation of the PCG algorithm,\n * as described here: http://www.pcg-random.org/\n *\n * Adapted for TypeScript from Thom's original code at https://github.com/thomcc/pcg-random\n *\n * forked from https://github.com/frptools\n *\n * @since 2.0.0\n */\n\n/**\n * @category symbols\n * @since 2.0.0\n */\nexport const GenKindTypeId: unique symbol = Symbol.for(\"effect/Gen/GenKind\")\n\n/**\n * @category symbols\n * @since 2.0.0\n */\nexport type GenKindTypeId = typeof GenKindTypeId\n\n/**\n * @category models\n * @since 2.0.0\n */\nexport interface GenKind<F extends TypeLambda, R, O, E, A> extends Variance<F, R, O, E> {\n  readonly value: Kind<F, R, O, E, A>\n\n  [Symbol.iterator](): IterableIterator<GenKind<F, R, O, E, A>, A>\n}\n\n/**\n * @category predicates\n * @since 3.0.6\n */\nexport const isGenKind = (u: unknown): u is GenKind<any, any, any, any, any> => isObject(u) && GenKindTypeId in u\n\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport class GenKindImpl<F extends TypeLambda, R, O, E, A> implements GenKind<F, R, O, E, A> {\n  constructor(\n    /**\n     * @since 2.0.0\n     */\n    readonly value: Kind<F, R, O, E, A>\n  ) {}\n\n  /**\n   * @since 2.0.0\n   */\n  get _F() {\n    return identity\n  }\n\n  /**\n   * @since 2.0.0\n   */\n  get _R() {\n    return (_: R) => _\n  }\n\n  /**\n   * @since 2.0.0\n   */\n  get _O() {\n    return (_: never): O => _\n  }\n\n  /**\n   * @since 2.0.0\n   */\n  get _E() {\n    return (_: never): E => _\n  }\n\n  /**\n   * @since 2.0.0\n   */\n  readonly [GenKindTypeId]: typeof GenKindTypeId = GenKindTypeId;\n\n  /**\n   * @since 2.0.0\n   */\n  [Symbol.iterator](): IterableIterator<GenKind<F, R, O, E, A>, A> {\n    return new SingleShotGen<GenKind<F, R, O, E, A>, A>(this as any)\n  }\n}\n\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport class SingleShotGen<T, A> implements IterableIterator<T, A> {\n  private called = false\n\n  constructor(readonly self: T) {}\n\n  /**\n   * @since 2.0.0\n   */\n  next(a: A): IteratorResult<T, A> {\n    return this.called ?\n      ({\n        value: a,\n        done: true\n      }) :\n      (this.called = true,\n        ({\n          value: this.self,\n          done: false\n        }))\n  }\n\n  /**\n   * @since 2.0.0\n   */\n  return(a: A): IteratorResult<T, A> {\n    return ({\n      value: a,\n      done: true\n    })\n  }\n\n  /**\n   * @since 2.0.0\n   */\n  throw(e: unknown): IteratorResult<T, A> {\n    throw e\n  }\n\n  /**\n   * @since 2.0.0\n   */\n  [Symbol.iterator](): IterableIterator<T, A> {\n    return new SingleShotGen<T, A>(this.self)\n  }\n}\n\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport const makeGenKind = <F extends TypeLambda, R, O, E, A>(\n  kind: Kind<F, R, O, E, A>\n): GenKind<F, R, O, E, A> => new GenKindImpl(kind)\n\n/**\n * @category models\n * @since 2.0.0\n */\nexport interface Variance<in out F extends TypeLambda, in R, out O, out E> {\n  readonly [GenKindTypeId]: GenKindTypeId\n  readonly _F: Types.Invariant<F>\n  readonly _R: Types.Contravariant<R>\n  readonly _O: Types.Covariant<O>\n  readonly _E: Types.Covariant<E>\n}\n\n/**\n * @category models\n * @since 2.0.0\n */\nexport interface Gen<F extends TypeLambda, Z> {\n  <Self, K extends Variance<F, any, any, any> | YieldWrap<Kind<F, any, any, any, any>>, A>(\n    ...args:\n      | [\n        self: Self,\n        body: (this: Self, resume: Z) => Generator<K, A, never>\n      ]\n      | [\n        body: (resume: Z) => Generator<K, A, never>\n      ]\n  ): Kind<\n    F,\n    [K] extends [Variance<F, infer R, any, any>] ? R\n      : [K] extends [YieldWrap<Kind<F, infer R, any, any, any>>] ? R\n      : never,\n    [K] extends [Variance<F, any, infer O, any>] ? O\n      : [K] extends [YieldWrap<Kind<F, any, infer O, any, any>>] ? O\n      : never,\n    [K] extends [Variance<F, any, any, infer E>] ? E\n      : [K] extends [YieldWrap<Kind<F, any, any, infer E, any>>] ? E\n      : never,\n    A\n  >\n}\n\n/**\n * @category models\n * @since 2.0.0\n */\nexport interface Adapter<Z extends TypeLambda> {\n  <_R, _O, _E, _A>(\n    self: Kind<Z, _R, _O, _E, _A>\n  ): GenKind<Z, _R, _O, _E, _A>\n  <A, _R, _O, _E, _A>(a: A, ab: (a: A) => Kind<Z, _R, _O, _E, _A>): GenKind<Z, _R, _O, _E, _A>\n  <A, B, _R, _O, _E, _A>(a: A, ab: (a: A) => B, bc: (b: B) => Kind<Z, _R, _O, _E, _A>): GenKind<Z, _R, _O, _E, _A>\n  <A, B, C, _R, _O, _E, _A>(\n    a: A,\n    ab: (a: A) => B,\n    bc: (b: B) => C,\n    cd: (c: C) => Kind<Z, _R, _O, _E, _A>\n  ): GenKind<Z, _R, _O, _E, _A>\n  <A, B, C, D, _R, _O, _E, _A>(\n    a: A,\n    ab: (a: A) => B,\n    bc: (b: B) => C,\n    cd: (c: C) => D,\n    de: (d: D) => Kind<Z, _R, _O, _E, _A>\n  ): GenKind<Z, _R, _O, _E, _A>\n  <A, B, C, D, E, _R, _O, _E, _A>(\n    a: A,\n    ab: (a: A) => B,\n    bc: (b: B) => C,\n    cd: (c: C) => D,\n    de: (d: D) => E,\n    ef: (e: E) => Kind<Z, _R, _O, _E, _A>\n  ): GenKind<Z, _R, _O, _E, _A>\n  <A, B, C, D, E, F, _R, _O, _E, _A>(\n    a: A,\n    ab: (a: A) => B,\n    bc: (b: B) => C,\n    cd: (c: C) => D,\n    de: (d: D) => E,\n    ef: (e: E) => F,\n    fg: (f: F) => Kind<Z, _R, _O, _E, _A>\n  ): GenKind<Z, _R, _O, _E, _A>\n  <A, B, C, D, E, F, G, _R, _O, _E, _A>(\n    a: A,\n    ab: (a: A) => B,\n    bc: (b: B) => C,\n    cd: (c: C) => D,\n    de: (d: D) => E,\n    ef: (e: E) => F,\n    fg: (f: F) => G,\n    gh: (g: F) => Kind<Z, _R, _O, _E, _A>\n  ): GenKind<Z, _R, _O, _E, _A>\n  <A, B, C, D, E, F, G, H, _R, _O, _E, _A>(\n    a: A,\n    ab: (a: A) => B,\n    bc: (b: B) => C,\n    cd: (c: C) => D,\n    de: (d: D) => E,\n    ef: (e: E) => F,\n    fg: (f: F) => G,\n    gh: (g: G) => H,\n    hi: (g: H) => Kind<Z, _R, _O, _E, _A>\n  ): GenKind<Z, _R, _O, _E, _A>\n  <A, B, C, D, E, F, G, H, I, _R, _O, _E, _A>(\n    a: A,\n    ab: (a: A) => B,\n    bc: (b: B) => C,\n    cd: (c: C) => D,\n    de: (d: D) => E,\n    ef: (e: E) => F,\n    fg: (f: F) => G,\n    gh: (g: G) => H,\n    hi: (h: H) => I,\n    ij: (i: I) => Kind<Z, _R, _O, _E, _A>\n  ): GenKind<Z, _R, _O, _E, _A>\n  <A, B, C, D, E, F, G, H, I, J, _R, _O, _E, _A>(\n    a: A,\n    ab: (a: A) => B,\n    bc: (b: B) => C,\n    cd: (c: C) => D,\n    de: (d: D) => E,\n    ef: (e: E) => F,\n    fg: (f: F) => G,\n    gh: (g: G) => H,\n    hi: (h: H) => I,\n    ij: (i: I) => J,\n    jk: (j: J) => Kind<Z, _R, _O, _E, _A>\n  ): GenKind<Z, _R, _O, _E, _A>\n  <A, B, C, D, E, F, G, H, I, J, K, _R, _O, _E, _A>(\n    a: A,\n    ab: (a: A) => B,\n    bc: (b: B) => C,\n    cd: (c: C) => D,\n    de: (d: D) => E,\n    ef: (e: E) => F,\n    fg: (f: F) => G,\n    gh: (g: G) => H,\n    hi: (h: H) => I,\n    ij: (i: I) => J,\n    jk: (j: J) => K,\n    kl: (k: K) => Kind<Z, _R, _O, _E, _A>\n  ): GenKind<Z, _R, _O, _E, _A>\n  <A, B, C, D, E, F, G, H, I, J, K, L, _R, _O, _E, _A>(\n    a: A,\n    ab: (a: A) => B,\n    bc: (b: B) => C,\n    cd: (c: C) => D,\n    de: (d: D) => E,\n    ef: (e: E) => F,\n    fg: (f: F) => G,\n    gh: (g: G) => H,\n    hi: (h: H) => I,\n    ij: (i: I) => J,\n    jk: (j: J) => K,\n    kl: (k: K) => L,\n    lm: (l: L) => Kind<Z, _R, _O, _E, _A>\n  ): GenKind<Z, _R, _O, _E, _A>\n  <A, B, C, D, E, F, G, H, I, J, K, L, M, _R, _O, _E, _A>(\n    a: A,\n    ab: (a: A) => B,\n    bc: (b: B) => C,\n    cd: (c: C) => D,\n    de: (d: D) => E,\n    ef: (e: E) => F,\n    fg: (f: F) => G,\n    gh: (g: G) => H,\n    hi: (h: H) => I,\n    ij: (i: I) => J,\n    jk: (j: J) => K,\n    kl: (k: K) => L,\n    lm: (l: L) => M,\n    mn: (m: M) => Kind<Z, _R, _O, _E, _A>\n  ): GenKind<Z, _R, _O, _E, _A>\n  <A, B, C, D, E, F, G, H, I, J, K, L, M, N, _R, _O, _E, _A>(\n    a: A,\n    ab: (a: A) => B,\n    bc: (b: B) => C,\n    cd: (c: C) => D,\n    de: (d: D) => E,\n    ef: (e: E) => F,\n    fg: (f: F) => G,\n    gh: (g: G) => H,\n    hi: (h: H) => I,\n    ij: (i: I) => J,\n    jk: (j: J) => K,\n    kl: (k: K) => L,\n    lm: (l: L) => M,\n    mn: (m: M) => N,\n    no: (n: N) => Kind<Z, _R, _O, _E, _A>\n  ): GenKind<Z, _R, _O, _E, _A>\n  <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, _R, _O, _E, _A>(\n    a: A,\n    ab: (a: A) => B,\n    bc: (b: B) => C,\n    cd: (c: C) => D,\n    de: (d: D) => E,\n    ef: (e: E) => F,\n    fg: (f: F) => G,\n    gh: (g: G) => H,\n    hi: (h: H) => I,\n    ij: (i: I) => J,\n    jk: (j: J) => K,\n    kl: (k: K) => L,\n    lm: (l: L) => M,\n    mn: (m: M) => N,\n    no: (n: N) => O,\n    op: (o: O) => Kind<Z, _R, _O, _E, _A>\n  ): GenKind<Z, _R, _O, _E, _A>\n  <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, _R, _O, _E, _A>(\n    a: A,\n    ab: (a: A) => B,\n    bc: (b: B) => C,\n    cd: (c: C) => D,\n    de: (d: D) => E,\n    ef: (e: E) => F,\n    fg: (f: F) => G,\n    gh: (g: G) => H,\n    hi: (h: H) => I,\n    ij: (i: I) => J,\n    jk: (j: J) => K,\n    kl: (k: K) => L,\n    lm: (l: L) => M,\n    mn: (m: M) => N,\n    no: (n: N) => O,\n    op: (o: O) => P,\n    pq: (p: P) => Kind<Z, _R, _O, _E, _A>\n  ): GenKind<Z, _R, _O, _E, _A>\n  <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, _R, _O, _E, _A>(\n    a: A,\n    ab: (a: A) => B,\n    bc: (b: B) => C,\n    cd: (c: C) => D,\n    de: (d: D) => E,\n    ef: (e: E) => F,\n    fg: (f: F) => G,\n    gh: (g: G) => H,\n    hi: (h: H) => I,\n    ij: (i: I) => J,\n    jk: (j: J) => K,\n    kl: (k: K) => L,\n    lm: (l: L) => M,\n    mn: (m: M) => N,\n    no: (n: N) => O,\n    op: (o: O) => P,\n    pq: (p: P) => Q,\n    qr: (q: Q) => Kind<Z, _R, _O, _E, _A>\n  ): GenKind<Z, _R, _O, _E, _A>\n  <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, _R, _O, _E, _A>(\n    a: A,\n    ab: (a: A) => B,\n    bc: (b: B) => C,\n    cd: (c: C) => D,\n    de: (d: D) => E,\n    ef: (e: E) => F,\n    fg: (f: F) => G,\n    gh: (g: G) => H,\n    hi: (h: H) => I,\n    ij: (i: I) => J,\n    jk: (j: J) => K,\n    kl: (k: K) => L,\n    lm: (l: L) => M,\n    mn: (m: M) => N,\n    no: (n: N) => O,\n    op: (o: O) => P,\n    pq: (p: P) => Q,\n    qr: (q: Q) => R,\n    rs: (r: R) => Kind<Z, _R, _O, _E, _A>\n  ): GenKind<Z, _R, _O, _E, _A>\n  <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, _R, _O, _E, _A>(\n    a: A,\n    ab: (a: A) => B,\n    bc: (b: B) => C,\n    cd: (c: C) => D,\n    de: (d: D) => E,\n    ef: (e: E) => F,\n    fg: (f: F) => G,\n    gh: (g: G) => H,\n    hi: (h: H) => I,\n    ij: (i: I) => J,\n    jk: (j: J) => K,\n    kl: (k: K) => L,\n    lm: (l: L) => M,\n    mn: (m: M) => N,\n    no: (n: N) => O,\n    op: (o: O) => P,\n    pq: (p: P) => Q,\n    qr: (q: Q) => R,\n    rs: (r: R) => S,\n    st: (s: S) => Kind<Z, _R, _O, _E, _A>\n  ): GenKind<Z, _R, _O, _E, _A>\n  <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, _R, _O, _E, _A>(\n    a: A,\n    ab: (a: A) => B,\n    bc: (b: B) => C,\n    cd: (c: C) => D,\n    de: (d: D) => E,\n    ef: (e: E) => F,\n    fg: (f: F) => G,\n    gh: (g: G) => H,\n    hi: (h: H) => I,\n    ij: (i: I) => J,\n    jk: (j: J) => K,\n    kl: (k: K) => L,\n    lm: (l: L) => M,\n    mn: (m: M) => N,\n    no: (n: N) => O,\n    op: (o: O) => P,\n    pq: (p: P) => Q,\n    qr: (q: Q) => R,\n    rs: (r: R) => S,\n    st: (s: S) => T,\n    tu: (s: T) => Kind<Z, _R, _O, _E, _A>\n  ): GenKind<Z, _R, _O, _E, _A>\n}\n\n/**\n * @category adapters\n * @since 2.0.0\n */\nexport const adapter: <F extends TypeLambda>() => Adapter<F> = () => (function() {\n  let x = arguments[0]\n  for (let i = 1; i < arguments.length; i++) {\n    x = arguments[i](x)\n  }\n  return new GenKindImpl(x) as any\n})\n\nconst defaultIncHi = 0x14057b7e\nconst defaultIncLo = 0xf767814f\nconst MUL_HI = 0x5851f42d >>> 0\nconst MUL_LO = 0x4c957f2d >>> 0\nconst BIT_53 = 9007199254740992.0\nconst BIT_27 = 134217728.0\n\n/**\n * @category model\n * @since 2.0.0\n */\nexport type PCGRandomState = [number, number, number, number]\n\n/**\n * @category model\n * @since 2.0.0\n */\nexport type OptionalNumber = number | null | undefined\n\n/**\n * PCG is a family of simple fast space-efficient statistically good algorithms\n * for random number generation. Unlike many general-purpose RNGs, they are also\n * hard to predict.\n *\n * @category model\n * @since 2.0.0\n */\nexport class PCGRandom {\n  private _state!: Int32Array\n\n  /**\n   * Creates an instance of PCGRandom.\n   *\n   * - `seed` - The low 32 bits of the seed (0 is used for high 32 bits).\n   *\n   * @memberOf PCGRandom\n   */\n  constructor(seed?: OptionalNumber)\n  /**\n   * Creates an instance of PCGRandom.\n   *\n   * - `seedHi` - The high 32 bits of the seed.\n   * - `seedLo` - The low 32 bits of the seed.\n   * - `inc` - The low 32 bits of the incrementer (0 is used for high 32 bits).\n   *\n   * @memberOf PCGRandom\n   */\n  constructor(seedHi: OptionalNumber, seedLo: OptionalNumber, inc?: OptionalNumber)\n  /**\n   * Creates an instance of PCGRandom.\n   *\n   * - `seedHi` - The high 32 bits of the seed.\n   * - `seedLo` - The low 32 bits of the seed.\n   * - `incHi` - The high 32 bits of the incrementer.\n   * - `incLo` - The low 32 bits of the incrementer.\n   *\n   * @memberOf PCGRandom\n   */\n  constructor(\n    seedHi: OptionalNumber,\n    seedLo: OptionalNumber,\n    incHi: OptionalNumber,\n    incLo: OptionalNumber\n  )\n  constructor(\n    seedHi?: OptionalNumber,\n    seedLo?: OptionalNumber,\n    incHi?: OptionalNumber,\n    incLo?: OptionalNumber\n  ) {\n    if (isNullable(seedLo) && isNullable(seedHi)) {\n      seedLo = (Math.random() * 0xffffffff) >>> 0\n      seedHi = 0\n    } else if (isNullable(seedLo)) {\n      seedLo = seedHi\n      seedHi = 0\n    }\n    if (isNullable(incLo) && isNullable(incHi)) {\n      incLo = this._state ? this._state[3] : defaultIncLo\n      incHi = this._state ? this._state[2] : defaultIncHi\n    } else if (isNullable(incLo)) {\n      incLo = <number> incHi\n      incHi = 0\n    }\n\n    this._state = new Int32Array([0, 0, (<number> incHi) >>> 0, ((incLo || 0) | 1) >>> 0])\n    this._next()\n    add64(\n      this._state,\n      this._state[0]!,\n      this._state[1]!,\n      (<number> seedHi) >>> 0,\n      (<number> seedLo) >>> 0\n    )\n    this._next()\n    return this\n  }\n\n  /**\n   * Returns a copy of the internal state of this random number generator as a\n   * JavaScript Array.\n   *\n   * @category getters\n   * @since 2.0.0\n   */\n  getState(): PCGRandomState {\n    return [this._state[0]!, this._state[1]!, this._state[2]!, this._state[3]!]\n  }\n\n  /**\n   * Restore state previously retrieved using `getState()`.\n   *\n   * @since 2.0.0\n   */\n  setState(state: PCGRandomState) {\n    this._state[0] = state[0]\n    this._state[1] = state[1]\n    this._state[2] = state[2]\n    this._state[3] = state[3] | 1\n  }\n\n  /**\n   * Get a uniformly distributed 32 bit integer between [0, max).\n   *\n   * @category getter\n   * @since 2.0.0\n   */\n  integer(max: number) {\n    return Math.round(this.number() * Number.MAX_SAFE_INTEGER) % max\n  }\n\n  /**\n   * Get a uniformly distributed IEEE-754 double between 0.0 and 1.0, with\n   * 53 bits of precision (every bit of the mantissa is randomized).\n   *\n   * @category getters\n   * @since 2.0.0\n   */\n  number() {\n    const hi = (this._next() & 0x03ffffff) * 1.0\n    const lo = (this._next() & 0x07ffffff) * 1.0\n    return (hi * BIT_27 + lo) / BIT_53\n  }\n\n  /** @internal */\n  private _next() {\n    // save current state (what we'll use for this number)\n    const oldHi = this._state[0]! >>> 0\n    const oldLo = this._state[1]! >>> 0\n\n    // churn LCG.\n    mul64(this._state, oldHi, oldLo, MUL_HI, MUL_LO)\n    add64(this._state, this._state[0]!, this._state[1]!, this._state[2]!, this._state[3]!)\n\n    // get least sig. 32 bits of ((oldstate >> 18) ^ oldstate) >> 27\n    let xsHi = oldHi >>> 18\n    let xsLo = ((oldLo >>> 18) | (oldHi << 14)) >>> 0\n    xsHi = (xsHi ^ oldHi) >>> 0\n    xsLo = (xsLo ^ oldLo) >>> 0\n    const xorshifted = ((xsLo >>> 27) | (xsHi << 5)) >>> 0\n    // rotate xorshifted right a random amount, based on the most sig. 5 bits\n    // bits of the old state.\n    const rot = oldHi >>> 27\n    const rot2 = ((-rot >>> 0) & 31) >>> 0\n    return ((xorshifted >>> rot) | (xorshifted << rot2)) >>> 0\n  }\n}\n\nfunction mul64(\n  out: Int32Array,\n  aHi: number,\n  aLo: number,\n  bHi: number,\n  bLo: number\n): void {\n  let c1 = ((aLo >>> 16) * (bLo & 0xffff)) >>> 0\n  let c0 = ((aLo & 0xffff) * (bLo >>> 16)) >>> 0\n\n  let lo = ((aLo & 0xffff) * (bLo & 0xffff)) >>> 0\n  let hi = ((aLo >>> 16) * (bLo >>> 16) + ((c0 >>> 16) + (c1 >>> 16))) >>> 0\n\n  c0 = (c0 << 16) >>> 0\n  lo = (lo + c0) >>> 0\n  if ((lo >>> 0) < (c0 >>> 0)) {\n    hi = (hi + 1) >>> 0\n  }\n\n  c1 = (c1 << 16) >>> 0\n  lo = (lo + c1) >>> 0\n  if ((lo >>> 0) < (c1 >>> 0)) {\n    hi = (hi + 1) >>> 0\n  }\n\n  hi = (hi + Math.imul(aLo, bHi)) >>> 0\n  hi = (hi + Math.imul(aHi, bLo)) >>> 0\n\n  out[0] = hi\n  out[1] = lo\n}\n\n// add two 64 bit numbers (given in parts), and store the result in `out`.\nfunction add64(\n  out: Int32Array,\n  aHi: number,\n  aLo: number,\n  bHi: number,\n  bLo: number\n): void {\n  let hi = (aHi + bHi) >>> 0\n  const lo = (aLo + bLo) >>> 0\n  if ((lo >>> 0) < (aLo >>> 0)) {\n    hi = (hi + 1) | 0\n  }\n  out[0] = hi\n  out[1] = lo\n}\n\n/**\n * @since 3.0.6\n */\nexport const YieldWrapTypeId: unique symbol = Symbol.for(\"effect/Utils/YieldWrap\")\n\n/**\n * @since 3.0.6\n */\nexport class YieldWrap<T> {\n  /**\n   * @since 3.0.6\n   */\n  readonly #value: T\n  constructor(value: T) {\n    this.#value = value\n  }\n  /**\n   * @since 3.0.6\n   */\n  [YieldWrapTypeId](): T {\n    return this.#value\n  }\n}\n\n/**\n * @since 3.0.6\n */\nexport function yieldWrapGet<T>(self: YieldWrap<T>): T {\n  if (typeof self === \"object\" && self !== null && YieldWrapTypeId in self) {\n    return self[YieldWrapTypeId]()\n  }\n  throw new Error(getBugErrorMessage(\"yieldWrapGet\"))\n}\n\n/**\n * Note: this is an experimental feature made available to allow custom matchers in tests, not to be directly used yet in user code\n *\n * @since 3.1.1\n * @status experimental\n * @category modifiers\n */\nexport const structuralRegionState = globalValue(\n  \"effect/Utils/isStructuralRegion\",\n  (): { enabled: boolean; tester: ((a: unknown, b: unknown) => boolean) | undefined } => ({\n    enabled: false,\n    tester: undefined\n  })\n)\n\n/**\n * Note: this is an experimental feature made available to allow custom matchers in tests, not to be directly used yet in user code\n *\n * @since 3.1.1\n * @status experimental\n * @category modifiers\n */\nexport const structuralRegion = <A>(body: () => A, tester?: (a: unknown, b: unknown) => boolean): A => {\n  const current = structuralRegionState.enabled\n  const currentTester = structuralRegionState.tester\n  structuralRegionState.enabled = true\n  if (tester) {\n    structuralRegionState.tester = tester\n  }\n  try {\n    return body()\n  } finally {\n    structuralRegionState.enabled = current\n    structuralRegionState.tester = currentTester\n  }\n}\n\nconst standard = {\n  effect_internal_function: <A>(body: () => A) => {\n    return body()\n  }\n}\n\nconst forced = {\n  effect_internal_function: <A>(body: () => A) => {\n    try {\n      return body()\n    } finally {\n      //\n    }\n  }\n}\n\nconst isNotOptimizedAway =\n  standard.effect_internal_function(() => new Error().stack)?.includes(\"effect_internal_function\") === true\n\n/**\n * @since 3.2.2\n * @status experimental\n * @category tracing\n */\nexport const internalCall = isNotOptimizedAway ? standard.effect_internal_function : forced.effect_internal_function\n\nconst genConstructor = (function*() {}).constructor\n\n/**\n * @since 3.11.0\n */\nexport const isGeneratorFunction = (u: unknown): u is (...args: Array<any>) => Generator<any, any, any> =>\n  isObject(u) && u.constructor === genConstructor\n"],"names":["identity","globalValue","getBugErrorMessage","isNullable","isObject","GenKindTypeId","Symbol","for","isGenKind","u","GenKindImpl","value","constructor","_F","_R","_","_O","_E","iterator","SingleShotGen","self","called","next","a","done","return","throw","e","makeGenKind","kind","adapter","x","arguments","i","length","defaultIncHi","defaultIncLo","MUL_HI","MUL_LO","BIT_53","BIT_27","PCGRandom","_state","seedHi","seedLo","incHi","incLo","Math","random","Int32Array","_next","add64","getState","setState","state","integer","max","round","number","Number","MAX_SAFE_INTEGER","hi","lo","oldHi","oldLo","mul64","xsHi","xsLo","xorshifted","rot","rot2","out","aHi","aLo","bHi","bLo","c1","c0","imul","YieldWrapTypeId","YieldWrap","yieldWrapGet","Error","structuralRegionState","enabled","tester","undefined","structuralRegion","body","current","currentTester","standard","effect_internal_function","forced","isNotOptimizedAway","stack","includes","internalCall","genConstructor","isGeneratorFunction"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6371, "column": 0}, "map": {"version":3,"file":"Hash.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/effect/src/Hash.ts"],"sourcesContent":["/**\n * @since 2.0.0\n */\nimport { pipe } from \"./Function.js\"\nimport { globalValue } from \"./GlobalValue.js\"\nimport { hasProperty } from \"./Predicate.js\"\nimport { structuralRegionState } from \"./Utils.js\"\n\n/** @internal */\nconst randomHashCache = globalValue(\n  Symbol.for(\"effect/Hash/randomHashCache\"),\n  () => new WeakMap<object, number>()\n)\n\n/**\n * @since 2.0.0\n * @category symbols\n */\nexport const symbol: unique symbol = Symbol.for(\"effect/Hash\")\n\n/**\n * @since 2.0.0\n * @category models\n */\nexport interface Hash {\n  [symbol](): number\n}\n\n/**\n * @since 2.0.0\n * @category hashing\n */\nexport const hash: <A>(self: A) => number = <A>(self: A) => {\n  if (structuralRegionState.enabled === true) {\n    return 0\n  }\n\n  switch (typeof self) {\n    case \"number\":\n      return number(self)\n    case \"bigint\":\n      return string(self.toString(10))\n    case \"boolean\":\n      return string(String(self))\n    case \"symbol\":\n      return string(String(self))\n    case \"string\":\n      return string(self)\n    case \"undefined\":\n      return string(\"undefined\")\n    case \"function\":\n    case \"object\": {\n      if (self === null) {\n        return string(\"null\")\n      } else if (self instanceof Date) {\n        return hash(self.toISOString())\n      } else if (self instanceof URL) {\n        return hash(self.href)\n      } else if (isHash(self)) {\n        return self[symbol]()\n      } else {\n        return random(self)\n      }\n    }\n    default:\n      throw new Error(\n        `BUG: unhandled typeof ${typeof self} - please report an issue at https://github.com/Effect-TS/effect/issues`\n      )\n  }\n}\n\n/**\n * @since 2.0.0\n * @category hashing\n */\nexport const random: <A extends object>(self: A) => number = (self) => {\n  if (!randomHashCache.has(self)) {\n    randomHashCache.set(self, number(Math.floor(Math.random() * Number.MAX_SAFE_INTEGER)))\n  }\n  return randomHashCache.get(self)!\n}\n\n/**\n * @since 2.0.0\n * @category hashing\n */\nexport const combine: (b: number) => (self: number) => number = (b) => (self) => (self * 53) ^ b\n\n/**\n * @since 2.0.0\n * @category hashing\n */\nexport const optimize = (n: number): number => (n & 0xbfffffff) | ((n >>> 1) & 0x40000000)\n\n/**\n * @since 2.0.0\n * @category guards\n */\nexport const isHash = (u: unknown): u is Hash => hasProperty(u, symbol)\n\n/**\n * @since 2.0.0\n * @category hashing\n */\nexport const number = (n: number) => {\n  if (n !== n || n === Infinity) {\n    return 0\n  }\n  let h = n | 0\n  if (h !== n) {\n    h ^= n * 0xffffffff\n  }\n  while (n > 0xffffffff) {\n    h ^= n /= 0xffffffff\n  }\n  return optimize(h)\n}\n\n/**\n * @since 2.0.0\n * @category hashing\n */\nexport const string = (str: string) => {\n  let h = 5381, i = str.length\n  while (i) {\n    h = (h * 33) ^ str.charCodeAt(--i)\n  }\n  return optimize(h)\n}\n\n/**\n * @since 2.0.0\n * @category hashing\n */\nexport const structureKeys = <A extends object>(o: A, keys: ReadonlyArray<keyof A>) => {\n  let h = 12289\n  for (let i = 0; i < keys.length; i++) {\n    h ^= pipe(string(keys[i]! as string), combine(hash((o as any)[keys[i]!])))\n  }\n  return optimize(h)\n}\n\n/**\n * @since 2.0.0\n * @category hashing\n */\nexport const structure = <A extends object>(o: A) =>\n  structureKeys(o, Object.keys(o) as unknown as ReadonlyArray<keyof A>)\n\n/**\n * @since 2.0.0\n * @category hashing\n */\nexport const array = <A>(arr: ReadonlyArray<A>) => {\n  let h = 6151\n  for (let i = 0; i < arr.length; i++) {\n    h = pipe(h, combine(hash(arr[i])))\n  }\n  return optimize(h)\n}\n\n/**\n * @since 2.0.0\n * @category hashing\n */\nexport const cached: {\n  /**\n   * @since 2.0.0\n   * @category hashing\n   */\n  (self: object): (hash: number) => number\n  /**\n   * @since 2.0.0\n   * @category hashing\n   */\n  (self: object, hash: number): number\n} = function() {\n  if (arguments.length === 1) {\n    const self = arguments[0] as object\n    return function(hash: number) {\n      Object.defineProperty(self, symbol, {\n        value() {\n          return hash\n        },\n        enumerable: false\n      })\n      return hash\n    } as any\n  }\n  const self = arguments[0] as object\n  const hash = arguments[1] as number\n  Object.defineProperty(self, symbol, {\n    value() {\n      return hash\n    },\n    enumerable: false\n  })\n\n  return hash\n}\n"],"names":["pipe","globalValue","hasProperty","structuralRegionState","randomHashCache","Symbol","for","WeakMap","symbol","hash","self","enabled","number","string","toString","String","Date","toISOString","URL","href","isHash","random","Error","has","set","Math","floor","Number","MAX_SAFE_INTEGER","get","combine","b","optimize","n","u","Infinity","h","str","i","length","charCodeAt","structureKeys","o","keys","structure","Object","array","arr","cached","arguments","defineProperty","value","enumerable"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6506, "column": 0}, "map": {"version":3,"file":"Equal.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/effect/src/Equal.ts"],"sourcesContent":["/**\n * @since 2.0.0\n */\nimport type { Equivalence } from \"./Equivalence.js\"\nimport * as Hash from \"./Hash.js\"\nimport { hasProperty } from \"./Predicate.js\"\nimport { structuralRegionState } from \"./Utils.js\"\n\n/**\n * @since 2.0.0\n * @category symbols\n */\nexport const symbol: unique symbol = Symbol.for(\"effect/Equal\")\n\n/**\n * @since 2.0.0\n * @category models\n */\nexport interface Equal extends Hash.Hash {\n  [symbol](that: Equal): boolean\n}\n\n/**\n * @since 2.0.0\n * @category equality\n */\nexport function equals<B>(that: B): <A>(self: A) => boolean\nexport function equals<A, B>(self: A, that: B): boolean\nexport function equals(): any {\n  if (arguments.length === 1) {\n    return (self: unknown) => compareBoth(self, arguments[0])\n  }\n  return compareBoth(arguments[0], arguments[1])\n}\n\nfunction compareBoth(self: unknown, that: unknown): boolean {\n  if (self === that) {\n    return true\n  }\n  const selfType = typeof self\n  if (selfType !== typeof that) {\n    return false\n  }\n  if (selfType === \"object\" || selfType === \"function\") {\n    if (self !== null && that !== null) {\n      if (isEqual(self) && isEqual(that)) {\n        if (Hash.hash(self) === Hash.hash(that) && self[symbol](that)) {\n          return true\n        } else {\n          return structuralRegionState.enabled && structuralRegionState.tester\n            ? structuralRegionState.tester(self, that)\n            : false\n        }\n      } else if (self instanceof Date && that instanceof Date) {\n        return self.toISOString() === that.toISOString()\n      } else if (self instanceof URL && that instanceof URL) {\n        return self.href === that.href\n      }\n    }\n    if (structuralRegionState.enabled) {\n      if (Array.isArray(self) && Array.isArray(that)) {\n        return self.length === that.length && self.every((v, i) => compareBoth(v, that[i]))\n      }\n      if (Object.getPrototypeOf(self) === Object.prototype && Object.getPrototypeOf(self) === Object.prototype) {\n        const keysSelf = Object.keys(self as any)\n        const keysThat = Object.keys(that as any)\n        if (keysSelf.length === keysThat.length) {\n          for (const key of keysSelf) {\n            // @ts-expect-error\n            if (!(key in that && compareBoth(self[key], that[key]))) {\n              return structuralRegionState.tester ? structuralRegionState.tester(self, that) : false\n            }\n          }\n          return true\n        }\n      }\n      return structuralRegionState.tester ? structuralRegionState.tester(self, that) : false\n    }\n  }\n\n  return structuralRegionState.enabled && structuralRegionState.tester\n    ? structuralRegionState.tester(self, that)\n    : false\n}\n\n/**\n * @since 2.0.0\n * @category guards\n */\nexport const isEqual = (u: unknown): u is Equal => hasProperty(u, symbol)\n\n/**\n * @since 2.0.0\n * @category instances\n */\nexport const equivalence: <A>() => Equivalence<A> = () => equals\n"],"names":["Hash","hasProperty","structuralRegionState","symbol","Symbol","for","equals","arguments","length","self","compareBoth","that","selfType","isEqual","hash","enabled","tester","Date","toISOString","URL","href","Array","isArray","every","v","i","Object","getPrototypeOf","prototype","keysSelf","keys","keysThat","key","u","equivalence"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6577, "column": 0}, "map": {"version":3,"file":"Inspectable.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/effect/src/Inspectable.ts"],"sourcesContent":["/**\n * @since 2.0.0\n */\nimport type * as FiberRefs from \"./FiberRefs.js\"\nimport { globalValue } from \"./GlobalValue.js\"\nimport { hasProperty, isFunction } from \"./Predicate.js\"\n\n/**\n * @since 2.0.0\n * @category symbols\n */\nexport const NodeInspectSymbol = Symbol.for(\"nodejs.util.inspect.custom\")\n\n/**\n * @since 2.0.0\n * @category symbols\n */\nexport type NodeInspectSymbol = typeof NodeInspectSymbol\n\n/**\n * @since 2.0.0\n * @category models\n */\nexport interface Inspectable {\n  toString(): string\n  toJSON(): unknown\n  [NodeInspectSymbol](): unknown\n}\n\n/**\n * @since 2.0.0\n */\nexport const toJSON = (x: unknown): unknown => {\n  try {\n    if (\n      hasProperty(x, \"toJSON\") && isFunction(x[\"toJSON\"]) &&\n      x[\"toJSON\"].length === 0\n    ) {\n      return x.toJSON()\n    } else if (Array.isArray(x)) {\n      return x.map(toJSON)\n    }\n  } catch {\n    return {}\n  }\n  return redact(x)\n}\n\n/**\n * @since 2.0.0\n */\nexport const format = (x: unknown): string => JSON.stringify(x, null, 2)\n\n/**\n * @since 2.0.0\n */\nexport const BaseProto: Inspectable = {\n  toJSON() {\n    return toJSON(this)\n  },\n  [NodeInspectSymbol]() {\n    return this.toJSON()\n  },\n  toString() {\n    return format(this.toJSON())\n  }\n}\n\n/**\n * @since 2.0.0\n */\nexport abstract class Class {\n  /**\n   * @since 2.0.0\n   */\n  abstract toJSON(): unknown\n  /**\n   * @since 2.0.0\n   */\n  [NodeInspectSymbol]() {\n    return this.toJSON()\n  }\n  /**\n   * @since 2.0.0\n   */\n  toString() {\n    return format(this.toJSON())\n  }\n}\n\n/**\n * @since 2.0.0\n */\nexport const toStringUnknown = (u: unknown, whitespace: number | string | undefined = 2): string => {\n  if (typeof u === \"string\") {\n    return u\n  }\n  try {\n    return typeof u === \"object\" ? stringifyCircular(u, whitespace) : String(u)\n  } catch {\n    return String(u)\n  }\n}\n\n/**\n * @since 2.0.0\n */\nexport const stringifyCircular = (obj: unknown, whitespace?: number | string | undefined): string => {\n  let cache: Array<unknown> = []\n  const retVal = JSON.stringify(\n    obj,\n    (_key, value) =>\n      typeof value === \"object\" && value !== null\n        ? cache.includes(value)\n          ? undefined // circular reference\n          : cache.push(value) && (redactableState.fiberRefs !== undefined && isRedactable(value)\n            ? value[symbolRedactable](redactableState.fiberRefs)\n            : value)\n        : value,\n    whitespace\n  )\n  ;(cache as any) = undefined\n  return retVal\n}\n\n/**\n * @since 3.10.0\n * @category redactable\n */\nexport interface Redactable {\n  readonly [symbolRedactable]: (fiberRefs: FiberRefs.FiberRefs) => unknown\n}\n\n/**\n * @since 3.10.0\n * @category redactable\n */\nexport const symbolRedactable: unique symbol = Symbol.for(\"effect/Inspectable/Redactable\")\n\n/**\n * @since 3.10.0\n * @category redactable\n */\nexport const isRedactable = (u: unknown): u is Redactable =>\n  typeof u === \"object\" && u !== null && symbolRedactable in u\n\nconst redactableState = globalValue(\"effect/Inspectable/redactableState\", () => ({\n  fiberRefs: undefined as FiberRefs.FiberRefs | undefined\n}))\n\n/**\n * @since 3.10.0\n * @category redactable\n */\nexport const withRedactableContext = <A>(context: FiberRefs.FiberRefs, f: () => A): A => {\n  const prev = redactableState.fiberRefs\n  redactableState.fiberRefs = context\n  try {\n    return f()\n  } finally {\n    redactableState.fiberRefs = prev\n  }\n}\n\n/**\n * @since 3.10.0\n * @category redactable\n */\nexport const redact = (u: unknown): unknown => {\n  if (isRedactable(u) && redactableState.fiberRefs !== undefined) {\n    return u[symbolRedactable](redactableState.fiberRefs)\n  }\n  return u\n}\n"],"names":["globalValue","hasProperty","isFunction","NodeInspectSymbol","Symbol","for","toJSON","x","length","Array","isArray","map","redact","format","JSON","stringify","BaseProto","toString","Class","toStringUnknown","u","whitespace","stringifyCircular","String","obj","cache","retVal","_key","value","includes","undefined","push","redactableState","fiberRefs","isRedactable","symbolRedactable","withRedactableContext","context","f","prev"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6674, "column": 0}, "map": {"version":3,"file":"Pipeable.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/effect/src/Pipeable.ts"],"sourcesContent":["/**\n * @since 2.0.0\n */\n\nimport type { Ctor } from \"./Types.js\"\n\n/**\n * @since 2.0.0\n * @category Models\n */\nexport interface Pipeable {\n  pipe<A>(this: A): A\n  pipe<A, B = never>(this: A, ab: (_: A) => B): B\n  pipe<A, B = never, C = never>(this: A, ab: (_: A) => B, bc: (_: B) => C): C\n  pipe<A, B = never, C = never, D = never>(this: A, ab: (_: A) => B, bc: (_: B) => C, cd: (_: C) => D): D\n  pipe<A, B = never, C = never, D = never, E = never>(\n    this: A,\n    ab: (_: A) => B,\n    bc: (_: B) => C,\n    cd: (_: C) => D,\n    de: (_: D) => E\n  ): E\n  pipe<A, B = never, C = never, D = never, E = never, F = never>(\n    this: A,\n    ab: (_: A) => B,\n    bc: (_: B) => C,\n    cd: (_: C) => D,\n    de: (_: D) => E,\n    ef: (_: E) => F\n  ): F\n  pipe<A, B = never, C = never, D = never, E = never, F = never, G = never>(\n    this: A,\n    ab: (_: A) => B,\n    bc: (_: B) => C,\n    cd: (_: C) => D,\n    de: (_: D) => E,\n    ef: (_: E) => F,\n    fg: (_: F) => G\n  ): G\n  pipe<A, B = never, C = never, D = never, E = never, F = never, G = never, H = never>(\n    this: A,\n    ab: (_: A) => B,\n    bc: (_: B) => C,\n    cd: (_: C) => D,\n    de: (_: D) => E,\n    ef: (_: E) => F,\n    fg: (_: F) => G,\n    gh: (_: G) => H\n  ): H\n  pipe<A, B = never, C = never, D = never, E = never, F = never, G = never, H = never, I = never>(\n    this: A,\n    ab: (_: A) => B,\n    bc: (_: B) => C,\n    cd: (_: C) => D,\n    de: (_: D) => E,\n    ef: (_: E) => F,\n    fg: (_: F) => G,\n    gh: (_: G) => H,\n    hi: (_: H) => I\n  ): I\n  pipe<A, B = never, C = never, D = never, E = never, F = never, G = never, H = never, I = never, J = never>(\n    this: A,\n    ab: (_: A) => B,\n    bc: (_: B) => C,\n    cd: (_: C) => D,\n    de: (_: D) => E,\n    ef: (_: E) => F,\n    fg: (_: F) => G,\n    gh: (_: G) => H,\n    hi: (_: H) => I,\n    ij: (_: I) => J\n  ): J\n  pipe<A, B = never, C = never, D = never, E = never, F = never, G = never, H = never, I = never, J = never, K = never>(\n    this: A,\n    ab: (_: A) => B,\n    bc: (_: B) => C,\n    cd: (_: C) => D,\n    de: (_: D) => E,\n    ef: (_: E) => F,\n    fg: (_: F) => G,\n    gh: (_: G) => H,\n    hi: (_: H) => I,\n    ij: (_: I) => J,\n    jk: (_: J) => K\n  ): K\n  pipe<\n    A,\n    B = never,\n    C = never,\n    D = never,\n    E = never,\n    F = never,\n    G = never,\n    H = never,\n    I = never,\n    J = never,\n    K = never,\n    L = never\n  >(\n    this: A,\n    ab: (_: A) => B,\n    bc: (_: B) => C,\n    cd: (_: C) => D,\n    de: (_: D) => E,\n    ef: (_: E) => F,\n    fg: (_: F) => G,\n    gh: (_: G) => H,\n    hi: (_: H) => I,\n    ij: (_: I) => J,\n    jk: (_: J) => K,\n    kl: (_: K) => L\n  ): L\n  pipe<\n    A,\n    B = never,\n    C = never,\n    D = never,\n    E = never,\n    F = never,\n    G = never,\n    H = never,\n    I = never,\n    J = never,\n    K = never,\n    L = never,\n    M = never\n  >(\n    this: A,\n    ab: (_: A) => B,\n    bc: (_: B) => C,\n    cd: (_: C) => D,\n    de: (_: D) => E,\n    ef: (_: E) => F,\n    fg: (_: F) => G,\n    gh: (_: G) => H,\n    hi: (_: H) => I,\n    ij: (_: I) => J,\n    jk: (_: J) => K,\n    kl: (_: K) => L,\n    lm: (_: L) => M\n  ): M\n  pipe<\n    A,\n    B = never,\n    C = never,\n    D = never,\n    E = never,\n    F = never,\n    G = never,\n    H = never,\n    I = never,\n    J = never,\n    K = never,\n    L = never,\n    M = never,\n    N = never\n  >(\n    this: A,\n    ab: (_: A) => B,\n    bc: (_: B) => C,\n    cd: (_: C) => D,\n    de: (_: D) => E,\n    ef: (_: E) => F,\n    fg: (_: F) => G,\n    gh: (_: G) => H,\n    hi: (_: H) => I,\n    ij: (_: I) => J,\n    jk: (_: J) => K,\n    kl: (_: K) => L,\n    lm: (_: L) => M,\n    mn: (_: M) => N\n  ): N\n  pipe<\n    A,\n    B = never,\n    C = never,\n    D = never,\n    E = never,\n    F = never,\n    G = never,\n    H = never,\n    I = never,\n    J = never,\n    K = never,\n    L = never,\n    M = never,\n    N = never,\n    O = never\n  >(\n    this: A,\n    ab: (_: A) => B,\n    bc: (_: B) => C,\n    cd: (_: C) => D,\n    de: (_: D) => E,\n    ef: (_: E) => F,\n    fg: (_: F) => G,\n    gh: (_: G) => H,\n    hi: (_: H) => I,\n    ij: (_: I) => J,\n    jk: (_: J) => K,\n    kl: (_: K) => L,\n    lm: (_: L) => M,\n    mn: (_: M) => N,\n    no: (_: N) => O\n  ): O\n  pipe<\n    A,\n    B = never,\n    C = never,\n    D = never,\n    E = never,\n    F = never,\n    G = never,\n    H = never,\n    I = never,\n    J = never,\n    K = never,\n    L = never,\n    M = never,\n    N = never,\n    O = never,\n    P = never\n  >(\n    this: A,\n    ab: (_: A) => B,\n    bc: (_: B) => C,\n    cd: (_: C) => D,\n    de: (_: D) => E,\n    ef: (_: E) => F,\n    fg: (_: F) => G,\n    gh: (_: G) => H,\n    hi: (_: H) => I,\n    ij: (_: I) => J,\n    jk: (_: J) => K,\n    kl: (_: K) => L,\n    lm: (_: L) => M,\n    mn: (_: M) => N,\n    no: (_: N) => O,\n    op: (_: O) => P\n  ): P\n  pipe<\n    A,\n    B = never,\n    C = never,\n    D = never,\n    E = never,\n    F = never,\n    G = never,\n    H = never,\n    I = never,\n    J = never,\n    K = never,\n    L = never,\n    M = never,\n    N = never,\n    O = never,\n    P = never,\n    Q = never\n  >(\n    this: A,\n    ab: (_: A) => B,\n    bc: (_: B) => C,\n    cd: (_: C) => D,\n    de: (_: D) => E,\n    ef: (_: E) => F,\n    fg: (_: F) => G,\n    gh: (_: G) => H,\n    hi: (_: H) => I,\n    ij: (_: I) => J,\n    jk: (_: J) => K,\n    kl: (_: K) => L,\n    lm: (_: L) => M,\n    mn: (_: M) => N,\n    no: (_: N) => O,\n    op: (_: O) => P,\n    pq: (_: P) => Q\n  ): Q\n  pipe<\n    A,\n    B = never,\n    C = never,\n    D = never,\n    E = never,\n    F = never,\n    G = never,\n    H = never,\n    I = never,\n    J = never,\n    K = never,\n    L = never,\n    M = never,\n    N = never,\n    O = never,\n    P = never,\n    Q = never,\n    R = never\n  >(\n    this: A,\n    ab: (_: A) => B,\n    bc: (_: B) => C,\n    cd: (_: C) => D,\n    de: (_: D) => E,\n    ef: (_: E) => F,\n    fg: (_: F) => G,\n    gh: (_: G) => H,\n    hi: (_: H) => I,\n    ij: (_: I) => J,\n    jk: (_: J) => K,\n    kl: (_: K) => L,\n    lm: (_: L) => M,\n    mn: (_: M) => N,\n    no: (_: N) => O,\n    op: (_: O) => P,\n    pq: (_: P) => Q,\n    qr: (_: Q) => R\n  ): R\n  pipe<\n    A,\n    B = never,\n    C = never,\n    D = never,\n    E = never,\n    F = never,\n    G = never,\n    H = never,\n    I = never,\n    J = never,\n    K = never,\n    L = never,\n    M = never,\n    N = never,\n    O = never,\n    P = never,\n    Q = never,\n    R = never,\n    S = never\n  >(\n    this: A,\n    ab: (_: A) => B,\n    bc: (_: B) => C,\n    cd: (_: C) => D,\n    de: (_: D) => E,\n    ef: (_: E) => F,\n    fg: (_: F) => G,\n    gh: (_: G) => H,\n    hi: (_: H) => I,\n    ij: (_: I) => J,\n    jk: (_: J) => K,\n    kl: (_: K) => L,\n    lm: (_: L) => M,\n    mn: (_: M) => N,\n    no: (_: N) => O,\n    op: (_: O) => P,\n    pq: (_: P) => Q,\n    qr: (_: Q) => R,\n    rs: (_: R) => S\n  ): S\n  pipe<\n    A,\n    B = never,\n    C = never,\n    D = never,\n    E = never,\n    F = never,\n    G = never,\n    H = never,\n    I = never,\n    J = never,\n    K = never,\n    L = never,\n    M = never,\n    N = never,\n    O = never,\n    P = never,\n    Q = never,\n    R = never,\n    S = never,\n    T = never\n  >(\n    this: A,\n    ab: (_: A) => B,\n    bc: (_: B) => C,\n    cd: (_: C) => D,\n    de: (_: D) => E,\n    ef: (_: E) => F,\n    fg: (_: F) => G,\n    gh: (_: G) => H,\n    hi: (_: H) => I,\n    ij: (_: I) => J,\n    jk: (_: J) => K,\n    kl: (_: K) => L,\n    lm: (_: L) => M,\n    mn: (_: M) => N,\n    no: (_: N) => O,\n    op: (_: O) => P,\n    pq: (_: P) => Q,\n    qr: (_: Q) => R,\n    rs: (_: R) => S,\n    st: (_: S) => T\n  ): T\n  pipe<\n    A,\n    B = never,\n    C = never,\n    D = never,\n    E = never,\n    F = never,\n    G = never,\n    H = never,\n    I = never,\n    J = never,\n    K = never,\n    L = never,\n    M = never,\n    N = never,\n    O = never,\n    P = never,\n    Q = never,\n    R = never,\n    S = never,\n    T = never,\n    U = never\n  >(\n    this: A,\n    ab: (_: A) => B,\n    bc: (_: B) => C,\n    cd: (_: C) => D,\n    de: (_: D) => E,\n    ef: (_: E) => F,\n    fg: (_: F) => G,\n    gh: (_: G) => H,\n    hi: (_: H) => I,\n    ij: (_: I) => J,\n    jk: (_: J) => K,\n    kl: (_: K) => L,\n    lm: (_: L) => M,\n    mn: (_: M) => N,\n    no: (_: N) => O,\n    op: (_: O) => P,\n    pq: (_: P) => Q,\n    qr: (_: Q) => R,\n    rs: (_: R) => S,\n    st: (_: S) => T,\n    tu: (_: T) => U\n  ): U\n  pipe<\n    A,\n    B = never,\n    C = never,\n    D = never,\n    E = never,\n    F = never,\n    G = never,\n    H = never,\n    I = never,\n    J = never,\n    K = never,\n    L = never,\n    M = never,\n    N = never,\n    O = never,\n    P = never,\n    Q = never,\n    R = never,\n    S = never,\n    T = never,\n    U = never\n  >(\n    this: A,\n    ab: (_: A) => B,\n    bc: (_: B) => C,\n    cd: (_: C) => D,\n    de: (_: D) => E,\n    ef: (_: E) => F,\n    fg: (_: F) => G,\n    gh: (_: G) => H,\n    hi: (_: H) => I,\n    ij: (_: I) => J,\n    jk: (_: J) => K,\n    kl: (_: K) => L,\n    lm: (_: L) => M,\n    mn: (_: M) => N,\n    no: (_: N) => O,\n    op: (_: O) => P,\n    pq: (_: P) => Q,\n    qr: (_: Q) => R,\n    rs: (_: R) => S,\n    st: (_: S) => T,\n    tu: (_: T) => U\n  ): U\n}\n\n/**\n * @since 2.0.0\n */\nexport const pipeArguments = <A>(self: A, args: IArguments): unknown => {\n  switch (args.length) {\n    case 0:\n      return self\n    case 1:\n      return args[0](self)\n    case 2:\n      return args[1](args[0](self))\n    case 3:\n      return args[2](args[1](args[0](self)))\n    case 4:\n      return args[3](args[2](args[1](args[0](self))))\n    case 5:\n      return args[4](args[3](args[2](args[1](args[0](self)))))\n    case 6:\n      return args[5](args[4](args[3](args[2](args[1](args[0](self))))))\n    case 7:\n      return args[6](args[5](args[4](args[3](args[2](args[1](args[0](self)))))))\n    case 8:\n      return args[7](args[6](args[5](args[4](args[3](args[2](args[1](args[0](self))))))))\n    case 9:\n      return args[8](args[7](args[6](args[5](args[4](args[3](args[2](args[1](args[0](self)))))))))\n    default: {\n      let ret = self\n      for (let i = 0, len = args.length; i < len; i++) {\n        ret = args[i](ret)\n      }\n      return ret\n    }\n  }\n}\n\n/**\n * @since 3.15.0\n * @category Models\n */\nexport interface PipeableConstructor {\n  new(...args: Array<any>): Pipeable\n}\n\n/**\n * @since 3.15.0\n * @category Prototypes\n */\nexport const Prototype: Pipeable = {\n  pipe() {\n    return pipeArguments(this, arguments)\n  }\n}\n\nconst Base: PipeableConstructor = (function() {\n  function PipeableBase() {}\n  PipeableBase.prototype = Prototype\n  return PipeableBase as any\n})()\n\n/**\n * @since 3.15.0\n * @category Constructors\n */\nexport const Class: {\n  /**\n   * @since 3.15.0\n   * @category Constructors\n   */\n  (): PipeableConstructor\n  /**\n   * @since 3.15.0\n   * @category Constructors\n   */\n  <TBase extends Ctor>(klass: TBase): TBase & PipeableConstructor\n} = (klass?: Ctor) =>\n  klass ?\n    class extends klass {\n      pipe() {\n        return pipeArguments(this, arguments)\n      }\n    }\n    : Base\n"],"names":["pipeArguments","self","args","length","ret","i","len","Prototype","pipe","arguments","Base","PipeableBase","prototype","Class","klass"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6736, "column": 0}, "map": {"version":3,"file":"effect.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/effect/src/internal/opCodes/effect.ts"],"sourcesContent":["/** @internal */\nexport type OP_ASYNC = typeof OP_ASYNC\n\n/** @internal */\nexport const OP_ASYNC = \"Async\" as const\n\n/** @internal */\nexport type OP_COMMIT = typeof OP_COMMIT\n\n/** @internal */\nexport const OP_COMMIT = \"Commit\" as const\n\n/** @internal */\nexport type OP_FAILURE = typeof OP_FAILURE\n\n/** @internal */\nexport const OP_FAILURE = \"Failure\" as const\n\n/** @internal */\nexport type OP_ON_FAILURE = typeof OP_ON_FAILURE\n\n/** @internal */\nexport const OP_ON_FAILURE = \"OnFailure\" as const\n\n/** @internal */\nexport type OP_ON_SUCCESS = typeof OP_ON_SUCCESS\n\n/** @internal */\nexport const OP_ON_SUCCESS = \"OnSuccess\" as const\n\n/** @internal */\nexport type OP_ON_SUCCESS_AND_FAILURE = typeof OP_ON_SUCCESS_AND_FAILURE\n\n/** @internal */\nexport const OP_ON_SUCCESS_AND_FAILURE = \"OnSuccessAndFailure\" as const\n\n/** @internal */\nexport type OP_SUCCESS = typeof OP_SUCCESS\n\n/** @internal */\nexport const OP_SUCCESS = \"Success\" as const\n\n/** @internal */\nexport type OP_SYNC = typeof OP_SYNC\n\n/** @internal */\nexport const OP_SYNC = \"Sync\" as const\n\n/** @internal */\nexport const OP_TAG = \"Tag\" as const\n\n/** @internal */\nexport type OP_TAG = typeof OP_TAG\n\n/** @internal */\nexport type OP_UPDATE_RUNTIME_FLAGS = typeof OP_UPDATE_RUNTIME_FLAGS\n\n/** @internal */\nexport const OP_UPDATE_RUNTIME_FLAGS = \"UpdateRuntimeFlags\" as const\n\n/** @internal */\nexport type OP_WHILE = typeof OP_WHILE\n\n/** @internal */\nexport const OP_WHILE = \"While\" as const\n\n/** @internal */\nexport type OP_ITERATOR = typeof OP_ITERATOR\n\n/** @internal */\nexport const OP_ITERATOR = \"Iterator\" as const\n\n/** @internal */\nexport type OP_WITH_RUNTIME = typeof OP_WITH_RUNTIME\n\n/** @internal */\nexport const OP_WITH_RUNTIME = \"WithRuntime\" as const\n\n/** @internal */\nexport type OP_YIELD = typeof OP_YIELD\n\n/** @internal */\nexport const OP_YIELD = \"Yield\" as const\n\n/** @internal */\nexport type OP_REVERT_FLAGS = typeof OP_REVERT_FLAGS\n\n/** @internal */\nexport const OP_REVERT_FLAGS = \"RevertFlags\" as const\n"],"names":["OP_ASYNC","OP_COMMIT","OP_FAILURE","OP_ON_FAILURE","OP_ON_SUCCESS","OP_ON_SUCCESS_AND_FAILURE","OP_SUCCESS","OP_SYNC","OP_TAG","OP_UPDATE_RUNTIME_FLAGS","OP_WHILE","OP_ITERATOR","OP_WITH_RUNTIME","OP_YIELD","OP_REVERT_FLAGS"],"mappings":"AAGA,cAAA;;;;;;;;;;;;;;;;;AACO,MAAMA,QAAQ,GAAG,OAAgB;AAMjC,MAAMC,SAAS,GAAG,QAAiB;AAMnC,MAAMC,UAAU,GAAG,SAAkB;AAMrC,MAAMC,aAAa,GAAG,WAAoB;AAM1C,MAAMC,aAAa,GAAG,WAAoB;AAM1C,MAAMC,yBAAyB,GAAG,qBAA8B;AAMhE,MAAMC,UAAU,GAAG,SAAkB;AAMrC,MAAMC,OAAO,GAAG,MAAe;AAG/B,MAAMC,MAAM,GAAG,KAAc;AAS7B,MAAMC,uBAAuB,GAAG,oBAA6B;AAM7D,MAAMC,QAAQ,GAAG,OAAgB;AAMjC,MAAMC,WAAW,GAAG,UAAmB;AAMvC,MAAMC,eAAe,GAAG,aAAsB;AAM9C,MAAMC,QAAQ,GAAG,OAAgB;AAMjC,MAAMC,eAAe,GAAG,aAAsB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6774, "column": 0}, "map": {"version":3,"file":"effectable.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/effect/src/internal/effectable.ts"],"sourcesContent":["import type * as Channel from \"../Channel.js\"\nimport type * as Effect from \"../Effect.js\"\nimport type * as Effectable from \"../Effectable.js\"\nimport * as Equal from \"../Equal.js\"\nimport * as Hash from \"../Hash.js\"\nimport { pipeArguments } from \"../Pipeable.js\"\nimport type * as Sink from \"../Sink.js\"\nimport type * as Stream from \"../Stream.js\"\nimport { SingleShotGen, YieldWrap } from \"../Utils.js\"\nimport * as OpCodes from \"./opCodes/effect.js\"\nimport * as version from \"./version.js\"\n\n/** @internal */\nexport const EffectTypeId: Effect.EffectTypeId = Symbol.for(\"effect/Effect\") as Effect.EffectTypeId\n\n/** @internal */\nexport const StreamTypeId: Stream.StreamTypeId = Symbol.for(\"effect/Stream\") as Stream.StreamTypeId\n\n/** @internal */\nexport const SinkTypeId: Sink.SinkTypeId = Symbol.for(\"effect/Sink\") as Sink.SinkTypeId\n\n/** @internal */\nexport const ChannelTypeId: Channel.ChannelTypeId = Symbol.for(\"effect/Channel\") as Channel.ChannelTypeId\n\n/** @internal */\nexport const effectVariance = {\n  /* c8 ignore next */\n  _R: (_: never) => _,\n  /* c8 ignore next */\n  _E: (_: never) => _,\n  /* c8 ignore next */\n  _A: (_: never) => _,\n\n  _V: version.getCurrentVersion()\n}\n\nconst sinkVariance = {\n  /* c8 ignore next */\n  _A: (_: never) => _,\n  /* c8 ignore next */\n  _In: (_: unknown) => _,\n  /* c8 ignore next */\n  _L: (_: never) => _,\n  /* c8 ignore next */\n  _E: (_: never) => _,\n  /* c8 ignore next */\n  _R: (_: never) => _\n}\n\nconst channelVariance = {\n  /* c8 ignore next */\n  _Env: (_: never) => _,\n  /* c8 ignore next */\n  _InErr: (_: unknown) => _,\n  /* c8 ignore next */\n  _InElem: (_: unknown) => _,\n  /* c8 ignore next */\n  _InDone: (_: unknown) => _,\n  /* c8 ignore next */\n  _OutErr: (_: never) => _,\n  /* c8 ignore next */\n  _OutElem: (_: never) => _,\n  /* c8 ignore next */\n  _OutDone: (_: never) => _\n}\n\n/** @internal */\nexport const EffectPrototype: Effect.Effect<never> & Equal.Equal = {\n  [EffectTypeId]: effectVariance,\n  [StreamTypeId]: effectVariance,\n  [SinkTypeId]: sinkVariance,\n  [ChannelTypeId]: channelVariance,\n  [Equal.symbol](that: any) {\n    return this === that\n  },\n  [Hash.symbol]() {\n    return Hash.cached(this, Hash.random(this))\n  },\n  [Symbol.iterator]() {\n    return new SingleShotGen(new YieldWrap(this)) as any\n  },\n  pipe() {\n    return pipeArguments(this, arguments)\n  }\n}\n\n/** @internal */\nexport const StructuralPrototype: Equal.Equal = {\n  [Hash.symbol]() {\n    return Hash.cached(this, Hash.structure(this))\n  },\n  [Equal.symbol](this: Equal.Equal, that: Equal.Equal) {\n    const selfKeys = Object.keys(this)\n    const thatKeys = Object.keys(that as object)\n    if (selfKeys.length !== thatKeys.length) {\n      return false\n    }\n    for (const key of selfKeys) {\n      if (!(key in (that as object) && Equal.equals((this as any)[key], (that as any)[key]))) {\n        return false\n      }\n    }\n    return true\n  }\n}\n\n/** @internal */\nexport const CommitPrototype: Effect.Effect<never> = {\n  ...EffectPrototype,\n  _op: OpCodes.OP_COMMIT\n} as any\n\n/** @internal */\nexport const StructuralCommitPrototype: Effect.Effect<never> = {\n  ...CommitPrototype,\n  ...StructuralPrototype\n} as any\n\n/** @internal */\nexport const Base: Effectable.CommitPrimitive = (function() {\n  function Base() {}\n  Base.prototype = CommitPrototype\n  return Base as any\n})()\n\n/** @internal */\nexport const StructuralBase: Effectable.CommitPrimitive = (function() {\n  function Base() {}\n  Base.prototype = StructuralCommitPrototype\n  return Base as any\n})()\n"],"names":["Equal","Hash","pipeArguments","SingleShotGen","YieldWrap","OpCodes","version","EffectTypeId","Symbol","for","StreamTypeId","SinkTypeId","ChannelTypeId","effectVariance","_R","_","_E","_A","_V","getCurrentVersion","sinkVariance","_In","_L","channelVariance","_Env","_InErr","_InElem","_InDone","_OutErr","_OutElem","_OutDone","EffectPrototype","symbol","that","cached","random","iterator","pipe","arguments","StructuralPrototype","structure","selfKeys","Object","keys","thatKeys","length","key","equals","CommitPrototype","_op","OP_COMMIT","StructuralCommitPrototype","Base","prototype","StructuralBase"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6885, "column": 0}, "map": {"version":3,"file":"option.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/effect/src/internal/option.ts"],"sourcesContent":["/**\n * @since 2.0.0\n */\n\nimport * as Equal from \"../Equal.js\"\nimport * as Hash from \"../Hash.js\"\nimport { format, NodeInspectSymbol, toJSON } from \"../Inspectable.js\"\nimport type * as Option from \"../Option.js\"\nimport { hasProperty } from \"../Predicate.js\"\nimport { EffectPrototype } from \"./effectable.js\"\n\nconst TypeId: Option.TypeId = Symbol.for(\"effect/Option\") as Option.TypeId\n\nconst CommonProto = {\n  ...EffectPrototype,\n  [TypeId]: {\n    _A: (_: never) => _\n  },\n  [NodeInspectSymbol]<A>(this: Option.Option<A>) {\n    return this.toJSON()\n  },\n  toString<A>(this: Option.Option<A>) {\n    return format(this.toJSON())\n  }\n}\n\nconst SomeProto = Object.assign(Object.create(CommonProto), {\n  _tag: \"Some\",\n  _op: \"Some\",\n  [Equal.symbol]<A>(this: Option.Some<A>, that: unknown): boolean {\n    return isOption(that) && isSome(that) && Equal.equals(this.value, that.value)\n  },\n  [Hash.symbol]<A>(this: Option.Some<A>) {\n    return Hash.cached(this, Hash.combine(Hash.hash(this._tag))(Hash.hash(this.value)))\n  },\n  toJSON<A>(this: Option.Some<A>) {\n    return {\n      _id: \"Option\",\n      _tag: this._tag,\n      value: toJSON(this.value)\n    }\n  }\n})\n\nconst NoneHash = Hash.hash(\"None\")\nconst NoneProto = Object.assign(Object.create(CommonProto), {\n  _tag: \"None\",\n  _op: \"None\",\n  [Equal.symbol]<A>(this: Option.None<A>, that: unknown): boolean {\n    return isOption(that) && isNone(that)\n  },\n  [Hash.symbol]<A>(this: Option.None<A>) {\n    return NoneHash\n  },\n  toJSON<A>(this: Option.None<A>) {\n    return {\n      _id: \"Option\",\n      _tag: this._tag\n    }\n  }\n})\n\n/** @internal */\nexport const isOption = (input: unknown): input is Option.Option<unknown> => hasProperty(input, TypeId)\n\n/** @internal */\nexport const isNone = <A>(fa: Option.Option<A>): fa is Option.None<A> => fa._tag === \"None\"\n\n/** @internal */\nexport const isSome = <A>(fa: Option.Option<A>): fa is Option.Some<A> => fa._tag === \"Some\"\n\n/** @internal */\nexport const none: Option.Option<never> = Object.create(NoneProto)\n\n/** @internal */\nexport const some = <A>(value: A): Option.Option<A> => {\n  const a = Object.create(SomeProto)\n  a.value = value\n  return a\n}\n"],"names":["Equal","Hash","format","NodeInspectSymbol","toJSON","hasProperty","EffectPrototype","TypeId","Symbol","for","CommonProto","_A","_","toString","SomeProto","Object","assign","create","_tag","_op","symbol","that","isOption","isSome","equals","value","cached","combine","hash","_id","NoneHash","NoneProto","isNone","input","fa","none","some","a"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6966, "column": 0}, "map": {"version":3,"file":"either.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/effect/src/internal/either.ts"],"sourcesContent":["/**\n * @since 2.0.0\n */\n\nimport type * as Either from \"../Either.js\"\nimport * as Equal from \"../Equal.js\"\nimport { dual } from \"../Function.js\"\nimport * as Hash from \"../Hash.js\"\nimport { format, NodeInspectSymbol, toJSON } from \"../Inspectable.js\"\nimport type { Option } from \"../Option.js\"\nimport { hasProperty } from \"../Predicate.js\"\nimport { EffectPrototype } from \"./effectable.js\"\nimport * as option from \"./option.js\"\n\n/**\n * @internal\n */\nexport const TypeId: Either.TypeId = Symbol.for(\"effect/Either\") as Either.TypeId\n\nconst CommonProto = {\n  ...EffectPrototype,\n  [TypeId]: {\n    _R: (_: never) => _\n  },\n  [NodeInspectSymbol]<L, R>(this: Either.Either<R, L>) {\n    return this.toJSON()\n  },\n  toString<L, R>(this: Either.Left<L, R>) {\n    return format(this.toJSON())\n  }\n}\n\nconst RightProto = Object.assign(Object.create(CommonProto), {\n  _tag: \"Right\",\n  _op: \"Right\",\n  [Equal.symbol]<L, R>(this: Either.Right<L, R>, that: unknown): boolean {\n    return isEither(that) && isRight(that) && Equal.equals(this.right, that.right)\n  },\n  [Hash.symbol]<L, R>(this: Either.Right<L, R>) {\n    return Hash.combine(Hash.hash(this._tag))(Hash.hash(this.right))\n  },\n  toJSON<L, R>(this: Either.Right<L, R>) {\n    return {\n      _id: \"Either\",\n      _tag: this._tag,\n      right: toJSON(this.right)\n    }\n  }\n})\n\nconst LeftProto = Object.assign(Object.create(CommonProto), {\n  _tag: \"Left\",\n  _op: \"Left\",\n  [Equal.symbol]<L, R>(this: Either.Left<L, R>, that: unknown): boolean {\n    return isEither(that) && isLeft(that) && Equal.equals(this.left, that.left)\n  },\n  [Hash.symbol]<L, R>(this: Either.Left<L, R>) {\n    return Hash.combine(Hash.hash(this._tag))(Hash.hash(this.left))\n  },\n  toJSON<E, A>(this: Either.Left<E, A>) {\n    return {\n      _id: \"Either\",\n      _tag: this._tag,\n      left: toJSON(this.left)\n    }\n  }\n})\n\n/** @internal */\nexport const isEither = (input: unknown): input is Either.Either<unknown, unknown> => hasProperty(input, TypeId)\n\n/** @internal */\nexport const isLeft = <R, L>(ma: Either.Either<R, L>): ma is Either.Left<L, R> => ma._tag === \"Left\"\n\n/** @internal */\nexport const isRight = <R, L>(ma: Either.Either<R, L>): ma is Either.Right<L, R> => ma._tag === \"Right\"\n\n/** @internal */\nexport const left = <L>(left: L): Either.Either<never, L> => {\n  const a = Object.create(LeftProto)\n  a.left = left\n  return a\n}\n\n/** @internal */\nexport const right = <R>(right: R): Either.Either<R> => {\n  const a = Object.create(RightProto)\n  a.right = right\n  return a\n}\n\n/** @internal */\nexport const getLeft = <R, L>(\n  self: Either.Either<R, L>\n): Option<L> => (isRight(self) ? option.none : option.some(self.left))\n\n/** @internal */\nexport const getRight = <R, L>(\n  self: Either.Either<R, L>\n): Option<R> => (isLeft(self) ? option.none : option.some(self.right))\n\n/** @internal */\nexport const fromOption: {\n  <L>(onNone: () => L): <R>(self: Option<R>) => Either.Either<R, L>\n  <R, L>(self: Option<R>, onNone: () => L): Either.Either<R, L>\n} = dual(\n  2,\n  <R, L>(self: Option<R>, onNone: () => L): Either.Either<R, L> =>\n    option.isNone(self) ? left(onNone()) : right(self.value)\n)\n"],"names":["Equal","dual","Hash","format","NodeInspectSymbol","toJSON","hasProperty","EffectPrototype","option","TypeId","Symbol","for","CommonProto","_R","_","toString","RightProto","Object","assign","create","_tag","_op","symbol","that","isEither","isRight","equals","right","combine","hash","_id","LeftProto","isLeft","left","input","ma","a","getLeft","self","none","some","getRight","fromOption","onNone","isNone","value"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7062, "column": 0}, "map": {"version":3,"file":"Either.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/effect/src/Either.ts"],"sourcesContent":["/**\n * @since 2.0.0\n */\n\nimport * as Equivalence from \"./Equivalence.js\"\nimport type { LazyArg } from \"./Function.js\"\nimport { constNull, constUndefined, dual, identity } from \"./Function.js\"\nimport type { TypeLambda } from \"./HKT.js\"\nimport type { Inspectable } from \"./Inspectable.js\"\nimport * as doNotation from \"./internal/doNotation.js\"\nimport * as either from \"./internal/either.js\"\nimport * as option_ from \"./internal/option.js\"\nimport type { Option } from \"./Option.js\"\nimport type { Pipeable } from \"./Pipeable.js\"\nimport type { Predicate, Refinement } from \"./Predicate.js\"\nimport { isFunction } from \"./Predicate.js\"\nimport type { Covariant, NoInfer, NotFunction } from \"./Types.js\"\nimport type * as Unify from \"./Unify.js\"\nimport * as Gen from \"./Utils.js\"\n\n/**\n * @category models\n * @since 2.0.0\n */\nexport type Either<R, L = never> = Left<L, R> | Right<L, R>\n\n/**\n * @category symbols\n * @since 2.0.0\n */\nexport const TypeId: unique symbol = either.TypeId\n\n/**\n * @category symbols\n * @since 2.0.0\n */\nexport type TypeId = typeof TypeId\n\n// TODO(4.0): flip the order of the type parameters\n/**\n * @category models\n * @since 2.0.0\n */\nexport interface Left<out L, out R> extends Pipeable, Inspectable {\n  readonly _tag: \"Left\"\n  readonly _op: \"Left\"\n  readonly left: L\n  readonly [TypeId]: {\n    readonly _R: Covariant<R>\n    readonly _L: Covariant<L>\n  }\n  [Unify.typeSymbol]?: unknown\n  [Unify.unifySymbol]?: EitherUnify<this>\n  [Unify.ignoreSymbol]?: EitherUnifyIgnore\n}\n\n// TODO(4.0): flip the order of the type parameters\n/**\n * @category models\n * @since 2.0.0\n */\nexport interface Right<out L, out R> extends Pipeable, Inspectable {\n  readonly _tag: \"Right\"\n  readonly _op: \"Right\"\n  readonly right: R\n  readonly [TypeId]: {\n    readonly _R: Covariant<R>\n    readonly _L: Covariant<L>\n  }\n  [Unify.typeSymbol]?: unknown\n  [Unify.unifySymbol]?: EitherUnify<this>\n  [Unify.ignoreSymbol]?: EitherUnifyIgnore\n}\n\n/**\n * @category models\n * @since 2.0.0\n */\nexport interface EitherUnify<A extends { [Unify.typeSymbol]?: any }> {\n  Either?: () => A[Unify.typeSymbol] extends Either<infer R0, infer L0> | infer _ ? Either<R0, L0> : never\n}\n\n/**\n * @category models\n * @since 2.0.0\n */\nexport interface EitherUnifyIgnore {}\n\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexport interface EitherTypeLambda extends TypeLambda {\n  readonly type: Either<this[\"Target\"], this[\"Out1\"]>\n}\n\n/**\n * @since 2.0.0\n */\nexport declare namespace Either {\n  /**\n   * @since 2.0.0\n   * @category type-level\n   */\n  export type Left<T extends Either<any, any>> = [T] extends [Either<infer _A, infer _E>] ? _E : never\n  /**\n   * @since 2.0.0\n   * @category type-level\n   */\n  export type Right<T extends Either<any, any>> = [T] extends [Either<infer _A, infer _E>] ? _A : never\n}\n\n/**\n * Constructs a new `Either` holding a `Right` value. This usually represents a successful value due to the right bias\n * of this structure.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const right: <R>(right: R) => Either<R> = either.right\n\nconst void_: Either<void> = right(void 0)\nexport {\n  /**\n   * @category constructors\n   * @since 3.13.0\n   */\n  void_ as void\n}\n\n/**\n * Constructs a new `Either` holding a `Left` value. This usually represents a failure, due to the right-bias of this\n * structure.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const left: <L>(left: L) => Either<never, L> = either.left\n\n/**\n * Takes a lazy default and a nullable value, if the value is not nully (`null` or `undefined`), turn it into a `Right`, if the value is nully use\n * the provided default as a `Left`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Either } from \"effect\"\n *\n * assert.deepStrictEqual(Either.fromNullable(1, () => 'fallback'), Either.right(1))\n * assert.deepStrictEqual(Either.fromNullable(null, () => 'fallback'), Either.left('fallback'))\n * ```\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const fromNullable: {\n  /**\n   * Takes a lazy default and a nullable value, if the value is not nully (`null` or `undefined`), turn it into a `Right`, if the value is nully use\n   * the provided default as a `Left`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Either } from \"effect\"\n   *\n   * assert.deepStrictEqual(Either.fromNullable(1, () => 'fallback'), Either.right(1))\n   * assert.deepStrictEqual(Either.fromNullable(null, () => 'fallback'), Either.left('fallback'))\n   * ```\n   *\n   * @category constructors\n   * @since 2.0.0\n   */\n  <R, L>(onNullable: (right: R) => L): (self: R) => Either<NonNullable<R>, L>\n  /**\n   * Takes a lazy default and a nullable value, if the value is not nully (`null` or `undefined`), turn it into a `Right`, if the value is nully use\n   * the provided default as a `Left`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Either } from \"effect\"\n   *\n   * assert.deepStrictEqual(Either.fromNullable(1, () => 'fallback'), Either.right(1))\n   * assert.deepStrictEqual(Either.fromNullable(null, () => 'fallback'), Either.left('fallback'))\n   * ```\n   *\n   * @category constructors\n   * @since 2.0.0\n   */\n  <R, L>(self: R, onNullable: (right: R) => L): Either<NonNullable<R>, L>\n} = dual(\n  2,\n  <R, L>(self: R, onNullable: (right: R) => L): Either<NonNullable<R>, L> =>\n    self == null ? left(onNullable(self)) : right(self)\n)\n\n/**\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Either, Option } from \"effect\"\n *\n * assert.deepStrictEqual(Either.fromOption(Option.some(1), () => 'error'), Either.right(1))\n * assert.deepStrictEqual(Either.fromOption(Option.none(), () => 'error'), Either.left('error'))\n * ```\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const fromOption: {\n  /**\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Either, Option } from \"effect\"\n   *\n   * assert.deepStrictEqual(Either.fromOption(Option.some(1), () => 'error'), Either.right(1))\n   * assert.deepStrictEqual(Either.fromOption(Option.none(), () => 'error'), Either.left('error'))\n   * ```\n   *\n   * @category constructors\n   * @since 2.0.0\n   */\n  <L>(onNone: () => L): <R>(self: Option<R>) => Either<R, L>\n  /**\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Either, Option } from \"effect\"\n   *\n   * assert.deepStrictEqual(Either.fromOption(Option.some(1), () => 'error'), Either.right(1))\n   * assert.deepStrictEqual(Either.fromOption(Option.none(), () => 'error'), Either.left('error'))\n   * ```\n   *\n   * @category constructors\n   * @since 2.0.0\n   */\n  <R, L>(self: Option<R>, onNone: () => L): Either<R, L>\n} = either.fromOption\n\nconst try_: {\n  <R, L>(\n    options: {\n      readonly try: LazyArg<R>\n      readonly catch: (error: unknown) => L\n    }\n  ): Either<R, L>\n  <R>(evaluate: LazyArg<R>): Either<R, unknown>\n} = (<R, L>(\n  evaluate: LazyArg<R> | {\n    readonly try: LazyArg<R>\n    readonly catch: (error: unknown) => L\n  }\n) => {\n  if (isFunction(evaluate)) {\n    try {\n      return right(evaluate())\n    } catch (e) {\n      return left(e)\n    }\n  } else {\n    try {\n      return right(evaluate.try())\n    } catch (e) {\n      return left(evaluate.catch(e))\n    }\n  }\n}) as any\n\nexport {\n  /**\n   * Imports a synchronous side-effect into a pure `Either` value, translating any\n   * thrown exceptions into typed failed eithers creating with `Either.left`.\n   *\n   * @category constructors\n   * @since 2.0.0\n   */\n  try_ as try\n}\n\n/**\n * Tests if a value is a `Either`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Either } from \"effect\"\n *\n * assert.deepStrictEqual(Either.isEither(Either.right(1)), true)\n * assert.deepStrictEqual(Either.isEither(Either.left(\"a\")), true)\n * assert.deepStrictEqual(Either.isEither({ right: 1 }), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isEither: (input: unknown) => input is Either<unknown, unknown> = either.isEither\n\n/**\n * Determine if a `Either` is a `Left`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Either } from \"effect\"\n *\n * assert.deepStrictEqual(Either.isLeft(Either.right(1)), false)\n * assert.deepStrictEqual(Either.isLeft(Either.left(\"a\")), true)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isLeft: <R, L>(self: Either<R, L>) => self is Left<L, R> = either.isLeft\n\n/**\n * Determine if a `Either` is a `Right`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Either } from \"effect\"\n *\n * assert.deepStrictEqual(Either.isRight(Either.right(1)), true)\n * assert.deepStrictEqual(Either.isRight(Either.left(\"a\")), false)\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isRight: <R, L>(self: Either<R, L>) => self is Right<L, R> = either.isRight\n\n/**\n * Converts a `Either` to an `Option` discarding the `Left`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Either, Option } from \"effect\"\n *\n * assert.deepStrictEqual(Either.getRight(Either.right('ok')), Option.some('ok'))\n * assert.deepStrictEqual(Either.getRight(Either.left('err')), Option.none())\n * ```\n *\n * @category getters\n * @since 2.0.0\n */\nexport const getRight: <R, L>(self: Either<R, L>) => Option<R> = either.getRight\n\n/**\n * Converts a `Either` to an `Option` discarding the value.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Either, Option } from \"effect\"\n *\n * assert.deepStrictEqual(Either.getLeft(Either.right('ok')), Option.none())\n * assert.deepStrictEqual(Either.getLeft(Either.left('err')), Option.some('err'))\n * ```\n *\n * @category getters\n * @since 2.0.0\n */\nexport const getLeft: <R, L>(self: Either<R, L>) => Option<L> = either.getLeft\n\n/**\n * @category equivalence\n * @since 2.0.0\n */\nexport const getEquivalence = <R, L>({ left, right }: {\n  right: Equivalence.Equivalence<R>\n  left: Equivalence.Equivalence<L>\n}): Equivalence.Equivalence<Either<R, L>> =>\n  Equivalence.make((x, y) =>\n    isLeft(x) ?\n      isLeft(y) && left(x.left, y.left) :\n      isRight(y) && right(x.right, y.right)\n  )\n\n/**\n * @category mapping\n * @since 2.0.0\n */\nexport const mapBoth: {\n  /**\n   * @category mapping\n   * @since 2.0.0\n   */\n  <L, L2, R, R2>(\n    options: {\n      readonly onLeft: (left: L) => L2\n      readonly onRight: (right: R) => R2\n    }\n  ): (self: Either<R, L>) => Either<R2, L2>\n  /**\n   * @category mapping\n   * @since 2.0.0\n   */\n  <L, R, L2, R2>(\n    self: Either<R, L>,\n    options: {\n      readonly onLeft: (left: L) => L2\n      readonly onRight: (right: R) => R2\n    }\n  ): Either<R2, L2>\n} = dual(\n  2,\n  <L, R, L2, R2>(self: Either<R, L>, { onLeft, onRight }: {\n    readonly onLeft: (left: L) => L2\n    readonly onRight: (right: R) => R2\n  }): Either<R2, L2> => isLeft(self) ? left(onLeft(self.left)) : right(onRight(self.right))\n)\n\n/**\n * Maps the `Left` side of an `Either` value to a new `Either` value.\n *\n * @category mapping\n * @since 2.0.0\n */\nexport const mapLeft: {\n  /**\n   * Maps the `Left` side of an `Either` value to a new `Either` value.\n   *\n   * @category mapping\n   * @since 2.0.0\n   */\n  <L, L2>(f: (left: L) => L2): <R>(self: Either<R, L>) => Either<R, L2>\n  /**\n   * Maps the `Left` side of an `Either` value to a new `Either` value.\n   *\n   * @category mapping\n   * @since 2.0.0\n   */\n  <R, L, L2>(self: Either<R, L>, f: (left: L) => L2): Either<R, L2>\n} = dual(\n  2,\n  <R, L1, L2>(self: Either<R, L1>, f: (left: L1) => L2): Either<R, L2> =>\n    isLeft(self) ? left(f(self.left)) : right(self.right)\n)\n\n/**\n * Maps the `Right` side of an `Either` value to a new `Either` value.\n *\n * @category mapping\n * @since 2.0.0\n */\nexport const map: {\n  /**\n   * Maps the `Right` side of an `Either` value to a new `Either` value.\n   *\n   * @category mapping\n   * @since 2.0.0\n   */\n  <R, R2>(f: (right: R) => R2): <L>(self: Either<R, L>) => Either<R2, L>\n  /**\n   * Maps the `Right` side of an `Either` value to a new `Either` value.\n   *\n   * @category mapping\n   * @since 2.0.0\n   */\n  <R, L, R2>(self: Either<R, L>, f: (right: R) => R2): Either<R2, L>\n} = dual(\n  2,\n  <R1, L, R2>(self: Either<R1, L>, f: (right: R1) => R2): Either<R2, L> =>\n    isRight(self) ? right(f(self.right)) : left(self.left)\n)\n\n/**\n * Takes two functions and an `Either` value, if the value is a `Left` the inner value is applied to the `onLeft function,\n * if the value is a `Right` the inner value is applied to the `onRight` function.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { pipe, Either } from \"effect\"\n *\n * const onLeft  = (strings: ReadonlyArray<string>): string => `strings: ${strings.join(', ')}`\n *\n * const onRight = (value: number): string => `Ok: ${value}`\n *\n * assert.deepStrictEqual(pipe(Either.right(1), Either.match({ onLeft, onRight })), 'Ok: 1')\n * assert.deepStrictEqual(\n *   pipe(Either.left(['string 1', 'string 2']), Either.match({ onLeft, onRight })),\n *   'strings: string 1, string 2'\n * )\n * ```\n *\n * @category pattern matching\n * @since 2.0.0\n */\nexport const match: {\n  /**\n   * Takes two functions and an `Either` value, if the value is a `Left` the inner value is applied to the `onLeft function,\n   * if the value is a `Right` the inner value is applied to the `onRight` function.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { pipe, Either } from \"effect\"\n   *\n   * const onLeft  = (strings: ReadonlyArray<string>): string => `strings: ${strings.join(', ')}`\n   *\n   * const onRight = (value: number): string => `Ok: ${value}`\n   *\n   * assert.deepStrictEqual(pipe(Either.right(1), Either.match({ onLeft, onRight })), 'Ok: 1')\n   * assert.deepStrictEqual(\n   *   pipe(Either.left(['string 1', 'string 2']), Either.match({ onLeft, onRight })),\n   *   'strings: string 1, string 2'\n   * )\n   * ```\n   *\n   * @category pattern matching\n   * @since 2.0.0\n   */\n  <L, B, R, C = B>(\n    options: {\n      readonly onLeft: (left: L) => B\n      readonly onRight: (right: R) => C\n    }\n  ): (self: Either<R, L>) => B | C\n  /**\n   * Takes two functions and an `Either` value, if the value is a `Left` the inner value is applied to the `onLeft function,\n   * if the value is a `Right` the inner value is applied to the `onRight` function.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { pipe, Either } from \"effect\"\n   *\n   * const onLeft  = (strings: ReadonlyArray<string>): string => `strings: ${strings.join(', ')}`\n   *\n   * const onRight = (value: number): string => `Ok: ${value}`\n   *\n   * assert.deepStrictEqual(pipe(Either.right(1), Either.match({ onLeft, onRight })), 'Ok: 1')\n   * assert.deepStrictEqual(\n   *   pipe(Either.left(['string 1', 'string 2']), Either.match({ onLeft, onRight })),\n   *   'strings: string 1, string 2'\n   * )\n   * ```\n   *\n   * @category pattern matching\n   * @since 2.0.0\n   */\n  <R, L, B, C = B>(\n    self: Either<R, L>,\n    options: {\n      readonly onLeft: (left: L) => B\n      readonly onRight: (right: R) => C\n    }\n  ): B | C\n} = dual(\n  2,\n  <R, L, B, C = B>(self: Either<R, L>, { onLeft, onRight }: {\n    readonly onLeft: (left: L) => B\n    readonly onRight: (right: R) => C\n  }): B | C => isLeft(self) ? onLeft(self.left) : onRight(self.right)\n)\n\n/**\n * Transforms a `Predicate` function into a `Right` of the input value if the predicate returns `true`\n * or `Left` of the result of the provided function if the predicate returns false\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { pipe, Either } from \"effect\"\n *\n * const isPositive = (n: number): boolean => n > 0\n * const isPositiveEither = Either.liftPredicate(isPositive, n => `${n} is not positive`)\n *\n * assert.deepStrictEqual(\n *   isPositiveEither(1),\n *   Either.right(1)\n * )\n * assert.deepStrictEqual(\n *   isPositiveEither(0),\n *   Either.left(\"0 is not positive\")\n * )\n * ```\n *\n * @category lifting\n * @since 3.4.0\n */\nexport const liftPredicate: {\n  /**\n   * Transforms a `Predicate` function into a `Right` of the input value if the predicate returns `true`\n   * or `Left` of the result of the provided function if the predicate returns false\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { pipe, Either } from \"effect\"\n   *\n   * const isPositive = (n: number): boolean => n > 0\n   * const isPositiveEither = Either.liftPredicate(isPositive, n => `${n} is not positive`)\n   *\n   * assert.deepStrictEqual(\n   *   isPositiveEither(1),\n   *   Either.right(1)\n   * )\n   * assert.deepStrictEqual(\n   *   isPositiveEither(0),\n   *   Either.left(\"0 is not positive\")\n   * )\n   * ```\n   *\n   * @category lifting\n   * @since 3.4.0\n   */\n  <A, B extends A, E>(refinement: Refinement<A, B>, orLeftWith: (a: A) => E): (a: A) => Either<B, E>\n  /**\n   * Transforms a `Predicate` function into a `Right` of the input value if the predicate returns `true`\n   * or `Left` of the result of the provided function if the predicate returns false\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { pipe, Either } from \"effect\"\n   *\n   * const isPositive = (n: number): boolean => n > 0\n   * const isPositiveEither = Either.liftPredicate(isPositive, n => `${n} is not positive`)\n   *\n   * assert.deepStrictEqual(\n   *   isPositiveEither(1),\n   *   Either.right(1)\n   * )\n   * assert.deepStrictEqual(\n   *   isPositiveEither(0),\n   *   Either.left(\"0 is not positive\")\n   * )\n   * ```\n   *\n   * @category lifting\n   * @since 3.4.0\n   */\n  <B extends A, E, A = B>(predicate: Predicate<A>, orLeftWith: (a: A) => E): (a: B) => Either<B, E>\n  /**\n   * Transforms a `Predicate` function into a `Right` of the input value if the predicate returns `true`\n   * or `Left` of the result of the provided function if the predicate returns false\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { pipe, Either } from \"effect\"\n   *\n   * const isPositive = (n: number): boolean => n > 0\n   * const isPositiveEither = Either.liftPredicate(isPositive, n => `${n} is not positive`)\n   *\n   * assert.deepStrictEqual(\n   *   isPositiveEither(1),\n   *   Either.right(1)\n   * )\n   * assert.deepStrictEqual(\n   *   isPositiveEither(0),\n   *   Either.left(\"0 is not positive\")\n   * )\n   * ```\n   *\n   * @category lifting\n   * @since 3.4.0\n   */\n  <A, E, B extends A>(self: A, refinement: Refinement<A, B>, orLeftWith: (a: A) => E): Either<B, E>\n  /**\n   * Transforms a `Predicate` function into a `Right` of the input value if the predicate returns `true`\n   * or `Left` of the result of the provided function if the predicate returns false\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { pipe, Either } from \"effect\"\n   *\n   * const isPositive = (n: number): boolean => n > 0\n   * const isPositiveEither = Either.liftPredicate(isPositive, n => `${n} is not positive`)\n   *\n   * assert.deepStrictEqual(\n   *   isPositiveEither(1),\n   *   Either.right(1)\n   * )\n   * assert.deepStrictEqual(\n   *   isPositiveEither(0),\n   *   Either.left(\"0 is not positive\")\n   * )\n   * ```\n   *\n   * @category lifting\n   * @since 3.4.0\n   */\n  <B extends A, E, A = B>(self: B, predicate: Predicate<A>, orLeftWith: (a: A) => E): Either<B, E>\n} = dual(\n  3,\n  <A, E>(a: A, predicate: Predicate<A>, orLeftWith: (a: A) => E): Either<A, E> =>\n    predicate(a) ? right(a) : left(orLeftWith(a))\n)\n\n/**\n * Filter the right value with the provided function.\n * If the predicate fails, set the left value with the result of the provided function.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { pipe, Either } from \"effect\"\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     Either.right(1),\n *     Either.filterOrLeft(isPositive, n => `${n} is not positive`)\n *   ),\n *   Either.right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     Either.right(0),\n *     Either.filterOrLeft(isPositive, n => `${n} is not positive`)\n *   ),\n *   Either.left(\"0 is not positive\")\n * )\n * ```\n *\n * @since 2.0.0\n * @category filtering & conditionals\n */\nexport const filterOrLeft: {\n  /**\n   * Filter the right value with the provided function.\n   * If the predicate fails, set the left value with the result of the provided function.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { pipe, Either } from \"effect\"\n   *\n   * const isPositive = (n: number): boolean => n > 0\n   *\n   * assert.deepStrictEqual(\n   *   pipe(\n   *     Either.right(1),\n   *     Either.filterOrLeft(isPositive, n => `${n} is not positive`)\n   *   ),\n   *   Either.right(1)\n   * )\n   * assert.deepStrictEqual(\n   *   pipe(\n   *     Either.right(0),\n   *     Either.filterOrLeft(isPositive, n => `${n} is not positive`)\n   *   ),\n   *   Either.left(\"0 is not positive\")\n   * )\n   * ```\n   *\n   * @since 2.0.0\n   * @category filtering & conditionals\n   */\n  <R, B extends R, L2>(\n    refinement: Refinement<NoInfer<R>, B>,\n    orLeftWith: (right: NoInfer<R>) => L2\n  ): <L>(self: Either<R, L>) => Either<B, L2 | L>\n  /**\n   * Filter the right value with the provided function.\n   * If the predicate fails, set the left value with the result of the provided function.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { pipe, Either } from \"effect\"\n   *\n   * const isPositive = (n: number): boolean => n > 0\n   *\n   * assert.deepStrictEqual(\n   *   pipe(\n   *     Either.right(1),\n   *     Either.filterOrLeft(isPositive, n => `${n} is not positive`)\n   *   ),\n   *   Either.right(1)\n   * )\n   * assert.deepStrictEqual(\n   *   pipe(\n   *     Either.right(0),\n   *     Either.filterOrLeft(isPositive, n => `${n} is not positive`)\n   *   ),\n   *   Either.left(\"0 is not positive\")\n   * )\n   * ```\n   *\n   * @since 2.0.0\n   * @category filtering & conditionals\n   */\n  <R, L2>(predicate: Predicate<NoInfer<R>>, orLeftWith: (right: NoInfer<R>) => L2): <L>(self: Either<R, L>) => Either<R, L2 | L>\n  /**\n   * Filter the right value with the provided function.\n   * If the predicate fails, set the left value with the result of the provided function.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { pipe, Either } from \"effect\"\n   *\n   * const isPositive = (n: number): boolean => n > 0\n   *\n   * assert.deepStrictEqual(\n   *   pipe(\n   *     Either.right(1),\n   *     Either.filterOrLeft(isPositive, n => `${n} is not positive`)\n   *   ),\n   *   Either.right(1)\n   * )\n   * assert.deepStrictEqual(\n   *   pipe(\n   *     Either.right(0),\n   *     Either.filterOrLeft(isPositive, n => `${n} is not positive`)\n   *   ),\n   *   Either.left(\"0 is not positive\")\n   * )\n   * ```\n   *\n   * @since 2.0.0\n   * @category filtering & conditionals\n   */\n  <R, L, B extends R, L2>(\n    self: Either<R, L>,\n    refinement: Refinement<R, B>,\n    orLeftWith: (right: R) => L2\n  ): Either<B, L | L2>\n  /**\n   * Filter the right value with the provided function.\n   * If the predicate fails, set the left value with the result of the provided function.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { pipe, Either } from \"effect\"\n   *\n   * const isPositive = (n: number): boolean => n > 0\n   *\n   * assert.deepStrictEqual(\n   *   pipe(\n   *     Either.right(1),\n   *     Either.filterOrLeft(isPositive, n => `${n} is not positive`)\n   *   ),\n   *   Either.right(1)\n   * )\n   * assert.deepStrictEqual(\n   *   pipe(\n   *     Either.right(0),\n   *     Either.filterOrLeft(isPositive, n => `${n} is not positive`)\n   *   ),\n   *   Either.left(\"0 is not positive\")\n   * )\n   * ```\n   *\n   * @since 2.0.0\n   * @category filtering & conditionals\n   */\n  <R, L, E2>(self: Either<R, L>, predicate: Predicate<R>, orLeftWith: (right: R) => E2): Either<R, L | E2>\n} = dual(3, <R, L, E2>(\n  self: Either<R, L>,\n  predicate: Predicate<R>,\n  orLeftWith: (right: R) => E2\n): Either<R, L | E2> => flatMap(self, (r) => predicate(r) ? right(r) : left(orLeftWith(r))))\n\n/**\n * @category getters\n * @since 2.0.0\n */\nexport const merge: <R, L>(self: Either<R, L>) => L | R = match({\n  onLeft: identity,\n  onRight: identity\n})\n\n/**\n * Returns the wrapped value if it's a `Right` or a default value if is a `Left`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Either } from \"effect\"\n *\n * assert.deepStrictEqual(Either.getOrElse(Either.right(1), (error) => error + \"!\"), 1)\n * assert.deepStrictEqual(Either.getOrElse(Either.left(\"not a number\"), (error) => error + \"!\"), \"not a number!\")\n * ```\n *\n * @category getters\n * @since 2.0.0\n */\nexport const getOrElse: {\n  /**\n   * Returns the wrapped value if it's a `Right` or a default value if is a `Left`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Either } from \"effect\"\n   *\n   * assert.deepStrictEqual(Either.getOrElse(Either.right(1), (error) => error + \"!\"), 1)\n   * assert.deepStrictEqual(Either.getOrElse(Either.left(\"not a number\"), (error) => error + \"!\"), \"not a number!\")\n   * ```\n   *\n   * @category getters\n   * @since 2.0.0\n   */\n  <L, R2>(onLeft: (left: L) => R2): <R>(self: Either<R, L>) => R2 | R\n  /**\n   * Returns the wrapped value if it's a `Right` or a default value if is a `Left`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Either } from \"effect\"\n   *\n   * assert.deepStrictEqual(Either.getOrElse(Either.right(1), (error) => error + \"!\"), 1)\n   * assert.deepStrictEqual(Either.getOrElse(Either.left(\"not a number\"), (error) => error + \"!\"), \"not a number!\")\n   * ```\n   *\n   * @category getters\n   * @since 2.0.0\n   */\n  <R, L, R2>(self: Either<R, L>, onLeft: (left: L) => R2): R | R2\n} = dual(\n  2,\n  <R, L, B>(self: Either<R, L>, onLeft: (left: L) => B): R | B => isLeft(self) ? onLeft(self.left) : self.right\n)\n\n/**\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Either } from \"effect\"\n *\n * assert.deepStrictEqual(Either.getOrNull(Either.right(1)), 1)\n * assert.deepStrictEqual(Either.getOrNull(Either.left(\"a\")), null)\n * ```\n *\n * @category getters\n * @since 2.0.0\n */\nexport const getOrNull: <R, L>(self: Either<R, L>) => R | null = getOrElse(constNull)\n\n/**\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Either } from \"effect\"\n *\n * assert.deepStrictEqual(Either.getOrUndefined(Either.right(1)), 1)\n * assert.deepStrictEqual(Either.getOrUndefined(Either.left(\"a\")), undefined)\n * ```\n *\n * @category getters\n * @since 2.0.0\n */\nexport const getOrUndefined: <R, L>(self: Either<R, L>) => R | undefined = getOrElse(constUndefined)\n\n/**\n * Extracts the value of an `Either` or throws if the `Either` is `Left`.\n *\n * If a default error is sufficient for your use case and you don't need to configure the thrown error, see {@link getOrThrow}.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Either } from \"effect\"\n *\n * assert.deepStrictEqual(\n *   Either.getOrThrowWith(Either.right(1), () => new Error('Unexpected Left')),\n *   1\n * )\n * assert.throws(() => Either.getOrThrowWith(Either.left(\"error\"), () => new Error('Unexpected Left')))\n * ```\n *\n * @category getters\n * @since 2.0.0\n */\nexport const getOrThrowWith: {\n  /**\n   * Extracts the value of an `Either` or throws if the `Either` is `Left`.\n   *\n   * If a default error is sufficient for your use case and you don't need to configure the thrown error, see {@link getOrThrow}.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Either } from \"effect\"\n   *\n   * assert.deepStrictEqual(\n   *   Either.getOrThrowWith(Either.right(1), () => new Error('Unexpected Left')),\n   *   1\n   * )\n   * assert.throws(() => Either.getOrThrowWith(Either.left(\"error\"), () => new Error('Unexpected Left')))\n   * ```\n   *\n   * @category getters\n   * @since 2.0.0\n   */\n  <L>(onLeft: (left: L) => unknown): <A>(self: Either<A, L>) => A\n  /**\n   * Extracts the value of an `Either` or throws if the `Either` is `Left`.\n   *\n   * If a default error is sufficient for your use case and you don't need to configure the thrown error, see {@link getOrThrow}.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Either } from \"effect\"\n   *\n   * assert.deepStrictEqual(\n   *   Either.getOrThrowWith(Either.right(1), () => new Error('Unexpected Left')),\n   *   1\n   * )\n   * assert.throws(() => Either.getOrThrowWith(Either.left(\"error\"), () => new Error('Unexpected Left')))\n   * ```\n   *\n   * @category getters\n   * @since 2.0.0\n   */\n  <R, L>(self: Either<R, L>, onLeft: (left: L) => unknown): R\n} = dual(2, <R, L>(self: Either<R, L>, onLeft: (left: L) => unknown): R => {\n  if (isRight(self)) {\n    return self.right\n  }\n  throw onLeft(self.left)\n})\n\n// TODO(4.0): by default should throw `L` (i.e getOrThrowWith with the identity function)\n/**\n * Extracts the value of an `Either` or throws if the `Either` is `Left`.\n *\n * The thrown error is a default error. To configure the error thrown, see  {@link getOrThrowWith}.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Either } from \"effect\"\n *\n * assert.deepStrictEqual(Either.getOrThrow(Either.right(1)), 1)\n * assert.throws(() => Either.getOrThrow(Either.left(\"error\")))\n * ```\n *\n * @throws `Error(\"getOrThrow called on a Left\")`\n *\n * @category getters\n * @since 2.0.0\n */\nexport const getOrThrow: <R, L>(self: Either<R, L>) => R = getOrThrowWith(() =>\n  new Error(\"getOrThrow called on a Left\")\n)\n\n/**\n * Returns `self` if it is a `Right` or `that` otherwise.\n *\n * @category error handling\n * @since 2.0.0\n */\nexport const orElse: {\n  /**\n   * Returns `self` if it is a `Right` or `that` otherwise.\n   *\n   * @category error handling\n   * @since 2.0.0\n   */\n  <L, R2, L2>(that: (left: L) => Either<R2, L2>): <R>(self: Either<R, L>) => Either<R | R2, L2>\n  /**\n   * Returns `self` if it is a `Right` or `that` otherwise.\n   *\n   * @category error handling\n   * @since 2.0.0\n   */\n  <R, L, R2, L2>(self: Either<R, L>, that: (left: L) => Either<R2, L2>): Either<R | R2, L2>\n} = dual(\n  2,\n  <R1, L1, R2, L2>(self: Either<R1, L1>, that: (left: L1) => Either<R2, L2>): Either<R1 | R2, L2> =>\n    isLeft(self) ? that(self.left) : right(self.right)\n)\n\n/**\n * @category sequencing\n * @since 2.0.0\n */\nexport const flatMap: {\n  /**\n   * @category sequencing\n   * @since 2.0.0\n   */\n  <R, R2, L2>(f: (right: R) => Either<R2, L2>): <L>(self: Either<R, L>) => Either<R2, L | L2>\n  /**\n   * @category sequencing\n   * @since 2.0.0\n   */\n  <R, L, R2, L2>(self: Either<R, L>, f: (right: R) => Either<R2, L2>): Either<R2, L | L2>\n} = dual(\n  2,\n  <R1, L1, R2, L2>(self: Either<R1, L1>, f: (right: R1) => Either<R2, L2>): Either<R2, L1 | L2> =>\n    isLeft(self) ? left(self.left) : f(self.right)\n)\n\n/**\n * Executes a sequence of two `Either`s. The second `Either` can be dependent on the result of the first `Either`.\n *\n * @category sequencing\n * @since 2.0.0\n */\nexport const andThen: {\n  /**\n   * Executes a sequence of two `Either`s. The second `Either` can be dependent on the result of the first `Either`.\n   *\n   * @category sequencing\n   * @since 2.0.0\n   */\n  <R, R2, L2>(f: (right: R) => Either<R2, L2>): <L>(self: Either<R, L>) => Either<R2, L | L2>\n  /**\n   * Executes a sequence of two `Either`s. The second `Either` can be dependent on the result of the first `Either`.\n   *\n   * @category sequencing\n   * @since 2.0.0\n   */\n  <R2, L2>(f: Either<R2, L2>): <L, R1>(self: Either<R1, L>) => Either<R2, L | L2>\n  /**\n   * Executes a sequence of two `Either`s. The second `Either` can be dependent on the result of the first `Either`.\n   *\n   * @category sequencing\n   * @since 2.0.0\n   */\n  <R, R2>(f: (right: R) => R2): <L>(self: Either<R, L>) => Either<R2, L>\n  /**\n   * Executes a sequence of two `Either`s. The second `Either` can be dependent on the result of the first `Either`.\n   *\n   * @category sequencing\n   * @since 2.0.0\n   */\n  <R2>(right: NotFunction<R2>): <R1, L>(self: Either<R1, L>) => Either<R2, L>\n  /**\n   * Executes a sequence of two `Either`s. The second `Either` can be dependent on the result of the first `Either`.\n   *\n   * @category sequencing\n   * @since 2.0.0\n   */\n  <R, L, R2, L2>(self: Either<R, L>, f: (right: R) => Either<R2, L2>): Either<R2, L | L2>\n  /**\n   * Executes a sequence of two `Either`s. The second `Either` can be dependent on the result of the first `Either`.\n   *\n   * @category sequencing\n   * @since 2.0.0\n   */\n  <R, L, R2, L2>(self: Either<R, L>, f: Either<R2, L2>): Either<R2, L | L2>\n  /**\n   * Executes a sequence of two `Either`s. The second `Either` can be dependent on the result of the first `Either`.\n   *\n   * @category sequencing\n   * @since 2.0.0\n   */\n  <R, L, R2>(self: Either<R, L>, f: (right: R) => R2): Either<R2, L>\n  /**\n   * Executes a sequence of two `Either`s. The second `Either` can be dependent on the result of the first `Either`.\n   *\n   * @category sequencing\n   * @since 2.0.0\n   */\n  <R, L, R2>(self: Either<R, L>, f: NotFunction<R2>): Either<R2, L>\n} = dual(\n  2,\n  <R, L, R2, L2>(self: Either<R, L>, f: (right: R) => Either<R2, L2> | Either<R2, L2>): Either<R2, L | L2> =>\n    flatMap(self, (a) => {\n      const b = isFunction(f) ? f(a) : f\n      return isEither(b) ? b : right(b)\n    })\n)\n\n/**\n * @category zipping\n * @since 2.0.0\n */\nexport const zipWith: {\n  /**\n   * @category zipping\n   * @since 2.0.0\n   */\n  <R2, L2, R, B>(that: Either<R2, L2>, f: (right: R, right2: R2) => B): <L>(self: Either<R, L>) => Either<B, L2 | L>\n  /**\n   * @category zipping\n   * @since 2.0.0\n   */\n  <R, L, R2, L2, B>(self: Either<R, L>, that: Either<R2, L2>, f: (right: R, right2: R2) => B): Either<B, L | L2>\n} = dual(\n  3,\n  <R, L, R2, L2, B>(self: Either<R, L>, that: Either<R2, L2>, f: (right: R, right2: R2) => B): Either<B, L | L2> =>\n    flatMap(self, (r) => map(that, (r2) => f(r, r2)))\n)\n\n/**\n * @category combining\n * @since 2.0.0\n */\nexport const ap: {\n  /**\n   * @category combining\n   * @since 2.0.0\n   */\n  <R, L2>(that: Either<R, L2>): <R2, L>(self: Either<(right: R) => R2, L>) => Either<R2, L | L2>\n  /**\n   * @category combining\n   * @since 2.0.0\n   */\n  <R, R2, L, L2>(self: Either<(right: R) => R2, L>, that: Either<R, L2>): Either<R2, L | L2>\n} = dual(\n  2,\n  <R, R2, L, L2>(self: Either<(right: R) => R2, L>, that: Either<R, L2>): Either<R2, L | L2> =>\n    zipWith(self, that, (f, a) => f(a))\n)\n\n/**\n * Takes a structure of `Either`s and returns an `Either` of values with the same structure.\n *\n * - If a tuple is supplied, then the returned `Either` will contain a tuple with the same length.\n * - If a struct is supplied, then the returned `Either` will contain a struct with the same keys.\n * - If an iterable is supplied, then the returned `Either` will contain an array.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Either } from \"effect\"\n *\n * assert.deepStrictEqual(Either.all([Either.right(1), Either.right(2)]), Either.right([1, 2]))\n * assert.deepStrictEqual(Either.all({ right: Either.right(1), b: Either.right(\"hello\") }), Either.right({ right: 1, b: \"hello\" }))\n * assert.deepStrictEqual(Either.all({ right: Either.right(1), b: Either.left(\"error\") }), Either.left(\"error\"))\n * ```\n *\n * @category combining\n * @since 2.0.0\n */\n// @ts-expect-error\nexport const all: <const I extends Iterable<Either<any, any>> | Record<string, Either<any, any>>>(\n  input: I\n) => [I] extends [ReadonlyArray<Either<any, any>>] ? Either<\n    { -readonly [K in keyof I]: [I[K]] extends [Either<infer R, any>] ? R : never },\n    I[number] extends never ? never : [I[number]] extends [Either<any, infer L>] ? L : never\n  >\n  : [I] extends [Iterable<Either<infer R, infer L>>] ? Either<Array<R>, L>\n  : Either<\n    { -readonly [K in keyof I]: [I[K]] extends [Either<infer R, any>] ? R : never },\n    I[keyof I] extends never ? never : [I[keyof I]] extends [Either<any, infer L>] ? L : never\n  > = (\n    input: Iterable<Either<any, any>> | Record<string, Either<any, any>>\n  ): Either<any, any> => {\n    if (Symbol.iterator in input) {\n      const out: Array<Either<any, any>> = []\n      for (const e of input) {\n        if (isLeft(e)) {\n          return e\n        }\n        out.push(e.right)\n      }\n      return right(out)\n    }\n\n    const out: Record<string, any> = {}\n    for (const key of Object.keys(input)) {\n      const e = input[key]\n      if (isLeft(e)) {\n        return e\n      }\n      out[key] = e.right\n    }\n    return right(out)\n  }\n\n/**\n * Returns an `Either` that swaps the error/success cases. This allows you to\n * use all methods on the error channel, possibly before flipping back.\n *\n * @since 2.0.0\n * @category mapping\n */\nexport const flip = <R, L>(self: Either<R, L>): Either<L, R> => isLeft(self) ? right(self.left) : left(self.right)\n\nconst adapter = Gen.adapter<EitherTypeLambda>()\n\n/**\n * @category generators\n * @since 2.0.0\n */\nexport const gen: Gen.Gen<EitherTypeLambda, Gen.Adapter<EitherTypeLambda>> = (...args) => {\n  const f = args.length === 1 ? args[0] : args[1].bind(args[0])\n  const iterator = f(adapter)\n  let state: IteratorResult<any> = iterator.next()\n  while (!state.done) {\n    const current = Gen.isGenKind(state.value)\n      ? state.value.value\n      : Gen.yieldWrapGet(state.value)\n    if (isLeft(current)) {\n      return current\n    }\n    state = iterator.next(current.right as never)\n  }\n  return right(state.value) as any\n}\n\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n\n/**\n * The \"do simulation\" in Effect allows you to write code in a more declarative style, similar to the \"do notation\" in other programming languages. It provides a way to define variables and perform operations on them using functions like `bind` and `let`.\n *\n * Here's how the do simulation works:\n *\n * 1. Start the do simulation using the `Do` value\n * 2. Within the do simulation scope, you can use the `bind` function to define variables and bind them to `Either` values\n * 3. You can accumulate multiple `bind` statements to define multiple variables within the scope\n * 4. Inside the do simulation scope, you can also use the `let` function to define variables and bind them to simple values\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Either, pipe } from \"effect\"\n *\n * const result = pipe(\n *   Either.Do,\n *   Either.bind(\"x\", () => Either.right(2)),\n *   Either.bind(\"y\", () => Either.right(3)),\n *   Either.let(\"sum\", ({ x, y }) => x + y)\n * )\n * assert.deepStrictEqual(result, Either.right({ x: 2, y: 3, sum: 5 }))\n * ```\n *\n * @see {@link bind}\n * @see {@link bindTo}\n * @see {@link let_ let}\n *\n * @category do notation\n * @since 2.0.0\n */\nexport const Do: Either<{}> = right({})\n\n/**\n * The \"do simulation\" in Effect allows you to write code in a more declarative style, similar to the \"do notation\" in other programming languages. It provides a way to define variables and perform operations on them using functions like `bind` and `let`.\n *\n * Here's how the do simulation works:\n *\n * 1. Start the do simulation using the `Do` value\n * 2. Within the do simulation scope, you can use the `bind` function to define variables and bind them to `Either` values\n * 3. You can accumulate multiple `bind` statements to define multiple variables within the scope\n * 4. Inside the do simulation scope, you can also use the `let` function to define variables and bind them to simple values\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Either, pipe } from \"effect\"\n *\n * const result = pipe(\n *   Either.Do,\n *   Either.bind(\"x\", () => Either.right(2)),\n *   Either.bind(\"y\", () => Either.right(3)),\n *   Either.let(\"sum\", ({ x, y }) => x + y)\n * )\n * assert.deepStrictEqual(result, Either.right({ x: 2, y: 3, sum: 5 }))\n * ```\n *\n * @see {@link Do}\n * @see {@link bindTo}\n * @see {@link let_ let}\n *\n * @category do notation\n * @since 2.0.0\n */\nexport const bind: {\n  /**\n   * The \"do simulation\" in Effect allows you to write code in a more declarative style, similar to the \"do notation\" in other programming languages. It provides a way to define variables and perform operations on them using functions like `bind` and `let`.\n   *\n   * Here's how the do simulation works:\n   *\n   * 1. Start the do simulation using the `Do` value\n   * 2. Within the do simulation scope, you can use the `bind` function to define variables and bind them to `Either` values\n   * 3. You can accumulate multiple `bind` statements to define multiple variables within the scope\n   * 4. Inside the do simulation scope, you can also use the `let` function to define variables and bind them to simple values\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Either, pipe } from \"effect\"\n   *\n   * const result = pipe(\n   *   Either.Do,\n   *   Either.bind(\"x\", () => Either.right(2)),\n   *   Either.bind(\"y\", () => Either.right(3)),\n   *   Either.let(\"sum\", ({ x, y }) => x + y)\n   * )\n   * assert.deepStrictEqual(result, Either.right({ x: 2, y: 3, sum: 5 }))\n   * ```\n   *\n   * @see {@link Do}\n   * @see {@link bindTo}\n   * @see {@link let_ let}\n   *\n   * @category do notation\n   * @since 2.0.0\n   */\n  <N extends string, A extends object, B, L2>(name: Exclude<N, keyof A>, f: (a: NoInfer<A>) => Either<B, L2>): <L1>(self: Either<A, L1>) => Either<{ [K in N | keyof A]: K extends keyof A ? A[K] : B }, L1 | L2>\n  /**\n   * The \"do simulation\" in Effect allows you to write code in a more declarative style, similar to the \"do notation\" in other programming languages. It provides a way to define variables and perform operations on them using functions like `bind` and `let`.\n   *\n   * Here's how the do simulation works:\n   *\n   * 1. Start the do simulation using the `Do` value\n   * 2. Within the do simulation scope, you can use the `bind` function to define variables and bind them to `Either` values\n   * 3. You can accumulate multiple `bind` statements to define multiple variables within the scope\n   * 4. Inside the do simulation scope, you can also use the `let` function to define variables and bind them to simple values\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Either, pipe } from \"effect\"\n   *\n   * const result = pipe(\n   *   Either.Do,\n   *   Either.bind(\"x\", () => Either.right(2)),\n   *   Either.bind(\"y\", () => Either.right(3)),\n   *   Either.let(\"sum\", ({ x, y }) => x + y)\n   * )\n   * assert.deepStrictEqual(result, Either.right({ x: 2, y: 3, sum: 5 }))\n   * ```\n   *\n   * @see {@link Do}\n   * @see {@link bindTo}\n   * @see {@link let_ let}\n   *\n   * @category do notation\n   * @since 2.0.0\n   */\n  <A extends object, L1, N extends string, B, L2>(\n    self: Either<A, L1>,\n    name: Exclude<N, keyof A>,\n    f: (a: NoInfer<A>) => Either<B, L2>\n  ): Either<{ [K in N | keyof A]: K extends keyof A ? A[K] : B }, L1 | L2>\n} = doNotation.bind<EitherTypeLambda>(map, flatMap)\n\n/**\n * The \"do simulation\" in Effect allows you to write code in a more declarative style, similar to the \"do notation\" in other programming languages. It provides a way to define variables and perform operations on them using functions like `bind` and `let`.\n *\n * Here's how the do simulation works:\n *\n * 1. Start the do simulation using the `Do` value\n * 2. Within the do simulation scope, you can use the `bind` function to define variables and bind them to `Either` values\n * 3. You can accumulate multiple `bind` statements to define multiple variables within the scope\n * 4. Inside the do simulation scope, you can also use the `let` function to define variables and bind them to simple values\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Either, pipe } from \"effect\"\n *\n * const result = pipe(\n *   Either.Do,\n *   Either.bind(\"x\", () => Either.right(2)),\n *   Either.bind(\"y\", () => Either.right(3)),\n *   Either.let(\"sum\", ({ x, y }) => x + y)\n * )\n * assert.deepStrictEqual(result, Either.right({ x: 2, y: 3, sum: 5 }))\n * ```\n *\n * @see {@link Do}\n * @see {@link bind}\n * @see {@link let_ let}\n *\n * @category do notation\n * @since 2.0.0\n */\nexport const bindTo: {\n  /**\n   * The \"do simulation\" in Effect allows you to write code in a more declarative style, similar to the \"do notation\" in other programming languages. It provides a way to define variables and perform operations on them using functions like `bind` and `let`.\n   *\n   * Here's how the do simulation works:\n   *\n   * 1. Start the do simulation using the `Do` value\n   * 2. Within the do simulation scope, you can use the `bind` function to define variables and bind them to `Either` values\n   * 3. You can accumulate multiple `bind` statements to define multiple variables within the scope\n   * 4. Inside the do simulation scope, you can also use the `let` function to define variables and bind them to simple values\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Either, pipe } from \"effect\"\n   *\n   * const result = pipe(\n   *   Either.Do,\n   *   Either.bind(\"x\", () => Either.right(2)),\n   *   Either.bind(\"y\", () => Either.right(3)),\n   *   Either.let(\"sum\", ({ x, y }) => x + y)\n   * )\n   * assert.deepStrictEqual(result, Either.right({ x: 2, y: 3, sum: 5 }))\n   * ```\n   *\n   * @see {@link Do}\n   * @see {@link bind}\n   * @see {@link let_ let}\n   *\n   * @category do notation\n   * @since 2.0.0\n   */\n  <N extends string>(name: N): <R, L>(self: Either<R, L>) => Either<{ [K in N]: R }, L>\n  /**\n   * The \"do simulation\" in Effect allows you to write code in a more declarative style, similar to the \"do notation\" in other programming languages. It provides a way to define variables and perform operations on them using functions like `bind` and `let`.\n   *\n   * Here's how the do simulation works:\n   *\n   * 1. Start the do simulation using the `Do` value\n   * 2. Within the do simulation scope, you can use the `bind` function to define variables and bind them to `Either` values\n   * 3. You can accumulate multiple `bind` statements to define multiple variables within the scope\n   * 4. Inside the do simulation scope, you can also use the `let` function to define variables and bind them to simple values\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Either, pipe } from \"effect\"\n   *\n   * const result = pipe(\n   *   Either.Do,\n   *   Either.bind(\"x\", () => Either.right(2)),\n   *   Either.bind(\"y\", () => Either.right(3)),\n   *   Either.let(\"sum\", ({ x, y }) => x + y)\n   * )\n   * assert.deepStrictEqual(result, Either.right({ x: 2, y: 3, sum: 5 }))\n   * ```\n   *\n   * @see {@link Do}\n   * @see {@link bind}\n   * @see {@link let_ let}\n   *\n   * @category do notation\n   * @since 2.0.0\n   */\n  <R, L, N extends string>(self: Either<R, L>, name: N): Either<{ [K in N]: R }, L>\n} = doNotation.bindTo<EitherTypeLambda>(map)\n\nconst let_: {\n  <N extends string, R extends object, B>(\n    name: Exclude<N, keyof R>,\n    f: (r: NoInfer<R>) => B\n  ): <L>(self: Either<R, L>) => Either<{ [K in N | keyof R]: K extends keyof R ? R[K] : B }, L>\n  <R extends object, L, N extends string, B>(\n    self: Either<R, L>,\n    name: Exclude<N, keyof R>,\n    f: (r: NoInfer<R>) => B\n  ): Either<{ [K in N | keyof R]: K extends keyof R ? R[K] : B }, L>\n} = doNotation.let_<EitherTypeLambda>(map)\n\nexport {\n  /**\n   * The \"do simulation\" in Effect allows you to write code in a more declarative style, similar to the \"do notation\" in other programming languages. It provides a way to define variables and perform operations on them using functions like `bind` and `let`.\n   *\n   * Here's how the do simulation works:\n   *\n   * 1. Start the do simulation using the `Do` value\n   * 2. Within the do simulation scope, you can use the `bind` function to define variables and bind them to `Either` values\n   * 3. You can accumulate multiple `bind` statements to define multiple variables within the scope\n   * 4. Inside the do simulation scope, you can also use the `let` function to define variables and bind them to simple values\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Either, pipe } from \"effect\"\n   *\n   * const result = pipe(\n   *   Either.Do,\n   *   Either.bind(\"x\", () => Either.right(2)),\n   *   Either.bind(\"y\", () => Either.right(3)),\n   *   Either.let(\"sum\", ({ x, y }) => x + y)\n   * )\n   * assert.deepStrictEqual(result, Either.right({ x: 2, y: 3, sum: 5 }))\n   * ```\n   *\n   * @see {@link Do}\n   * @see {@link bindTo}\n   * @see {@link bind}\n   *\n   * @category do notation\n   * @since 2.0.0\n   */\n  let_ as let\n}\n\n/**\n * Converts an `Option` of an `Either` into an `Either` of an `Option`.\n *\n * **Details**\n *\n * This function transforms an `Option<Either<A, E>>` into an\n * `Either<Option<A>, E>`. If the `Option` is `None`, the resulting `Either`\n * will be a `Right` with a `None` value. If the `Option` is `Some`, the\n * inner `Either` will be executed, and its result wrapped in a `Some`.\n *\n * @example\n * ```ts\n * import { Effect, Either, Option } from \"effect\"\n *\n * //      ┌─── Option<Either<number, never>>\n * //      ▼\n * const maybe = Option.some(Either.right(42))\n *\n * //      ┌─── Either<Option<number>, never, never>\n * //      ▼\n * const result = Either.transposeOption(maybe)\n *\n * console.log(Effect.runSync(result))\n * // Output: { _id: 'Option', _tag: 'Some', value: 42 }\n * ```\n *\n * @since 3.14.0\n * @category Optional Wrapping & Unwrapping\n */\nexport const transposeOption = <A = never, E = never>(\n  self: Option<Either<A, E>>\n): Either<Option<A>, E> => {\n  return option_.isNone(self) ? right(option_.none) : map(self.value, option_.some)\n}\n\n/**\n * Applies an `Either` on an `Option` and transposes the result.\n *\n * **Details**\n *\n * If the `Option` is `None`, the resulting `Either` will immediately succeed with a `Right` value of `None`.\n * If the `Option` is `Some`, the transformation function will be applied to the inner value, and its result wrapped in a `Some`.\n *\n * @example\n * ```ts\n * import { Either, Option, pipe } from \"effect\"\n *\n * //          ┌─── Either<Option<number>, never>>\n * //          ▼\n * const noneResult = pipe(\n *   Option.none(),\n *   Either.transposeMapOption(() => Either.right(42)) // will not be executed\n * )\n * console.log(noneResult)\n * // Output: { _id: 'Either', _tag: 'Right', right: { _id: 'Option', _tag: 'None' } }\n *\n * //          ┌─── Either<Option<number>, never>>\n * //          ▼\n * const someRightResult = pipe(\n *   Option.some(42),\n *   Either.transposeMapOption((value) => Either.right(value * 2))\n * )\n * console.log(someRightResult)\n * // Output: { _id: 'Either', _tag: 'Right', right: { _id: 'Option', _tag: 'Some', value: 84 } }\n * ```\n *\n * @since 3.15.0\n * @category Optional Wrapping & Unwrapping\n */\nexport const transposeMapOption = dual<\n  /**\n   * Applies an `Either` on an `Option` and transposes the result.\n   *\n   * **Details**\n   *\n   * If the `Option` is `None`, the resulting `Either` will immediately succeed with a `Right` value of `None`.\n   * If the `Option` is `Some`, the transformation function will be applied to the inner value, and its result wrapped in a `Some`.\n   *\n   * @example\n   * ```ts\n   * import { Either, Option, pipe } from \"effect\"\n   *\n   * //          ┌─── Either<Option<number>, never>>\n   * //          ▼\n   * const noneResult = pipe(\n   *   Option.none(),\n   *   Either.transposeMapOption(() => Either.right(42)) // will not be executed\n   * )\n   * console.log(noneResult)\n   * // Output: { _id: 'Either', _tag: 'Right', right: { _id: 'Option', _tag: 'None' } }\n   *\n   * //          ┌─── Either<Option<number>, never>>\n   * //          ▼\n   * const someRightResult = pipe(\n   *   Option.some(42),\n   *   Either.transposeMapOption((value) => Either.right(value * 2))\n   * )\n   * console.log(someRightResult)\n   * // Output: { _id: 'Either', _tag: 'Right', right: { _id: 'Option', _tag: 'Some', value: 84 } }\n   * ```\n   *\n   * @since 3.15.0\n   * @category Optional Wrapping & Unwrapping\n   */\n  <A, B, E = never>(f: (self: A) => Either<B, E>) => (self: Option<A>) => Either<Option<B>, E>,\n  /**\n   * Applies an `Either` on an `Option` and transposes the result.\n   *\n   * **Details**\n   *\n   * If the `Option` is `None`, the resulting `Either` will immediately succeed with a `Right` value of `None`.\n   * If the `Option` is `Some`, the transformation function will be applied to the inner value, and its result wrapped in a `Some`.\n   *\n   * @example\n   * ```ts\n   * import { Either, Option, pipe } from \"effect\"\n   *\n   * //          ┌─── Either<Option<number>, never>>\n   * //          ▼\n   * const noneResult = pipe(\n   *   Option.none(),\n   *   Either.transposeMapOption(() => Either.right(42)) // will not be executed\n   * )\n   * console.log(noneResult)\n   * // Output: { _id: 'Either', _tag: 'Right', right: { _id: 'Option', _tag: 'None' } }\n   *\n   * //          ┌─── Either<Option<number>, never>>\n   * //          ▼\n   * const someRightResult = pipe(\n   *   Option.some(42),\n   *   Either.transposeMapOption((value) => Either.right(value * 2))\n   * )\n   * console.log(someRightResult)\n   * // Output: { _id: 'Either', _tag: 'Right', right: { _id: 'Option', _tag: 'Some', value: 84 } }\n   * ```\n   *\n   * @since 3.15.0\n   * @category Optional Wrapping & Unwrapping\n   */\n  <A, B, E = never>(self: Option<A>, f: (self: A) => Either<B, E>) => Either<Option<B>, E>\n>(2, (self, f) => option_.isNone(self) ? right(option_.none) : map(f(self.value), option_.some))\n"],"names":["Equivalence","constNull","constUndefined","dual","identity","doNotation","either","option_","isFunction","Gen","TypeId","right","void_","void","left","fromNullable","self","onNullable","fromOption","try_","evaluate","e","try","catch","isEither","isLeft","isRight","getRight","getLeft","getEquivalence","make","x","y","mapBoth","onLeft","onRight","mapLeft","f","map","match","liftPredicate","a","predicate","orLeftWith","filterOrLeft","flatMap","r","merge","getOrElse","getOrNull","getOrUndefined","getOrThrowWith","getOrThrow","Error","orElse","that","andThen","b","zipWith","r2","ap","all","input","Symbol","iterator","out","push","key","Object","keys","flip","adapter","gen","args","length","bind","state","next","done","current","isGenKind","value","yieldWrapGet","Do","bindTo","let_","let","transposeOption","isNone","none","some","transposeMapOption"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7227, "column": 0}, "map": {"version":3,"file":"array.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/effect/src/internal/array.ts"],"sourcesContent":["/**\n * @since 2.0.0\n */\n\nimport type { NonEmptyArray } from \"../Array.js\"\n\n/** @internal */\nexport const isNonEmptyArray = <A>(self: ReadonlyArray<A>): self is NonEmptyArray<A> => self.length > 0\n"],"names":["isNonEmptyArray","self","length"],"mappings":"AAAA;;IAMA,cAAA;;;AACO,MAAMA,eAAe,IAAOC,IAAsB,GAA+BA,IAAI,CAACC,MAAM,GAAG,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7239, "column": 0}, "map": {"version":3,"file":"Order.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/effect/src/Order.ts"],"sourcesContent":["/**\n * This module provides an implementation of the `Order` type class which is used to define a total ordering on some type `A`.\n * An order is defined by a relation `<=`, which obeys the following laws:\n *\n * - either `x <= y` or `y <= x` (totality)\n * - if `x <= y` and `y <= x`, then `x == y` (antisymmetry)\n * - if `x <= y` and `y <= z`, then `x <= z` (transitivity)\n *\n * The truth table for compare is defined as follows:\n *\n * | `x <= y` | `x >= y` | Ordering |                       |\n * | -------- | -------- | -------- | --------------------- |\n * | `true`   | `true`   | `0`      | corresponds to x == y |\n * | `true`   | `false`  | `< 0`    | corresponds to x < y  |\n * | `false`  | `true`   | `> 0`    | corresponds to x > y  |\n *\n * @since 2.0.0\n */\nimport { dual } from \"./Function.js\"\nimport type { TypeLambda } from \"./HKT.js\"\n\n/**\n * @category type class\n * @since 2.0.0\n */\nexport interface Order<in A> {\n  (self: A, that: A): -1 | 0 | 1\n}\n\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexport interface OrderTypeLambda extends TypeLambda {\n  readonly type: Order<this[\"Target\"]>\n}\n\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport const make = <A>(\n  compare: (self: A, that: A) => -1 | 0 | 1\n): Order<A> =>\n(self, that) => self === that ? 0 : compare(self, that)\n\n/**\n * @category instances\n * @since 2.0.0\n */\nexport const string: Order<string> = make((self, that) => self < that ? -1 : 1)\n\n/**\n * @category instances\n * @since 2.0.0\n */\nexport const number: Order<number> = make((self, that) => self < that ? -1 : 1)\n\n/**\n * @category instances\n * @since 2.0.0\n */\nexport const boolean: Order<boolean> = make((self, that) => self < that ? -1 : 1)\n\n/**\n * @category instances\n * @since 2.0.0\n */\nexport const bigint: Order<bigint> = make((self, that) => self < that ? -1 : 1)\n\n/**\n * @since 2.0.0\n */\nexport const reverse = <A>(O: Order<A>): Order<A> => make((self, that) => O(that, self))\n\n/**\n * @category combining\n * @since 2.0.0\n */\nexport const combine: {\n  /**\n   * @category combining\n   * @since 2.0.0\n   */\n  <A>(that: Order<A>): (self: Order<A>) => Order<A>\n  /**\n   * @category combining\n   * @since 2.0.0\n   */\n  <A>(self: Order<A>, that: Order<A>): Order<A>\n} = dual(2, <A>(self: Order<A>, that: Order<A>): Order<A> =>\n  make((a1, a2) => {\n    const out = self(a1, a2)\n    if (out !== 0) {\n      return out\n    }\n    return that(a1, a2)\n  }))\n\n/**\n * @category combining\n * @since 2.0.0\n */\nexport const combineMany: {\n  /**\n   * @category combining\n   * @since 2.0.0\n   */\n  <A>(collection: Iterable<Order<A>>): (self: Order<A>) => Order<A>\n  /**\n   * @category combining\n   * @since 2.0.0\n   */\n  <A>(self: Order<A>, collection: Iterable<Order<A>>): Order<A>\n} = dual(2, <A>(self: Order<A>, collection: Iterable<Order<A>>): Order<A> =>\n  make((a1, a2) => {\n    let out = self(a1, a2)\n    if (out !== 0) {\n      return out\n    }\n    for (const O of collection) {\n      out = O(a1, a2)\n      if (out !== 0) {\n        return out\n      }\n    }\n    return out\n  }))\n\n/**\n * @since 2.0.0\n */\nexport const empty = <A>(): Order<A> => make(() => 0)\n\n/**\n * @category combining\n * @since 2.0.0\n */\nexport const combineAll = <A>(collection: Iterable<Order<A>>): Order<A> => combineMany(empty(), collection)\n\n/**\n * @category mapping\n * @since 2.0.0\n */\nexport const mapInput: {\n  /**\n   * @category mapping\n   * @since 2.0.0\n   */\n  <B, A>(f: (b: B) => A): (self: Order<A>) => Order<B>\n  /**\n   * @category mapping\n   * @since 2.0.0\n   */\n  <A, B>(self: Order<A>, f: (b: B) => A): Order<B>\n} = dual(\n  2,\n  <A, B>(self: Order<A>, f: (b: B) => A): Order<B> => make((b1, b2) => self(f(b1), f(b2)))\n)\n\n/**\n * @category instances\n * @since 2.0.0\n */\nexport const Date: Order<Date> = mapInput(number, (date) => date.getTime())\n\n/**\n * @category combining\n * @since 2.0.0\n */\nexport const product: {\n  <B>(that: Order<B>): <A>(self: Order<A>) => Order<readonly [A, B]> // readonly because invariant\n  <A, B>(self: Order<A>, that: Order<B>): Order<readonly [A, B]> // readonly because invariant\n} = dual(2, <A, B>(self: Order<A>, that: Order<B>): Order<readonly [A, B]> =>\n  make(([xa, xb], [ya, yb]) => {\n    const o = self(xa, ya)\n    return o !== 0 ? o : that(xb, yb)\n  }))\n\n/**\n * @category combining\n * @since 2.0.0\n */\nexport const all = <A>(collection: Iterable<Order<A>>): Order<ReadonlyArray<A>> => {\n  return make((x, y) => {\n    const len = Math.min(x.length, y.length)\n    let collectionLength = 0\n    for (const O of collection) {\n      if (collectionLength >= len) {\n        break\n      }\n      const o = O(x[collectionLength], y[collectionLength])\n      if (o !== 0) {\n        return o\n      }\n      collectionLength++\n    }\n    return 0\n  })\n}\n\n/**\n * @category combining\n * @since 2.0.0\n */\nexport const productMany: {\n  <A>(collection: Iterable<Order<A>>): (self: Order<A>) => Order<readonly [A, ...Array<A>]> // readonly because invariant\n  <A>(self: Order<A>, collection: Iterable<Order<A>>): Order<readonly [A, ...Array<A>]> // readonly because invariant\n} = dual(2, <A>(self: Order<A>, collection: Iterable<Order<A>>): Order<readonly [A, ...Array<A>]> => {\n  const O = all(collection)\n  return make((x, y) => {\n    const o = self(x[0], y[0])\n    return o !== 0 ? o : O(x.slice(1), y.slice(1))\n  })\n})\n\n/**\n * Similar to `Promise.all` but operates on `Order`s.\n *\n * ```\n * [Order<A>, Order<B>, ...] -> Order<[A, B, ...]>\n * ```\n *\n * This function creates and returns a new `Order` for a tuple of values based on the given `Order`s for each element in the tuple.\n * The returned `Order` compares two tuples of the same type by applying the corresponding `Order` to each element in the tuple.\n * It is useful when you need to compare two tuples of the same type and you have a specific way of comparing each element\n * of the tuple.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport const tuple = <T extends ReadonlyArray<Order<any>>>(\n  ...elements: T\n): Order<Readonly<{ [I in keyof T]: [T[I]] extends [Order<infer A>] ? A : never }>> => all(elements) as any\n\n/**\n * This function creates and returns a new `Order` for an array of values based on a given `Order` for the elements of the array.\n * The returned `Order` compares two arrays by applying the given `Order` to each element in the arrays.\n * If all elements are equal, the arrays are then compared based on their length.\n * It is useful when you need to compare two arrays of the same type and you have a specific way of comparing each element of the array.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport const array = <A>(O: Order<A>): Order<ReadonlyArray<A>> =>\n  make((self, that) => {\n    const aLen = self.length\n    const bLen = that.length\n    const len = Math.min(aLen, bLen)\n    for (let i = 0; i < len; i++) {\n      const o = O(self[i], that[i])\n      if (o !== 0) {\n        return o\n      }\n    }\n    return number(aLen, bLen)\n  })\n\n/**\n * This function creates and returns a new `Order` for a struct of values based on the given `Order`s\n * for each property in the struct.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport const struct = <R extends { readonly [x: string]: Order<any> }>(\n  fields: R\n): Order<{ [K in keyof R]: [R[K]] extends [Order<infer A>] ? A : never }> => {\n  const keys = Object.keys(fields)\n  return make((self, that) => {\n    for (const key of keys) {\n      const o = fields[key](self[key], that[key])\n      if (o !== 0) {\n        return o\n      }\n    }\n    return 0\n  })\n}\n\n/**\n * Test whether one value is _strictly less than_ another.\n *\n * @since 2.0.0\n */\nexport const lessThan = <A>(O: Order<A>): {\n  (that: A): (self: A) => boolean\n  (self: A, that: A): boolean\n} => dual(2, (self: A, that: A) => O(self, that) === -1)\n\n/**\n * Test whether one value is _strictly greater than_ another.\n *\n * @since 2.0.0\n */\nexport const greaterThan = <A>(O: Order<A>): {\n  (that: A): (self: A) => boolean\n  (self: A, that: A): boolean\n} => dual(2, (self: A, that: A) => O(self, that) === 1)\n\n/**\n * Test whether one value is _non-strictly less than_ another.\n *\n * @since 2.0.0\n */\nexport const lessThanOrEqualTo = <A>(O: Order<A>): {\n  (that: A): (self: A) => boolean\n  (self: A, that: A): boolean\n} => dual(2, (self: A, that: A) => O(self, that) !== 1)\n\n/**\n * Test whether one value is _non-strictly greater than_ another.\n *\n * @since 2.0.0\n */\nexport const greaterThanOrEqualTo = <A>(O: Order<A>): {\n  (that: A): (self: A) => boolean\n  (self: A, that: A): boolean\n} => dual(2, (self: A, that: A) => O(self, that) !== -1)\n\n/**\n * Take the minimum of two values. If they are considered equal, the first argument is chosen.\n *\n * @since 2.0.0\n */\nexport const min = <A>(O: Order<A>): {\n  (that: A): (self: A) => A\n  (self: A, that: A): A\n} => dual(2, (self: A, that: A) => self === that || O(self, that) < 1 ? self : that)\n\n/**\n * Take the maximum of two values. If they are considered equal, the first argument is chosen.\n *\n * @since 2.0.0\n */\nexport const max = <A>(O: Order<A>): {\n  (that: A): (self: A) => A\n  (self: A, that: A): A\n} => dual(2, (self: A, that: A) => self === that || O(self, that) > -1 ? self : that)\n\n/**\n * Clamp a value between a minimum and a maximum.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Order, Number } from \"effect\"\n *\n * const clamp = Order.clamp(Number.Order)({ minimum: 1, maximum: 5 })\n *\n * assert.equal(clamp(3), 3)\n * assert.equal(clamp(0), 1)\n * assert.equal(clamp(6), 5)\n * ```\n *\n * @since 2.0.0\n */\nexport const clamp = <A>(O: Order<A>): {\n  (options: {\n    minimum: A\n    maximum: A\n  }): (self: A) => A\n  (self: A, options: {\n    minimum: A\n    maximum: A\n  }): A\n} =>\n  dual(\n    2,\n    (self: A, options: {\n      minimum: A\n      maximum: A\n    }): A => min(O)(options.maximum, max(O)(options.minimum, self))\n  )\n\n/**\n * Test whether a value is between a minimum and a maximum (inclusive).\n *\n * @since 2.0.0\n */\nexport const between = <A>(O: Order<A>): {\n  (options: {\n    minimum: A\n    maximum: A\n  }): (self: A) => boolean\n  (self: A, options: {\n    minimum: A\n    maximum: A\n  }): boolean\n} =>\n  dual(\n    2,\n    (self: A, options: {\n      minimum: A\n      maximum: A\n    }): boolean => !lessThan(O)(self, options.minimum) && !greaterThan(O)(self, options.maximum)\n  )\n"],"names":["dual","make","compare","self","that","string","number","boolean","bigint","reverse","O","combine","a1","a2","out","combineMany","collection","empty","combineAll","mapInput","f","b1","b2","Date","date","getTime","product","xa","xb","ya","yb","o","all","x","y","len","Math","min","length","collectionLength","productMany","slice","tuple","elements","array","aLen","bLen","i","struct","fields","keys","Object","key","lessThan","greaterThan","lessThanOrEqualTo","greaterThanOrEqualTo","max","clamp","options","maximum","minimum","between"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7383, "column": 0}, "map": {"version":3,"file":"Option.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/effect/src/Option.ts"],"sourcesContent":["/**\n * @since 2.0.0\n */\nimport type { Either } from \"./Either.js\"\nimport * as Equal from \"./Equal.js\"\nimport * as Equivalence from \"./Equivalence.js\"\nimport type { LazyArg } from \"./Function.js\"\nimport { constNull, constUndefined, dual, identity, isFunction } from \"./Function.js\"\nimport type { TypeLambda } from \"./HKT.js\"\nimport type { Inspectable } from \"./Inspectable.js\"\nimport * as doNotation from \"./internal/doNotation.js\"\nimport * as either from \"./internal/either.js\"\nimport * as option from \"./internal/option.js\"\nimport type { Order } from \"./Order.js\"\nimport * as order from \"./Order.js\"\nimport type { Pipeable } from \"./Pipeable.js\"\nimport type { Predicate, Refinement } from \"./Predicate.js\"\nimport type { Covariant, NoInfer, NotFunction } from \"./Types.js\"\nimport type * as Unify from \"./Unify.js\"\nimport * as Gen from \"./Utils.js\"\n\n/**\n * The `Option` data type represents optional values. An `Option<A>` can either\n * be `Some<A>`, containing a value of type `A`, or `None`, representing the\n * absence of a value.\n *\n * **When to Use**\n *\n * You can use `Option` in scenarios like:\n *\n * - Using it for initial values\n * - Returning values from functions that are not defined for all possible\n *   inputs (referred to as “partial functions”)\n * - Managing optional fields in data structures\n * - Handling optional function arguments\n *\n * @category Models\n * @since 2.0.0\n */\nexport type Option<A> = None<A> | Some<A>\n\n/**\n * @category Symbols\n * @since 2.0.0\n */\nexport const TypeId: unique symbol = Symbol.for(\"effect/Option\")\n\n/**\n * @category Symbols\n * @since 2.0.0\n */\nexport type TypeId = typeof TypeId\n\n/**\n * @category Models\n * @since 2.0.0\n */\nexport interface None<out A> extends Pipeable, Inspectable {\n  readonly _tag: \"None\"\n  readonly _op: \"None\"\n  readonly [TypeId]: {\n    readonly _A: Covariant<A>\n  }\n  [Unify.typeSymbol]?: unknown\n  [Unify.unifySymbol]?: OptionUnify<this>\n  [Unify.ignoreSymbol]?: OptionUnifyIgnore\n}\n\n/**\n * @category Models\n * @since 2.0.0\n */\nexport interface Some<out A> extends Pipeable, Inspectable {\n  readonly _tag: \"Some\"\n  readonly _op: \"Some\"\n  readonly value: A\n  readonly [TypeId]: {\n    readonly _A: Covariant<A>\n  }\n  [Unify.typeSymbol]?: unknown\n  [Unify.unifySymbol]?: OptionUnify<this>\n  [Unify.ignoreSymbol]?: OptionUnifyIgnore\n}\n\n/**\n * @category Models\n * @since 2.0.0\n */\nexport interface OptionUnify<A extends { [Unify.typeSymbol]?: any }> {\n  Option?: () => A[Unify.typeSymbol] extends Option<infer A0> | infer _ ? Option<A0> : never\n}\n\n/**\n * @since 2.0.0\n */\nexport declare namespace Option {\n  /**\n   * Extracts the type of the value contained in an `Option`.\n   *\n   * **Example** (Getting the Value Type of an Option)\n   *\n   * ```ts\n   * import { Option } from \"effect\"\n   *\n   * // Declare an Option holding a string\n   * declare const myOption: Option.Option<string>\n   *\n   * // Extract the type of the value within the Option\n   * //\n   * //      ┌─── string\n   * //      ▼\n   * type MyType = Option.Option.Value<typeof myOption>\n   * ```\n   *\n   * @since 2.0.0\n   * @category Type-level Utils\n   */\n  export type Value<T extends Option<any>> = [T] extends [Option<infer _A>] ? _A : never\n}\n\n/**\n * @category Models\n * @since 2.0.0\n */\nexport interface OptionUnifyIgnore {}\n\n/**\n * @category Type Lambdas\n * @since 2.0.0\n */\nexport interface OptionTypeLambda extends TypeLambda {\n  readonly type: Option<this[\"Target\"]>\n}\n\n/**\n * Represents the absence of a value by creating an empty `Option`.\n *\n * `Option.none` returns an `Option<never>`, which is a subtype of `Option<A>`.\n * This means you can use it in place of any `Option<A>` regardless of the type\n * `A`.\n *\n * **Example** (Creating an Option with No Value)\n *\n * ```ts\n * import { Option } from \"effect\"\n *\n * // An Option holding no value\n * //\n * //      ┌─── Option<never>\n * //      ▼\n * const noValue = Option.none()\n *\n * console.log(noValue)\n * // Output: { _id: 'Option', _tag: 'None' }\n * ```\n *\n * @see {@link some} for the opposite operation.\n *\n * @category Constructors\n * @since 2.0.0\n */\nexport const none = <A = never>(): Option<A> => option.none\n\n/**\n * Wraps the given value into an `Option` to represent its presence.\n *\n * **Example** (Creating an Option with a Value)\n *\n * ```ts\n * import { Option } from \"effect\"\n *\n * // An Option holding the number 1\n * //\n * //      ┌─── Option<number>\n * //      ▼\n * const value = Option.some(1)\n *\n * console.log(value)\n * // Output: { _id: 'Option', _tag: 'Some', value: 1 }\n * ```\n *\n * @see {@link none} for the opposite operation.\n *\n * @category Constructors\n * @since 2.0.0\n */\nexport const some: <A>(value: A) => Option<A> = option.some\n\n/**\n * Determines whether the given value is an `Option`.\n *\n * **Details**\n *\n * This function checks if a value is an instance of `Option`. It returns `true`\n * if the value is either `Option.some` or `Option.none`, and `false` otherwise.\n * This is particularly useful when working with unknown values or when you need\n * to ensure type safety in your code.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * console.log(Option.isOption(Option.some(1)))\n * // Output: true\n *\n * console.log(Option.isOption(Option.none()))\n * // Output: true\n *\n * console.log(Option.isOption({}))\n * // Output: false\n * ```\n *\n * @category Guards\n * @since 2.0.0\n */\nexport const isOption: (input: unknown) => input is Option<unknown> = option.isOption\n\n/**\n * Checks whether an `Option` represents the absence of a value (`None`).\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * console.log(Option.isNone(Option.some(1)))\n * // Output: false\n *\n * console.log(Option.isNone(Option.none()))\n * // Output: true\n * ```\n *\n * @see {@link isSome} for the opposite check.\n *\n * @category Guards\n * @since 2.0.0\n */\nexport const isNone: <A>(self: Option<A>) => self is None<A> = option.isNone\n\n/**\n * Checks whether an `Option` contains a value (`Some`).\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * console.log(Option.isSome(Option.some(1)))\n * // Output: true\n *\n * console.log(Option.isSome(Option.none()))\n * // Output: false\n * ```\n *\n * @see {@link isNone} for the opposite check.\n *\n * @category Guards\n * @since 2.0.0\n */\nexport const isSome: <A>(self: Option<A>) => self is Some<A> = option.isSome\n\n/**\n * Performs pattern matching on an `Option` to handle both `Some` and `None`\n * cases.\n *\n * **Details**\n *\n * This function allows you to match against an `Option` and handle both\n * scenarios: when the `Option` is `None` (i.e., contains no value), and when\n * the `Option` is `Some` (i.e., contains a value). It executes one of the\n * provided functions based on the case:\n *\n * - If the `Option` is `None`, the `onNone` function is executed and its result\n *   is returned.\n * - If the `Option` is `Some`, the `onSome` function is executed with the\n *   contained value, and its result is returned.\n *\n * This function provides a concise and functional way to handle optional values\n * without resorting to `if` or manual checks, making your code more declarative\n * and readable.\n *\n * **Example** (Pattern Matching with Option)\n *\n * ```ts\n * import { Option } from \"effect\"\n *\n * const foo = Option.some(1)\n *\n * const message = Option.match(foo, {\n *   onNone: () => \"Option is empty\",\n *   onSome: (value) => `Option has a value: ${value}`\n * })\n *\n * console.log(message)\n * // Output: \"Option has a value: 1\"\n * ```\n *\n * @category Pattern matching\n * @since 2.0.0\n */\nexport const match: {\n  /**\n   * Performs pattern matching on an `Option` to handle both `Some` and `None`\n   * cases.\n   *\n   * **Details**\n   *\n   * This function allows you to match against an `Option` and handle both\n   * scenarios: when the `Option` is `None` (i.e., contains no value), and when\n   * the `Option` is `Some` (i.e., contains a value). It executes one of the\n   * provided functions based on the case:\n   *\n   * - If the `Option` is `None`, the `onNone` function is executed and its result\n   *   is returned.\n   * - If the `Option` is `Some`, the `onSome` function is executed with the\n   *   contained value, and its result is returned.\n   *\n   * This function provides a concise and functional way to handle optional values\n   * without resorting to `if` or manual checks, making your code more declarative\n   * and readable.\n   *\n   * **Example** (Pattern Matching with Option)\n   *\n   * ```ts\n   * import { Option } from \"effect\"\n   *\n   * const foo = Option.some(1)\n   *\n   * const message = Option.match(foo, {\n   *   onNone: () => \"Option is empty\",\n   *   onSome: (value) => `Option has a value: ${value}`\n   * })\n   *\n   * console.log(message)\n   * // Output: \"Option has a value: 1\"\n   * ```\n   *\n   * @category Pattern matching\n   * @since 2.0.0\n   */\n  <B, A, C = B>(\n    options: {\n      readonly onNone: LazyArg<B>\n      readonly onSome: (a: A) => C\n    }\n  ): (self: Option<A>) => B | C\n  /**\n   * Performs pattern matching on an `Option` to handle both `Some` and `None`\n   * cases.\n   *\n   * **Details**\n   *\n   * This function allows you to match against an `Option` and handle both\n   * scenarios: when the `Option` is `None` (i.e., contains no value), and when\n   * the `Option` is `Some` (i.e., contains a value). It executes one of the\n   * provided functions based on the case:\n   *\n   * - If the `Option` is `None`, the `onNone` function is executed and its result\n   *   is returned.\n   * - If the `Option` is `Some`, the `onSome` function is executed with the\n   *   contained value, and its result is returned.\n   *\n   * This function provides a concise and functional way to handle optional values\n   * without resorting to `if` or manual checks, making your code more declarative\n   * and readable.\n   *\n   * **Example** (Pattern Matching with Option)\n   *\n   * ```ts\n   * import { Option } from \"effect\"\n   *\n   * const foo = Option.some(1)\n   *\n   * const message = Option.match(foo, {\n   *   onNone: () => \"Option is empty\",\n   *   onSome: (value) => `Option has a value: ${value}`\n   * })\n   *\n   * console.log(message)\n   * // Output: \"Option has a value: 1\"\n   * ```\n   *\n   * @category Pattern matching\n   * @since 2.0.0\n   */\n  <A, B, C = B>(\n    self: Option<A>,\n    options: {\n      readonly onNone: LazyArg<B>\n      readonly onSome: (a: A) => C\n    }\n  ): B | C\n} = dual(\n  2,\n  <A, B, C = B>(self: Option<A>, { onNone, onSome }: {\n    readonly onNone: LazyArg<B>\n    readonly onSome: (a: A) => C\n  }): B | C => isNone(self) ? onNone() : onSome(self.value)\n)\n\n/**\n * Converts an `Option`-returning function into a type guard.\n *\n * **Details**\n *\n * This function transforms a function that returns an `Option` into a type\n * guard, ensuring type safety when validating or narrowing types. The returned\n * type guard function checks whether the input satisfies the condition defined\n * in the original `Option`-returning function.\n *\n * If the original function returns `Option.some`, the type guard evaluates to\n * `true`, confirming the input is of the desired type. If the function returns\n * `Option.none`, the type guard evaluates to `false`.\n *\n * This utility is especially useful for validating types in union types,\n * filtering arrays, or ensuring safe handling of specific subtypes.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * type MyData = string | number\n *\n * const parseString = (data: MyData): Option.Option<string> =>\n *   typeof data === \"string\" ? Option.some(data) : Option.none()\n *\n * //      ┌─── (a: MyData) => a is string\n * //      ▼\n * const isString = Option.toRefinement(parseString)\n *\n * console.log(isString(\"a\"))\n * // Output: true\n *\n * console.log(isString(1))\n * // Output: false\n * ```\n *\n * @category Conversions\n * @since 2.0.0\n */\nexport const toRefinement = <A, B extends A>(f: (a: A) => Option<B>): (a: A) => a is B => (a: A): a is B => isSome(f(a))\n\n/**\n * Converts an `Iterable` into an `Option`, wrapping the first element if it\n * exists.\n *\n * **Details**\n *\n * This function takes an `Iterable` (e.g., an array, a generator, or any object\n * implementing the `Iterable` interface) and returns an `Option` based on its\n * content:\n *\n * - If the `Iterable` contains at least one element, the first element is\n *   wrapped in a `Some` and returned.\n * - If the `Iterable` is empty, `None` is returned, representing the absence of\n *   a value.\n *\n * This utility is useful for safely handling collections that might be empty,\n * ensuring you explicitly handle both cases where a value exists or doesn't.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * console.log(Option.fromIterable([1, 2, 3]))\n * // Output: { _id: 'Option', _tag: 'Some', value: 1 }\n *\n * console.log(Option.fromIterable([]))\n * // Output: { _id: 'Option', _tag: 'None' }\n * ```\n *\n * @category Constructors\n * @since 2.0.0\n */\nexport const fromIterable = <A>(collection: Iterable<A>): Option<A> => {\n  for (const a of collection) {\n    return some(a)\n  }\n  return none()\n}\n\n/**\n * Converts an `Either` into an `Option` by discarding the error and extracting\n * the right value.\n *\n * **Details**\n *\n * This function takes an `Either` and returns an `Option` based on its value:\n *\n * - If the `Either` is a `Right`, its value is wrapped in a `Some` and\n *   returned.\n * - If the `Either` is a `Left`, the error is discarded, and `None` is\n *   returned.\n *\n * This is particularly useful when you only care about the success case\n * (`Right`) of an `Either` and want to handle the result using `Option`. By\n * using this function, you can convert `Either` into a simpler structure for\n * cases where error handling is not required.\n *\n * @example\n * ```ts\n * import { Either, Option } from \"effect\"\n *\n * console.log(Option.getRight(Either.right(\"ok\")))\n * // Output: { _id: 'Option', _tag: 'Some', value: 'ok' }\n *\n * console.log(Option.getRight(Either.left(\"err\")))\n * // Output: { _id: 'Option', _tag: 'None' }\n * ```\n *\n * @see {@link getLeft} for the opposite operation.\n *\n * @category Conversions\n * @since 2.0.0\n */\nexport const getRight: <R, L>(self: Either<R, L>) => Option<R> = either.getRight\n\n/**\n * Converts an `Either` into an `Option` by discarding the right value and\n * extracting the left value.\n *\n * **Details**\n *\n * This function transforms an `Either` into an `Option` as follows:\n *\n * - If the `Either` is a `Left`, its value is wrapped in a `Some` and returned.\n * - If the `Either` is a `Right`, the value is discarded, and `None` is\n *   returned.\n *\n * This utility is useful when you only care about the error case (`Left`) of an\n * `Either` and want to handle it as an `Option`. By discarding the right value,\n * it simplifies error-focused workflows.\n *\n * @example\n * ```ts\n * import { Either, Option } from \"effect\"\n *\n * console.log(Option.getLeft(Either.right(\"ok\")))\n * // Output: { _id: 'Option', _tag: 'None' }\n *\n * console.log(Option.getLeft(Either.left(\"err\")))\n * // Output: { _id: 'Option', _tag: 'Some', value: 'err' }\n * ```\n *\n * @see {@link getRight} for the opposite operation.\n *\n * @category Conversions\n * @since 2.0.0\n */\nexport const getLeft: <R, L>(self: Either<R, L>) => Option<L> = either.getLeft\n\n/**\n * Returns the value contained in the `Option` if it is `Some`, otherwise\n * evaluates and returns the result of `onNone`.\n *\n * **Details**\n *\n * This function allows you to provide a fallback value or computation for when\n * an `Option` is `None`. If the `Option` contains a value (`Some`), that value\n * is returned. If it is empty (`None`), the `onNone` function is executed, and\n * its result is returned instead.\n *\n * This utility is helpful for safely handling `Option` values by ensuring you\n * always receive a meaningful result, whether or not the `Option` contains a\n * value. It is particularly useful for providing default values or alternative\n * logic when working with optional values.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * console.log(Option.some(1).pipe(Option.getOrElse(() => 0)))\n * // Output: 1\n *\n * console.log(Option.none().pipe(Option.getOrElse(() => 0)))\n * // Output: 0\n * ```\n *\n * @see {@link getOrNull} for a version that returns `null` instead of executing a function.\n * @see {@link getOrUndefined} for a version that returns `undefined` instead of executing a function.\n *\n * @category Getters\n * @since 2.0.0\n */\nexport const getOrElse: {\n  /**\n   * Returns the value contained in the `Option` if it is `Some`, otherwise\n   * evaluates and returns the result of `onNone`.\n   *\n   * **Details**\n   *\n   * This function allows you to provide a fallback value or computation for when\n   * an `Option` is `None`. If the `Option` contains a value (`Some`), that value\n   * is returned. If it is empty (`None`), the `onNone` function is executed, and\n   * its result is returned instead.\n   *\n   * This utility is helpful for safely handling `Option` values by ensuring you\n   * always receive a meaningful result, whether or not the `Option` contains a\n   * value. It is particularly useful for providing default values or alternative\n   * logic when working with optional values.\n   *\n   * @example\n   * ```ts\n   * import { Option } from \"effect\"\n   *\n   * console.log(Option.some(1).pipe(Option.getOrElse(() => 0)))\n   * // Output: 1\n   *\n   * console.log(Option.none().pipe(Option.getOrElse(() => 0)))\n   * // Output: 0\n   * ```\n   *\n   * @see {@link getOrNull} for a version that returns `null` instead of executing a function.\n   * @see {@link getOrUndefined} for a version that returns `undefined` instead of executing a function.\n   *\n   * @category Getters\n   * @since 2.0.0\n   */\n  <B>(onNone: LazyArg<B>): <A>(self: Option<A>) => B | A\n  /**\n   * Returns the value contained in the `Option` if it is `Some`, otherwise\n   * evaluates and returns the result of `onNone`.\n   *\n   * **Details**\n   *\n   * This function allows you to provide a fallback value or computation for when\n   * an `Option` is `None`. If the `Option` contains a value (`Some`), that value\n   * is returned. If it is empty (`None`), the `onNone` function is executed, and\n   * its result is returned instead.\n   *\n   * This utility is helpful for safely handling `Option` values by ensuring you\n   * always receive a meaningful result, whether or not the `Option` contains a\n   * value. It is particularly useful for providing default values or alternative\n   * logic when working with optional values.\n   *\n   * @example\n   * ```ts\n   * import { Option } from \"effect\"\n   *\n   * console.log(Option.some(1).pipe(Option.getOrElse(() => 0)))\n   * // Output: 1\n   *\n   * console.log(Option.none().pipe(Option.getOrElse(() => 0)))\n   * // Output: 0\n   * ```\n   *\n   * @see {@link getOrNull} for a version that returns `null` instead of executing a function.\n   * @see {@link getOrUndefined} for a version that returns `undefined` instead of executing a function.\n   *\n   * @category Getters\n   * @since 2.0.0\n   */\n  <A, B>(self: Option<A>, onNone: LazyArg<B>): A | B\n} = dual(\n  2,\n  <A, B>(self: Option<A>, onNone: LazyArg<B>): A | B => isNone(self) ? onNone() : self.value\n)\n\n/**\n * Returns the provided `Option` `that` if the current `Option` (`self`) is\n * `None`; otherwise, it returns `self`.\n *\n * **Details**\n *\n * This function provides a fallback mechanism for `Option` values. If the\n * current `Option` is `None` (i.e., it contains no value), the `that` function\n * is evaluated, and its resulting `Option` is returned. If the current `Option`\n * is `Some` (i.e., it contains a value), the original `Option` is returned\n * unchanged.\n *\n * This is particularly useful for chaining fallback values or computations,\n * allowing you to provide alternative `Option` values when the first one is\n * empty.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * console.log(Option.none().pipe(Option.orElse(() => Option.none())))\n * // Output: { _id: 'Option', _tag: 'None' }\n *\n * console.log(Option.some(\"a\").pipe(Option.orElse(() => Option.none())))\n * // Output: { _id: 'Option', _tag: 'Some', value: 'a' }\n *\n * console.log(Option.none().pipe(Option.orElse(() => Option.some(\"b\"))))\n * // Output: { _id: 'Option', _tag: 'Some', value: 'b' }\n *\n * console.log(Option.some(\"a\").pipe(Option.orElse(() => Option.some(\"b\"))))\n * // Output: { _id: 'Option', _tag: 'Some', value: 'a' }\n * ```\n *\n * @category Error handling\n * @since 2.0.0\n */\nexport const orElse: {\n  /**\n   * Returns the provided `Option` `that` if the current `Option` (`self`) is\n   * `None`; otherwise, it returns `self`.\n   *\n   * **Details**\n   *\n   * This function provides a fallback mechanism for `Option` values. If the\n   * current `Option` is `None` (i.e., it contains no value), the `that` function\n   * is evaluated, and its resulting `Option` is returned. If the current `Option`\n   * is `Some` (i.e., it contains a value), the original `Option` is returned\n   * unchanged.\n   *\n   * This is particularly useful for chaining fallback values or computations,\n   * allowing you to provide alternative `Option` values when the first one is\n   * empty.\n   *\n   * @example\n   * ```ts\n   * import { Option } from \"effect\"\n   *\n   * console.log(Option.none().pipe(Option.orElse(() => Option.none())))\n   * // Output: { _id: 'Option', _tag: 'None' }\n   *\n   * console.log(Option.some(\"a\").pipe(Option.orElse(() => Option.none())))\n   * // Output: { _id: 'Option', _tag: 'Some', value: 'a' }\n   *\n   * console.log(Option.none().pipe(Option.orElse(() => Option.some(\"b\"))))\n   * // Output: { _id: 'Option', _tag: 'Some', value: 'b' }\n   *\n   * console.log(Option.some(\"a\").pipe(Option.orElse(() => Option.some(\"b\"))))\n   * // Output: { _id: 'Option', _tag: 'Some', value: 'a' }\n   * ```\n   *\n   * @category Error handling\n   * @since 2.0.0\n   */\n  <B>(that: LazyArg<Option<B>>): <A>(self: Option<A>) => Option<B | A>\n  /**\n   * Returns the provided `Option` `that` if the current `Option` (`self`) is\n   * `None`; otherwise, it returns `self`.\n   *\n   * **Details**\n   *\n   * This function provides a fallback mechanism for `Option` values. If the\n   * current `Option` is `None` (i.e., it contains no value), the `that` function\n   * is evaluated, and its resulting `Option` is returned. If the current `Option`\n   * is `Some` (i.e., it contains a value), the original `Option` is returned\n   * unchanged.\n   *\n   * This is particularly useful for chaining fallback values or computations,\n   * allowing you to provide alternative `Option` values when the first one is\n   * empty.\n   *\n   * @example\n   * ```ts\n   * import { Option } from \"effect\"\n   *\n   * console.log(Option.none().pipe(Option.orElse(() => Option.none())))\n   * // Output: { _id: 'Option', _tag: 'None' }\n   *\n   * console.log(Option.some(\"a\").pipe(Option.orElse(() => Option.none())))\n   * // Output: { _id: 'Option', _tag: 'Some', value: 'a' }\n   *\n   * console.log(Option.none().pipe(Option.orElse(() => Option.some(\"b\"))))\n   * // Output: { _id: 'Option', _tag: 'Some', value: 'b' }\n   *\n   * console.log(Option.some(\"a\").pipe(Option.orElse(() => Option.some(\"b\"))))\n   * // Output: { _id: 'Option', _tag: 'Some', value: 'a' }\n   * ```\n   *\n   * @category Error handling\n   * @since 2.0.0\n   */\n  <A, B>(self: Option<A>, that: LazyArg<Option<B>>): Option<A | B>\n} = dual(\n  2,\n  <A, B>(self: Option<A>, that: LazyArg<Option<B>>): Option<A | B> => isNone(self) ? that() : self\n)\n\n/**\n * Returns the provided default value wrapped in `Some` if the current `Option`\n * (`self`) is `None`; otherwise, returns `self`.\n *\n * **Details**\n *\n * This function provides a way to supply a default value for cases where an\n * `Option` is `None`. If the current `Option` is empty (`None`), the `onNone`\n * function is executed to compute the default value, which is then wrapped in a\n * `Some`. If the current `Option` contains a value (`Some`), it is returned as\n * is.\n *\n * This is particularly useful for handling optional values where a fallback\n * default needs to be provided explicitly in case of absence.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * console.log(Option.none().pipe(Option.orElseSome(() => \"b\")))\n * // Output: { _id: 'Option', _tag: 'Some', value: 'b' }\n *\n * console.log(Option.some(\"a\").pipe(Option.orElseSome(() => \"b\")))\n * // Output: { _id: 'Option', _tag: 'Some', value: 'a' }\n * ```\n *\n * @category Error handling\n * @since 2.0.0\n */\nexport const orElseSome: {\n  /**\n   * Returns the provided default value wrapped in `Some` if the current `Option`\n   * (`self`) is `None`; otherwise, returns `self`.\n   *\n   * **Details**\n   *\n   * This function provides a way to supply a default value for cases where an\n   * `Option` is `None`. If the current `Option` is empty (`None`), the `onNone`\n   * function is executed to compute the default value, which is then wrapped in a\n   * `Some`. If the current `Option` contains a value (`Some`), it is returned as\n   * is.\n   *\n   * This is particularly useful for handling optional values where a fallback\n   * default needs to be provided explicitly in case of absence.\n   *\n   * @example\n   * ```ts\n   * import { Option } from \"effect\"\n   *\n   * console.log(Option.none().pipe(Option.orElseSome(() => \"b\")))\n   * // Output: { _id: 'Option', _tag: 'Some', value: 'b' }\n   *\n   * console.log(Option.some(\"a\").pipe(Option.orElseSome(() => \"b\")))\n   * // Output: { _id: 'Option', _tag: 'Some', value: 'a' }\n   * ```\n   *\n   * @category Error handling\n   * @since 2.0.0\n   */\n  <B>(onNone: LazyArg<B>): <A>(self: Option<A>) => Option<B | A>\n  /**\n   * Returns the provided default value wrapped in `Some` if the current `Option`\n   * (`self`) is `None`; otherwise, returns `self`.\n   *\n   * **Details**\n   *\n   * This function provides a way to supply a default value for cases where an\n   * `Option` is `None`. If the current `Option` is empty (`None`), the `onNone`\n   * function is executed to compute the default value, which is then wrapped in a\n   * `Some`. If the current `Option` contains a value (`Some`), it is returned as\n   * is.\n   *\n   * This is particularly useful for handling optional values where a fallback\n   * default needs to be provided explicitly in case of absence.\n   *\n   * @example\n   * ```ts\n   * import { Option } from \"effect\"\n   *\n   * console.log(Option.none().pipe(Option.orElseSome(() => \"b\")))\n   * // Output: { _id: 'Option', _tag: 'Some', value: 'b' }\n   *\n   * console.log(Option.some(\"a\").pipe(Option.orElseSome(() => \"b\")))\n   * // Output: { _id: 'Option', _tag: 'Some', value: 'a' }\n   * ```\n   *\n   * @category Error handling\n   * @since 2.0.0\n   */\n  <A, B>(self: Option<A>, onNone: LazyArg<B>): Option<A | B>\n} = dual(\n  2,\n  <A, B>(self: Option<A>, onNone: LazyArg<B>): Option<A | B> => isNone(self) ? some(onNone()) : self\n)\n\n/**\n * Similar to {@link orElse}, but returns an `Either` wrapped in an `Option` to\n * indicate the source of the value.\n *\n * **Details**\n *\n * This function allows you to provide a fallback `Option` in case the current\n * `Option` (`self`) is `None`. However, unlike `orElse`, it returns the value\n * wrapped in an `Either` object, providing additional information about where\n * the value came from:\n *\n * - If the value is from the fallback `Option` (`that`), it is wrapped in an\n *   `Either.right`.\n * - If the value is from the original `Option` (`self`), it is wrapped in an\n *   `Either.left`.\n *\n * This is especially useful when you need to differentiate between values\n * originating from the primary `Option` and those coming from the fallback,\n * while still maintaining the `Option`-style handling.\n *\n * @category Error handling\n * @since 2.0.0\n */\nexport const orElseEither: {\n  /**\n   * Similar to {@link orElse}, but returns an `Either` wrapped in an `Option` to\n   * indicate the source of the value.\n   *\n   * **Details**\n   *\n   * This function allows you to provide a fallback `Option` in case the current\n   * `Option` (`self`) is `None`. However, unlike `orElse`, it returns the value\n   * wrapped in an `Either` object, providing additional information about where\n   * the value came from:\n   *\n   * - If the value is from the fallback `Option` (`that`), it is wrapped in an\n   *   `Either.right`.\n   * - If the value is from the original `Option` (`self`), it is wrapped in an\n   *   `Either.left`.\n   *\n   * This is especially useful when you need to differentiate between values\n   * originating from the primary `Option` and those coming from the fallback,\n   * while still maintaining the `Option`-style handling.\n   *\n   * @category Error handling\n   * @since 2.0.0\n   */\n  <B>(that: LazyArg<Option<B>>): <A>(self: Option<A>) => Option<Either<B, A>>\n  /**\n   * Similar to {@link orElse}, but returns an `Either` wrapped in an `Option` to\n   * indicate the source of the value.\n   *\n   * **Details**\n   *\n   * This function allows you to provide a fallback `Option` in case the current\n   * `Option` (`self`) is `None`. However, unlike `orElse`, it returns the value\n   * wrapped in an `Either` object, providing additional information about where\n   * the value came from:\n   *\n   * - If the value is from the fallback `Option` (`that`), it is wrapped in an\n   *   `Either.right`.\n   * - If the value is from the original `Option` (`self`), it is wrapped in an\n   *   `Either.left`.\n   *\n   * This is especially useful when you need to differentiate between values\n   * originating from the primary `Option` and those coming from the fallback,\n   * while still maintaining the `Option`-style handling.\n   *\n   * @category Error handling\n   * @since 2.0.0\n   */\n  <A, B>(self: Option<A>, that: LazyArg<Option<B>>): Option<Either<B, A>>\n} = dual(\n  2,\n  <A, B>(self: Option<A>, that: LazyArg<Option<B>>): Option<Either<B, A>> =>\n    isNone(self) ? map(that(), either.right) : map(self, either.left)\n)\n\n/**\n * Returns the first `Some` value found in an `Iterable` collection of\n * `Option`s, or `None` if no `Some` is found.\n *\n * **Details**\n *\n * This function iterates over a collection of `Option` values and returns the\n * first `Some` it encounters. If the collection contains only `None` values,\n * the result will also be `None`. This utility is useful for efficiently\n * finding the first valid value in a sequence of potentially empty or invalid\n * options.\n *\n * The iteration stops as soon as a `Some` is found, making this function\n * efficient for large collections.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * console.log(Option.firstSomeOf([\n *   Option.none(),\n *   Option.some(1),\n *   Option.some(2)\n * ]))\n * // Output: { _id: 'Option', _tag: 'Some', value: 1 }\n * ```\n *\n * @category Error handling\n * @since 2.0.0\n */\nexport const firstSomeOf = <T, C extends Iterable<Option<T>> = Iterable<Option<T>>>(\n  collection: C\n): [C] extends [Iterable<Option<infer A>>] ? Option<A> : never => {\n  let out: Option<unknown> = none()\n  for (out of collection) {\n    if (isSome(out)) {\n      return out as any\n    }\n  }\n  return out as any\n}\n\n/**\n * Converts a nullable value into an `Option`. Returns `None` if the value is\n * `null` or `undefined`, otherwise wraps the value in a `Some`.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * console.log(Option.fromNullable(undefined))\n * // Output: { _id: 'Option', _tag: 'None' }\n *\n * console.log(Option.fromNullable(null))\n * // Output: { _id: 'Option', _tag: 'None' }\n *\n * console.log(Option.fromNullable(1))\n * // Output: { _id: 'Option', _tag: 'Some', value: 1 }\n * ```\n *\n * @category Conversions\n * @since 2.0.0\n */\nexport const fromNullable = <A>(\n  nullableValue: A\n): Option<NonNullable<A>> => (nullableValue == null ? none() : some(nullableValue as NonNullable<A>))\n\n/**\n * Lifts a function that returns `null` or `undefined` into the `Option`\n * context.\n *\n * **Details**\n *\n * This function takes a function `f` that might return `null` or `undefined`\n * and transforms it into a function that returns an `Option`. The resulting\n * function will return:\n * - `Some` if the original function produces a non-null, non-undefined value.\n * - `None` if the original function produces `null` or `undefined`.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * const parse = (s: string): number | undefined => {\n *   const n = parseFloat(s)\n *   return isNaN(n) ? undefined : n\n * }\n *\n * const parseOption = Option.liftNullable(parse)\n *\n * console.log(parseOption(\"1\"))\n * // Output: { _id: 'Option', _tag: 'Some', value: 1 }\n *\n * console.log(parseOption(\"not a number\"))\n * // Output: { _id: 'Option', _tag: 'None' }\n * ```\n *\n * @category Conversions\n * @since 2.0.0\n */\nexport const liftNullable = <A extends ReadonlyArray<unknown>, B>(\n  f: (...a: A) => B | null | undefined\n): (...a: A) => Option<NonNullable<B>> =>\n(...a) => fromNullable(f(...a))\n\n/**\n * Returns the value contained in the `Option` if it is `Some`; otherwise,\n * returns `null`.\n *\n * **Details**\n *\n * This function provides a way to extract the value of an `Option` while\n * falling back to `null` if the `Option` is `None`.\n *\n * It is particularly useful in scenarios where `null` is an acceptable\n * placeholder for the absence of a value, such as when interacting with APIs or\n * systems that use `null` as a default for missing values.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * console.log(Option.getOrNull(Option.some(1)))\n * // Output: 1\n *\n * console.log(Option.getOrNull(Option.none()))\n * // Output: null\n * ```\n *\n * @category Getters\n * @since 2.0.0\n */\nexport const getOrNull: <A>(self: Option<A>) => A | null = getOrElse(constNull)\n\n/**\n * Returns the value contained in the `Option` if it is `Some`; otherwise,\n * returns `undefined`.\n *\n * **Details**\n *\n * This function provides a way to extract the value of an `Option` while\n * falling back to `undefined` if the `Option` is `None`.\n *\n * It is particularly useful in scenarios where `undefined` is an acceptable\n * placeholder for the absence of a value, such as when interacting with APIs or\n * systems that use `undefined` as a default for missing values.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * console.log(Option.getOrUndefined(Option.some(1)))\n * // Output: 1\n *\n * console.log(Option.getOrUndefined(Option.none()))\n * // Output: undefined\n * ```\n *\n * @category Getters\n * @since 2.0.0\n */\nexport const getOrUndefined: <A>(self: Option<A>) => A | undefined = getOrElse(constUndefined)\n\n/**\n * Lifts a function that throws exceptions into a function that returns an\n * `Option`.\n *\n * **Details**\n *\n * This utility function takes a function `f` that might throw an exception and\n * transforms it into a safer function that returns an `Option`. If the original\n * function executes successfully, the result is wrapped in a `Some`. If an\n * exception is thrown, the result is `None`, allowing the developer to handle\n * errors in a functional, type-safe way.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * const parse = Option.liftThrowable(JSON.parse)\n *\n * console.log(parse(\"1\"))\n * // Output: { _id: 'Option', _tag: 'Some', value: 1 }\n *\n * console.log(parse(\"\"))\n * // Output: { _id: 'Option', _tag: 'None' }\n * ```\n *\n * @category Conversions\n * @since 2.0.0\n */\nexport const liftThrowable = <A extends ReadonlyArray<unknown>, B>(\n  f: (...a: A) => B\n): (...a: A) => Option<B> =>\n(...a) => {\n  try {\n    return some(f(...a))\n  } catch {\n    return none()\n  }\n}\n\n/**\n * Extracts the value of an `Option` or throws an error if the `Option` is\n * `None`, using a custom error factory.\n *\n * **Details**\n *\n * This function allows you to extract the value of an `Option` when it is\n * `Some`. If the `Option` is `None`, it throws an error generated by the\n * provided `onNone` function. This utility is particularly useful when you need\n * a fail-fast behavior for empty `Option` values and want to provide a custom\n * error message or object.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Option } from \"effect\"\n *\n * assert.deepStrictEqual(\n *   Option.getOrThrowWith(Option.some(1), () => new Error('Unexpected None')),\n *   1\n * )\n * assert.throws(() => Option.getOrThrowWith(Option.none(), () => new Error('Unexpected None')))\n * ```\n *\n * @see {@link getOrThrow} for a version that throws a default error.\n *\n * @category Conversions\n * @since 2.0.0\n */\nexport const getOrThrowWith: {\n  /**\n   * Extracts the value of an `Option` or throws an error if the `Option` is\n   * `None`, using a custom error factory.\n   *\n   * **Details**\n   *\n   * This function allows you to extract the value of an `Option` when it is\n   * `Some`. If the `Option` is `None`, it throws an error generated by the\n   * provided `onNone` function. This utility is particularly useful when you need\n   * a fail-fast behavior for empty `Option` values and want to provide a custom\n   * error message or object.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Option } from \"effect\"\n   *\n   * assert.deepStrictEqual(\n   *   Option.getOrThrowWith(Option.some(1), () => new Error('Unexpected None')),\n   *   1\n   * )\n   * assert.throws(() => Option.getOrThrowWith(Option.none(), () => new Error('Unexpected None')))\n   * ```\n   *\n   * @see {@link getOrThrow} for a version that throws a default error.\n   *\n   * @category Conversions\n   * @since 2.0.0\n   */\n  (onNone: () => unknown): <A>(self: Option<A>) => A\n  /**\n   * Extracts the value of an `Option` or throws an error if the `Option` is\n   * `None`, using a custom error factory.\n   *\n   * **Details**\n   *\n   * This function allows you to extract the value of an `Option` when it is\n   * `Some`. If the `Option` is `None`, it throws an error generated by the\n   * provided `onNone` function. This utility is particularly useful when you need\n   * a fail-fast behavior for empty `Option` values and want to provide a custom\n   * error message or object.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Option } from \"effect\"\n   *\n   * assert.deepStrictEqual(\n   *   Option.getOrThrowWith(Option.some(1), () => new Error('Unexpected None')),\n   *   1\n   * )\n   * assert.throws(() => Option.getOrThrowWith(Option.none(), () => new Error('Unexpected None')))\n   * ```\n   *\n   * @see {@link getOrThrow} for a version that throws a default error.\n   *\n   * @category Conversions\n   * @since 2.0.0\n   */\n  <A>(self: Option<A>, onNone: () => unknown): A\n} = dual(2, <A>(self: Option<A>, onNone: () => unknown): A => {\n  if (isSome(self)) {\n    return self.value\n  }\n  throw onNone()\n})\n\n/**\n * Extracts the value of an `Option` or throws a default error if the `Option`\n * is `None`.\n *\n * **Details**\n *\n * This function extracts the value from an `Option` if it is `Some`. If the\n * `Option` is `None`, it throws a default error. It is useful for fail-fast\n * scenarios where the absence of a value is treated as an exceptional case and\n * a default error is sufficient.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Option } from \"effect\"\n *\n * assert.deepStrictEqual(Option.getOrThrow(Option.some(1)), 1)\n * assert.throws(() => Option.getOrThrow(Option.none()))\n * ```\n *\n * @see {@link getOrThrowWith} for a version that allows you to provide a custom error.\n *\n * @category Conversions\n * @since 2.0.0\n */\nexport const getOrThrow: <A>(self: Option<A>) => A = getOrThrowWith(() => new Error(\"getOrThrow called on a None\"))\n\n/**\n * Transforms the value inside a `Some` to a new value using the provided\n * function, while leaving `None` unchanged.\n *\n * **Details**\n *\n * This function applies a mapping function `f` to the value inside an `Option`\n * if it is a `Some`. If the `Option` is `None`, it remains unchanged. The\n * result is a new `Option` with the transformed value (if it was a `Some`) or\n * still `None`.\n *\n * This utility is particularly useful for chaining transformations in a\n * functional way without needing to manually handle `None` cases.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * // Mapping over a `Some`\n * const someValue = Option.some(2)\n *\n * console.log(Option.map(someValue, (n) => n * 2))\n * // Output: { _id: 'Option', _tag: 'Some', value: 4 }\n *\n * // Mapping over a `None`\n * const noneValue = Option.none<number>()\n *\n * console.log(Option.map(noneValue, (n) => n * 2))\n * // Output: { _id: 'Option', _tag: 'None' }\n * ```\n *\n * @category Mapping\n * @since 2.0.0\n */\nexport const map: {\n  /**\n   * Transforms the value inside a `Some` to a new value using the provided\n   * function, while leaving `None` unchanged.\n   *\n   * **Details**\n   *\n   * This function applies a mapping function `f` to the value inside an `Option`\n   * if it is a `Some`. If the `Option` is `None`, it remains unchanged. The\n   * result is a new `Option` with the transformed value (if it was a `Some`) or\n   * still `None`.\n   *\n   * This utility is particularly useful for chaining transformations in a\n   * functional way without needing to manually handle `None` cases.\n   *\n   * @example\n   * ```ts\n   * import { Option } from \"effect\"\n   *\n   * // Mapping over a `Some`\n   * const someValue = Option.some(2)\n   *\n   * console.log(Option.map(someValue, (n) => n * 2))\n   * // Output: { _id: 'Option', _tag: 'Some', value: 4 }\n   *\n   * // Mapping over a `None`\n   * const noneValue = Option.none<number>()\n   *\n   * console.log(Option.map(noneValue, (n) => n * 2))\n   * // Output: { _id: 'Option', _tag: 'None' }\n   * ```\n   *\n   * @category Mapping\n   * @since 2.0.0\n   */\n  <A, B>(f: (a: A) => B): (self: Option<A>) => Option<B>\n  /**\n   * Transforms the value inside a `Some` to a new value using the provided\n   * function, while leaving `None` unchanged.\n   *\n   * **Details**\n   *\n   * This function applies a mapping function `f` to the value inside an `Option`\n   * if it is a `Some`. If the `Option` is `None`, it remains unchanged. The\n   * result is a new `Option` with the transformed value (if it was a `Some`) or\n   * still `None`.\n   *\n   * This utility is particularly useful for chaining transformations in a\n   * functional way without needing to manually handle `None` cases.\n   *\n   * @example\n   * ```ts\n   * import { Option } from \"effect\"\n   *\n   * // Mapping over a `Some`\n   * const someValue = Option.some(2)\n   *\n   * console.log(Option.map(someValue, (n) => n * 2))\n   * // Output: { _id: 'Option', _tag: 'Some', value: 4 }\n   *\n   * // Mapping over a `None`\n   * const noneValue = Option.none<number>()\n   *\n   * console.log(Option.map(noneValue, (n) => n * 2))\n   * // Output: { _id: 'Option', _tag: 'None' }\n   * ```\n   *\n   * @category Mapping\n   * @since 2.0.0\n   */\n  <A, B>(self: Option<A>, f: (a: A) => B): Option<B>\n} = dual(\n  2,\n  <A, B>(self: Option<A>, f: (a: A) => B): Option<B> => isNone(self) ? none() : some(f(self.value))\n)\n\n/**\n * Replaces the value inside a `Some` with the specified constant value, leaving\n * `None` unchanged.\n *\n * **Details**\n *\n * This function transforms an `Option` by replacing the value inside a `Some`\n * with the given constant value `b`. If the `Option` is `None`, it remains\n * unchanged.\n *\n * This is useful when you want to preserve the presence of a value (`Some`) but\n * replace its content with a fixed value.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * // Replacing the value of a `Some`\n * const someValue = Option.some(42)\n *\n * console.log(Option.as(someValue, \"new value\"))\n * // Output: { _id: 'Option', _tag: 'Some', value: 'new value' }\n *\n * // Replacing a `None` (no effect)\n * const noneValue = Option.none<number>()\n *\n * console.log(Option.as(noneValue, \"new value\"))\n * // Output: { _id: 'Option', _tag: 'None' }\n * ```\n *\n * @category Mapping\n * @since 2.0.0\n */\nexport const as: {\n  /**\n   * Replaces the value inside a `Some` with the specified constant value, leaving\n   * `None` unchanged.\n   *\n   * **Details**\n   *\n   * This function transforms an `Option` by replacing the value inside a `Some`\n   * with the given constant value `b`. If the `Option` is `None`, it remains\n   * unchanged.\n   *\n   * This is useful when you want to preserve the presence of a value (`Some`) but\n   * replace its content with a fixed value.\n   *\n   * @example\n   * ```ts\n   * import { Option } from \"effect\"\n   *\n   * // Replacing the value of a `Some`\n   * const someValue = Option.some(42)\n   *\n   * console.log(Option.as(someValue, \"new value\"))\n   * // Output: { _id: 'Option', _tag: 'Some', value: 'new value' }\n   *\n   * // Replacing a `None` (no effect)\n   * const noneValue = Option.none<number>()\n   *\n   * console.log(Option.as(noneValue, \"new value\"))\n   * // Output: { _id: 'Option', _tag: 'None' }\n   * ```\n   *\n   * @category Mapping\n   * @since 2.0.0\n   */\n  <B>(b: B): <X>(self: Option<X>) => Option<B>\n  /**\n   * Replaces the value inside a `Some` with the specified constant value, leaving\n   * `None` unchanged.\n   *\n   * **Details**\n   *\n   * This function transforms an `Option` by replacing the value inside a `Some`\n   * with the given constant value `b`. If the `Option` is `None`, it remains\n   * unchanged.\n   *\n   * This is useful when you want to preserve the presence of a value (`Some`) but\n   * replace its content with a fixed value.\n   *\n   * @example\n   * ```ts\n   * import { Option } from \"effect\"\n   *\n   * // Replacing the value of a `Some`\n   * const someValue = Option.some(42)\n   *\n   * console.log(Option.as(someValue, \"new value\"))\n   * // Output: { _id: 'Option', _tag: 'Some', value: 'new value' }\n   *\n   * // Replacing a `None` (no effect)\n   * const noneValue = Option.none<number>()\n   *\n   * console.log(Option.as(noneValue, \"new value\"))\n   * // Output: { _id: 'Option', _tag: 'None' }\n   * ```\n   *\n   * @category Mapping\n   * @since 2.0.0\n   */\n  <X, B>(self: Option<X>, b: B): Option<B>\n} = dual(2, <X, B>(self: Option<X>, b: B): Option<B> => map(self, () => b))\n\n/**\n * Replaces the value inside a `Some` with the constant value `void`, leaving\n * `None` unchanged.\n *\n * **Details**\n *\n * This function transforms an `Option` by replacing the value inside a `Some`\n * with `void`. If the `Option` is `None`, it remains unchanged.\n *\n * This is particularly useful in scenarios where the presence or absence of a\n * value is significant, but the actual content of the value is irrelevant.\n *\n * @category Mapping\n * @since 2.0.0\n */\nexport const asVoid: <_>(self: Option<_>) => Option<void> = as(undefined)\n\nconst void_: Option<void> = some(undefined)\nexport {\n  /**\n   * @since 2.0.0\n   */\n  void_ as void\n}\n\n/**\n * Applies a function to the value of a `Some` and flattens the resulting\n * `Option`. If the input is `None`, it remains `None`.\n *\n * **Details**\n *\n * This function allows you to chain computations that return `Option` values.\n * If the input `Option` is `Some`, the provided function `f` is applied to the\n * contained value, and the resulting `Option` is returned. If the input is\n * `None`, the function is not applied, and the result remains `None`.\n *\n * This utility is particularly useful for sequencing operations that may fail\n * or produce optional results, enabling clean and concise workflows for\n * handling such cases.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * interface Address {\n *   readonly city: string\n *   readonly street: Option.Option<string>\n * }\n *\n * interface User {\n *   readonly id: number\n *   readonly username: string\n *   readonly email: Option.Option<string>\n *   readonly address: Option.Option<Address>\n * }\n *\n * const user: User = {\n *   id: 1,\n *   username: \"john_doe\",\n *   email: Option.some(\"john.doe@example.com\"),\n *   address: Option.some({\n *     city: \"New York\",\n *     street: Option.some(\"123 Main St\")\n *   })\n * }\n *\n * // Use flatMap to extract the street value\n * const street = user.address.pipe(\n *   Option.flatMap((address) => address.street)\n * )\n *\n * console.log(street)\n * // Output: { _id: 'Option', _tag: 'Some', value: '123 Main St' }\n * ```\n *\n * @category Sequencing\n * @since 2.0.0\n */\nexport const flatMap: {\n  /**\n   * Applies a function to the value of a `Some` and flattens the resulting\n   * `Option`. If the input is `None`, it remains `None`.\n   *\n   * **Details**\n   *\n   * This function allows you to chain computations that return `Option` values.\n   * If the input `Option` is `Some`, the provided function `f` is applied to the\n   * contained value, and the resulting `Option` is returned. If the input is\n   * `None`, the function is not applied, and the result remains `None`.\n   *\n   * This utility is particularly useful for sequencing operations that may fail\n   * or produce optional results, enabling clean and concise workflows for\n   * handling such cases.\n   *\n   * @example\n   * ```ts\n   * import { Option } from \"effect\"\n   *\n   * interface Address {\n   *   readonly city: string\n   *   readonly street: Option.Option<string>\n   * }\n   *\n   * interface User {\n   *   readonly id: number\n   *   readonly username: string\n   *   readonly email: Option.Option<string>\n   *   readonly address: Option.Option<Address>\n   * }\n   *\n   * const user: User = {\n   *   id: 1,\n   *   username: \"john_doe\",\n   *   email: Option.some(\"john.doe@example.com\"),\n   *   address: Option.some({\n   *     city: \"New York\",\n   *     street: Option.some(\"123 Main St\")\n   *   })\n   * }\n   *\n   * // Use flatMap to extract the street value\n   * const street = user.address.pipe(\n   *   Option.flatMap((address) => address.street)\n   * )\n   *\n   * console.log(street)\n   * // Output: { _id: 'Option', _tag: 'Some', value: '123 Main St' }\n   * ```\n   *\n   * @category Sequencing\n   * @since 2.0.0\n   */\n  <A, B>(f: (a: A) => Option<B>): (self: Option<A>) => Option<B>\n  /**\n   * Applies a function to the value of a `Some` and flattens the resulting\n   * `Option`. If the input is `None`, it remains `None`.\n   *\n   * **Details**\n   *\n   * This function allows you to chain computations that return `Option` values.\n   * If the input `Option` is `Some`, the provided function `f` is applied to the\n   * contained value, and the resulting `Option` is returned. If the input is\n   * `None`, the function is not applied, and the result remains `None`.\n   *\n   * This utility is particularly useful for sequencing operations that may fail\n   * or produce optional results, enabling clean and concise workflows for\n   * handling such cases.\n   *\n   * @example\n   * ```ts\n   * import { Option } from \"effect\"\n   *\n   * interface Address {\n   *   readonly city: string\n   *   readonly street: Option.Option<string>\n   * }\n   *\n   * interface User {\n   *   readonly id: number\n   *   readonly username: string\n   *   readonly email: Option.Option<string>\n   *   readonly address: Option.Option<Address>\n   * }\n   *\n   * const user: User = {\n   *   id: 1,\n   *   username: \"john_doe\",\n   *   email: Option.some(\"john.doe@example.com\"),\n   *   address: Option.some({\n   *     city: \"New York\",\n   *     street: Option.some(\"123 Main St\")\n   *   })\n   * }\n   *\n   * // Use flatMap to extract the street value\n   * const street = user.address.pipe(\n   *   Option.flatMap((address) => address.street)\n   * )\n   *\n   * console.log(street)\n   * // Output: { _id: 'Option', _tag: 'Some', value: '123 Main St' }\n   * ```\n   *\n   * @category Sequencing\n   * @since 2.0.0\n   */\n  <A, B>(self: Option<A>, f: (a: A) => Option<B>): Option<B>\n} = dual(\n  2,\n  <A, B>(self: Option<A>, f: (a: A) => Option<B>): Option<B> => isNone(self) ? none() : f(self.value)\n)\n\n/**\n * Chains two `Option`s together. The second `Option` can either be a static\n * value or depend on the result of the first `Option`.\n *\n * **Details**\n *\n * This function enables sequencing of two `Option` computations. If the first\n * `Option` is `Some`, the second `Option` is evaluated. The second `Option` can\n * either:\n *\n * - Be a static `Option` value.\n * - Be a function that produces an `Option`, optionally based on the value of\n *   the first `Option`.\n *\n * If the first `Option` is `None`, the function skips the evaluation of the\n * second `Option` and directly returns `None`.\n *\n * @category Sequencing\n * @since 2.0.0\n */\nexport const andThen: {\n  /**\n   * Chains two `Option`s together. The second `Option` can either be a static\n   * value or depend on the result of the first `Option`.\n   *\n   * **Details**\n   *\n   * This function enables sequencing of two `Option` computations. If the first\n   * `Option` is `Some`, the second `Option` is evaluated. The second `Option` can\n   * either:\n   *\n   * - Be a static `Option` value.\n   * - Be a function that produces an `Option`, optionally based on the value of\n   *   the first `Option`.\n   *\n   * If the first `Option` is `None`, the function skips the evaluation of the\n   * second `Option` and directly returns `None`.\n   *\n   * @category Sequencing\n   * @since 2.0.0\n   */\n  <A, B>(f: (a: A) => Option<B>): (self: Option<A>) => Option<B>\n  /**\n   * Chains two `Option`s together. The second `Option` can either be a static\n   * value or depend on the result of the first `Option`.\n   *\n   * **Details**\n   *\n   * This function enables sequencing of two `Option` computations. If the first\n   * `Option` is `Some`, the second `Option` is evaluated. The second `Option` can\n   * either:\n   *\n   * - Be a static `Option` value.\n   * - Be a function that produces an `Option`, optionally based on the value of\n   *   the first `Option`.\n   *\n   * If the first `Option` is `None`, the function skips the evaluation of the\n   * second `Option` and directly returns `None`.\n   *\n   * @category Sequencing\n   * @since 2.0.0\n   */\n  <B>(f: Option<B>): <A>(self: Option<A>) => Option<B>\n  /**\n   * Chains two `Option`s together. The second `Option` can either be a static\n   * value or depend on the result of the first `Option`.\n   *\n   * **Details**\n   *\n   * This function enables sequencing of two `Option` computations. If the first\n   * `Option` is `Some`, the second `Option` is evaluated. The second `Option` can\n   * either:\n   *\n   * - Be a static `Option` value.\n   * - Be a function that produces an `Option`, optionally based on the value of\n   *   the first `Option`.\n   *\n   * If the first `Option` is `None`, the function skips the evaluation of the\n   * second `Option` and directly returns `None`.\n   *\n   * @category Sequencing\n   * @since 2.0.0\n   */\n  <A, B>(f: (a: A) => B): (self: Option<A>) => Option<B>\n  /**\n   * Chains two `Option`s together. The second `Option` can either be a static\n   * value or depend on the result of the first `Option`.\n   *\n   * **Details**\n   *\n   * This function enables sequencing of two `Option` computations. If the first\n   * `Option` is `Some`, the second `Option` is evaluated. The second `Option` can\n   * either:\n   *\n   * - Be a static `Option` value.\n   * - Be a function that produces an `Option`, optionally based on the value of\n   *   the first `Option`.\n   *\n   * If the first `Option` is `None`, the function skips the evaluation of the\n   * second `Option` and directly returns `None`.\n   *\n   * @category Sequencing\n   * @since 2.0.0\n   */\n  <B>(f: NotFunction<B>): <A>(self: Option<A>) => Option<B>\n  /**\n   * Chains two `Option`s together. The second `Option` can either be a static\n   * value or depend on the result of the first `Option`.\n   *\n   * **Details**\n   *\n   * This function enables sequencing of two `Option` computations. If the first\n   * `Option` is `Some`, the second `Option` is evaluated. The second `Option` can\n   * either:\n   *\n   * - Be a static `Option` value.\n   * - Be a function that produces an `Option`, optionally based on the value of\n   *   the first `Option`.\n   *\n   * If the first `Option` is `None`, the function skips the evaluation of the\n   * second `Option` and directly returns `None`.\n   *\n   * @category Sequencing\n   * @since 2.0.0\n   */\n  <A, B>(self: Option<A>, f: (a: A) => Option<B>): Option<B>\n  /**\n   * Chains two `Option`s together. The second `Option` can either be a static\n   * value or depend on the result of the first `Option`.\n   *\n   * **Details**\n   *\n   * This function enables sequencing of two `Option` computations. If the first\n   * `Option` is `Some`, the second `Option` is evaluated. The second `Option` can\n   * either:\n   *\n   * - Be a static `Option` value.\n   * - Be a function that produces an `Option`, optionally based on the value of\n   *   the first `Option`.\n   *\n   * If the first `Option` is `None`, the function skips the evaluation of the\n   * second `Option` and directly returns `None`.\n   *\n   * @category Sequencing\n   * @since 2.0.0\n   */\n  <A, B>(self: Option<A>, f: Option<B>): Option<B>\n  /**\n   * Chains two `Option`s together. The second `Option` can either be a static\n   * value or depend on the result of the first `Option`.\n   *\n   * **Details**\n   *\n   * This function enables sequencing of two `Option` computations. If the first\n   * `Option` is `Some`, the second `Option` is evaluated. The second `Option` can\n   * either:\n   *\n   * - Be a static `Option` value.\n   * - Be a function that produces an `Option`, optionally based on the value of\n   *   the first `Option`.\n   *\n   * If the first `Option` is `None`, the function skips the evaluation of the\n   * second `Option` and directly returns `None`.\n   *\n   * @category Sequencing\n   * @since 2.0.0\n   */\n  <A, B>(self: Option<A>, f: (a: A) => B): Option<B>\n  /**\n   * Chains two `Option`s together. The second `Option` can either be a static\n   * value or depend on the result of the first `Option`.\n   *\n   * **Details**\n   *\n   * This function enables sequencing of two `Option` computations. If the first\n   * `Option` is `Some`, the second `Option` is evaluated. The second `Option` can\n   * either:\n   *\n   * - Be a static `Option` value.\n   * - Be a function that produces an `Option`, optionally based on the value of\n   *   the first `Option`.\n   *\n   * If the first `Option` is `None`, the function skips the evaluation of the\n   * second `Option` and directly returns `None`.\n   *\n   * @category Sequencing\n   * @since 2.0.0\n   */\n  <A, B>(self: Option<A>, f: NotFunction<B>): Option<B>\n} = dual(\n  2,\n  <A, B>(self: Option<A>, f: (a: A) => Option<B> | Option<B>): Option<B> =>\n    flatMap(self, (a) => {\n      const b = isFunction(f) ? f(a) : f\n      return isOption(b) ? b : some(b)\n    })\n)\n\n/**\n * Combines `flatMap` and `fromNullable`, transforming the value inside a `Some`\n * using a function that may return `null` or `undefined`.\n *\n * **Details**\n *\n * This function applies a transformation function `f` to the value inside a\n * `Some`. The function `f` may return a value, `null`, or `undefined`. If `f`\n * returns a value, it is wrapped in a `Some`. If `f` returns `null` or\n * `undefined`, the result is `None`. If the input `Option` is `None`, the\n * function is not applied, and `None` is returned.\n *\n * This utility is particularly useful when working with deeply nested optional\n * values or chaining computations that may result in `null` or `undefined` at\n * some point.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * interface Employee {\n *   company?: {\n *     address?: {\n *       street?: {\n *         name?: string\n *       }\n *     }\n *   }\n * }\n *\n * const employee1: Employee = { company: { address: { street: { name: \"high street\" } } } }\n *\n * // Extracting a deeply nested property\n * console.log(\n *   Option.some(employee1)\n *     .pipe(Option.flatMapNullable((employee) => employee.company?.address?.street?.name))\n * )\n * // Output: { _id: 'Option', _tag: 'Some', value: 'high street' }\n *\n * const employee2: Employee = { company: { address: { street: {} } } }\n *\n * // Property does not exist\n * console.log(\n *   Option.some(employee2)\n *     .pipe(Option.flatMapNullable((employee) => employee.company?.address?.street?.name))\n * )\n * // Output: { _id: 'Option', _tag: 'None' }\n * ```\n *\n * @category Sequencing\n * @since 2.0.0\n */\nexport const flatMapNullable: {\n  /**\n   * Combines `flatMap` and `fromNullable`, transforming the value inside a `Some`\n   * using a function that may return `null` or `undefined`.\n   *\n   * **Details**\n   *\n   * This function applies a transformation function `f` to the value inside a\n   * `Some`. The function `f` may return a value, `null`, or `undefined`. If `f`\n   * returns a value, it is wrapped in a `Some`. If `f` returns `null` or\n   * `undefined`, the result is `None`. If the input `Option` is `None`, the\n   * function is not applied, and `None` is returned.\n   *\n   * This utility is particularly useful when working with deeply nested optional\n   * values or chaining computations that may result in `null` or `undefined` at\n   * some point.\n   *\n   * @example\n   * ```ts\n   * import { Option } from \"effect\"\n   *\n   * interface Employee {\n   *   company?: {\n   *     address?: {\n   *       street?: {\n   *         name?: string\n   *       }\n   *     }\n   *   }\n   * }\n   *\n   * const employee1: Employee = { company: { address: { street: { name: \"high street\" } } } }\n   *\n   * // Extracting a deeply nested property\n   * console.log(\n   *   Option.some(employee1)\n   *     .pipe(Option.flatMapNullable((employee) => employee.company?.address?.street?.name))\n   * )\n   * // Output: { _id: 'Option', _tag: 'Some', value: 'high street' }\n   *\n   * const employee2: Employee = { company: { address: { street: {} } } }\n   *\n   * // Property does not exist\n   * console.log(\n   *   Option.some(employee2)\n   *     .pipe(Option.flatMapNullable((employee) => employee.company?.address?.street?.name))\n   * )\n   * // Output: { _id: 'Option', _tag: 'None' }\n   * ```\n   *\n   * @category Sequencing\n   * @since 2.0.0\n   */\n  <A, B>(f: (a: A) => B | null | undefined): (self: Option<A>) => Option<NonNullable<B>>\n  /**\n   * Combines `flatMap` and `fromNullable`, transforming the value inside a `Some`\n   * using a function that may return `null` or `undefined`.\n   *\n   * **Details**\n   *\n   * This function applies a transformation function `f` to the value inside a\n   * `Some`. The function `f` may return a value, `null`, or `undefined`. If `f`\n   * returns a value, it is wrapped in a `Some`. If `f` returns `null` or\n   * `undefined`, the result is `None`. If the input `Option` is `None`, the\n   * function is not applied, and `None` is returned.\n   *\n   * This utility is particularly useful when working with deeply nested optional\n   * values or chaining computations that may result in `null` or `undefined` at\n   * some point.\n   *\n   * @example\n   * ```ts\n   * import { Option } from \"effect\"\n   *\n   * interface Employee {\n   *   company?: {\n   *     address?: {\n   *       street?: {\n   *         name?: string\n   *       }\n   *     }\n   *   }\n   * }\n   *\n   * const employee1: Employee = { company: { address: { street: { name: \"high street\" } } } }\n   *\n   * // Extracting a deeply nested property\n   * console.log(\n   *   Option.some(employee1)\n   *     .pipe(Option.flatMapNullable((employee) => employee.company?.address?.street?.name))\n   * )\n   * // Output: { _id: 'Option', _tag: 'Some', value: 'high street' }\n   *\n   * const employee2: Employee = { company: { address: { street: {} } } }\n   *\n   * // Property does not exist\n   * console.log(\n   *   Option.some(employee2)\n   *     .pipe(Option.flatMapNullable((employee) => employee.company?.address?.street?.name))\n   * )\n   * // Output: { _id: 'Option', _tag: 'None' }\n   * ```\n   *\n   * @category Sequencing\n   * @since 2.0.0\n   */\n  <A, B>(self: Option<A>, f: (a: A) => B | null | undefined): Option<NonNullable<B>>\n} = dual(\n  2,\n  <A, B>(self: Option<A>, f: (a: A) => B | null | undefined): Option<NonNullable<B>> =>\n    isNone(self) ? none() : fromNullable(f(self.value))\n)\n\n/**\n * Flattens an `Option` of `Option` into a single `Option`.\n *\n * **Details**\n *\n * This function takes an `Option` that wraps another `Option` and flattens it\n * into a single `Option`. If the outer `Option` is `Some`, the function\n * extracts the inner `Option`. If the outer `Option` is `None`, the result\n * remains `None`.\n *\n * This is useful for simplifying nested `Option` structures that may arise\n * during functional operations.\n *\n * @category Sequencing\n * @since 2.0.0\n */\nexport const flatten: <A>(self: Option<Option<A>>) => Option<A> = flatMap(identity)\n\n/**\n * Combines two `Option`s, keeping the value from the second `Option` if both\n * are `Some`.\n *\n * **Details**\n *\n * This function takes two `Option`s and returns the second one if the first is\n * `Some`. If the first `Option` is `None`, the result will also be `None`,\n * regardless of the second `Option`. It effectively \"zips\" the two `Option`s\n * while discarding the value from the first `Option`.\n *\n * This is particularly useful when sequencing computations where the result of\n * the first computation is not needed, and you only care about the result of\n * the second computation.\n *\n * @category Zipping\n * @since 2.0.0\n */\nexport const zipRight: {\n  /**\n   * Combines two `Option`s, keeping the value from the second `Option` if both\n   * are `Some`.\n   *\n   * **Details**\n   *\n   * This function takes two `Option`s and returns the second one if the first is\n   * `Some`. If the first `Option` is `None`, the result will also be `None`,\n   * regardless of the second `Option`. It effectively \"zips\" the two `Option`s\n   * while discarding the value from the first `Option`.\n   *\n   * This is particularly useful when sequencing computations where the result of\n   * the first computation is not needed, and you only care about the result of\n   * the second computation.\n   *\n   * @category Zipping\n   * @since 2.0.0\n   */\n  <B>(that: Option<B>): <_>(self: Option<_>) => Option<B>\n  /**\n   * Combines two `Option`s, keeping the value from the second `Option` if both\n   * are `Some`.\n   *\n   * **Details**\n   *\n   * This function takes two `Option`s and returns the second one if the first is\n   * `Some`. If the first `Option` is `None`, the result will also be `None`,\n   * regardless of the second `Option`. It effectively \"zips\" the two `Option`s\n   * while discarding the value from the first `Option`.\n   *\n   * This is particularly useful when sequencing computations where the result of\n   * the first computation is not needed, and you only care about the result of\n   * the second computation.\n   *\n   * @category Zipping\n   * @since 2.0.0\n   */\n  <X, B>(self: Option<X>, that: Option<B>): Option<B>\n} = dual(2, <X, B>(self: Option<X>, that: Option<B>): Option<B> => flatMap(self, () => that))\n\n/**\n * Combines two `Option`s, keeping the value from the first `Option` if both are\n * `Some`.\n *\n * **Details**\n *\n * This function takes two `Option`s and returns the first one if it is `Some`.\n * If either the first `Option` or the second `Option` is `None`, the result\n * will be `None`. This operation \"zips\" the two `Option`s while discarding the\n * value from the second `Option`.\n *\n * This is useful when sequencing computations where the second `Option`\n * represents a dependency or condition that must hold, but its value is\n * irrelevant.\n *\n * @category Zipping\n * @since 2.0.0\n */\nexport const zipLeft: {\n  /**\n   * Combines two `Option`s, keeping the value from the first `Option` if both are\n   * `Some`.\n   *\n   * **Details**\n   *\n   * This function takes two `Option`s and returns the first one if it is `Some`.\n   * If either the first `Option` or the second `Option` is `None`, the result\n   * will be `None`. This operation \"zips\" the two `Option`s while discarding the\n   * value from the second `Option`.\n   *\n   * This is useful when sequencing computations where the second `Option`\n   * represents a dependency or condition that must hold, but its value is\n   * irrelevant.\n   *\n   * @category Zipping\n   * @since 2.0.0\n   */\n  <_>(that: Option<_>): <A>(self: Option<A>) => Option<A>\n  /**\n   * Combines two `Option`s, keeping the value from the first `Option` if both are\n   * `Some`.\n   *\n   * **Details**\n   *\n   * This function takes two `Option`s and returns the first one if it is `Some`.\n   * If either the first `Option` or the second `Option` is `None`, the result\n   * will be `None`. This operation \"zips\" the two `Option`s while discarding the\n   * value from the second `Option`.\n   *\n   * This is useful when sequencing computations where the second `Option`\n   * represents a dependency or condition that must hold, but its value is\n   * irrelevant.\n   *\n   * @category Zipping\n   * @since 2.0.0\n   */\n  <A, X>(self: Option<A>, that: Option<X>): Option<A>\n} = dual(2, <A, X>(self: Option<A>, that: Option<X>): Option<A> => tap(self, () => that))\n\n/**\n * Composes two functions that return `Option` values, creating a new function\n * that chains them together.\n *\n * **Details**\n *\n * This function allows you to compose two computations, each represented by a\n * function that returns an `Option`. The result of the first function is passed\n * to the second function if it is `Some`. If the first function returns `None`,\n * the composed function short-circuits and returns `None` without invoking the\n * second function.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * const parse = (s: string): Option.Option<number> => isNaN(Number(s)) ? Option.none() : Option.some(Number(s))\n *\n * const double = (n: number): Option.Option<number> => n > 0 ? Option.some(n * 2) : Option.none()\n *\n * const parseAndDouble = Option.composeK(parse, double)\n *\n * console.log(parseAndDouble(\"42\"))\n * // Output: { _id: 'Option', _tag: 'Some', value: 84 }\n *\n * console.log(parseAndDouble(\"not a number\"))\n * // Output: { _id: 'Option', _tag: 'None' }\n * ```\n *\n * @category Sequencing\n * @since 2.0.0\n */\nexport const composeK: {\n  /**\n   * Composes two functions that return `Option` values, creating a new function\n   * that chains them together.\n   *\n   * **Details**\n   *\n   * This function allows you to compose two computations, each represented by a\n   * function that returns an `Option`. The result of the first function is passed\n   * to the second function if it is `Some`. If the first function returns `None`,\n   * the composed function short-circuits and returns `None` without invoking the\n   * second function.\n   *\n   * @example\n   * ```ts\n   * import { Option } from \"effect\"\n   *\n   * const parse = (s: string): Option.Option<number> => isNaN(Number(s)) ? Option.none() : Option.some(Number(s))\n   *\n   * const double = (n: number): Option.Option<number> => n > 0 ? Option.some(n * 2) : Option.none()\n   *\n   * const parseAndDouble = Option.composeK(parse, double)\n   *\n   * console.log(parseAndDouble(\"42\"))\n   * // Output: { _id: 'Option', _tag: 'Some', value: 84 }\n   *\n   * console.log(parseAndDouble(\"not a number\"))\n   * // Output: { _id: 'Option', _tag: 'None' }\n   * ```\n   *\n   * @category Sequencing\n   * @since 2.0.0\n   */\n  <B, C>(bfc: (b: B) => Option<C>): <A>(afb: (a: A) => Option<B>) => (a: A) => Option<C>\n  /**\n   * Composes two functions that return `Option` values, creating a new function\n   * that chains them together.\n   *\n   * **Details**\n   *\n   * This function allows you to compose two computations, each represented by a\n   * function that returns an `Option`. The result of the first function is passed\n   * to the second function if it is `Some`. If the first function returns `None`,\n   * the composed function short-circuits and returns `None` without invoking the\n   * second function.\n   *\n   * @example\n   * ```ts\n   * import { Option } from \"effect\"\n   *\n   * const parse = (s: string): Option.Option<number> => isNaN(Number(s)) ? Option.none() : Option.some(Number(s))\n   *\n   * const double = (n: number): Option.Option<number> => n > 0 ? Option.some(n * 2) : Option.none()\n   *\n   * const parseAndDouble = Option.composeK(parse, double)\n   *\n   * console.log(parseAndDouble(\"42\"))\n   * // Output: { _id: 'Option', _tag: 'Some', value: 84 }\n   *\n   * console.log(parseAndDouble(\"not a number\"))\n   * // Output: { _id: 'Option', _tag: 'None' }\n   * ```\n   *\n   * @category Sequencing\n   * @since 2.0.0\n   */\n  <A, B, C>(afb: (a: A) => Option<B>, bfc: (b: B) => Option<C>): (a: A) => Option<C>\n} = dual(2, <A, B, C>(afb: (a: A) => Option<B>, bfc: (b: B) => Option<C>) => (a: A): Option<C> => flatMap(afb(a), bfc))\n\n/**\n * Applies the provided function `f` to the value of the `Option` if it is\n * `Some` and returns the original `Option`, unless `f` returns `None`, in which\n * case it returns `None`.\n *\n * **Details**\n *\n * This function allows you to perform additional computations on the value of\n * an `Option` without modifying its original value. If the `Option` is `Some`,\n * the provided function `f` is executed with the value, and its result\n * determines whether the original `Option` is returned (`Some`) or the result\n * is `None` if `f` returns `None`. If the input `Option` is `None`, the\n * function is not executed, and `None` is returned.\n *\n * This is particularly useful for applying side conditions or performing\n * validation checks while retaining the original `Option`'s value.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * const getInteger = (n: number) => Number.isInteger(n) ? Option.some(n) : Option.none()\n *\n * console.log(Option.tap(Option.none(), getInteger))\n * // Output: { _id: 'Option', _tag: 'None' }\n *\n * console.log(Option.tap(Option.some(1), getInteger))\n * // Output: { _id: 'Option', _tag: 'Some', value: 1 }\n *\n * console.log(Option.tap(Option.some(1.14), getInteger))\n * // Output: { _id: 'Option', _tag: 'None' }\n * ```\n *\n * @category Sequencing\n * @since 2.0.0\n */\nexport const tap: {\n  /**\n   * Applies the provided function `f` to the value of the `Option` if it is\n   * `Some` and returns the original `Option`, unless `f` returns `None`, in which\n   * case it returns `None`.\n   *\n   * **Details**\n   *\n   * This function allows you to perform additional computations on the value of\n   * an `Option` without modifying its original value. If the `Option` is `Some`,\n   * the provided function `f` is executed with the value, and its result\n   * determines whether the original `Option` is returned (`Some`) or the result\n   * is `None` if `f` returns `None`. If the input `Option` is `None`, the\n   * function is not executed, and `None` is returned.\n   *\n   * This is particularly useful for applying side conditions or performing\n   * validation checks while retaining the original `Option`'s value.\n   *\n   * @example\n   * ```ts\n   * import { Option } from \"effect\"\n   *\n   * const getInteger = (n: number) => Number.isInteger(n) ? Option.some(n) : Option.none()\n   *\n   * console.log(Option.tap(Option.none(), getInteger))\n   * // Output: { _id: 'Option', _tag: 'None' }\n   *\n   * console.log(Option.tap(Option.some(1), getInteger))\n   * // Output: { _id: 'Option', _tag: 'Some', value: 1 }\n   *\n   * console.log(Option.tap(Option.some(1.14), getInteger))\n   * // Output: { _id: 'Option', _tag: 'None' }\n   * ```\n   *\n   * @category Sequencing\n   * @since 2.0.0\n   */\n  <A, X>(f: (a: A) => Option<X>): (self: Option<A>) => Option<A>\n  /**\n   * Applies the provided function `f` to the value of the `Option` if it is\n   * `Some` and returns the original `Option`, unless `f` returns `None`, in which\n   * case it returns `None`.\n   *\n   * **Details**\n   *\n   * This function allows you to perform additional computations on the value of\n   * an `Option` without modifying its original value. If the `Option` is `Some`,\n   * the provided function `f` is executed with the value, and its result\n   * determines whether the original `Option` is returned (`Some`) or the result\n   * is `None` if `f` returns `None`. If the input `Option` is `None`, the\n   * function is not executed, and `None` is returned.\n   *\n   * This is particularly useful for applying side conditions or performing\n   * validation checks while retaining the original `Option`'s value.\n   *\n   * @example\n   * ```ts\n   * import { Option } from \"effect\"\n   *\n   * const getInteger = (n: number) => Number.isInteger(n) ? Option.some(n) : Option.none()\n   *\n   * console.log(Option.tap(Option.none(), getInteger))\n   * // Output: { _id: 'Option', _tag: 'None' }\n   *\n   * console.log(Option.tap(Option.some(1), getInteger))\n   * // Output: { _id: 'Option', _tag: 'Some', value: 1 }\n   *\n   * console.log(Option.tap(Option.some(1.14), getInteger))\n   * // Output: { _id: 'Option', _tag: 'None' }\n   * ```\n   *\n   * @category Sequencing\n   * @since 2.0.0\n   */\n  <A, X>(self: Option<A>, f: (a: A) => Option<X>): Option<A>\n} = dual(2, <A, X>(self: Option<A>, f: (a: A) => Option<X>): Option<A> => flatMap(self, (a) => map(f(a), () => a)))\n\n/**\n * Combines two `Option` values into a single `Option` containing a tuple of\n * their values if both are `Some`.\n *\n * **Details**\n *\n * This function takes two `Option`s and combines their values into a tuple `[A,\n * B]` if both are `Some`. If either of the `Option`s is `None`, the result is\n * `None`. This is particularly useful for combining multiple `Option` values\n * into a single one, ensuring both contain valid values.\n *\n * @category Combining\n * @since 2.0.0\n */\nexport const product = <A, B>(self: Option<A>, that: Option<B>): Option<[A, B]> =>\n  isSome(self) && isSome(that) ? some([self.value, that.value]) : none()\n\n/**\n * Combines an `Option` with a collection of `Option`s into a single `Option`\n * containing a tuple of their values if all are `Some`.\n *\n * **Details**\n *\n * This function takes a primary `Option` and a collection of `Option`s and\n * combines their values into a tuple `[A, ...Array<A>]` if all are `Some`. If\n * the primary `Option` or any `Option` in the collection is `None`, the result\n * is `None`.\n *\n * @category Combining\n * @since 2.0.0\n */\nexport const productMany = <A>(\n  self: Option<A>,\n  collection: Iterable<Option<A>>\n): Option<[A, ...Array<A>]> => {\n  if (isNone(self)) {\n    return none()\n  }\n  const out: [A, ...Array<A>] = [self.value]\n  for (const o of collection) {\n    if (isNone(o)) {\n      return none()\n    }\n    out.push(o.value)\n  }\n  return some(out)\n}\n\n/**\n * Combines a structure of `Option`s into a single `Option` containing the\n * values with the same structure.\n *\n * **Details**\n *\n * This function takes a structure of `Option`s (a tuple, struct, or iterable)\n * and produces a single `Option` that contains the values from the input\n * structure if all `Option`s are `Some`. If any `Option` in the input is\n * `None`, the result is `None`. The structure of the input is preserved in the\n * output.\n *\n * - If the input is a tuple (e.g., an array), the result will be an `Option`\n *   containing a tuple with the same length.\n * - If the input is a struct (e.g., an object), the result will be an `Option`\n *   containing a struct with the same keys.\n * - If the input is an iterable, the result will be an `Option` containing an\n *   array.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * const maybeName: Option.Option<string> = Option.some(\"John\")\n * const maybeAge: Option.Option<number> = Option.some(25)\n *\n * //      ┌─── Option<[string, number]>\n * //      ▼\n * const tuple = Option.all([maybeName, maybeAge])\n * console.log(tuple)\n * // Output:\n * // { _id: 'Option', _tag: 'Some', value: [ 'John', 25 ] }\n *\n * //      ┌─── Option<{ name: string; age: number; }>\n * //      ▼\n * const struct = Option.all({ name: maybeName, age: maybeAge })\n * console.log(struct)\n * // Output:\n * // { _id: 'Option', _tag: 'Some', value: { name: 'John', age: 25 } }\n * ```\n *\n * @category Combining\n * @since 2.0.0\n */\n// @ts-expect-error\nexport const all: <const I extends Iterable<Option<any>> | Record<string, Option<any>>>(\n  input: I\n) => [I] extends [ReadonlyArray<Option<any>>] ? Option<\n    { -readonly [K in keyof I]: [I[K]] extends [Option<infer A>] ? A : never }\n  >\n  : [I] extends [Iterable<Option<infer A>>] ? Option<Array<A>>\n  : Option<{ -readonly [K in keyof I]: [I[K]] extends [Option<infer A>] ? A : never }> = (\n    input: Iterable<Option<any>> | Record<string, Option<any>>\n  ): Option<any> => {\n    if (Symbol.iterator in input) {\n      const out: Array<Option<any>> = []\n      for (const o of (input as Iterable<Option<any>>)) {\n        if (isNone(o)) {\n          return none()\n        }\n        out.push(o.value)\n      }\n      return some(out)\n    }\n\n    const out: Record<string, any> = {}\n    for (const key of Object.keys(input)) {\n      const o = input[key]\n      if (isNone(o)) {\n        return none()\n      }\n      out[key] = o.value\n    }\n    return some(out)\n  }\n\n/**\n * Combines two `Option` values into a new `Option` by applying a provided\n * function to their values.\n *\n * **Details**\n *\n * This function takes two `Option` values (`self` and `that`) and a combining\n * function `f`. If both `Option` values are `Some`, the function `f` is applied\n * to their values, and the result is wrapped in a new `Some`. If either\n * `Option` is `None`, the result is `None`.\n *\n * This utility is useful for combining two optional computations into a single\n * result while maintaining type safety and avoiding explicit checks for `None`.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * const maybeName: Option.Option<string> = Option.some(\"John\")\n * const maybeAge: Option.Option<number> = Option.some(25)\n *\n * // Combine the name and age into a person object\n * const person = Option.zipWith(maybeName, maybeAge, (name, age) => ({\n *   name: name.toUpperCase(),\n *   age\n * }))\n *\n * console.log(person)\n * // Output:\n * // { _id: 'Option', _tag: 'Some', value: { name: 'JOHN', age: 25 } }\n * ```\n *\n * @category Zipping\n * @since 2.0.0\n */\nexport const zipWith: {\n  /**\n   * Combines two `Option` values into a new `Option` by applying a provided\n   * function to their values.\n   *\n   * **Details**\n   *\n   * This function takes two `Option` values (`self` and `that`) and a combining\n   * function `f`. If both `Option` values are `Some`, the function `f` is applied\n   * to their values, and the result is wrapped in a new `Some`. If either\n   * `Option` is `None`, the result is `None`.\n   *\n   * This utility is useful for combining two optional computations into a single\n   * result while maintaining type safety and avoiding explicit checks for `None`.\n   *\n   * @example\n   * ```ts\n   * import { Option } from \"effect\"\n   *\n   * const maybeName: Option.Option<string> = Option.some(\"John\")\n   * const maybeAge: Option.Option<number> = Option.some(25)\n   *\n   * // Combine the name and age into a person object\n   * const person = Option.zipWith(maybeName, maybeAge, (name, age) => ({\n   *   name: name.toUpperCase(),\n   *   age\n   * }))\n   *\n   * console.log(person)\n   * // Output:\n   * // { _id: 'Option', _tag: 'Some', value: { name: 'JOHN', age: 25 } }\n   * ```\n   *\n   * @category Zipping\n   * @since 2.0.0\n   */\n  <B, A, C>(that: Option<B>, f: (a: A, b: B) => C): (self: Option<A>) => Option<C>\n  /**\n   * Combines two `Option` values into a new `Option` by applying a provided\n   * function to their values.\n   *\n   * **Details**\n   *\n   * This function takes two `Option` values (`self` and `that`) and a combining\n   * function `f`. If both `Option` values are `Some`, the function `f` is applied\n   * to their values, and the result is wrapped in a new `Some`. If either\n   * `Option` is `None`, the result is `None`.\n   *\n   * This utility is useful for combining two optional computations into a single\n   * result while maintaining type safety and avoiding explicit checks for `None`.\n   *\n   * @example\n   * ```ts\n   * import { Option } from \"effect\"\n   *\n   * const maybeName: Option.Option<string> = Option.some(\"John\")\n   * const maybeAge: Option.Option<number> = Option.some(25)\n   *\n   * // Combine the name and age into a person object\n   * const person = Option.zipWith(maybeName, maybeAge, (name, age) => ({\n   *   name: name.toUpperCase(),\n   *   age\n   * }))\n   *\n   * console.log(person)\n   * // Output:\n   * // { _id: 'Option', _tag: 'Some', value: { name: 'JOHN', age: 25 } }\n   * ```\n   *\n   * @category Zipping\n   * @since 2.0.0\n   */\n  <A, B, C>(self: Option<A>, that: Option<B>, f: (a: A, b: B) => C): Option<C>\n} = dual(\n  3,\n  <A, B, C>(self: Option<A>, that: Option<B>, f: (a: A, b: B) => C): Option<C> =>\n    map(product(self, that), ([a, b]) => f(a, b))\n)\n\n/**\n * Applies a function inside a `Some` to a value inside another `Some`,\n * combining them into a new `Option`.\n *\n * **Details**\n *\n * This function allows you to apply a function wrapped in an `Option` (`self`)\n * to a value wrapped in another `Option` (`that`). If both `Option`s are\n * `Some`, the function is applied to the value, and the result is wrapped in a\n * new `Some`. If either `Option` is `None`, the result is `None`.\n *\n * @category Combining\n * @since 2.0.0\n */\nexport const ap: {\n  /**\n   * Applies a function inside a `Some` to a value inside another `Some`,\n   * combining them into a new `Option`.\n   *\n   * **Details**\n   *\n   * This function allows you to apply a function wrapped in an `Option` (`self`)\n   * to a value wrapped in another `Option` (`that`). If both `Option`s are\n   * `Some`, the function is applied to the value, and the result is wrapped in a\n   * new `Some`. If either `Option` is `None`, the result is `None`.\n   *\n   * @category Combining\n   * @since 2.0.0\n   */\n  <A>(that: Option<A>): <B>(self: Option<(a: A) => B>) => Option<B>\n  /**\n   * Applies a function inside a `Some` to a value inside another `Some`,\n   * combining them into a new `Option`.\n   *\n   * **Details**\n   *\n   * This function allows you to apply a function wrapped in an `Option` (`self`)\n   * to a value wrapped in another `Option` (`that`). If both `Option`s are\n   * `Some`, the function is applied to the value, and the result is wrapped in a\n   * new `Some`. If either `Option` is `None`, the result is `None`.\n   *\n   * @category Combining\n   * @since 2.0.0\n   */\n  <A, B>(self: Option<(a: A) => B>, that: Option<A>): Option<B>\n} = dual(2, <A, B>(self: Option<(a: A) => B>, that: Option<A>): Option<B> => zipWith(self, that, (f, a) => f(a)))\n\n/**\n * Reduces an `Iterable` of `Option<A>` to a single value of type `B`, ignoring\n * elements that are `None`.\n *\n * **Details**\n *\n * This function takes an initial value of type `B` and a reducing function `f`\n * that combines the accumulator with values of type `A`. It processes an\n * iterable of `Option<A>`, applying `f` only to the `Some` values while\n * ignoring the `None` values. The result is a single value of type `B`.\n *\n * This utility is particularly useful for aggregating values from an iterable\n * of `Option`s while skipping the absent (`None`) values.\n *\n * @example\n * ```ts\n * import { Option, pipe } from \"effect\"\n *\n * const iterable = [Option.some(1), Option.none(), Option.some(2), Option.none()]\n *\n * console.log(pipe(iterable, Option.reduceCompact(0, (b, a) => b + a)))\n * // Output: 3\n * ```\n *\n * @category Reducing\n * @since 2.0.0\n */\nexport const reduceCompact: {\n  /**\n   * Reduces an `Iterable` of `Option<A>` to a single value of type `B`, ignoring\n   * elements that are `None`.\n   *\n   * **Details**\n   *\n   * This function takes an initial value of type `B` and a reducing function `f`\n   * that combines the accumulator with values of type `A`. It processes an\n   * iterable of `Option<A>`, applying `f` only to the `Some` values while\n   * ignoring the `None` values. The result is a single value of type `B`.\n   *\n   * This utility is particularly useful for aggregating values from an iterable\n   * of `Option`s while skipping the absent (`None`) values.\n   *\n   * @example\n   * ```ts\n   * import { Option, pipe } from \"effect\"\n   *\n   * const iterable = [Option.some(1), Option.none(), Option.some(2), Option.none()]\n   *\n   * console.log(pipe(iterable, Option.reduceCompact(0, (b, a) => b + a)))\n   * // Output: 3\n   * ```\n   *\n   * @category Reducing\n   * @since 2.0.0\n   */\n  <B, A>(b: B, f: (b: B, a: A) => B): (self: Iterable<Option<A>>) => B\n  /**\n   * Reduces an `Iterable` of `Option<A>` to a single value of type `B`, ignoring\n   * elements that are `None`.\n   *\n   * **Details**\n   *\n   * This function takes an initial value of type `B` and a reducing function `f`\n   * that combines the accumulator with values of type `A`. It processes an\n   * iterable of `Option<A>`, applying `f` only to the `Some` values while\n   * ignoring the `None` values. The result is a single value of type `B`.\n   *\n   * This utility is particularly useful for aggregating values from an iterable\n   * of `Option`s while skipping the absent (`None`) values.\n   *\n   * @example\n   * ```ts\n   * import { Option, pipe } from \"effect\"\n   *\n   * const iterable = [Option.some(1), Option.none(), Option.some(2), Option.none()]\n   *\n   * console.log(pipe(iterable, Option.reduceCompact(0, (b, a) => b + a)))\n   * // Output: 3\n   * ```\n   *\n   * @category Reducing\n   * @since 2.0.0\n   */\n  <A, B>(self: Iterable<Option<A>>, b: B, f: (b: B, a: A) => B): B\n} = dual(\n  3,\n  <A, B>(self: Iterable<Option<A>>, b: B, f: (b: B, a: A) => B): B => {\n    let out: B = b\n    for (const oa of self) {\n      if (isSome(oa)) {\n        out = f(out, oa.value)\n      }\n    }\n    return out\n  }\n)\n\n/**\n * Converts an `Option` into an `Array`.\n * If the input is `None`, an empty array is returned.\n * If the input is `Some`, its value is wrapped in a single-element array.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * console.log(Option.toArray(Option.some(1)))\n * // Output: [1]\n *\n * console.log(Option.toArray(Option.none()))\n * // Output: []\n * ```\n *\n * @category Conversions\n * @since 2.0.0\n */\nexport const toArray = <A>(self: Option<A>): Array<A> => isNone(self) ? [] : [self.value]\n\n/**\n * Splits an `Option` into two `Option`s based on the result of a mapping\n * function that produces an `Either`.\n *\n * **Details**\n *\n * This function takes an `Option` and a mapping function `f` that converts its\n * value into an `Either`. It returns a tuple of two `Option`s:\n *\n * - The first `Option` (`left`) contains the value from the `Left` side of the\n *   `Either` if it exists, otherwise `None`.\n * - The second `Option` (`right`) contains the value from the `Right` side of\n *   the `Either` if it exists, otherwise `None`.\n *\n * If the input `Option` is `None`, both returned `Option`s are `None`.\n *\n * This utility is useful for filtering and categorizing the contents of an\n * `Option` based on a bifurcating computation.\n *\n * @category Filtering\n * @since 2.0.0\n */\nexport const partitionMap: {\n  /**\n   * Splits an `Option` into two `Option`s based on the result of a mapping\n   * function that produces an `Either`.\n   *\n   * **Details**\n   *\n   * This function takes an `Option` and a mapping function `f` that converts its\n   * value into an `Either`. It returns a tuple of two `Option`s:\n   *\n   * - The first `Option` (`left`) contains the value from the `Left` side of the\n   *   `Either` if it exists, otherwise `None`.\n   * - The second `Option` (`right`) contains the value from the `Right` side of\n   *   the `Either` if it exists, otherwise `None`.\n   *\n   * If the input `Option` is `None`, both returned `Option`s are `None`.\n   *\n   * This utility is useful for filtering and categorizing the contents of an\n   * `Option` based on a bifurcating computation.\n   *\n   * @category Filtering\n   * @since 2.0.0\n   */\n  <A, B, C>(f: (a: A) => Either<C, B>): (self: Option<A>) => [left: Option<B>, right: Option<C>]\n  /**\n   * Splits an `Option` into two `Option`s based on the result of a mapping\n   * function that produces an `Either`.\n   *\n   * **Details**\n   *\n   * This function takes an `Option` and a mapping function `f` that converts its\n   * value into an `Either`. It returns a tuple of two `Option`s:\n   *\n   * - The first `Option` (`left`) contains the value from the `Left` side of the\n   *   `Either` if it exists, otherwise `None`.\n   * - The second `Option` (`right`) contains the value from the `Right` side of\n   *   the `Either` if it exists, otherwise `None`.\n   *\n   * If the input `Option` is `None`, both returned `Option`s are `None`.\n   *\n   * This utility is useful for filtering and categorizing the contents of an\n   * `Option` based on a bifurcating computation.\n   *\n   * @category Filtering\n   * @since 2.0.0\n   */\n  <A, B, C>(self: Option<A>, f: (a: A) => Either<C, B>): [left: Option<B>, right: Option<C>]\n} = dual(2, <A, B, C>(\n  self: Option<A>,\n  f: (a: A) => Either<C, B>\n): [excluded: Option<B>, satisfying: Option<C>] => {\n  if (isNone(self)) {\n    return [none(), none()]\n  }\n  const e = f(self.value)\n  return either.isLeft(e) ? [some(e.left), none()] : [none(), some(e.right)]\n})\n\n// TODO(4.0): remove?\n/**\n * Alias of {@link flatMap}.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * // Transform and filter numbers\n * const transformEven = (n: Option.Option<number>): Option.Option<string> =>\n *   Option.filterMap(n, (n) => (n % 2 === 0 ? Option.some(`Even: ${n}`) : Option.none()))\n *\n * console.log(transformEven(Option.none()))\n * // Output: { _id: 'Option', _tag: 'None' }\n *\n * console.log(transformEven(Option.some(1)))\n * // Output: { _id: 'Option', _tag: 'None' }\n *\n * console.log(transformEven(Option.some(2)))\n * // Output: { _id: 'Option', _tag: 'Some', value: 'Even: 2' }\n * ```\n *\n * @category Filtering\n * @since 2.0.0\n */\nexport const filterMap: {\n  // TODO(4.0): remove?\n  /**\n   * Alias of {@link flatMap}.\n   *\n   * @example\n   * ```ts\n   * import { Option } from \"effect\"\n   *\n   * // Transform and filter numbers\n   * const transformEven = (n: Option.Option<number>): Option.Option<string> =>\n   *   Option.filterMap(n, (n) => (n % 2 === 0 ? Option.some(`Even: ${n}`) : Option.none()))\n   *\n   * console.log(transformEven(Option.none()))\n   * // Output: { _id: 'Option', _tag: 'None' }\n   *\n   * console.log(transformEven(Option.some(1)))\n   * // Output: { _id: 'Option', _tag: 'None' }\n   *\n   * console.log(transformEven(Option.some(2)))\n   * // Output: { _id: 'Option', _tag: 'Some', value: 'Even: 2' }\n   * ```\n   *\n   * @category Filtering\n   * @since 2.0.0\n   */\n  <A, B>(f: (a: A) => Option<B>): (self: Option<A>) => Option<B>\n  // TODO(4.0): remove?\n  /**\n   * Alias of {@link flatMap}.\n   *\n   * @example\n   * ```ts\n   * import { Option } from \"effect\"\n   *\n   * // Transform and filter numbers\n   * const transformEven = (n: Option.Option<number>): Option.Option<string> =>\n   *   Option.filterMap(n, (n) => (n % 2 === 0 ? Option.some(`Even: ${n}`) : Option.none()))\n   *\n   * console.log(transformEven(Option.none()))\n   * // Output: { _id: 'Option', _tag: 'None' }\n   *\n   * console.log(transformEven(Option.some(1)))\n   * // Output: { _id: 'Option', _tag: 'None' }\n   *\n   * console.log(transformEven(Option.some(2)))\n   * // Output: { _id: 'Option', _tag: 'Some', value: 'Even: 2' }\n   * ```\n   *\n   * @category Filtering\n   * @since 2.0.0\n   */\n  <A, B>(self: Option<A>, f: (a: A) => Option<B>): Option<B>\n} = flatMap\n\n/**\n * Filters an `Option` using a predicate. If the predicate is not satisfied or the `Option` is `None` returns `None`.\n *\n * If you need to change the type of the `Option` in addition to filtering, see `filterMap`.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * const removeEmptyString = (input: Option.Option<string>) =>\n *   Option.filter(input, (value) => value !== \"\")\n *\n * console.log(removeEmptyString(Option.none()))\n * // Output: { _id: 'Option', _tag: 'None' }\n *\n * console.log(removeEmptyString(Option.some(\"\")))\n * // Output: { _id: 'Option', _tag: 'None' }\n *\n * console.log(removeEmptyString(Option.some(\"a\")))\n * // Output: { _id: 'Option', _tag: 'Some', value: 'a' }\n * ```\n *\n * @category Filtering\n * @since 2.0.0\n */\nexport const filter: {\n  /**\n   * Filters an `Option` using a predicate. If the predicate is not satisfied or the `Option` is `None` returns `None`.\n   *\n   * If you need to change the type of the `Option` in addition to filtering, see `filterMap`.\n   *\n   * @example\n   * ```ts\n   * import { Option } from \"effect\"\n   *\n   * const removeEmptyString = (input: Option.Option<string>) =>\n   *   Option.filter(input, (value) => value !== \"\")\n   *\n   * console.log(removeEmptyString(Option.none()))\n   * // Output: { _id: 'Option', _tag: 'None' }\n   *\n   * console.log(removeEmptyString(Option.some(\"\")))\n   * // Output: { _id: 'Option', _tag: 'None' }\n   *\n   * console.log(removeEmptyString(Option.some(\"a\")))\n   * // Output: { _id: 'Option', _tag: 'Some', value: 'a' }\n   * ```\n   *\n   * @category Filtering\n   * @since 2.0.0\n   */\n  <A, B extends A>(refinement: Refinement<NoInfer<A>, B>): (self: Option<A>) => Option<B>\n  /**\n   * Filters an `Option` using a predicate. If the predicate is not satisfied or the `Option` is `None` returns `None`.\n   *\n   * If you need to change the type of the `Option` in addition to filtering, see `filterMap`.\n   *\n   * @example\n   * ```ts\n   * import { Option } from \"effect\"\n   *\n   * const removeEmptyString = (input: Option.Option<string>) =>\n   *   Option.filter(input, (value) => value !== \"\")\n   *\n   * console.log(removeEmptyString(Option.none()))\n   * // Output: { _id: 'Option', _tag: 'None' }\n   *\n   * console.log(removeEmptyString(Option.some(\"\")))\n   * // Output: { _id: 'Option', _tag: 'None' }\n   *\n   * console.log(removeEmptyString(Option.some(\"a\")))\n   * // Output: { _id: 'Option', _tag: 'Some', value: 'a' }\n   * ```\n   *\n   * @category Filtering\n   * @since 2.0.0\n   */\n  <A>(predicate: Predicate<NoInfer<A>>): (self: Option<A>) => Option<A>\n  /**\n   * Filters an `Option` using a predicate. If the predicate is not satisfied or the `Option` is `None` returns `None`.\n   *\n   * If you need to change the type of the `Option` in addition to filtering, see `filterMap`.\n   *\n   * @example\n   * ```ts\n   * import { Option } from \"effect\"\n   *\n   * const removeEmptyString = (input: Option.Option<string>) =>\n   *   Option.filter(input, (value) => value !== \"\")\n   *\n   * console.log(removeEmptyString(Option.none()))\n   * // Output: { _id: 'Option', _tag: 'None' }\n   *\n   * console.log(removeEmptyString(Option.some(\"\")))\n   * // Output: { _id: 'Option', _tag: 'None' }\n   *\n   * console.log(removeEmptyString(Option.some(\"a\")))\n   * // Output: { _id: 'Option', _tag: 'Some', value: 'a' }\n   * ```\n   *\n   * @category Filtering\n   * @since 2.0.0\n   */\n  <A, B extends A>(self: Option<A>, refinement: Refinement<A, B>): Option<B>\n  /**\n   * Filters an `Option` using a predicate. If the predicate is not satisfied or the `Option` is `None` returns `None`.\n   *\n   * If you need to change the type of the `Option` in addition to filtering, see `filterMap`.\n   *\n   * @example\n   * ```ts\n   * import { Option } from \"effect\"\n   *\n   * const removeEmptyString = (input: Option.Option<string>) =>\n   *   Option.filter(input, (value) => value !== \"\")\n   *\n   * console.log(removeEmptyString(Option.none()))\n   * // Output: { _id: 'Option', _tag: 'None' }\n   *\n   * console.log(removeEmptyString(Option.some(\"\")))\n   * // Output: { _id: 'Option', _tag: 'None' }\n   *\n   * console.log(removeEmptyString(Option.some(\"a\")))\n   * // Output: { _id: 'Option', _tag: 'Some', value: 'a' }\n   * ```\n   *\n   * @category Filtering\n   * @since 2.0.0\n   */\n  <A>(self: Option<A>, predicate: Predicate<A>): Option<A>\n} = dual(\n  2,\n  <A>(self: Option<A>, predicate: Predicate<A>): Option<A> =>\n    filterMap(self, (b) => (predicate(b) ? option.some(b) : option.none))\n)\n\n/**\n * Creates an `Equivalence` instance for comparing `Option` values, using a\n * provided `Equivalence` for the inner type.\n *\n * **Details**\n *\n * This function takes an `Equivalence` instance for a specific type `A` and\n * produces an `Equivalence` instance for `Option<A>`. The resulting\n * `Equivalence` determines whether two `Option` values are equivalent:\n *\n * - Two `None`s are considered equivalent.\n * - A `Some` and a `None` are not equivalent.\n * - Two `Some` values are equivalent if their inner values are equivalent\n *   according to the provided `Equivalence`.\n *\n * **Example** (Comparing Optional Numbers for Equivalence)\n *\n * ```ts\n * import { Number, Option } from \"effect\"\n *\n * const isEquivalent = Option.getEquivalence(Number.Equivalence)\n *\n * console.log(isEquivalent(Option.none(), Option.none()))\n * // Output: true\n *\n * console.log(isEquivalent(Option.none(), Option.some(1)))\n * // Output: false\n *\n * console.log(isEquivalent(Option.some(1), Option.none()))\n * // Output: false\n *\n * console.log(isEquivalent(Option.some(1), Option.some(2)))\n * // Output: false\n *\n * console.log(isEquivalent(Option.some(1), Option.some(1)))\n * // Output: true\n * ```\n *\n * @category Equivalence\n * @since 2.0.0\n */\nexport const getEquivalence = <A>(isEquivalent: Equivalence.Equivalence<A>): Equivalence.Equivalence<Option<A>> =>\n  Equivalence.make((x, y) => isNone(x) ? isNone(y) : isNone(y) ? false : isEquivalent(x.value, y.value))\n\n/**\n * Creates an `Order` instance for comparing `Option` values, using a provided\n * `Order` for the inner type.\n *\n * **Details**\n *\n * This function produces an `Order` instance for `Option<A>`, allowing `Option`\n * values to be compared:\n *\n * - `None` is always considered less than any `Some` value.\n * - If both are `Some`, their inner values are compared using the provided\n *   `Order` instance.\n *\n * @example\n * ```ts\n * import { Number, Option } from \"effect\"\n *\n * const order = Option.getOrder(Number.Order)\n *\n * console.log(order(Option.none(), Option.none()))\n * // Output: 0\n *\n * console.log(order(Option.none(), Option.some(1)))\n * // Output: -1\n *\n * console.log(order(Option.some(1), Option.none()))\n * // Output: 1\n *\n * console.log(order(Option.some(1), Option.some(2)))\n * // Output: -1\n *\n * console.log(order(Option.some(1), Option.some(1)))\n * // Output: 0\n * ```\n *\n * @category Sorting\n * @since 2.0.0\n */\nexport const getOrder = <A>(O: Order<A>): Order<Option<A>> =>\n  order.make((self, that) => isSome(self) ? (isSome(that) ? O(self.value, that.value) : 1) : -1)\n\n/**\n * Lifts a binary function to work with `Option` values, allowing the function\n * to operate on two `Option`s.\n *\n * **Details**\n *\n * This function takes a binary function `f` and returns a new function that\n * applies `f` to the values of two `Option`s (`self` and `that`). If both\n * `Option`s are `Some`, the binary function `f` is applied to their values, and\n * the result is wrapped in a new `Some`. If either `Option` is `None`, the\n * result is `None`.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * // A binary function to add two numbers\n * const add = (a: number, b: number): number => a + b\n *\n * // Lift the `add` function to work with `Option` values\n * const addOptions = Option.lift2(add)\n *\n * // Both `Option`s are `Some`\n * console.log(addOptions(Option.some(2), Option.some(3)))\n * // Output: { _id: 'Option', _tag: 'Some', value: 5 }\n *\n * // One `Option` is `None`\n * console.log(addOptions(Option.some(2), Option.none()))\n * // Output: { _id: 'Option', _tag: 'None' }\n * ```\n *\n * @category Lifting\n * @since 2.0.0\n */\nexport const lift2 = <A, B, C>(f: (a: A, b: B) => C): {\n  (that: Option<B>): (self: Option<A>) => Option<C>\n  (self: Option<A>, that: Option<B>): Option<C>\n} => dual(2, (self: Option<A>, that: Option<B>): Option<C> => zipWith(self, that, f))\n\n/**\n * Lifts a `Predicate` or `Refinement` into the `Option` context, returning a\n * `Some` of the input value if the predicate is satisfied, or `None` otherwise.\n *\n * **Details**\n *\n * This function transforms a `Predicate` (or a more specific `Refinement`) into\n * a function that produces an `Option`. If the predicate evaluates to `true`,\n * the input value is wrapped in a `Some`. If the predicate evaluates to\n * `false`, the result is `None`.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * // Check if a number is positive\n * const isPositive = (n: number) => n > 0\n *\n * //      ┌─── (b: number) => Option<number>\n * //      ▼\n * const parsePositive = Option.liftPredicate(isPositive)\n *\n * console.log(parsePositive(1))\n * // Output: { _id: 'Option', _tag: 'Some', value: 1 }\n *\n * console.log(parsePositive(-1))\n * // OUtput: { _id: 'Option', _tag: 'None' }\n * ```\n *\n * @category Lifting\n * @since 2.0.0\n */\nexport const liftPredicate: { // Note: I intentionally avoid using the NoInfer pattern here.\n  <A, B extends A>(refinement: Refinement<A, B>): (a: A) => Option<B>\n  /**\n   * Lifts a `Predicate` or `Refinement` into the `Option` context, returning a\n   * `Some` of the input value if the predicate is satisfied, or `None` otherwise.\n   *\n   * **Details**\n   *\n   * This function transforms a `Predicate` (or a more specific `Refinement`) into\n   * a function that produces an `Option`. If the predicate evaluates to `true`,\n   * the input value is wrapped in a `Some`. If the predicate evaluates to\n   * `false`, the result is `None`.\n   *\n   * @example\n   * ```ts\n   * import { Option } from \"effect\"\n   *\n   * // Check if a number is positive\n   * const isPositive = (n: number) => n > 0\n   *\n   * //      ┌─── (b: number) => Option<number>\n   * //      ▼\n   * const parsePositive = Option.liftPredicate(isPositive)\n   *\n   * console.log(parsePositive(1))\n   * // Output: { _id: 'Option', _tag: 'Some', value: 1 }\n   *\n   * console.log(parsePositive(-1))\n   * // OUtput: { _id: 'Option', _tag: 'None' }\n   * ```\n   *\n   * @category Lifting\n   * @since 2.0.0\n   */\n  <B extends A, A = B>(predicate: Predicate<A>): (b: B) => Option<B>\n  /**\n   * Lifts a `Predicate` or `Refinement` into the `Option` context, returning a\n   * `Some` of the input value if the predicate is satisfied, or `None` otherwise.\n   *\n   * **Details**\n   *\n   * This function transforms a `Predicate` (or a more specific `Refinement`) into\n   * a function that produces an `Option`. If the predicate evaluates to `true`,\n   * the input value is wrapped in a `Some`. If the predicate evaluates to\n   * `false`, the result is `None`.\n   *\n   * @example\n   * ```ts\n   * import { Option } from \"effect\"\n   *\n   * // Check if a number is positive\n   * const isPositive = (n: number) => n > 0\n   *\n   * //      ┌─── (b: number) => Option<number>\n   * //      ▼\n   * const parsePositive = Option.liftPredicate(isPositive)\n   *\n   * console.log(parsePositive(1))\n   * // Output: { _id: 'Option', _tag: 'Some', value: 1 }\n   *\n   * console.log(parsePositive(-1))\n   * // OUtput: { _id: 'Option', _tag: 'None' }\n   * ```\n   *\n   * @category Lifting\n   * @since 2.0.0\n   */\n  <A, B extends A>(self: A, refinement: Refinement<A, B>): Option<B>\n  /**\n   * Lifts a `Predicate` or `Refinement` into the `Option` context, returning a\n   * `Some` of the input value if the predicate is satisfied, or `None` otherwise.\n   *\n   * **Details**\n   *\n   * This function transforms a `Predicate` (or a more specific `Refinement`) into\n   * a function that produces an `Option`. If the predicate evaluates to `true`,\n   * the input value is wrapped in a `Some`. If the predicate evaluates to\n   * `false`, the result is `None`.\n   *\n   * @example\n   * ```ts\n   * import { Option } from \"effect\"\n   *\n   * // Check if a number is positive\n   * const isPositive = (n: number) => n > 0\n   *\n   * //      ┌─── (b: number) => Option<number>\n   * //      ▼\n   * const parsePositive = Option.liftPredicate(isPositive)\n   *\n   * console.log(parsePositive(1))\n   * // Output: { _id: 'Option', _tag: 'Some', value: 1 }\n   *\n   * console.log(parsePositive(-1))\n   * // OUtput: { _id: 'Option', _tag: 'None' }\n   * ```\n   *\n   * @category Lifting\n   * @since 2.0.0\n   */\n  <B extends A, A = B>(self: B, predicate: Predicate<A>): Option<B>\n} = dual(\n  2,\n  <B extends A, A = B>(b: B, predicate: Predicate<A>): Option<B> => predicate(b) ? some(b) : none()\n)\n\n/**\n * Returns a function that checks if an `Option` contains a specified value,\n * using a provided equivalence function.\n *\n * **Details**\n *\n * This function allows you to check whether an `Option` contains a specific\n * value. It uses an equivalence function `isEquivalent` to compare the value\n * inside the `Option` to the provided value. If the `Option` is `Some` and the\n * equivalence function returns `true`, the result is `true`. If the `Option` is\n * `None` or the values are not equivalent, the result is `false`.\n *\n * @example\n * ```ts\n * import { Number, Option } from \"effect\"\n *\n * const contains = Option.containsWith(Number.Equivalence)\n *\n * console.log(Option.some(2).pipe(contains(2)))\n * // Output: true\n *\n * console.log(Option.some(1).pipe(contains(2)))\n * // Output: false\n *\n * console.log(Option.none().pipe(contains(2)))\n * // Output: false\n * ```\n *\n * @see {@link contains} for a version that uses the default `Equivalence`.\n *\n * @category Elements\n * @since 2.0.0\n */\nexport const containsWith = <A>(isEquivalent: (self: A, that: A) => boolean): {\n  (a: A): (self: Option<A>) => boolean\n  (self: Option<A>, a: A): boolean\n} => dual(2, (self: Option<A>, a: A): boolean => isNone(self) ? false : isEquivalent(self.value, a))\n\nconst _equivalence = Equal.equivalence()\n\n/**\n * Returns a function that checks if an `Option` contains a specified value\n * using the default `Equivalence`.\n *\n * **Details**\n *\n * This function allows you to check whether an `Option` contains a specific\n * value. It uses the default `Equivalence` for equality comparison. If the\n * `Option` is `Some` and its value is equivalent to the provided value, the\n * result is `true`. If the `Option` is `None` or the values are not equivalent,\n * the result is `false`.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * console.log(Option.some(2).pipe(Option.contains(2)))\n * // Output: true\n *\n * console.log(Option.some(1).pipe(Option.contains(2)))\n * // Output: false\n *\n * console.log(Option.none().pipe(Option.contains(2)))\n * // Output: false\n * ```\n *\n * @see {@link containsWith} for a version that allows you to specify a custom equivalence function.\n *\n * @category Elements\n * @since 2.0.0\n */\nexport const contains: {\n  /**\n   * Returns a function that checks if an `Option` contains a specified value\n   * using the default `Equivalence`.\n   *\n   * **Details**\n   *\n   * This function allows you to check whether an `Option` contains a specific\n   * value. It uses the default `Equivalence` for equality comparison. If the\n   * `Option` is `Some` and its value is equivalent to the provided value, the\n   * result is `true`. If the `Option` is `None` or the values are not equivalent,\n   * the result is `false`.\n   *\n   * @example\n   * ```ts\n   * import { Option } from \"effect\"\n   *\n   * console.log(Option.some(2).pipe(Option.contains(2)))\n   * // Output: true\n   *\n   * console.log(Option.some(1).pipe(Option.contains(2)))\n   * // Output: false\n   *\n   * console.log(Option.none().pipe(Option.contains(2)))\n   * // Output: false\n   * ```\n   *\n   * @see {@link containsWith} for a version that allows you to specify a custom equivalence function.\n   *\n   * @category Elements\n   * @since 2.0.0\n   */\n  <A>(a: A): (self: Option<A>) => boolean\n  /**\n   * Returns a function that checks if an `Option` contains a specified value\n   * using the default `Equivalence`.\n   *\n   * **Details**\n   *\n   * This function allows you to check whether an `Option` contains a specific\n   * value. It uses the default `Equivalence` for equality comparison. If the\n   * `Option` is `Some` and its value is equivalent to the provided value, the\n   * result is `true`. If the `Option` is `None` or the values are not equivalent,\n   * the result is `false`.\n   *\n   * @example\n   * ```ts\n   * import { Option } from \"effect\"\n   *\n   * console.log(Option.some(2).pipe(Option.contains(2)))\n   * // Output: true\n   *\n   * console.log(Option.some(1).pipe(Option.contains(2)))\n   * // Output: false\n   *\n   * console.log(Option.none().pipe(Option.contains(2)))\n   * // Output: false\n   * ```\n   *\n   * @see {@link containsWith} for a version that allows you to specify a custom equivalence function.\n   *\n   * @category Elements\n   * @since 2.0.0\n   */\n  <A>(self: Option<A>, a: A): boolean\n} = containsWith(_equivalence)\n\n/**\n * Checks if a value in an `Option` satisfies a given predicate or refinement.\n *\n * **Details**\n *\n * This function allows you to check if a value inside a `Some` meets a\n * specified condition. If the `Option` is `None`, the result is `false`. If the\n * `Option` is `Some`, the provided predicate or refinement is applied to the\n * value:\n *\n * - If the condition is met, the result is `true`.\n * - If the condition is not met, the result is `false`.\n *\n * @example\n * ```ts\n * import { Option } from \"effect\"\n *\n * const isEven = (n: number) => n % 2 === 0\n *\n * console.log(Option.some(2).pipe(Option.exists(isEven)))\n * // Output: true\n *\n * console.log(Option.some(1).pipe(Option.exists(isEven)))\n * // Output: false\n *\n * console.log(Option.none().pipe(Option.exists(isEven)))\n * // Output: false\n * ```\n *\n * @category Elements\n * @since 2.0.0\n */\nexport const exists: {\n  /**\n   * Checks if a value in an `Option` satisfies a given predicate or refinement.\n   *\n   * **Details**\n   *\n   * This function allows you to check if a value inside a `Some` meets a\n   * specified condition. If the `Option` is `None`, the result is `false`. If the\n   * `Option` is `Some`, the provided predicate or refinement is applied to the\n   * value:\n   *\n   * - If the condition is met, the result is `true`.\n   * - If the condition is not met, the result is `false`.\n   *\n   * @example\n   * ```ts\n   * import { Option } from \"effect\"\n   *\n   * const isEven = (n: number) => n % 2 === 0\n   *\n   * console.log(Option.some(2).pipe(Option.exists(isEven)))\n   * // Output: true\n   *\n   * console.log(Option.some(1).pipe(Option.exists(isEven)))\n   * // Output: false\n   *\n   * console.log(Option.none().pipe(Option.exists(isEven)))\n   * // Output: false\n   * ```\n   *\n   * @category Elements\n   * @since 2.0.0\n   */\n  <A, B extends A>(refinement: Refinement<NoInfer<A>, B>): (self: Option<A>) => self is Option<B>\n  /**\n   * Checks if a value in an `Option` satisfies a given predicate or refinement.\n   *\n   * **Details**\n   *\n   * This function allows you to check if a value inside a `Some` meets a\n   * specified condition. If the `Option` is `None`, the result is `false`. If the\n   * `Option` is `Some`, the provided predicate or refinement is applied to the\n   * value:\n   *\n   * - If the condition is met, the result is `true`.\n   * - If the condition is not met, the result is `false`.\n   *\n   * @example\n   * ```ts\n   * import { Option } from \"effect\"\n   *\n   * const isEven = (n: number) => n % 2 === 0\n   *\n   * console.log(Option.some(2).pipe(Option.exists(isEven)))\n   * // Output: true\n   *\n   * console.log(Option.some(1).pipe(Option.exists(isEven)))\n   * // Output: false\n   *\n   * console.log(Option.none().pipe(Option.exists(isEven)))\n   * // Output: false\n   * ```\n   *\n   * @category Elements\n   * @since 2.0.0\n   */\n  <A>(predicate: Predicate<NoInfer<A>>): (self: Option<A>) => boolean\n  /**\n   * Checks if a value in an `Option` satisfies a given predicate or refinement.\n   *\n   * **Details**\n   *\n   * This function allows you to check if a value inside a `Some` meets a\n   * specified condition. If the `Option` is `None`, the result is `false`. If the\n   * `Option` is `Some`, the provided predicate or refinement is applied to the\n   * value:\n   *\n   * - If the condition is met, the result is `true`.\n   * - If the condition is not met, the result is `false`.\n   *\n   * @example\n   * ```ts\n   * import { Option } from \"effect\"\n   *\n   * const isEven = (n: number) => n % 2 === 0\n   *\n   * console.log(Option.some(2).pipe(Option.exists(isEven)))\n   * // Output: true\n   *\n   * console.log(Option.some(1).pipe(Option.exists(isEven)))\n   * // Output: false\n   *\n   * console.log(Option.none().pipe(Option.exists(isEven)))\n   * // Output: false\n   * ```\n   *\n   * @category Elements\n   * @since 2.0.0\n   */\n  <A, B extends A>(self: Option<A>, refinement: Refinement<A, B>): self is Option<B>\n  /**\n   * Checks if a value in an `Option` satisfies a given predicate or refinement.\n   *\n   * **Details**\n   *\n   * This function allows you to check if a value inside a `Some` meets a\n   * specified condition. If the `Option` is `None`, the result is `false`. If the\n   * `Option` is `Some`, the provided predicate or refinement is applied to the\n   * value:\n   *\n   * - If the condition is met, the result is `true`.\n   * - If the condition is not met, the result is `false`.\n   *\n   * @example\n   * ```ts\n   * import { Option } from \"effect\"\n   *\n   * const isEven = (n: number) => n % 2 === 0\n   *\n   * console.log(Option.some(2).pipe(Option.exists(isEven)))\n   * // Output: true\n   *\n   * console.log(Option.some(1).pipe(Option.exists(isEven)))\n   * // Output: false\n   *\n   * console.log(Option.none().pipe(Option.exists(isEven)))\n   * // Output: false\n   * ```\n   *\n   * @category Elements\n   * @since 2.0.0\n   */\n  <A>(self: Option<A>, predicate: Predicate<A>): boolean\n} = dual(\n  2,\n  <A, B extends A>(self: Option<A>, refinement: Refinement<A, B>): self is Option<B> =>\n    isNone(self) ? false : refinement(self.value)\n)\n\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n\n/**\n * The \"do simulation\" in Effect allows you to write code in a more declarative style, similar to the \"do notation\" in other programming languages. It provides a way to define variables and perform operations on them using functions like `bind` and `let`.\n *\n * Here's how the do simulation works:\n *\n * 1. Start the do simulation using the `Do` value\n * 2. Within the do simulation scope, you can use the `bind` function to define variables and bind them to `Option` values\n * 3. You can accumulate multiple `bind` statements to define multiple variables within the scope\n * 4. Inside the do simulation scope, you can also use the `let` function to define variables and bind them to simple values\n * 5. Regular `Option` functions like `map` and `filter` can still be used within the do simulation. These functions will receive the accumulated variables as arguments within the scope\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Option, pipe } from \"effect\"\n *\n * const result = pipe(\n *   Option.Do,\n *   Option.bind(\"x\", () => Option.some(2)),\n *   Option.bind(\"y\", () => Option.some(3)),\n *   Option.let(\"sum\", ({ x, y }) => x + y),\n *   Option.filter(({ x, y }) => x * y > 5)\n * )\n * assert.deepStrictEqual(result, Option.some({ x: 2, y: 3, sum: 5 }))\n * ```\n *\n * @see {@link Do}\n * @see {@link bind}\n * @see {@link let_ let}\n *\n * @category Do notation\n * @since 2.0.0\n */\nexport const bindTo: {\n  // -------------------------------------------------------------------------------------\n  // do notation\n  // -------------------------------------------------------------------------------------\n\n  /**\n   * The \"do simulation\" in Effect allows you to write code in a more declarative style, similar to the \"do notation\" in other programming languages. It provides a way to define variables and perform operations on them using functions like `bind` and `let`.\n   *\n   * Here's how the do simulation works:\n   *\n   * 1. Start the do simulation using the `Do` value\n   * 2. Within the do simulation scope, you can use the `bind` function to define variables and bind them to `Option` values\n   * 3. You can accumulate multiple `bind` statements to define multiple variables within the scope\n   * 4. Inside the do simulation scope, you can also use the `let` function to define variables and bind them to simple values\n   * 5. Regular `Option` functions like `map` and `filter` can still be used within the do simulation. These functions will receive the accumulated variables as arguments within the scope\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Option, pipe } from \"effect\"\n   *\n   * const result = pipe(\n   *   Option.Do,\n   *   Option.bind(\"x\", () => Option.some(2)),\n   *   Option.bind(\"y\", () => Option.some(3)),\n   *   Option.let(\"sum\", ({ x, y }) => x + y),\n   *   Option.filter(({ x, y }) => x * y > 5)\n   * )\n   * assert.deepStrictEqual(result, Option.some({ x: 2, y: 3, sum: 5 }))\n   * ```\n   *\n   * @see {@link Do}\n   * @see {@link bind}\n   * @see {@link let_ let}\n   *\n   * @category Do notation\n   * @since 2.0.0\n   */\n  <N extends string>(name: N): <A>(self: Option<A>) => Option<{ [K in N]: A }>\n  // -------------------------------------------------------------------------------------\n  // do notation\n  // -------------------------------------------------------------------------------------\n\n  /**\n   * The \"do simulation\" in Effect allows you to write code in a more declarative style, similar to the \"do notation\" in other programming languages. It provides a way to define variables and perform operations on them using functions like `bind` and `let`.\n   *\n   * Here's how the do simulation works:\n   *\n   * 1. Start the do simulation using the `Do` value\n   * 2. Within the do simulation scope, you can use the `bind` function to define variables and bind them to `Option` values\n   * 3. You can accumulate multiple `bind` statements to define multiple variables within the scope\n   * 4. Inside the do simulation scope, you can also use the `let` function to define variables and bind them to simple values\n   * 5. Regular `Option` functions like `map` and `filter` can still be used within the do simulation. These functions will receive the accumulated variables as arguments within the scope\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Option, pipe } from \"effect\"\n   *\n   * const result = pipe(\n   *   Option.Do,\n   *   Option.bind(\"x\", () => Option.some(2)),\n   *   Option.bind(\"y\", () => Option.some(3)),\n   *   Option.let(\"sum\", ({ x, y }) => x + y),\n   *   Option.filter(({ x, y }) => x * y > 5)\n   * )\n   * assert.deepStrictEqual(result, Option.some({ x: 2, y: 3, sum: 5 }))\n   * ```\n   *\n   * @see {@link Do}\n   * @see {@link bind}\n   * @see {@link let_ let}\n   *\n   * @category Do notation\n   * @since 2.0.0\n   */\n  <A, N extends string>(self: Option<A>, name: N): Option<{ [K in N]: A }>\n} = doNotation.bindTo<OptionTypeLambda>(map)\n\nconst let_: {\n  <N extends string, A extends object, B>(\n    name: Exclude<N, keyof A>,\n    f: (a: NoInfer<A>) => B\n  ): (self: Option<A>) => Option<{ [K in N | keyof A]: K extends keyof A ? A[K] : B }>\n  <A extends object, N extends string, B>(\n    self: Option<A>,\n    name: Exclude<N, keyof A>,\n    f: (a: NoInfer<A>) => B\n  ): Option<{ [K in N | keyof A]: K extends keyof A ? A[K] : B }>\n} = doNotation.let_<OptionTypeLambda>(map)\n\nexport {\n  /**\n   * The \"do simulation\" in Effect allows you to write code in a more declarative style, similar to the \"do notation\" in other programming languages. It provides a way to define variables and perform operations on them using functions like `bind` and `let`.\n   *\n   * Here's how the do simulation works:\n   *\n   * 1. Start the do simulation using the `Do` value\n   * 2. Within the do simulation scope, you can use the `bind` function to define variables and bind them to `Option` values\n   * 3. You can accumulate multiple `bind` statements to define multiple variables within the scope\n   * 4. Inside the do simulation scope, you can also use the `let` function to define variables and bind them to simple values\n   * 5. Regular `Option` functions like `map` and `filter` can still be used within the do simulation. These functions will receive the accumulated variables as arguments within the scope\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Option, pipe } from \"effect\"\n   *\n   * const result = pipe(\n   *   Option.Do,\n   *   Option.bind(\"x\", () => Option.some(2)),\n   *   Option.bind(\"y\", () => Option.some(3)),\n   *   Option.let(\"sum\", ({ x, y }) => x + y),\n   *   Option.filter(({ x, y }) => x * y > 5)\n   * )\n   * assert.deepStrictEqual(result, Option.some({ x: 2, y: 3, sum: 5 }))\n   * ```\n   *\n   * @see {@link Do}\n   * @see {@link bind}\n   * @see {@link bindTo}\n   *\n   * @category Do notation\n   * @since 2.0.0\n   */\n  let_ as let\n}\n\n/**\n * The \"do simulation\" in Effect allows you to write code in a more declarative style, similar to the \"do notation\" in other programming languages. It provides a way to define variables and perform operations on them using functions like `bind` and `let`.\n *\n * Here's how the do simulation works:\n *\n * 1. Start the do simulation using the `Do` value\n * 2. Within the do simulation scope, you can use the `bind` function to define variables and bind them to `Option` values\n * 3. You can accumulate multiple `bind` statements to define multiple variables within the scope\n * 4. Inside the do simulation scope, you can also use the `let` function to define variables and bind them to simple values\n * 5. Regular `Option` functions like `map` and `filter` can still be used within the do simulation. These functions will receive the accumulated variables as arguments within the scope\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Option, pipe } from \"effect\"\n *\n * const result = pipe(\n *   Option.Do,\n *   Option.bind(\"x\", () => Option.some(2)),\n *   Option.bind(\"y\", () => Option.some(3)),\n *   Option.let(\"sum\", ({ x, y }) => x + y),\n *   Option.filter(({ x, y }) => x * y > 5)\n * )\n * assert.deepStrictEqual(result, Option.some({ x: 2, y: 3, sum: 5 }))\n * ```\n *\n * @see {@link Do}\n * @see {@link bindTo}\n * @see {@link let_ let}\n *\n * @category Do notation\n * @since 2.0.0\n */\nexport const bind: {\n  /**\n   * The \"do simulation\" in Effect allows you to write code in a more declarative style, similar to the \"do notation\" in other programming languages. It provides a way to define variables and perform operations on them using functions like `bind` and `let`.\n   *\n   * Here's how the do simulation works:\n   *\n   * 1. Start the do simulation using the `Do` value\n   * 2. Within the do simulation scope, you can use the `bind` function to define variables and bind them to `Option` values\n   * 3. You can accumulate multiple `bind` statements to define multiple variables within the scope\n   * 4. Inside the do simulation scope, you can also use the `let` function to define variables and bind them to simple values\n   * 5. Regular `Option` functions like `map` and `filter` can still be used within the do simulation. These functions will receive the accumulated variables as arguments within the scope\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Option, pipe } from \"effect\"\n   *\n   * const result = pipe(\n   *   Option.Do,\n   *   Option.bind(\"x\", () => Option.some(2)),\n   *   Option.bind(\"y\", () => Option.some(3)),\n   *   Option.let(\"sum\", ({ x, y }) => x + y),\n   *   Option.filter(({ x, y }) => x * y > 5)\n   * )\n   * assert.deepStrictEqual(result, Option.some({ x: 2, y: 3, sum: 5 }))\n   * ```\n   *\n   * @see {@link Do}\n   * @see {@link bindTo}\n   * @see {@link let_ let}\n   *\n   * @category Do notation\n   * @since 2.0.0\n   */\n  <N extends string, A extends object, B>(name: Exclude<N, keyof A>, f: (a: NoInfer<A>) => Option<B>): (self: Option<A>) => Option<{ [K in N | keyof A]: K extends keyof A ? A[K] : B }>\n  /**\n   * The \"do simulation\" in Effect allows you to write code in a more declarative style, similar to the \"do notation\" in other programming languages. It provides a way to define variables and perform operations on them using functions like `bind` and `let`.\n   *\n   * Here's how the do simulation works:\n   *\n   * 1. Start the do simulation using the `Do` value\n   * 2. Within the do simulation scope, you can use the `bind` function to define variables and bind them to `Option` values\n   * 3. You can accumulate multiple `bind` statements to define multiple variables within the scope\n   * 4. Inside the do simulation scope, you can also use the `let` function to define variables and bind them to simple values\n   * 5. Regular `Option` functions like `map` and `filter` can still be used within the do simulation. These functions will receive the accumulated variables as arguments within the scope\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Option, pipe } from \"effect\"\n   *\n   * const result = pipe(\n   *   Option.Do,\n   *   Option.bind(\"x\", () => Option.some(2)),\n   *   Option.bind(\"y\", () => Option.some(3)),\n   *   Option.let(\"sum\", ({ x, y }) => x + y),\n   *   Option.filter(({ x, y }) => x * y > 5)\n   * )\n   * assert.deepStrictEqual(result, Option.some({ x: 2, y: 3, sum: 5 }))\n   * ```\n   *\n   * @see {@link Do}\n   * @see {@link bindTo}\n   * @see {@link let_ let}\n   *\n   * @category Do notation\n   * @since 2.0.0\n   */\n  <A extends object, N extends string, B>(\n    self: Option<A>,\n    name: Exclude<N, keyof A>,\n    f: (a: NoInfer<A>) => Option<B>\n  ): Option<{ [K in N | keyof A]: K extends keyof A ? A[K] : B }>\n} = doNotation.bind<OptionTypeLambda>(map, flatMap)\n\n/**\n * The \"do simulation\" in Effect allows you to write code in a more declarative style, similar to the \"do notation\" in other programming languages. It provides a way to define variables and perform operations on them using functions like `bind` and `let`.\n *\n * Here's how the do simulation works:\n *\n * 1. Start the do simulation using the `Do` value\n * 2. Within the do simulation scope, you can use the `bind` function to define variables and bind them to `Option` values\n * 3. You can accumulate multiple `bind` statements to define multiple variables within the scope\n * 4. Inside the do simulation scope, you can also use the `let` function to define variables and bind them to simple values\n * 5. Regular `Option` functions like `map` and `filter` can still be used within the do simulation. These functions will receive the accumulated variables as arguments within the scope\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Option, pipe } from \"effect\"\n *\n * const result = pipe(\n *   Option.Do,\n *   Option.bind(\"x\", () => Option.some(2)),\n *   Option.bind(\"y\", () => Option.some(3)),\n *   Option.let(\"sum\", ({ x, y }) => x + y),\n *   Option.filter(({ x, y }) => x * y > 5)\n * )\n * assert.deepStrictEqual(result, Option.some({ x: 2, y: 3, sum: 5 }))\n * ```\n *\n * @see {@link bindTo}\n * @see {@link bind}\n * @see {@link let_ let}\n *\n * @category Do notation\n * @since 2.0.0\n */\nexport const Do: Option<{}> = some({})\n\nconst adapter = Gen.adapter<OptionTypeLambda>()\n\n/**\n * Similar to `Effect.gen`, `Option.gen` provides a more readable,\n * generator-based syntax for working with `Option` values, making code that\n * involves `Option` easier to write and understand. This approach is similar to\n * using `async/await` but tailored for `Option`.\n *\n * **Example** (Using `Option.gen` to Create a Combined Value)\n *\n * ```ts\n * import { Option } from \"effect\"\n *\n * const maybeName: Option.Option<string> = Option.some(\"John\")\n * const maybeAge: Option.Option<number> = Option.some(25)\n *\n * const person = Option.gen(function* () {\n *   const name = (yield* maybeName).toUpperCase()\n *   const age = yield* maybeAge\n *   return { name, age }\n * })\n *\n * console.log(person)\n * // Output:\n * // { _id: 'Option', _tag: 'Some', value: { name: 'JOHN', age: 25 } }\n * ```\n *\n * @category Generators\n * @since 2.0.0\n */\nexport const gen: Gen.Gen<OptionTypeLambda, Gen.Adapter<OptionTypeLambda>> = (...args) => {\n  const f = args.length === 1 ? args[0] : args[1].bind(args[0])\n  const iterator = f(adapter)\n  let state: IteratorResult<any> = iterator.next()\n  while (!state.done) {\n    const current = Gen.isGenKind(state.value)\n      ? state.value.value\n      : Gen.yieldWrapGet(state.value)\n    if (isNone(current)) {\n      return current\n    }\n    state = iterator.next(current.value as never)\n  }\n  return some(state.value)\n}\n\n/**\n * Merges two optional values, applying a function if both exist.\n * Unlike {@link zipWith}, this function returns `None` only if both inputs are `None`.\n *\n * @internal\n */\nexport const mergeWith = <A>(f: (a1: A, a2: A) => A) => (o1: Option<A>, o2: Option<A>): Option<A> => {\n  if (isNone(o1)) {\n    return o2\n  } else if (isNone(o2)) {\n    return o1\n  }\n  return some(f(o1.value, o2.value))\n}\n"],"names":["Equal","Equivalence","constNull","constUndefined","dual","identity","isFunction","doNotation","either","option","order","Gen","TypeId","Symbol","for","none","some","isOption","isNone","isSome","match","self","onNone","onSome","value","toRefinement","f","a","fromIterable","collection","getRight","getLeft","getOrElse","orElse","that","orElseSome","orElseEither","map","right","left","firstSomeOf","out","fromNullable","nullableValue","liftNullable","getOrNull","getOrUndefined","liftThrowable","getOrThrowWith","getOrThrow","Error","as","b","asVoid","undefined","void_","void","flatMap","andThen","flatMapNullable","flatten","zipRight","zipLeft","tap","composeK","afb","bfc","product","productMany","o","push","all","input","iterator","key","Object","keys","zipWith","ap","reduceCompact","oa","toArray","partitionMap","e","isLeft","filterMap","filter","predicate","getEquivalence","isEquivalent","make","x","y","getOrder","O","lift2","liftPredicate","containsWith","_equivalence","equivalence","contains","exists","refinement","bindTo","let_","let","bind","Do","adapter","gen","args","length","state","next","done","current","isGenKind","yieldWrapGet","mergeWith","o1","o2"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7635, "column": 0}, "map": {"version":3,"file":"Tuple.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/effect/src/Tuple.ts"],"sourcesContent":["/**\n * This module provides utility functions for working with tuples in TypeScript.\n *\n * @since 2.0.0\n */\nimport * as Equivalence from \"./Equivalence.js\"\nimport { dual } from \"./Function.js\"\nimport type { TypeLambda } from \"./HKT.js\"\nimport * as order from \"./Order.js\"\nimport type { TupleOf } from \"./Types.js\"\n\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexport interface TupleTypeLambda extends TypeLambda {\n  readonly type: [this[\"Out1\"], this[\"Target\"]]\n}\n\n/**\n * Constructs a new tuple from the provided values.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { make } from \"effect/Tuple\"\n *\n * assert.deepStrictEqual(make(1, 'hello', true), [1, 'hello', true])\n * ```\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const make = <A extends ReadonlyArray<any>>(...elements: A): A => elements\n\n/**\n * Return the first element of a tuple.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { getFirst } from \"effect/Tuple\"\n *\n * assert.deepStrictEqual(getFirst([\"hello\", 42]), \"hello\")\n * ```\n *\n * @category getters\n * @since 2.0.0\n */\nexport const getFirst = <L, R>(self: readonly [L, R]): L => self[0]\n\n/**\n * Return the second element of a tuple.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { getSecond } from \"effect/Tuple\"\n *\n * assert.deepStrictEqual(getSecond([\"hello\", 42]), 42)\n * ```\n *\n * @category getters\n * @since 2.0.0\n */\nexport const getSecond = <L, R>(self: readonly [L, R]): R => self[1]\n\n/**\n * Transforms each element of tuple using the given function, treating tuple homomorphically\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { pipe, Tuple } from \"effect\"\n *\n * const result = pipe(\n *   [\"a\", 1, false] as const,\n *   Tuple.map((el) => el.toString().toUpperCase())\n * )\n * assert.deepStrictEqual(result, ['A', '1', 'FALSE'])\n * ```\n *\n * @category mapping\n * @since 3.9.0\n */\nexport const map: {\n  /**\n   * Transforms each element of tuple using the given function, treating tuple homomorphically\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { pipe, Tuple } from \"effect\"\n   *\n   * const result = pipe(\n   *   [\"a\", 1, false] as const,\n   *   Tuple.map((el) => el.toString().toUpperCase())\n   * )\n   * assert.deepStrictEqual(result, ['A', '1', 'FALSE'])\n   * ```\n   *\n   * @category mapping\n   * @since 3.9.0\n   */\n  <T extends ReadonlyArray<any> | [], B>(fn: (element: T[number]) => B): (self: T) => TupleOf<T[\"length\"], B>\n  /**\n   * Transforms each element of tuple using the given function, treating tuple homomorphically\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { pipe, Tuple } from \"effect\"\n   *\n   * const result = pipe(\n   *   [\"a\", 1, false] as const,\n   *   Tuple.map((el) => el.toString().toUpperCase())\n   * )\n   * assert.deepStrictEqual(result, ['A', '1', 'FALSE'])\n   * ```\n   *\n   * @category mapping\n   * @since 3.9.0\n   */\n  <B, T extends ReadonlyArray<any> | []>(self: T, fn: (element: T[number]) => B): TupleOf<T[\"length\"], B>\n} = dual(\n  2,\n  <N extends number, A, B>(\n    self: TupleOf<N, A>,\n    fn: (element: A) => B\n  ): TupleOf<N, B> => self.map((element) => fn(element)) as TupleOf<N, B>\n)\n\n/**\n * Transforms both elements of a tuple using the given functions.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { mapBoth } from \"effect/Tuple\"\n *\n * assert.deepStrictEqual(\n *   mapBoth([\"hello\", 42], { onFirst: s => s.toUpperCase(), onSecond: n => n.toString() }),\n *   [\"HELLO\", \"42\"]\n * )\n * ```\n *\n * @category mapping\n * @since 2.0.0\n */\nexport const mapBoth: {\n  /**\n   * Transforms both elements of a tuple using the given functions.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { mapBoth } from \"effect/Tuple\"\n   *\n   * assert.deepStrictEqual(\n   *   mapBoth([\"hello\", 42], { onFirst: s => s.toUpperCase(), onSecond: n => n.toString() }),\n   *   [\"HELLO\", \"42\"]\n   * )\n   * ```\n   *\n   * @category mapping\n   * @since 2.0.0\n   */\n  <L1, L2, R1, R2>(\n    options: {\n      readonly onFirst: (e: L1) => L2\n      readonly onSecond: (a: R1) => R2\n    }\n  ): (self: readonly [L1, R1]) => [L2, R2]\n  /**\n   * Transforms both elements of a tuple using the given functions.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { mapBoth } from \"effect/Tuple\"\n   *\n   * assert.deepStrictEqual(\n   *   mapBoth([\"hello\", 42], { onFirst: s => s.toUpperCase(), onSecond: n => n.toString() }),\n   *   [\"HELLO\", \"42\"]\n   * )\n   * ```\n   *\n   * @category mapping\n   * @since 2.0.0\n   */\n  <L1, R1, L2, R2>(\n    self: readonly [L1, R1],\n    options: {\n      readonly onFirst: (e: L1) => L2\n      readonly onSecond: (a: R1) => R2\n    }\n  ): [L2, R2]\n} = dual(\n  2,\n  <L1, R1, L2, R2>(\n    self: readonly [L1, R1],\n    { onFirst, onSecond }: {\n      readonly onFirst: (e: L1) => L2\n      readonly onSecond: (a: R1) => R2\n    }\n  ): [L2, R2] => [onFirst(self[0]), onSecond(self[1])]\n)\n\n/**\n * Transforms the first component of a tuple using a given function.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { mapFirst } from \"effect/Tuple\"\n *\n * assert.deepStrictEqual(\n *   mapFirst([\"hello\", 42], s => s.toUpperCase()),\n *   [\"HELLO\", 42]\n * )\n * ```\n *\n * @category mapping\n * @since 2.0.0\n */\nexport const mapFirst: {\n  /**\n   * Transforms the first component of a tuple using a given function.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { mapFirst } from \"effect/Tuple\"\n   *\n   * assert.deepStrictEqual(\n   *   mapFirst([\"hello\", 42], s => s.toUpperCase()),\n   *   [\"HELLO\", 42]\n   * )\n   * ```\n   *\n   * @category mapping\n   * @since 2.0.0\n   */\n  <L1, L2>(f: (left: L1) => L2): <R>(self: readonly [L1, R]) => [L2, R]\n  /**\n   * Transforms the first component of a tuple using a given function.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { mapFirst } from \"effect/Tuple\"\n   *\n   * assert.deepStrictEqual(\n   *   mapFirst([\"hello\", 42], s => s.toUpperCase()),\n   *   [\"HELLO\", 42]\n   * )\n   * ```\n   *\n   * @category mapping\n   * @since 2.0.0\n   */\n  <L1, R, L2>(self: readonly [L1, R], f: (left: L1) => L2): [L2, R]\n} = dual(2, <L1, R, L2>(self: readonly [L1, R], f: (left: L1) => L2): [L2, R] => [f(self[0]), self[1]])\n\n/**\n * Transforms the second component of a tuple using a given function.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { mapSecond } from \"effect/Tuple\"\n *\n * assert.deepStrictEqual(\n *   mapSecond([\"hello\", 42], n => n.toString()),\n *   [\"hello\", \"42\"]\n * )\n * ```\n *\n * @category mapping\n * @since 2.0.0\n */\nexport const mapSecond: {\n  /**\n   * Transforms the second component of a tuple using a given function.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { mapSecond } from \"effect/Tuple\"\n   *\n   * assert.deepStrictEqual(\n   *   mapSecond([\"hello\", 42], n => n.toString()),\n   *   [\"hello\", \"42\"]\n   * )\n   * ```\n   *\n   * @category mapping\n   * @since 2.0.0\n   */\n  <R1, R2>(f: (right: R1) => R2): <L>(self: readonly [L, R1]) => [L, R2]\n  /**\n   * Transforms the second component of a tuple using a given function.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { mapSecond } from \"effect/Tuple\"\n   *\n   * assert.deepStrictEqual(\n   *   mapSecond([\"hello\", 42], n => n.toString()),\n   *   [\"hello\", \"42\"]\n   * )\n   * ```\n   *\n   * @category mapping\n   * @since 2.0.0\n   */\n  <L, R1, R2>(self: readonly [L, R1], f: (right: R1) => R2): [L, R2]\n} = dual(2, <L, R1, R2>(self: readonly [L, R1], f: (right: R1) => R2): [L, R2] => [self[0], f(self[1])])\n\n/**\n * Swaps the two elements of a tuple.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { swap } from \"effect/Tuple\"\n *\n * assert.deepStrictEqual(swap([\"hello\", 42]), [42, \"hello\"])\n * ```\n *\n * @since 2.0.0\n */\nexport const swap = <L, R>(self: readonly [L, R]): [R, L] => [self[1], self[0]]\n\n/**\n * Given a tuple of `Equivalence`s returns a new `Equivalence` that compares values of a tuple\n * by applying each `Equivalence` to the corresponding element of the tuple.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport const getEquivalence: <T extends ReadonlyArray<Equivalence.Equivalence<any>>>(\n  ...isEquivalents: T\n) => Equivalence.Equivalence<\n  Readonly<{ [I in keyof T]: [T[I]] extends [Equivalence.Equivalence<infer A>] ? A : never }>\n> = Equivalence.tuple\n\n/**\n * This function creates and returns a new `Order` for a tuple of values based on the given `Order`s for each element in the tuple.\n * The returned `Order` compares two tuples of the same type by applying the corresponding `Order` to each element in the tuple.\n * It is useful when you need to compare two tuples of the same type and you have a specific way of comparing each element\n * of the tuple.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport const getOrder: <T extends ReadonlyArray<order.Order<any>>>(\n  ...elements: T\n) => order.Order<{ [I in keyof T]: [T[I]] extends [order.Order<infer A>] ? A : never }> = order.tuple\n\n/**\n * Appends an element to the end of a tuple.\n *\n * @category concatenating\n * @since 2.0.0\n */\nexport const appendElement: {\n  /**\n   * Appends an element to the end of a tuple.\n   *\n   * @category concatenating\n   * @since 2.0.0\n   */\n  <B>(that: B): <A extends ReadonlyArray<unknown>>(self: A) => [...A, B]\n  /**\n   * Appends an element to the end of a tuple.\n   *\n   * @category concatenating\n   * @since 2.0.0\n   */\n  <A extends ReadonlyArray<unknown>, B>(self: A, that: B): [...A, B]\n} = dual(2, <A extends ReadonlyArray<unknown>, B>(self: A, that: B): [...A, B] => [...self, that])\n\n/**\n * Retrieves the element at a specified index from a tuple.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Tuple } from \"effect\"\n *\n * assert.deepStrictEqual(Tuple.at([1, 'hello', true], 1), 'hello')\n * ```\n *\n * @category getters\n * @since 3.4.0\n */\nexport const at: {\n  /**\n   * Retrieves the element at a specified index from a tuple.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Tuple } from \"effect\"\n   *\n   * assert.deepStrictEqual(Tuple.at([1, 'hello', true], 1), 'hello')\n   * ```\n   *\n   * @category getters\n   * @since 3.4.0\n   */\n  <N extends number>(index: N): <A extends ReadonlyArray<unknown>>(self: A) => A[N]\n  /**\n   * Retrieves the element at a specified index from a tuple.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Tuple } from \"effect\"\n   *\n   * assert.deepStrictEqual(Tuple.at([1, 'hello', true], 1), 'hello')\n   * ```\n   *\n   * @category getters\n   * @since 3.4.0\n   */\n  <A extends ReadonlyArray<unknown>, N extends number>(self: A, index: N): A[N]\n} = dual(2, <A extends ReadonlyArray<unknown>, N extends number>(self: A, index: N): A[N] => self[index])\n\nexport {\n  /**\n   * Determine if an `Array` is a tuple with exactly `N` elements, narrowing down the type to `TupleOf`.\n   *\n   * An `Array` is considered to be a `TupleOf` if its length is exactly `N`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { isTupleOf } from \"effect/Tuple\"\n   *\n   * assert.deepStrictEqual(isTupleOf([1, 2, 3], 3), true);\n   * assert.deepStrictEqual(isTupleOf([1, 2, 3], 2), false);\n   * assert.deepStrictEqual(isTupleOf([1, 2, 3], 4), false);\n   *\n   * const arr: number[] = [1, 2, 3];\n   * if (isTupleOf(arr, 3)) {\n   *   console.log(arr);\n   *   // ^? [number, number, number]\n   * }\n   *\n   * ```\n   * @category guards\n   * @since 3.3.0\n   */\n  isTupleOf,\n  /**\n   * Determine if an `Array` is a tuple with at least `N` elements, narrowing down the type to `TupleOfAtLeast`.\n   *\n   * An `Array` is considered to be a `TupleOfAtLeast` if its length is at least `N`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { isTupleOfAtLeast } from \"effect/Tuple\"\n   *\n   * assert.deepStrictEqual(isTupleOfAtLeast([1, 2, 3], 3), true);\n   * assert.deepStrictEqual(isTupleOfAtLeast([1, 2, 3], 2), true);\n   * assert.deepStrictEqual(isTupleOfAtLeast([1, 2, 3], 4), false);\n   *\n   * const arr: number[] = [1, 2, 3, 4];\n   * if (isTupleOfAtLeast(arr, 3)) {\n   *   console.log(arr);\n   *   // ^? [number, number, number, ...number[]]\n   * }\n   *\n   * ```\n   * @category guards\n   * @since 3.3.0\n   */\n  isTupleOfAtLeast\n} from \"./Predicate.js\"\n"],"names":["Equivalence","dual","order","make","elements","getFirst","self","getSecond","map","fn","element","mapBoth","onFirst","onSecond","mapFirst","f","mapSecond","swap","getEquivalence","tuple","getOrder","appendElement","that","at","index","isTupleOf","isTupleOfAtLeast"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAKA,OAAO,KAAKA,WAAW,MAAM,kBAAkB;AAC/C,SAASC,IAAI,QAAQ,eAAe;AAEpC,OAAO,KAAKC,KAAK,MAAM,YAAY;;;;AAyB5B,MAAMC,IAAI,GAAGA,CAA+B,GAAGC,QAAW,GAAQA,QAAQ;AAgB1E,MAAMC,QAAQ,IAAUC,IAAqB,GAAQA,IAAI,CAAC,CAAC,CAAC;AAgB5D,MAAMC,SAAS,IAAUD,IAAqB,GAAQA,IAAI,CAAC,CAAC,CAAC;AAoB7D,MAAME,GAAG,GAAA,WAAA,yJAuCZP,OAAAA,AAAI,EACN,CAAC,EACD,CACEK,IAAmB,EACnBG,EAAqB,GACHH,IAAI,CAACE,GAAG,EAAEE,OAAO,GAAKD,EAAE,CAACC,OAAO,CAAC,CAAkB,CACxE;AAmBM,MAAMC,OAAO,GAAA,WAAA,IAgDhBV,4JAAAA,AAAI,EACN,CAAC,EACD,CACEK,IAAuB,EACvB,EAAEM,OAAO,EAAEC,QAAAA,EAGV,GACY;QAACD,OAAO,CAACN,IAAI,CAAC,CAAC,CAAC,CAAC;QAAEO,QAAQ,CAACP,IAAI,CAAC,CAAC,CAAC,CAAC;KAAC,CACrD;AAmBM,MAAMQ,QAAQ,GAAA,WAAA,yJAqCjBb,OAAAA,AAAI,EAAC,CAAC,EAAE,CAAYK,IAAsB,EAAES,CAAmB,GAAc;QAACA,CAAC,CAACT,IAAI,CAAC,CAAC,CAAC,CAAC;QAAEA,IAAI,CAAC,CAAC,CAAC;KAAC,CAAC;AAmBhG,MAAMU,SAAS,GAAA,WAAA,yJAqClBf,OAAAA,AAAI,EAAC,CAAC,EAAE,CAAYK,IAAsB,EAAES,CAAoB,GAAc;QAACT,IAAI,CAAC,CAAC,CAAC;QAAES,CAAC,CAACT,IAAI,CAAC,CAAC,CAAC,CAAC;KAAC,CAAC;AAejG,MAAMW,IAAI,IAAUX,IAAqB,GAAa;QAACA,IAAI,CAAC,CAAC,CAAC;QAAEA,IAAI,CAAC,CAAC,CAAC;KAAC;AASxE,MAAMY,cAAc,wJAIvBlB,QAAiB,GAAN,CAACmB;AAWT,MAAMC,QAAQ,iJAEqElB,KAAK,CAACiB,GAAK;AAQ9F,MAAME,aAAa,GAAA,WAAA,yJAetBpB,OAAAA,AAAI,EAAC,CAAC,EAAE,CAAsCK,IAAO,EAAEgB,IAAO,GAAgB,CAAC;WAAGhB,IAAI;QAAEgB,IAAI;KAAC,CAAC;AAgB3F,MAAMC,EAAE,GAAA,WAAA,yJA+BXtB,OAAAA,AAAI,EAAC,CAAC,EAAE,CAAqDK,IAAO,EAAEkB,KAAQ,GAAWlB,IAAI,CAACkB,KAAK,CAAC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7694, "column": 0}, "map": {"version":3,"file":"Iterable.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/effect/src/Iterable.ts"],"sourcesContent":["/**\n * This module provides utility functions for working with Iterables in TypeScript.\n *\n * @since 2.0.0\n */\n\nimport type { NonEmptyArray } from \"./Array.js\"\nimport type { Either } from \"./Either.js\"\nimport * as E from \"./Either.js\"\nimport * as Equal from \"./Equal.js\"\nimport { dual, identity } from \"./Function.js\"\nimport type { Option } from \"./Option.js\"\nimport * as O from \"./Option.js\"\nimport { isBoolean } from \"./Predicate.js\"\nimport type * as Record from \"./Record.js\"\nimport * as Tuple from \"./Tuple.js\"\nimport type { NoInfer } from \"./Types.js\"\n\n/**\n * Return a `Iterable` with element `i` initialized with `f(i)`.\n *\n * If the `length` is not specified, the `Iterable` will be infinite.\n *\n * **Note**. `length` is normalized to an integer >= 1.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { makeBy } from \"effect/Iterable\"\n *\n * assert.deepStrictEqual(Array.from(makeBy(n => n * 2, { length: 5 })), [0, 2, 4, 6, 8])\n * ```\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const makeBy = <A>(f: (i: number) => A, options?: {\n  readonly length?: number\n}): Iterable<A> => {\n  const max = options?.length !== undefined ? Math.max(1, Math.floor(options.length)) : Infinity\n  return {\n    [Symbol.iterator]() {\n      let i = 0\n      return {\n        next(): IteratorResult<A> {\n          if (i < max) {\n            return { value: f(i++), done: false }\n          }\n          return { done: true, value: undefined }\n        }\n      }\n    }\n  }\n}\n\n/**\n * Return a `Iterable` containing a range of integers, including both endpoints.\n *\n * If `end` is omitted, the range will not have an upper bound.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { range } from \"effect/Iterable\"\n *\n * assert.deepStrictEqual(Array.from(range(1, 3)), [1, 2, 3])\n * ```\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const range = (start: number, end?: number): Iterable<number> => {\n  if (end === undefined) {\n    return makeBy((i) => start + i)\n  }\n  return makeBy((i) => start + i, {\n    length: start <= end ? end - start + 1 : 1\n  })\n}\n\n/**\n * Return a `Iterable` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to an integer >= 1.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { replicate } from \"effect/Iterable\"\n *\n * assert.deepStrictEqual(Array.from(replicate(\"a\", 3)), [\"a\", \"a\", \"a\"])\n * ```\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const replicate: {\n  /**\n   * Return a `Iterable` containing a value repeated the specified number of times.\n   *\n   * **Note**. `n` is normalized to an integer >= 1.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { replicate } from \"effect/Iterable\"\n   *\n   * assert.deepStrictEqual(Array.from(replicate(\"a\", 3)), [\"a\", \"a\", \"a\"])\n   * ```\n   *\n   * @category constructors\n   * @since 2.0.0\n   */\n  (n: number): <A>(a: A) => Iterable<A>\n  /**\n   * Return a `Iterable` containing a value repeated the specified number of times.\n   *\n   * **Note**. `n` is normalized to an integer >= 1.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { replicate } from \"effect/Iterable\"\n   *\n   * assert.deepStrictEqual(Array.from(replicate(\"a\", 3)), [\"a\", \"a\", \"a\"])\n   * ```\n   *\n   * @category constructors\n   * @since 2.0.0\n   */\n  <A>(a: A, n: number): Iterable<A>\n} = dual(2, <A>(a: A, n: number): Iterable<A> => makeBy(() => a, { length: n }))\n\n/**\n * Takes a record and returns an Iterable of tuples containing its keys and values.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { fromRecord } from \"effect/Iterable\"\n *\n * const x = { a: 1, b: 2, c: 3 }\n * assert.deepStrictEqual(Array.from(fromRecord(x)), [[\"a\", 1], [\"b\", 2], [\"c\", 3]])\n * ```\n *\n * @category conversions\n * @since 2.0.0\n */\nexport const fromRecord = <K extends string, A>(self: Readonly<Record<K, A>>): Iterable<[K, A]> => ({\n  *[Symbol.iterator]() {\n    for (const key in self) {\n      if (Object.prototype.hasOwnProperty.call(self, key)) {\n        yield [key, self[key]]\n      }\n    }\n  }\n})\n\n/**\n * Prepend an element to the front of an `Iterable`, creating a new `Iterable`.\n *\n * @category concatenating\n * @since 2.0.0\n */\nexport const prepend: {\n  /**\n   * Prepend an element to the front of an `Iterable`, creating a new `Iterable`.\n   *\n   * @category concatenating\n   * @since 2.0.0\n   */\n  <B>(head: B): <A>(self: Iterable<A>) => Iterable<A | B>\n  /**\n   * Prepend an element to the front of an `Iterable`, creating a new `Iterable`.\n   *\n   * @category concatenating\n   * @since 2.0.0\n   */\n  <A, B>(self: Iterable<A>, head: B): Iterable<A | B>\n} = dual(2, <A, B>(self: Iterable<A>, head: B): Iterable<A | B> => prependAll(self, [head]))\n\n/**\n * Prepends the specified prefix iterable to the beginning of the specified iterable.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Iterable } from \"effect\"\n *\n * assert.deepStrictEqual(\n *   Array.from(Iterable.prependAll([1, 2], [\"a\", \"b\"])),\n *   [\"a\", \"b\", 1, 2]\n * )\n * ```\n *\n * @category concatenating\n * @since 2.0.0\n */\nexport const prependAll: {\n  /**\n   * Prepends the specified prefix iterable to the beginning of the specified iterable.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Iterable } from \"effect\"\n   *\n   * assert.deepStrictEqual(\n   *   Array.from(Iterable.prependAll([1, 2], [\"a\", \"b\"])),\n   *   [\"a\", \"b\", 1, 2]\n   * )\n   * ```\n   *\n   * @category concatenating\n   * @since 2.0.0\n   */\n  <B>(that: Iterable<B>): <A>(self: Iterable<A>) => Iterable<A | B>\n  /**\n   * Prepends the specified prefix iterable to the beginning of the specified iterable.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Iterable } from \"effect\"\n   *\n   * assert.deepStrictEqual(\n   *   Array.from(Iterable.prependAll([1, 2], [\"a\", \"b\"])),\n   *   [\"a\", \"b\", 1, 2]\n   * )\n   * ```\n   *\n   * @category concatenating\n   * @since 2.0.0\n   */\n  <A, B>(self: Iterable<A>, that: Iterable<B>): Iterable<A | B>\n} = dual(\n  2,\n  <A, B>(self: Iterable<A>, that: Iterable<B>): Iterable<A | B> => appendAll(that, self)\n)\n\n/**\n * Append an element to the end of an `Iterable`, creating a new `Iterable`.\n *\n * @category concatenating\n * @since 2.0.0\n */\nexport const append: {\n  /**\n   * Append an element to the end of an `Iterable`, creating a new `Iterable`.\n   *\n   * @category concatenating\n   * @since 2.0.0\n   */\n  <B>(last: B): <A>(self: Iterable<A>) => Iterable<A | B>\n  /**\n   * Append an element to the end of an `Iterable`, creating a new `Iterable`.\n   *\n   * @category concatenating\n   * @since 2.0.0\n   */\n  <A, B>(self: Iterable<A>, last: B): Iterable<A | B>\n} = dual(2, <A, B>(self: Iterable<A>, last: B): Iterable<A | B> => appendAll(self, [last]))\n\n/**\n * Concatenates two iterables, combining their elements.\n *\n * @category concatenating\n * @since 2.0.0\n */\nexport const appendAll: {\n  /**\n   * Concatenates two iterables, combining their elements.\n   *\n   * @category concatenating\n   * @since 2.0.0\n   */\n  <B>(that: Iterable<B>): <A>(self: Iterable<A>) => Iterable<A | B>\n  /**\n   * Concatenates two iterables, combining their elements.\n   *\n   * @category concatenating\n   * @since 2.0.0\n   */\n  <A, B>(self: Iterable<A>, that: Iterable<B>): Iterable<A | B>\n} = dual(\n  2,\n  <A, B>(self: Iterable<A>, that: Iterable<B>): Iterable<A | B> => ({\n    [Symbol.iterator]() {\n      const iterA = self[Symbol.iterator]()\n      let doneA = false\n      let iterB: Iterator<B>\n      return {\n        next() {\n          if (!doneA) {\n            const r = iterA.next()\n            if (r.done) {\n              doneA = true\n              iterB = that[Symbol.iterator]()\n              return iterB.next()\n            }\n            return r\n          }\n          return iterB.next()\n        }\n      }\n    }\n  })\n)\n\n/**\n * Reduce an `Iterable` from the left, keeping all intermediate results instead of only the final result.\n *\n * @category folding\n * @since 2.0.0\n */\nexport const scan: {\n  /**\n   * Reduce an `Iterable` from the left, keeping all intermediate results instead of only the final result.\n   *\n   * @category folding\n   * @since 2.0.0\n   */\n  <B, A>(b: B, f: (b: B, a: A) => B): (self: Iterable<A>) => Iterable<B>\n  /**\n   * Reduce an `Iterable` from the left, keeping all intermediate results instead of only the final result.\n   *\n   * @category folding\n   * @since 2.0.0\n   */\n  <A, B>(self: Iterable<A>, b: B, f: (b: B, a: A) => B): Iterable<B>\n} = dual(3, <A, B>(self: Iterable<A>, b: B, f: (b: B, a: A) => B): Iterable<B> => ({\n  [Symbol.iterator]() {\n    let acc = b\n    let iterator: Iterator<A> | undefined\n    function next() {\n      if (iterator === undefined) {\n        iterator = self[Symbol.iterator]()\n        return { done: false, value: acc }\n      }\n      const result = iterator.next()\n      if (result.done) {\n        return result\n      }\n      acc = f(acc, result.value)\n      return { done: false, value: acc }\n    }\n    return { next }\n  }\n}))\n\n/**\n * Determine if an `Iterable` is empty\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isEmpty } from \"effect/Iterable\"\n *\n * assert.deepStrictEqual(isEmpty([]), true);\n * assert.deepStrictEqual(isEmpty([1, 2, 3]), false);\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isEmpty = <A>(self: Iterable<A>): self is Iterable<never> => {\n  const iterator = self[Symbol.iterator]()\n  return iterator.next().done === true\n}\n\n/**\n * Return the number of elements in a `Iterable`.\n *\n * @category getters\n * @since 2.0.0\n */\nexport const size = <A>(self: Iterable<A>): number => {\n  const iterator = self[Symbol.iterator]()\n  let count = 0\n  while (!iterator.next().done) {\n    count++\n  }\n  return count\n}\n\n/**\n * Get the first element of a `Iterable`, or `None` if the `Iterable` is empty.\n *\n * @category getters\n * @since 2.0.0\n */\nexport const head = <A>(self: Iterable<A>): Option<A> => {\n  const iterator = self[Symbol.iterator]()\n  const result = iterator.next()\n  return result.done ? O.none() : O.some(result.value)\n}\n\n/**\n * Get the first element of a `Iterable`, or throw an error if the `Iterable` is empty.\n *\n * @category getters\n * @since 3.3.0\n */\nexport const unsafeHead = <A>(self: Iterable<A>): A => {\n  const iterator = self[Symbol.iterator]()\n  const result = iterator.next()\n  if (result.done) throw new Error(\"unsafeHead: empty iterable\")\n  return result.value\n}\n\n/**\n * Keep only a max number of elements from the start of an `Iterable`, creating a new `Iterable`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @category getters\n * @since 2.0.0\n */\nexport const take: {\n  /**\n   * Keep only a max number of elements from the start of an `Iterable`, creating a new `Iterable`.\n   *\n   * **Note**. `n` is normalized to a non negative integer.\n   *\n   * @category getters\n   * @since 2.0.0\n   */\n  (n: number): <A>(self: Iterable<A>) => Iterable<A>\n  /**\n   * Keep only a max number of elements from the start of an `Iterable`, creating a new `Iterable`.\n   *\n   * **Note**. `n` is normalized to a non negative integer.\n   *\n   * @category getters\n   * @since 2.0.0\n   */\n  <A>(self: Iterable<A>, n: number): Iterable<A>\n} = dual(2, <A>(self: Iterable<A>, n: number): Iterable<A> => ({\n  [Symbol.iterator]() {\n    let i = 0\n    const iterator = self[Symbol.iterator]()\n    return {\n      next() {\n        if (i < n) {\n          i++\n          return iterator.next()\n        }\n        return { done: true, value: undefined }\n      }\n    }\n  }\n}))\n\n/**\n * Calculate the longest initial Iterable for which all element satisfy the specified predicate, creating a new `Iterable`.\n *\n * @category getters\n * @since 2.0.0\n */\nexport const takeWhile: {\n  /**\n   * Calculate the longest initial Iterable for which all element satisfy the specified predicate, creating a new `Iterable`.\n   *\n   * @category getters\n   * @since 2.0.0\n   */\n  <A, B extends A>(refinement: (a: NoInfer<A>, i: number) => a is B): (self: Iterable<A>) => Iterable<B>\n  /**\n   * Calculate the longest initial Iterable for which all element satisfy the specified predicate, creating a new `Iterable`.\n   *\n   * @category getters\n   * @since 2.0.0\n   */\n  <A>(predicate: (a: NoInfer<A>, i: number) => boolean): (self: Iterable<A>) => Iterable<A>\n  /**\n   * Calculate the longest initial Iterable for which all element satisfy the specified predicate, creating a new `Iterable`.\n   *\n   * @category getters\n   * @since 2.0.0\n   */\n  <A, B extends A>(self: Iterable<A>, refinement: (a: A, i: number) => a is B): Iterable<B>\n  /**\n   * Calculate the longest initial Iterable for which all element satisfy the specified predicate, creating a new `Iterable`.\n   *\n   * @category getters\n   * @since 2.0.0\n   */\n  <A>(self: Iterable<A>, predicate: (a: A, i: number) => boolean): Iterable<A>\n} = dual(2, <A>(self: Iterable<A>, predicate: (a: A, i: number) => boolean): Iterable<A> => ({\n  [Symbol.iterator]() {\n    const iterator = self[Symbol.iterator]()\n    let i = 0\n    return {\n      next() {\n        const result = iterator.next()\n        if (result.done || !predicate(result.value, i++)) {\n          return { done: true, value: undefined }\n        }\n        return result\n      }\n    }\n  }\n}))\n\n/**\n * Drop a max number of elements from the start of an `Iterable`\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @category getters\n * @since 2.0.0\n */\nexport const drop: {\n  /**\n   * Drop a max number of elements from the start of an `Iterable`\n   *\n   * **Note**. `n` is normalized to a non negative integer.\n   *\n   * @category getters\n   * @since 2.0.0\n   */\n  (n: number): <A>(self: Iterable<A>) => Iterable<A>\n  /**\n   * Drop a max number of elements from the start of an `Iterable`\n   *\n   * **Note**. `n` is normalized to a non negative integer.\n   *\n   * @category getters\n   * @since 2.0.0\n   */\n  <A>(self: Iterable<A>, n: number): Iterable<A>\n} = dual(2, <A>(self: Iterable<A>, n: number): Iterable<A> => ({\n  [Symbol.iterator]() {\n    const iterator = self[Symbol.iterator]()\n    let i = 0\n    return {\n      next() {\n        while (i < n) {\n          const result = iterator.next()\n          if (result.done) {\n            return { done: true, value: undefined }\n          }\n          i++\n        }\n        return iterator.next()\n      }\n    }\n  }\n}))\n\n/**\n * Returns the first element that satisfies the specified\n * predicate, or `None` if no such element exists.\n *\n * @category elements\n * @since 2.0.0\n */\nexport const findFirst: {\n  /**\n   * Returns the first element that satisfies the specified\n   * predicate, or `None` if no such element exists.\n   *\n   * @category elements\n   * @since 2.0.0\n   */\n  <A, B>(f: (a: NoInfer<A>, i: number) => Option<B>): (self: Iterable<A>) => Option<B>\n  /**\n   * Returns the first element that satisfies the specified\n   * predicate, or `None` if no such element exists.\n   *\n   * @category elements\n   * @since 2.0.0\n   */\n  <A, B extends A>(refinement: (a: NoInfer<A>, i: number) => a is B): (self: Iterable<A>) => Option<B>\n  /**\n   * Returns the first element that satisfies the specified\n   * predicate, or `None` if no such element exists.\n   *\n   * @category elements\n   * @since 2.0.0\n   */\n  <A>(predicate: (a: NoInfer<A>, i: number) => boolean): (self: Iterable<A>) => Option<A>\n  /**\n   * Returns the first element that satisfies the specified\n   * predicate, or `None` if no such element exists.\n   *\n   * @category elements\n   * @since 2.0.0\n   */\n  <A, B>(self: Iterable<A>, f: (a: A, i: number) => Option<B>): Option<B>\n  /**\n   * Returns the first element that satisfies the specified\n   * predicate, or `None` if no such element exists.\n   *\n   * @category elements\n   * @since 2.0.0\n   */\n  <A, B extends A>(self: Iterable<A>, refinement: (a: A, i: number) => a is B): Option<B>\n  /**\n   * Returns the first element that satisfies the specified\n   * predicate, or `None` if no such element exists.\n   *\n   * @category elements\n   * @since 2.0.0\n   */\n  <A>(self: Iterable<A>, predicate: (a: A, i: number) => boolean): Option<A>\n} = dual(\n  2,\n  <A>(self: Iterable<A>, f: ((a: A, i: number) => boolean) | ((a: A, i: number) => Option<A>)): Option<A> => {\n    let i = 0\n    for (const a of self) {\n      const o = f(a, i)\n      if (isBoolean(o)) {\n        if (o) {\n          return O.some(a)\n        }\n      } else {\n        if (O.isSome(o)) {\n          return o\n        }\n      }\n      i++\n    }\n    return O.none()\n  }\n)\n\n/**\n * Find the last element for which a predicate holds.\n *\n * @category elements\n * @since 2.0.0\n */\nexport const findLast: {\n  /**\n   * Find the last element for which a predicate holds.\n   *\n   * @category elements\n   * @since 2.0.0\n   */\n  <A, B>(f: (a: NoInfer<A>, i: number) => Option<B>): (self: Iterable<A>) => Option<B>\n  /**\n   * Find the last element for which a predicate holds.\n   *\n   * @category elements\n   * @since 2.0.0\n   */\n  <A, B extends A>(refinement: (a: NoInfer<A>, i: number) => a is B): (self: Iterable<A>) => Option<B>\n  /**\n   * Find the last element for which a predicate holds.\n   *\n   * @category elements\n   * @since 2.0.0\n   */\n  <A>(predicate: (a: NoInfer<A>, i: number) => boolean): (self: Iterable<A>) => Option<A>\n  /**\n   * Find the last element for which a predicate holds.\n   *\n   * @category elements\n   * @since 2.0.0\n   */\n  <A, B>(self: Iterable<A>, f: (a: A, i: number) => Option<B>): Option<B>\n  /**\n   * Find the last element for which a predicate holds.\n   *\n   * @category elements\n   * @since 2.0.0\n   */\n  <A, B extends A>(self: Iterable<A>, refinement: (a: A, i: number) => a is B): Option<B>\n  /**\n   * Find the last element for which a predicate holds.\n   *\n   * @category elements\n   * @since 2.0.0\n   */\n  <A>(self: Iterable<A>, predicate: (a: A, i: number) => boolean): Option<A>\n} = dual(\n  2,\n  <A>(self: Iterable<A>, f: ((a: A, i: number) => boolean) | ((a: A, i: number) => Option<A>)): Option<A> => {\n    let i = 0\n    let last: Option<A> = O.none()\n    for (const a of self) {\n      const o = f(a, i)\n      if (isBoolean(o)) {\n        if (o) {\n          last = O.some(a)\n        }\n      } else {\n        if (O.isSome(o)) {\n          last = o\n        }\n      }\n      i++\n    }\n    return last\n  }\n)\n\n/**\n * Takes two `Iterable`s and returns an `Iterable` of corresponding pairs.\n *\n * @category zipping\n * @since 2.0.0\n */\nexport const zip: {\n  /**\n   * Takes two `Iterable`s and returns an `Iterable` of corresponding pairs.\n   *\n   * @category zipping\n   * @since 2.0.0\n   */\n  <B>(that: Iterable<B>): <A>(self: Iterable<A>) => Iterable<[A, B]>\n  /**\n   * Takes two `Iterable`s and returns an `Iterable` of corresponding pairs.\n   *\n   * @category zipping\n   * @since 2.0.0\n   */\n  <A, B>(self: Iterable<A>, that: Iterable<B>): Iterable<[A, B]>\n} = dual(\n  2,\n  <A, B>(self: Iterable<A>, that: Iterable<B>): Iterable<[A, B]> => zipWith(self, that, Tuple.make)\n)\n\n/**\n * Apply a function to pairs of elements at the same index in two `Iterable`s, collecting the results. If one\n * input `Iterable` is short, excess elements of the longer `Iterable` are discarded.\n *\n * @category zipping\n * @since 2.0.0\n */\nexport const zipWith: {\n  /**\n   * Apply a function to pairs of elements at the same index in two `Iterable`s, collecting the results. If one\n   * input `Iterable` is short, excess elements of the longer `Iterable` are discarded.\n   *\n   * @category zipping\n   * @since 2.0.0\n   */\n  <B, A, C>(that: Iterable<B>, f: (a: A, b: B) => C): (self: Iterable<A>) => Iterable<C>\n  /**\n   * Apply a function to pairs of elements at the same index in two `Iterable`s, collecting the results. If one\n   * input `Iterable` is short, excess elements of the longer `Iterable` are discarded.\n   *\n   * @category zipping\n   * @since 2.0.0\n   */\n  <A, B, C>(self: Iterable<A>, that: Iterable<B>, f: (a: A, b: B) => C): Iterable<C>\n} = dual(3, <B, A, C>(self: Iterable<A>, that: Iterable<B>, f: (a: A, b: B) => C): Iterable<C> => ({\n  [Symbol.iterator]() {\n    const selfIterator = self[Symbol.iterator]()\n    const thatIterator = that[Symbol.iterator]()\n    return {\n      next() {\n        const selfResult = selfIterator.next()\n        const thatResult = thatIterator.next()\n        if (selfResult.done || thatResult.done) {\n          return { done: true, value: undefined }\n        }\n        return { done: false, value: f(selfResult.value, thatResult.value) }\n      }\n    }\n  }\n}))\n\n/**\n * Places an element in between members of an `Iterable`.\n * If the input is a non-empty array, the result is also a non-empty array.\n *\n * @since 2.0.0\n */\nexport const intersperse: {\n  /**\n   * Places an element in between members of an `Iterable`.\n   * If the input is a non-empty array, the result is also a non-empty array.\n   *\n   * @since 2.0.0\n   */\n  <B>(middle: B): <A>(self: Iterable<A>) => Iterable<A | B>\n  /**\n   * Places an element in between members of an `Iterable`.\n   * If the input is a non-empty array, the result is also a non-empty array.\n   *\n   * @since 2.0.0\n   */\n  <A, B>(self: Iterable<A>, middle: B): Iterable<A | B>\n} = dual(2, <A, B>(self: Iterable<A>, middle: B): Iterable<A | B> => ({\n  [Symbol.iterator]() {\n    const iterator = self[Symbol.iterator]()\n    let next = iterator.next()\n    let emitted = false\n    return {\n      next() {\n        if (next.done) {\n          return next\n        } else if (emitted) {\n          emitted = false\n          return { done: false, value: middle }\n        }\n        emitted = true\n        const result = next\n        next = iterator.next()\n        return result\n      }\n    }\n  }\n}))\n\n/**\n * Returns a function that checks if an `Iterable` contains a given value using a provided `isEquivalent` function.\n *\n * @category elements\n * @since 2.0.0\n */\nexport const containsWith = <A>(isEquivalent: (self: A, that: A) => boolean): {\n  (a: A): (self: Iterable<A>) => boolean\n  (self: Iterable<A>, a: A): boolean\n} =>\n  dual(2, (self: Iterable<A>, a: A): boolean => {\n    for (const i of self) {\n      if (isEquivalent(a, i)) {\n        return true\n      }\n    }\n    return false\n  })\n\nconst _equivalence = Equal.equivalence()\n\n/**\n * Returns a function that checks if a `Iterable` contains a given value using the default `Equivalence`.\n *\n * @category elements\n * @since 2.0.0\n */\nexport const contains: {\n  /**\n   * Returns a function that checks if a `Iterable` contains a given value using the default `Equivalence`.\n   *\n   * @category elements\n   * @since 2.0.0\n   */\n  <A>(a: A): (self: Iterable<A>) => boolean\n  /**\n   * Returns a function that checks if a `Iterable` contains a given value using the default `Equivalence`.\n   *\n   * @category elements\n   * @since 2.0.0\n   */\n  <A>(self: Iterable<A>, a: A): boolean\n} = containsWith(_equivalence)\n\n/**\n * Splits an `Iterable` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the `Iterable`.\n *\n * @category splitting\n * @since 2.0.0\n */\nexport const chunksOf: {\n  /**\n   * Splits an `Iterable` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n   * the `Iterable`.\n   *\n   * @category splitting\n   * @since 2.0.0\n   */\n  (n: number): <A>(self: Iterable<A>) => Iterable<Array<A>>\n  /**\n   * Splits an `Iterable` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n   * the `Iterable`.\n   *\n   * @category splitting\n   * @since 2.0.0\n   */\n  <A>(self: Iterable<A>, n: number): Iterable<Array<A>>\n} = dual(2, <A>(self: Iterable<A>, n: number): Iterable<Array<A>> => {\n  const safeN = Math.max(1, Math.floor(n))\n  return ({\n    [Symbol.iterator]() {\n      let iterator: Iterator<A> | undefined = self[Symbol.iterator]()\n      return {\n        next() {\n          if (iterator === undefined) {\n            return { done: true, value: undefined }\n          }\n\n          const chunk: Array<A> = []\n          for (let i = 0; i < safeN; i++) {\n            const result = iterator.next()\n            if (result.done) {\n              iterator = undefined\n              return chunk.length === 0 ? { done: true, value: undefined } : { done: false, value: chunk }\n            }\n            chunk.push(result.value)\n          }\n\n          return { done: false, value: chunk }\n        }\n      }\n    }\n  })\n})\n\n/**\n * Group equal, consecutive elements of an `Iterable` into `NonEmptyArray`s using the provided `isEquivalent` function.\n *\n * @category grouping\n * @since 2.0.0\n */\nexport const groupWith: {\n  /**\n   * Group equal, consecutive elements of an `Iterable` into `NonEmptyArray`s using the provided `isEquivalent` function.\n   *\n   * @category grouping\n   * @since 2.0.0\n   */\n  <A>(isEquivalent: (self: A, that: A) => boolean): (self: Iterable<A>) => Iterable<NonEmptyArray<A>>\n  /**\n   * Group equal, consecutive elements of an `Iterable` into `NonEmptyArray`s using the provided `isEquivalent` function.\n   *\n   * @category grouping\n   * @since 2.0.0\n   */\n  <A>(self: Iterable<A>, isEquivalent: (self: A, that: A) => boolean): Iterable<NonEmptyArray<A>>\n} = dual(\n  2,\n  <A>(self: Iterable<A>, isEquivalent: (self: A, that: A) => boolean): Iterable<NonEmptyArray<A>> => ({\n    [Symbol.iterator]() {\n      const iterator = self[Symbol.iterator]()\n      let nextResult: IteratorResult<A> | undefined\n      return {\n        next() {\n          let result: IteratorResult<A>\n          if (nextResult !== undefined) {\n            if (nextResult.done) {\n              return { done: true, value: undefined }\n            }\n            result = nextResult\n            nextResult = undefined\n          } else {\n            result = iterator.next()\n            if (result.done) {\n              return { done: true, value: undefined }\n            }\n          }\n          const chunk: NonEmptyArray<A> = [result.value]\n\n          while (true) {\n            const next = iterator.next()\n            if (next.done || !isEquivalent(result.value, next.value)) {\n              nextResult = next\n              return { done: false, value: chunk }\n            }\n            chunk.push(next.value)\n          }\n        }\n      }\n    }\n  })\n)\n\n/**\n * Group equal, consecutive elements of an `Iterable` into `NonEmptyArray`s.\n *\n * @category grouping\n * @since 2.0.0\n */\nexport const group: <A>(self: Iterable<A>) => Iterable<NonEmptyArray<A>> = groupWith(\n  Equal.equivalence()\n)\n\n/**\n * Splits an `Iterable` into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n * function on each element, and grouping the results according to values returned\n *\n * @category grouping\n * @since 2.0.0\n */\nexport const groupBy: {\n  /**\n   * Splits an `Iterable` into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n   * function on each element, and grouping the results according to values returned\n   *\n   * @category grouping\n   * @since 2.0.0\n   */\n  <A, K extends string | symbol>(f: (a: A) => K): (self: Iterable<A>) => Record<Record.ReadonlyRecord.NonLiteralKey<K>, NonEmptyArray<A>>\n  /**\n   * Splits an `Iterable` into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n   * function on each element, and grouping the results according to values returned\n   *\n   * @category grouping\n   * @since 2.0.0\n   */\n  <A, K extends string | symbol>(self: Iterable<A>, f: (a: A) => K): Record<Record.ReadonlyRecord.NonLiteralKey<K>, NonEmptyArray<A>>\n} = dual(2, <A, K extends string | symbol>(\n  self: Iterable<A>,\n  f: (a: A) => K\n): Record<Record.ReadonlyRecord.NonLiteralKey<K>, NonEmptyArray<A>> => {\n  const out: Record<string | symbol, NonEmptyArray<A>> = {}\n  for (const a of self) {\n    const k = f(a)\n    if (Object.prototype.hasOwnProperty.call(out, k)) {\n      out[k].push(a)\n    } else {\n      out[k] = [a]\n    }\n  }\n  return out\n})\n\nconst constEmpty: Iterable<never> = {\n  [Symbol.iterator]() {\n    return constEmptyIterator\n  }\n}\nconst constEmptyIterator: Iterator<never> = {\n  next() {\n    return { done: true, value: undefined }\n  }\n}\n\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport const empty = <A = never>(): Iterable<A> => constEmpty\n\n/**\n * Constructs a new `Iterable<A>` from the specified value.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const of = <A>(a: A): Iterable<A> => [a]\n\n/**\n * @category mapping\n * @since 2.0.0\n */\nexport const map: {\n  /**\n   * @category mapping\n   * @since 2.0.0\n   */\n  <A, B>(f: (a: NoInfer<A>, i: number) => B): (self: Iterable<A>) => Iterable<B>\n  /**\n   * @category mapping\n   * @since 2.0.0\n   */\n  <A, B>(self: Iterable<A>, f: (a: NoInfer<A>, i: number) => B): Iterable<B>\n} = dual(2, <A, B>(self: Iterable<A>, f: (a: A, i: number) => B): Iterable<B> => ({\n  [Symbol.iterator]() {\n    const iterator = self[Symbol.iterator]()\n    let i = 0\n    return {\n      next() {\n        const result = iterator.next()\n        if (result.done) {\n          return { done: true, value: undefined }\n        }\n        return { done: false, value: f(result.value, i++) }\n      }\n    }\n  }\n}))\n\n/**\n * Applies a function to each element in an Iterable and returns a new Iterable containing the concatenated mapped elements.\n *\n * @category sequencing\n * @since 2.0.0\n */\nexport const flatMap: {\n  /**\n   * Applies a function to each element in an Iterable and returns a new Iterable containing the concatenated mapped elements.\n   *\n   * @category sequencing\n   * @since 2.0.0\n   */\n  <A, B>(f: (a: NoInfer<A>, i: number) => Iterable<B>): (self: Iterable<A>) => Iterable<B>\n  /**\n   * Applies a function to each element in an Iterable and returns a new Iterable containing the concatenated mapped elements.\n   *\n   * @category sequencing\n   * @since 2.0.0\n   */\n  <A, B>(self: Iterable<A>, f: (a: NoInfer<A>, i: number) => Iterable<B>): Iterable<B>\n} = dual(\n  2,\n  <A, B>(self: Iterable<A>, f: (a: A, i: number) => Iterable<B>): Iterable<B> => flatten(map(self, f))\n)\n\n/**\n * Flattens an Iterable of Iterables into a single Iterable\n *\n * @category sequencing\n * @since 2.0.0\n */\nexport const flatten = <A>(self: Iterable<Iterable<A>>): Iterable<A> => ({\n  [Symbol.iterator]() {\n    const outerIterator = self[Symbol.iterator]()\n    let innerIterator: Iterator<A> | undefined\n    function next() {\n      if (innerIterator === undefined) {\n        const next = outerIterator.next()\n        if (next.done) {\n          return next\n        }\n        innerIterator = next.value[Symbol.iterator]()\n      }\n      const result = innerIterator.next()\n      if (result.done) {\n        innerIterator = undefined\n        return next()\n      }\n      return result\n    }\n    return { next }\n  }\n})\n\n/**\n * @category filtering\n * @since 2.0.0\n */\nexport const filterMap: {\n  /**\n   * @category filtering\n   * @since 2.0.0\n   */\n  <A, B>(f: (a: A, i: number) => Option<B>): (self: Iterable<A>) => Iterable<B>\n  /**\n   * @category filtering\n   * @since 2.0.0\n   */\n  <A, B>(self: Iterable<A>, f: (a: A, i: number) => Option<B>): Iterable<B>\n} = dual(\n  2,\n  <A, B>(self: Iterable<A>, f: (a: A, i: number) => Option<B>): Iterable<B> => ({\n    [Symbol.iterator]() {\n      const iterator = self[Symbol.iterator]()\n      let i = 0\n      return {\n        next() {\n          let result = iterator.next()\n          while (!result.done) {\n            const b = f(result.value, i++)\n            if (O.isSome(b)) {\n              return { done: false, value: b.value }\n            }\n            result = iterator.next()\n          }\n          return { done: true, value: undefined }\n        }\n      }\n    }\n  })\n)\n\n/**\n * Transforms all elements of the `Iterable` for as long as the specified function returns some value\n *\n * @category filtering\n * @since 2.0.0\n */\nexport const filterMapWhile: {\n  /**\n   * Transforms all elements of the `Iterable` for as long as the specified function returns some value\n   *\n   * @category filtering\n   * @since 2.0.0\n   */\n  <A, B>(f: (a: A, i: number) => Option<B>): (self: Iterable<A>) => Iterable<B>\n  /**\n   * Transforms all elements of the `Iterable` for as long as the specified function returns some value\n   *\n   * @category filtering\n   * @since 2.0.0\n   */\n  <A, B>(self: Iterable<A>, f: (a: A, i: number) => Option<B>): Iterable<B>\n} = dual(2, <A, B>(self: Iterable<A>, f: (a: A, i: number) => Option<B>) => ({\n  [Symbol.iterator]() {\n    const iterator = self[Symbol.iterator]()\n    let i = 0\n    return {\n      next() {\n        const result = iterator.next()\n        if (result.done) {\n          return { done: true, value: undefined }\n        }\n        const b = f(result.value, i++)\n        if (O.isSome(b)) {\n          return { done: false, value: b.value }\n        }\n        return { done: true, value: undefined }\n      }\n    }\n  }\n}))\n\n/**\n * Retrieves the `Some` values from an `Iterable` of `Option`s.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Iterable, Option } from \"effect\"\n *\n * assert.deepStrictEqual(\n *   Array.from(Iterable.getSomes([Option.some(1), Option.none(), Option.some(2)])),\n *   [1, 2]\n * )\n * ```\n *\n * @category filtering\n * @since 2.0.0\n */\nexport const getSomes: <A>(self: Iterable<Option<A>>) => Iterable<A> = filterMap(identity)\n\n/**\n * Retrieves the `Left` values from an `Iterable` of `Either`s.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Iterable, Either } from \"effect\"\n *\n * assert.deepStrictEqual(\n *   Array.from(Iterable.getLefts([Either.right(1), Either.left(\"err\"), Either.right(2)])),\n *   [\"err\"]\n * )\n * ```\n *\n * @category filtering\n * @since 2.0.0\n */\nexport const getLefts = <R, L>(self: Iterable<Either<R, L>>): Iterable<L> => filterMap(self, E.getLeft)\n\n/**\n * Retrieves the `Right` values from an `Iterable` of `Either`s.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Iterable, Either } from \"effect\"\n *\n * assert.deepStrictEqual(\n *   Array.from(Iterable.getRights([Either.right(1), Either.left(\"err\"), Either.right(2)])),\n *   [1, 2]\n * )\n * ```\n *\n * @category filtering\n * @since 2.0.0\n */\nexport const getRights = <R, L>(self: Iterable<Either<R, L>>): Iterable<R> => filterMap(self, E.getRight)\n\n/**\n * @category filtering\n * @since 2.0.0\n */\nexport const filter: {\n  /**\n   * @category filtering\n   * @since 2.0.0\n   */\n  <A, B extends A>(refinement: (a: NoInfer<A>, i: number) => a is B): (self: Iterable<A>) => Iterable<B>\n  /**\n   * @category filtering\n   * @since 2.0.0\n   */\n  <A>(predicate: (a: NoInfer<A>, i: number) => boolean): (self: Iterable<A>) => Iterable<A>\n  /**\n   * @category filtering\n   * @since 2.0.0\n   */\n  <A, B extends A>(self: Iterable<A>, refinement: (a: A, i: number) => a is B): Iterable<B>\n  /**\n   * @category filtering\n   * @since 2.0.0\n   */\n  <A>(self: Iterable<A>, predicate: (a: A, i: number) => boolean): Iterable<A>\n} = dual(\n  2,\n  <A>(self: Iterable<A>, predicate: (a: A, i: number) => boolean): Iterable<A> => ({\n    [Symbol.iterator]() {\n      const iterator = self[Symbol.iterator]()\n      let i = 0\n      return {\n        next() {\n          let result = iterator.next()\n          while (!result.done) {\n            if (predicate(result.value, i++)) {\n              return { done: false, value: result.value }\n            }\n            result = iterator.next()\n          }\n          return { done: true, value: undefined }\n        }\n      }\n    }\n  })\n)\n\n/**\n * @category sequencing\n * @since 2.0.0\n */\nexport const flatMapNullable: {\n  /**\n   * @category sequencing\n   * @since 2.0.0\n   */\n  <A, B>(f: (a: A) => B | null | undefined): (self: Iterable<A>) => Iterable<NonNullable<B>>\n  /**\n   * @category sequencing\n   * @since 2.0.0\n   */\n  <A, B>(self: Iterable<A>, f: (a: A) => B | null | undefined): Iterable<NonNullable<B>>\n} = dual(\n  2,\n  <A, B>(self: Iterable<A>, f: (a: A) => B | null | undefined): Iterable<NonNullable<B>> =>\n    filterMap(self, (a) => {\n      const b = f(a)\n      return b == null ? O.none() : O.some(b)\n    })\n)\n\n/**\n * Check if a predicate holds true for some `Iterable` element.\n *\n * @category elements\n * @since 2.0.0\n */\nexport const some: {\n  /**\n   * Check if a predicate holds true for some `Iterable` element.\n   *\n   * @category elements\n   * @since 2.0.0\n   */\n  <A>(predicate: (a: A, i: number) => boolean): (self: Iterable<A>) => boolean\n  /**\n   * Check if a predicate holds true for some `Iterable` element.\n   *\n   * @category elements\n   * @since 2.0.0\n   */\n  <A>(self: Iterable<A>, predicate: (a: A, i: number) => boolean): boolean\n} = dual(\n  2,\n  <A>(self: Iterable<A>, predicate: (a: A, i: number) => boolean): boolean => {\n    let i = 0\n    for (const a of self) {\n      if (predicate(a, i++)) {\n        return true\n      }\n    }\n    return false\n  }\n)\n\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport const unfold = <B, A>(b: B, f: (b: B) => Option<readonly [A, B]>): Iterable<A> => ({\n  [Symbol.iterator]() {\n    let next = b\n    return {\n      next() {\n        const o = f(next)\n        if (O.isNone(o)) {\n          return { done: true, value: undefined }\n        }\n        const [a, b] = o.value\n        next = b\n        return { done: false, value: a }\n      }\n    }\n  }\n})\n\n/**\n * Iterate over the `Iterable` applying `f`.\n *\n * @since 2.0.0\n */\nexport const forEach: {\n  /**\n   * Iterate over the `Iterable` applying `f`.\n   *\n   * @since 2.0.0\n   */\n  <A>(f: (a: A, i: number) => void): (self: Iterable<A>) => void\n  /**\n   * Iterate over the `Iterable` applying `f`.\n   *\n   * @since 2.0.0\n   */\n  <A>(self: Iterable<A>, f: (a: A, i: number) => void): void\n} = dual(2, <A>(self: Iterable<A>, f: (a: A, i: number) => void): void => {\n  let i = 0\n  for (const a of self) {\n    f(a, i++)\n  }\n})\n\n/**\n * @category folding\n * @since 2.0.0\n */\nexport const reduce: {\n  /**\n   * @category folding\n   * @since 2.0.0\n   */\n  <B, A>(b: B, f: (b: B, a: A, i: number) => B): (self: Iterable<A>) => B\n  /**\n   * @category folding\n   * @since 2.0.0\n   */\n  <A, B>(self: Iterable<A>, b: B, f: (b: B, a: A, i: number) => B): B\n} = dual(3, <A, B>(self: Iterable<A>, b: B, f: (b: B, a: A, i: number) => B): B => {\n  if (Array.isArray(self)) {\n    return self.reduce(f, b)\n  }\n  let i = 0\n  let result = b\n  for (const n of self) {\n    result = f(result, n, i++)\n  }\n  return result\n})\n\n/**\n * Deduplicates adjacent elements that are identical using the provided `isEquivalent` function.\n *\n * @since 2.0.0\n */\nexport const dedupeAdjacentWith: {\n  /**\n   * Deduplicates adjacent elements that are identical using the provided `isEquivalent` function.\n   *\n   * @since 2.0.0\n   */\n  <A>(isEquivalent: (self: A, that: A) => boolean): (self: Iterable<A>) => Iterable<A>\n  /**\n   * Deduplicates adjacent elements that are identical using the provided `isEquivalent` function.\n   *\n   * @since 2.0.0\n   */\n  <A>(self: Iterable<A>, isEquivalent: (self: A, that: A) => boolean): Iterable<A>\n} = dual(2, <A>(self: Iterable<A>, isEquivalent: (self: A, that: A) => boolean): Iterable<A> => ({\n  [Symbol.iterator]() {\n    const iterator = self[Symbol.iterator]()\n    let first = true\n    let last: A\n    function next(): IteratorResult<A> {\n      const result = iterator.next()\n      if (result.done) {\n        return { done: true, value: undefined }\n      }\n      if (first) {\n        first = false\n        last = result.value\n        return result\n      }\n      const current = result.value\n      if (isEquivalent(last, current)) {\n        return next()\n      }\n      last = current\n      return result\n    }\n    return { next }\n  }\n}))\n\n/**\n * Deduplicates adjacent elements that are identical.\n *\n * @since 2.0.0\n */\nexport const dedupeAdjacent: <A>(self: Iterable<A>) => Iterable<A> = dedupeAdjacentWith(Equal.equivalence())\n\n/**\n * Zips this Iterable crosswise with the specified Iterable using the specified combiner.\n *\n * @since 2.0.0\n * @category elements\n */\nexport const cartesianWith: {\n  /**\n   * Zips this Iterable crosswise with the specified Iterable using the specified combiner.\n   *\n   * @since 2.0.0\n   * @category elements\n   */\n  <A, B, C>(that: Iterable<B>, f: (a: A, b: B) => C): (self: Iterable<A>) => Iterable<C>\n  /**\n   * Zips this Iterable crosswise with the specified Iterable using the specified combiner.\n   *\n   * @since 2.0.0\n   * @category elements\n   */\n  <A, B, C>(self: Iterable<A>, that: Iterable<B>, f: (a: A, b: B) => C): Iterable<C>\n} = dual(\n  3,\n  <A, B, C>(self: Iterable<A>, that: Iterable<B>, f: (a: A, b: B) => C): Iterable<C> =>\n    flatMap(self, (a) => map(that, (b) => f(a, b)))\n)\n\n/**\n * Zips this Iterable crosswise with the specified Iterable.\n *\n * @since 2.0.0\n * @category elements\n */\nexport const cartesian: {\n  /**\n   * Zips this Iterable crosswise with the specified Iterable.\n   *\n   * @since 2.0.0\n   * @category elements\n   */\n  <B>(that: Iterable<B>): <A>(self: Iterable<A>) => Iterable<[A, B]>\n  /**\n   * Zips this Iterable crosswise with the specified Iterable.\n   *\n   * @since 2.0.0\n   * @category elements\n   */\n  <A, B>(self: Iterable<A>, that: Iterable<B>): Iterable<[A, B]>\n} = dual(\n  2,\n  <A, B>(self: Iterable<A>, that: Iterable<B>): Iterable<[A, B]> => cartesianWith(self, that, (a, b) => [a, b])\n)\n\n/**\n * Counts all the element of the given iterable that pass the given predicate\n *\n * **Example**\n *\n * ```ts\n * import { Iterable } from \"effect\"\n *\n * const result = Iterable.countBy([1, 2, 3, 4, 5], n => n % 2 === 0)\n * console.log(result) // 2\n * ```\n *\n * @category folding\n * @since 3.16.0\n */\nexport const countBy: {\n  /**\n   * Counts all the element of the given iterable that pass the given predicate\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Iterable } from \"effect\"\n   *\n   * const result = Iterable.countBy([1, 2, 3, 4, 5], n => n % 2 === 0)\n   * console.log(result) // 2\n   * ```\n   *\n   * @category folding\n   * @since 3.16.0\n   */\n  <A>(predicate: (a: NoInfer<A>, i: number) => boolean): (self: Iterable<A>) => number\n  /**\n   * Counts all the element of the given iterable that pass the given predicate\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Iterable } from \"effect\"\n   *\n   * const result = Iterable.countBy([1, 2, 3, 4, 5], n => n % 2 === 0)\n   * console.log(result) // 2\n   * ```\n   *\n   * @category folding\n   * @since 3.16.0\n   */\n  <A>(self: Iterable<A>, predicate: (a: A, i: number) => boolean): number\n} = dual(\n  2,\n  <A>(\n    self: Iterable<A>,\n    f: (a: A, i: number) => boolean\n  ): number => {\n    let count = 0\n    let i = 0\n    for (const a of self) {\n      if (f(a, i)) {\n        count++\n      }\n      i++\n    }\n    return count\n  }\n)\n"],"names":["E","Equal","dual","identity","O","isBoolean","Tuple","makeBy","f","options","max","length","undefined","Math","floor","Infinity","Symbol","iterator","i","next","value","done","range","start","end","replicate","a","n","fromRecord","self","key","Object","prototype","hasOwnProperty","call","prepend","head","prependAll","that","appendAll","append","last","iterA","doneA","iterB","r","scan","b","acc","result","isEmpty","size","count","none","some","unsafeHead","Error","take","takeWhile","predicate","drop","findFirst","o","isSome","findLast","zip","zipWith","make","selfIterator","thatIterator","selfResult","thatResult","intersperse","middle","emitted","containsWith","isEquivalent","_equivalence","equivalence","contains","chunksOf","safeN","chunk","push","groupWith","nextResult","group","groupBy","out","k","constEmpty","constEmptyIterator","empty","of","map","flatMap","flatten","outerIterator","innerIterator","filterMap","filterMapWhile","getSomes","getLefts","getLeft","getRights","getRight","filter","flatMapNullable","unfold","isNone","forEach","reduce","Array","isArray","dedupeAdjacentWith","first","current","dedupeAdjacent","cartesianWith","cartesian","countBy"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8375, "column": 0}, "map": {"version":3,"file":"Record.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/effect/src/Record.ts"],"sourcesContent":["/**\n * This module provides utility functions for working with records in TypeScript.\n *\n * @since 2.0.0\n */\n\nimport type { Either } from \"./Either.js\"\nimport * as E from \"./Either.js\"\nimport * as Equal from \"./Equal.js\"\nimport type { Equivalence } from \"./Equivalence.js\"\nimport { dual, identity } from \"./Function.js\"\nimport type { TypeLambda } from \"./HKT.js\"\nimport * as Option from \"./Option.js\"\nimport type { NoInfer } from \"./Types.js\"\n\n/**\n * @category models\n * @since 2.0.0\n */\nexport type ReadonlyRecord<in out K extends string | symbol, out A> = {\n  readonly [P in K]: A\n}\n\n/**\n * @since 2.0.0\n */\nexport declare namespace ReadonlyRecord {\n  type IsFiniteString<T extends string> = T extends \"\" ? true :\n    [T] extends [`${infer Head}${infer Rest}`]\n      ? string extends Head ? false : `${number}` extends Head ? false : Rest extends \"\" ? true : IsFiniteString<Rest>\n    : false\n\n  /**\n   * @since 2.0.0\n   */\n  export type NonLiteralKey<K extends string | symbol> = K extends string ? IsFiniteString<K> extends true ? string : K\n    : symbol\n\n  /**\n   * @since 2.0.0\n   */\n  export type IntersectKeys<K1 extends string, K2 extends string> = [string] extends [K1 | K2] ?\n    NonLiteralKey<K1> & NonLiteralKey<K2>\n    : K1 & K2\n}\n\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexport interface ReadonlyRecordTypeLambda<K extends string = string> extends TypeLambda {\n  readonly type: ReadonlyRecord<K, this[\"Target\"]>\n}\n\n/**\n * Creates a new, empty record.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const empty = <K extends string | symbol = never, V = never>(): Record<\n  ReadonlyRecord.NonLiteralKey<K>,\n  V\n> => ({} as any)\n\n/**\n * Determine if a record is empty.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isEmptyRecord } from \"effect/Record\"\n *\n * assert.deepStrictEqual(isEmptyRecord({}), true);\n * assert.deepStrictEqual(isEmptyRecord({ a: 3 }), false);\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isEmptyRecord = <K extends string, A>(self: Record<K, A>): self is Record<K, never> =>\n  keys(self).length === 0\n\n/**\n * Determine if a record is empty.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { isEmptyReadonlyRecord } from \"effect/Record\"\n *\n * assert.deepStrictEqual(isEmptyReadonlyRecord({}), true);\n * assert.deepStrictEqual(isEmptyReadonlyRecord({ a: 3 }), false);\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isEmptyReadonlyRecord: <K extends string, A>(\n  self: ReadonlyRecord<K, A>\n) => self is ReadonlyRecord<K, never> = isEmptyRecord\n\n/**\n * Takes an iterable and a projection function and returns a record.\n * The projection function maps each value of the iterable to a tuple of a key and a value, which is then added to the resulting record.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { fromIterableWith } from \"effect/Record\"\n *\n * const input = [1, 2, 3, 4]\n *\n * assert.deepStrictEqual(\n *   fromIterableWith(input, a => [String(a), a * 2]),\n *   { '1': 2, '2': 4, '3': 6, '4': 8 }\n * )\n * ```\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const fromIterableWith: {\n  /**\n   * Takes an iterable and a projection function and returns a record.\n   * The projection function maps each value of the iterable to a tuple of a key and a value, which is then added to the resulting record.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { fromIterableWith } from \"effect/Record\"\n   *\n   * const input = [1, 2, 3, 4]\n   *\n   * assert.deepStrictEqual(\n   *   fromIterableWith(input, a => [String(a), a * 2]),\n   *   { '1': 2, '2': 4, '3': 6, '4': 8 }\n   * )\n   * ```\n   *\n   * @category constructors\n   * @since 2.0.0\n   */\n  <A, K extends string | symbol, B>(f: (a: A) => readonly [K, B]): (self: Iterable<A>) => Record<ReadonlyRecord.NonLiteralKey<K>, B>\n  /**\n   * Takes an iterable and a projection function and returns a record.\n   * The projection function maps each value of the iterable to a tuple of a key and a value, which is then added to the resulting record.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { fromIterableWith } from \"effect/Record\"\n   *\n   * const input = [1, 2, 3, 4]\n   *\n   * assert.deepStrictEqual(\n   *   fromIterableWith(input, a => [String(a), a * 2]),\n   *   { '1': 2, '2': 4, '3': 6, '4': 8 }\n   * )\n   * ```\n   *\n   * @category constructors\n   * @since 2.0.0\n   */\n  <A, K extends string | symbol, B>(self: Iterable<A>, f: (a: A) => readonly [K, B]): Record<ReadonlyRecord.NonLiteralKey<K>, B>\n} = dual(\n  2,\n  <A, K extends string, B>(\n    self: Iterable<A>,\n    f: (a: A) => readonly [K, B]\n  ): Record<ReadonlyRecord.NonLiteralKey<K>, B> => {\n    const out: Record<string, B> = empty()\n    for (const a of self) {\n      const [k, b] = f(a)\n      out[k] = b\n    }\n    return out\n  }\n)\n\n/**\n * Creates a new record from an iterable, utilizing the provided function to determine the key for each element.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { fromIterableBy } from \"effect/Record\"\n *\n * const users = [\n *   { id: \"2\", name: \"name2\" },\n *   { id: \"1\", name: \"name1\" }\n * ]\n *\n * assert.deepStrictEqual(\n *   fromIterableBy(users, user => user.id),\n *   {\n *     \"2\": { id: \"2\", name: \"name2\" },\n *     \"1\": { id: \"1\", name: \"name1\" }\n *   }\n * )\n * ```\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const fromIterableBy = <A, K extends string | symbol>(\n  items: Iterable<A>,\n  f: (a: A) => K\n): Record<ReadonlyRecord.NonLiteralKey<K>, A> => fromIterableWith(items, (a) => [f(a), a])\n\n/**\n * Builds a record from an iterable of key-value pairs.\n *\n * If there are conflicting keys when using `fromEntries`, the last occurrence of the key/value pair will overwrite the\n * previous ones. So the resulting record will only have the value of the last occurrence of each key.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { fromEntries } from \"effect/Record\"\n *\n * const input: Array<[string, number]> = [[\"a\", 1], [\"b\", 2]]\n *\n * assert.deepStrictEqual(fromEntries(input), { a: 1, b: 2 })\n * ```\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const fromEntries: <Entry extends readonly [string | symbol, any]>(\n  entries: Iterable<Entry>\n) => Record<ReadonlyRecord.NonLiteralKey<Entry[0]>, Entry[1]> = Object.fromEntries\n\n/**\n * Transforms the values of a record into an `Array` with a custom mapping function.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { collect } from \"effect/Record\"\n *\n * const x = { a: 1, b: 2, c: 3 }\n * assert.deepStrictEqual(collect(x, (key, n) => [key, n]), [[\"a\", 1], [\"b\", 2], [\"c\", 3]])\n * ```\n *\n * @category conversions\n * @since 2.0.0\n */\nexport const collect: {\n  /**\n   * Transforms the values of a record into an `Array` with a custom mapping function.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { collect } from \"effect/Record\"\n   *\n   * const x = { a: 1, b: 2, c: 3 }\n   * assert.deepStrictEqual(collect(x, (key, n) => [key, n]), [[\"a\", 1], [\"b\", 2], [\"c\", 3]])\n   * ```\n   *\n   * @category conversions\n   * @since 2.0.0\n   */\n  <K extends string, A, B>(f: (key: K, a: A) => B): (self: ReadonlyRecord<K, A>) => Array<B>\n  /**\n   * Transforms the values of a record into an `Array` with a custom mapping function.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { collect } from \"effect/Record\"\n   *\n   * const x = { a: 1, b: 2, c: 3 }\n   * assert.deepStrictEqual(collect(x, (key, n) => [key, n]), [[\"a\", 1], [\"b\", 2], [\"c\", 3]])\n   * ```\n   *\n   * @category conversions\n   * @since 2.0.0\n   */\n  <K extends string, A, B>(self: ReadonlyRecord<K, A>, f: (key: K, a: A) => B): Array<B>\n} = dual(\n  2,\n  <K extends string, A, B>(self: ReadonlyRecord<K, A>, f: (key: K, a: A) => B): Array<B> => {\n    const out: Array<B> = []\n    for (const key of keys(self)) {\n      out.push(f(key, self[key]))\n    }\n    return out\n  }\n)\n\n/**\n * Takes a record and returns an array of tuples containing its keys and values.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { toEntries } from \"effect/Record\"\n *\n * const x = { a: 1, b: 2, c: 3 }\n * assert.deepStrictEqual(toEntries(x), [[\"a\", 1], [\"b\", 2], [\"c\", 3]])\n * ```\n *\n * @category conversions\n * @since 2.0.0\n */\nexport const toEntries: <K extends string, A>(self: ReadonlyRecord<K, A>) => Array<[K, A]> = collect((\n  key,\n  value\n) => [key, value])\n\n/**\n * Returns the number of key/value pairs in a record.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { size } from \"effect/Record\";\n *\n * assert.deepStrictEqual(size({ a: \"a\", b: 1, c: true }), 3);\n * ```\n *\n * @since 2.0.0\n */\nexport const size = <K extends string, A>(self: ReadonlyRecord<K, A>): number => keys(self).length\n\n/**\n * Check if a given `key` exists in a record.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { empty, has } from \"effect/Record\"\n *\n * assert.deepStrictEqual(has({ a: 1, b: 2 }, \"a\"), true);\n * assert.deepStrictEqual(has(empty<string>(), \"c\"), false);\n * ```\n *\n * @since 2.0.0\n */\nexport const has: {\n  /**\n   * Check if a given `key` exists in a record.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { empty, has } from \"effect/Record\"\n   *\n   * assert.deepStrictEqual(has({ a: 1, b: 2 }, \"a\"), true);\n   * assert.deepStrictEqual(has(empty<string>(), \"c\"), false);\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <K extends string | symbol>(key: NoInfer<K>): <A>(self: ReadonlyRecord<K, A>) => boolean\n  /**\n   * Check if a given `key` exists in a record.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { empty, has } from \"effect/Record\"\n   *\n   * assert.deepStrictEqual(has({ a: 1, b: 2 }, \"a\"), true);\n   * assert.deepStrictEqual(has(empty<string>(), \"c\"), false);\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <K extends string | symbol, A>(self: ReadonlyRecord<K, A>, key: NoInfer<K>): boolean\n} = dual(\n  2,\n  <K extends string | symbol, A>(\n    self: ReadonlyRecord<K, A>,\n    key: NoInfer<K>\n  ): boolean => Object.prototype.hasOwnProperty.call(self, key)\n)\n\n/**\n * Retrieve a value at a particular key from a record, returning it wrapped in an `Option`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Record as R, Option } from \"effect\"\n *\n * const person: Record<string, unknown> = { name: \"John Doe\", age: 35 }\n *\n * assert.deepStrictEqual(R.get(person, \"name\"), Option.some(\"John Doe\"))\n * assert.deepStrictEqual(R.get(person, \"email\"), Option.none())\n * ```\n *\n * @since 2.0.0\n */\nexport const get: {\n  /**\n   * Retrieve a value at a particular key from a record, returning it wrapped in an `Option`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Record as R, Option } from \"effect\"\n   *\n   * const person: Record<string, unknown> = { name: \"John Doe\", age: 35 }\n   *\n   * assert.deepStrictEqual(R.get(person, \"name\"), Option.some(\"John Doe\"))\n   * assert.deepStrictEqual(R.get(person, \"email\"), Option.none())\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <K extends string | symbol>(key: NoInfer<K>): <A>(self: ReadonlyRecord<K, A>) => Option.Option<A>\n  /**\n   * Retrieve a value at a particular key from a record, returning it wrapped in an `Option`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Record as R, Option } from \"effect\"\n   *\n   * const person: Record<string, unknown> = { name: \"John Doe\", age: 35 }\n   *\n   * assert.deepStrictEqual(R.get(person, \"name\"), Option.some(\"John Doe\"))\n   * assert.deepStrictEqual(R.get(person, \"email\"), Option.none())\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <K extends string | symbol, A>(self: ReadonlyRecord<K, A>, key: NoInfer<K>): Option.Option<A>\n} = dual(\n  2,\n  <K extends string | symbol, A>(self: ReadonlyRecord<K, A>, key: NoInfer<K>): Option.Option<A> =>\n    has(self, key) ? Option.some(self[key]) : Option.none()\n)\n\n/**\n * Apply a function to the element at the specified key, creating a new record.\n * If the key does not exist, the record is returned unchanged.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Record as R } from \"effect\"\n *\n * const f = (x: number) => x * 2\n *\n * assert.deepStrictEqual(\n *  R.modify({ a: 3 }, 'a', f),\n *  { a: 6 }\n * )\n * assert.deepStrictEqual(\n *  R.modify({ a: 3 } as Record<string, number>, 'b', f),\n *  { a: 3 }\n * )\n * ```\n *\n * @since 2.0.0\n */\nexport const modify: {\n  /**\n   * Apply a function to the element at the specified key, creating a new record.\n   * If the key does not exist, the record is returned unchanged.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Record as R } from \"effect\"\n   *\n   * const f = (x: number) => x * 2\n   *\n   * assert.deepStrictEqual(\n   *  R.modify({ a: 3 }, 'a', f),\n   *  { a: 6 }\n   * )\n   * assert.deepStrictEqual(\n   *  R.modify({ a: 3 } as Record<string, number>, 'b', f),\n   *  { a: 3 }\n   * )\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <K extends string | symbol, A, B>(key: NoInfer<K>, f: (a: A) => B): (self: ReadonlyRecord<K, A>) => Record<K, A | B>\n  /**\n   * Apply a function to the element at the specified key, creating a new record.\n   * If the key does not exist, the record is returned unchanged.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Record as R } from \"effect\"\n   *\n   * const f = (x: number) => x * 2\n   *\n   * assert.deepStrictEqual(\n   *  R.modify({ a: 3 }, 'a', f),\n   *  { a: 6 }\n   * )\n   * assert.deepStrictEqual(\n   *  R.modify({ a: 3 } as Record<string, number>, 'b', f),\n   *  { a: 3 }\n   * )\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <K extends string | symbol, A, B>(self: ReadonlyRecord<K, A>, key: NoInfer<K>, f: (a: A) => B): Record<K, A | B>\n} = dual(\n  3,\n  <K extends string | symbol, A, B>(self: ReadonlyRecord<K, A>, key: NoInfer<K>, f: (a: A) => B): Record<K, A | B> => {\n    if (!has(self, key)) {\n      return { ...self }\n    }\n    return { ...self, [key]: f(self[key]) }\n  }\n)\n\n/**\n * Apply a function to the element at the specified key, creating a new record,\n * or return `None` if the key doesn't exist.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Record as R, Option } from \"effect\"\n *\n * const f = (x: number) => x * 2\n *\n * assert.deepStrictEqual(\n *  R.modifyOption({ a: 3 }, 'a', f),\n *  Option.some({ a: 6 })\n * )\n * assert.deepStrictEqual(\n *  R.modifyOption({ a: 3 } as Record<string, number>, 'b', f),\n *  Option.none()\n * )\n * ```\n *\n * @since 2.0.0\n */\nexport const modifyOption: {\n  /**\n   * Apply a function to the element at the specified key, creating a new record,\n   * or return `None` if the key doesn't exist.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Record as R, Option } from \"effect\"\n   *\n   * const f = (x: number) => x * 2\n   *\n   * assert.deepStrictEqual(\n   *  R.modifyOption({ a: 3 }, 'a', f),\n   *  Option.some({ a: 6 })\n   * )\n   * assert.deepStrictEqual(\n   *  R.modifyOption({ a: 3 } as Record<string, number>, 'b', f),\n   *  Option.none()\n   * )\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <K extends string | symbol, A, B>(key: NoInfer<K>, f: (a: A) => B): (self: ReadonlyRecord<K, A>) => Option.Option<Record<K, A | B>>\n  /**\n   * Apply a function to the element at the specified key, creating a new record,\n   * or return `None` if the key doesn't exist.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Record as R, Option } from \"effect\"\n   *\n   * const f = (x: number) => x * 2\n   *\n   * assert.deepStrictEqual(\n   *  R.modifyOption({ a: 3 }, 'a', f),\n   *  Option.some({ a: 6 })\n   * )\n   * assert.deepStrictEqual(\n   *  R.modifyOption({ a: 3 } as Record<string, number>, 'b', f),\n   *  Option.none()\n   * )\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <K extends string | symbol, A, B>(self: ReadonlyRecord<K, A>, key: NoInfer<K>, f: (a: A) => B): Option.Option<Record<K, A | B>>\n} = dual(\n  3,\n  <K extends string | symbol, A, B>(\n    self: ReadonlyRecord<K, A>,\n    key: NoInfer<K>,\n    f: (a: A) => B\n  ): Option.Option<Record<K, A | B>> => {\n    if (!has(self, key)) {\n      return Option.none()\n    }\n    return Option.some({ ...self, [key]: f(self[key]) })\n  }\n)\n\n/**\n * Replaces a value in the record with the new value passed as parameter.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Record, Option } from \"effect\"\n *\n * assert.deepStrictEqual(\n *   Record.replaceOption({ a: 1, b: 2, c: 3 }, 'a', 10),\n *   Option.some({ a: 10, b: 2, c: 3 })\n * )\n * assert.deepStrictEqual(Record.replaceOption(Record.empty<string>(), 'a', 10), Option.none())\n * ```\n *\n * @since 2.0.0\n */\nexport const replaceOption: {\n  /**\n   * Replaces a value in the record with the new value passed as parameter.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Record, Option } from \"effect\"\n   *\n   * assert.deepStrictEqual(\n   *   Record.replaceOption({ a: 1, b: 2, c: 3 }, 'a', 10),\n   *   Option.some({ a: 10, b: 2, c: 3 })\n   * )\n   * assert.deepStrictEqual(Record.replaceOption(Record.empty<string>(), 'a', 10), Option.none())\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <K extends string | symbol, B>(key: NoInfer<K>, b: B): <A>(self: ReadonlyRecord<K, A>) => Option.Option<Record<K, A | B>>\n  /**\n   * Replaces a value in the record with the new value passed as parameter.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Record, Option } from \"effect\"\n   *\n   * assert.deepStrictEqual(\n   *   Record.replaceOption({ a: 1, b: 2, c: 3 }, 'a', 10),\n   *   Option.some({ a: 10, b: 2, c: 3 })\n   * )\n   * assert.deepStrictEqual(Record.replaceOption(Record.empty<string>(), 'a', 10), Option.none())\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <K extends string | symbol, A, B>(self: ReadonlyRecord<K, A>, key: NoInfer<K>, b: B): Option.Option<Record<K, A | B>>\n} = dual(\n  3,\n  <K extends string | symbol, A, B>(\n    self: ReadonlyRecord<K, A>,\n    key: NoInfer<K>,\n    b: B\n  ): Option.Option<Record<K, A | B>> => modifyOption(self, key, () => b)\n)\n\n/**\n * If the given key exists in the record, returns a new record with the key removed,\n * otherwise returns a copy of the original record.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { remove } from \"effect/Record\"\n *\n * assert.deepStrictEqual(remove({ a: 1, b: 2 }, \"a\"), { b: 2 })\n * ```\n *\n * @since 2.0.0\n */\nexport const remove: {\n  /**\n   * If the given key exists in the record, returns a new record with the key removed,\n   * otherwise returns a copy of the original record.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { remove } from \"effect/Record\"\n   *\n   * assert.deepStrictEqual(remove({ a: 1, b: 2 }, \"a\"), { b: 2 })\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <K extends string | symbol, X extends K>(key: X): <A>(self: ReadonlyRecord<K, A>) => Record<Exclude<K, X>, A>\n  /**\n   * If the given key exists in the record, returns a new record with the key removed,\n   * otherwise returns a copy of the original record.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { remove } from \"effect/Record\"\n   *\n   * assert.deepStrictEqual(remove({ a: 1, b: 2 }, \"a\"), { b: 2 })\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <K extends string | symbol, A, X extends K>(self: ReadonlyRecord<K, A>, key: X): Record<Exclude<K, X>, A>\n} = dual(\n  2,\n  <K extends string | symbol, A, X extends K>(self: ReadonlyRecord<K, A>, key: X): Record<Exclude<K, X>, A> => {\n    if (!has(self, key)) {\n      return { ...self }\n    }\n    const out = { ...self }\n    delete out[key]\n    return out\n  }\n)\n\n/**\n * Retrieves the value of the property with the given `key` from a record and returns an `Option`\n * of a tuple with the value and the record with the removed property.\n * If the key is not present, returns `O.none`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Record as R, Option } from \"effect\"\n *\n * assert.deepStrictEqual(R.pop({ a: 1, b: 2 }, \"a\"), Option.some([1, { b: 2 }]))\n * assert.deepStrictEqual(R.pop({ a: 1, b: 2 } as Record<string, number>, \"c\"), Option.none())\n * ```\n *\n * @category record\n * @since 2.0.0\n */\nexport const pop: {\n  /**\n   * Retrieves the value of the property with the given `key` from a record and returns an `Option`\n   * of a tuple with the value and the record with the removed property.\n   * If the key is not present, returns `O.none`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Record as R, Option } from \"effect\"\n   *\n   * assert.deepStrictEqual(R.pop({ a: 1, b: 2 }, \"a\"), Option.some([1, { b: 2 }]))\n   * assert.deepStrictEqual(R.pop({ a: 1, b: 2 } as Record<string, number>, \"c\"), Option.none())\n   * ```\n   *\n   * @category record\n   * @since 2.0.0\n   */\n  <K extends string | symbol, X extends K>(key: X): <A>(self: ReadonlyRecord<K, A>) => Option.Option<[A, Record<Exclude<K, X>, A>]>\n  /**\n   * Retrieves the value of the property with the given `key` from a record and returns an `Option`\n   * of a tuple with the value and the record with the removed property.\n   * If the key is not present, returns `O.none`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Record as R, Option } from \"effect\"\n   *\n   * assert.deepStrictEqual(R.pop({ a: 1, b: 2 }, \"a\"), Option.some([1, { b: 2 }]))\n   * assert.deepStrictEqual(R.pop({ a: 1, b: 2 } as Record<string, number>, \"c\"), Option.none())\n   * ```\n   *\n   * @category record\n   * @since 2.0.0\n   */\n  <K extends string | symbol, A, X extends K>(self: ReadonlyRecord<K, A>, key: X): Option.Option<[A, Record<Exclude<K, X>, A>]>\n} = dual(2, <K extends string | symbol, A, X extends K>(\n  self: ReadonlyRecord<K, A>,\n  key: X\n): Option.Option<[A, Record<Exclude<K, X>, A>]> =>\n  has(self, key) ? Option.some([self[key], remove(self, key)]) : Option.none())\n\n/**\n * Maps a record into another record by applying a transformation function to each of its values.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { map } from \"effect/Record\"\n *\n * const f = (n: number) => `-${n}`\n *\n * assert.deepStrictEqual(map({ a: 3, b: 5 }, f), { a: \"-3\", b: \"-5\" })\n *\n * const g = (n: number, key: string) => `${key.toUpperCase()}-${n}`\n *\n * assert.deepStrictEqual(map({ a: 3, b: 5 }, g), { a: \"A-3\", b: \"B-5\" })\n * ```\n *\n * @category mapping\n * @since 2.0.0\n */\nexport const map: {\n  /**\n   * Maps a record into another record by applying a transformation function to each of its values.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { map } from \"effect/Record\"\n   *\n   * const f = (n: number) => `-${n}`\n   *\n   * assert.deepStrictEqual(map({ a: 3, b: 5 }, f), { a: \"-3\", b: \"-5\" })\n   *\n   * const g = (n: number, key: string) => `${key.toUpperCase()}-${n}`\n   *\n   * assert.deepStrictEqual(map({ a: 3, b: 5 }, g), { a: \"A-3\", b: \"B-5\" })\n   * ```\n   *\n   * @category mapping\n   * @since 2.0.0\n   */\n  <K extends string, A, B>(f: (a: A, key: NoInfer<K>) => B): (self: ReadonlyRecord<K, A>) => Record<K, B>\n  /**\n   * Maps a record into another record by applying a transformation function to each of its values.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { map } from \"effect/Record\"\n   *\n   * const f = (n: number) => `-${n}`\n   *\n   * assert.deepStrictEqual(map({ a: 3, b: 5 }, f), { a: \"-3\", b: \"-5\" })\n   *\n   * const g = (n: number, key: string) => `${key.toUpperCase()}-${n}`\n   *\n   * assert.deepStrictEqual(map({ a: 3, b: 5 }, g), { a: \"A-3\", b: \"B-5\" })\n   * ```\n   *\n   * @category mapping\n   * @since 2.0.0\n   */\n  <K extends string, A, B>(self: ReadonlyRecord<K, A>, f: (a: A, key: NoInfer<K>) => B): Record<K, B>\n} = dual(\n  2,\n  <K extends string, A, B>(self: ReadonlyRecord<K, A>, f: (a: A, key: NoInfer<K>) => B): Record<K, B> => {\n    const out: Record<K, B> = { ...self } as any\n    for (const key of keys(self)) {\n      out[key] = f(self[key], key)\n    }\n    return out\n  }\n)\n\n/**\n * Maps the keys of a `ReadonlyRecord` while preserving the corresponding values.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { mapKeys } from \"effect/Record\"\n *\n * assert.deepStrictEqual(mapKeys({ a: 3, b: 5 }, (key) => key.toUpperCase()), { A: 3, B: 5 })\n * ```\n *\n * @category mapping\n * @since 2.0.0\n */\nexport const mapKeys: {\n  /**\n   * Maps the keys of a `ReadonlyRecord` while preserving the corresponding values.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { mapKeys } from \"effect/Record\"\n   *\n   * assert.deepStrictEqual(mapKeys({ a: 3, b: 5 }, (key) => key.toUpperCase()), { A: 3, B: 5 })\n   * ```\n   *\n   * @category mapping\n   * @since 2.0.0\n   */\n  <K extends string, A, K2 extends string>(f: (key: K, a: A) => K2): (self: ReadonlyRecord<K, A>) => Record<K2, A>\n  /**\n   * Maps the keys of a `ReadonlyRecord` while preserving the corresponding values.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { mapKeys } from \"effect/Record\"\n   *\n   * assert.deepStrictEqual(mapKeys({ a: 3, b: 5 }, (key) => key.toUpperCase()), { A: 3, B: 5 })\n   * ```\n   *\n   * @category mapping\n   * @since 2.0.0\n   */\n  <K extends string, A, K2 extends string>(self: ReadonlyRecord<K, A>, f: (key: K, a: A) => K2): Record<K2, A>\n} = dual(\n  2,\n  <K extends string, A, K2 extends string>(\n    self: ReadonlyRecord<K, A>,\n    f: (key: K, a: A) => K2\n  ): Record<K2, A> => {\n    const out: Record<K2, A> = {} as any\n    for (const key of keys(self)) {\n      const a = self[key]\n      out[f(key, a)] = a\n    }\n    return out\n  }\n)\n\n/**\n * Maps entries of a `ReadonlyRecord` using the provided function, allowing modification of both keys and corresponding values.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { mapEntries } from \"effect/Record\"\n *\n * assert.deepStrictEqual(mapEntries({ a: 3, b: 5 }, (a, key) => [key.toUpperCase(), a + 1]), { A: 4, B: 6 })\n * ```\n *\n * @category mapping\n * @since 2.0.0\n */\nexport const mapEntries: {\n  /**\n   * Maps entries of a `ReadonlyRecord` using the provided function, allowing modification of both keys and corresponding values.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { mapEntries } from \"effect/Record\"\n   *\n   * assert.deepStrictEqual(mapEntries({ a: 3, b: 5 }, (a, key) => [key.toUpperCase(), a + 1]), { A: 4, B: 6 })\n   * ```\n   *\n   * @category mapping\n   * @since 2.0.0\n   */\n  <K extends string, A, K2 extends string, B>(f: (a: A, key: K) => readonly [K2, B]): (self: ReadonlyRecord<K, A>) => Record<K2, B>\n  /**\n   * Maps entries of a `ReadonlyRecord` using the provided function, allowing modification of both keys and corresponding values.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { mapEntries } from \"effect/Record\"\n   *\n   * assert.deepStrictEqual(mapEntries({ a: 3, b: 5 }, (a, key) => [key.toUpperCase(), a + 1]), { A: 4, B: 6 })\n   * ```\n   *\n   * @category mapping\n   * @since 2.0.0\n   */\n  <K extends string, A, K2 extends string, B>(self: ReadonlyRecord<K, A>, f: (a: A, key: K) => [K2, B]): Record<K2, B>\n} = dual(\n  2,\n  <K extends string, A, K2 extends string, B>(\n    self: ReadonlyRecord<K, A>,\n    f: (a: A, key: K) => [K2, B]\n  ): Record<K2, B> => {\n    const out = <Record<K2, B>> {}\n    for (const key of keys(self)) {\n      const [k, b] = f(self[key], key)\n      out[k] = b\n    }\n    return out\n  }\n)\n\n/**\n * Transforms a record into a record by applying the function `f` to each key and value in the original record.\n * If the function returns `Some`, the key-value pair is included in the output record.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Record, Option } from \"effect\"\n *\n * const x = { a: 1, b: 2, c: 3 }\n * const f = (a: number, key: string) => a > 2 ? Option.some(a * 2) : Option.none()\n * assert.deepStrictEqual(Record.filterMap(x, f), { c: 6 })\n * ```\n *\n * @since 2.0.0\n */\nexport const filterMap: {\n  /**\n   * Transforms a record into a record by applying the function `f` to each key and value in the original record.\n   * If the function returns `Some`, the key-value pair is included in the output record.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Record, Option } from \"effect\"\n   *\n   * const x = { a: 1, b: 2, c: 3 }\n   * const f = (a: number, key: string) => a > 2 ? Option.some(a * 2) : Option.none()\n   * assert.deepStrictEqual(Record.filterMap(x, f), { c: 6 })\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <K extends string, A, B>(f: (a: A, key: K) => Option.Option<B>): (self: ReadonlyRecord<K, A>) => Record<ReadonlyRecord.NonLiteralKey<K>, B>\n  /**\n   * Transforms a record into a record by applying the function `f` to each key and value in the original record.\n   * If the function returns `Some`, the key-value pair is included in the output record.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Record, Option } from \"effect\"\n   *\n   * const x = { a: 1, b: 2, c: 3 }\n   * const f = (a: number, key: string) => a > 2 ? Option.some(a * 2) : Option.none()\n   * assert.deepStrictEqual(Record.filterMap(x, f), { c: 6 })\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <K extends string, A, B>(self: ReadonlyRecord<K, A>, f: (a: A, key: K) => Option.Option<B>): Record<ReadonlyRecord.NonLiteralKey<K>, B>\n} = dual(\n  2,\n  <K extends string, A, B>(\n    self: ReadonlyRecord<K, A>,\n    f: (a: A, key: K) => Option.Option<B>\n  ): Record<ReadonlyRecord.NonLiteralKey<K>, B> => {\n    const out: Record<string, B> = empty()\n    for (const key of keys(self)) {\n      const o = f(self[key], key)\n      if (Option.isSome(o)) {\n        out[key] = o.value\n      }\n    }\n    return out\n  }\n)\n\n/**\n * Selects properties from a record whose values match the given predicate.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { filter } from \"effect/Record\"\n *\n * const x = { a: 1, b: 2, c: 3, d: 4 }\n * assert.deepStrictEqual(filter(x, (n) => n > 2), { c: 3, d: 4 })\n * ```\n *\n * @category filtering\n * @since 2.0.0\n */\nexport const filter: {\n  /**\n   * Selects properties from a record whose values match the given predicate.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { filter } from \"effect/Record\"\n   *\n   * const x = { a: 1, b: 2, c: 3, d: 4 }\n   * assert.deepStrictEqual(filter(x, (n) => n > 2), { c: 3, d: 4 })\n   * ```\n   *\n   * @category filtering\n   * @since 2.0.0\n   */\n  <K extends string, A, B extends A>(refinement: (a: NoInfer<A>, key: K) => a is B): (self: ReadonlyRecord<K, A>) => Record<ReadonlyRecord.NonLiteralKey<K>, B>\n  /**\n   * Selects properties from a record whose values match the given predicate.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { filter } from \"effect/Record\"\n   *\n   * const x = { a: 1, b: 2, c: 3, d: 4 }\n   * assert.deepStrictEqual(filter(x, (n) => n > 2), { c: 3, d: 4 })\n   * ```\n   *\n   * @category filtering\n   * @since 2.0.0\n   */\n  <K extends string, A>(predicate: (A: NoInfer<A>, key: K) => boolean): (self: ReadonlyRecord<K, A>) => Record<ReadonlyRecord.NonLiteralKey<K>, A>\n  /**\n   * Selects properties from a record whose values match the given predicate.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { filter } from \"effect/Record\"\n   *\n   * const x = { a: 1, b: 2, c: 3, d: 4 }\n   * assert.deepStrictEqual(filter(x, (n) => n > 2), { c: 3, d: 4 })\n   * ```\n   *\n   * @category filtering\n   * @since 2.0.0\n   */\n  <K extends string, A, B extends A>(self: ReadonlyRecord<K, A>, refinement: (a: A, key: K) => a is B): Record<ReadonlyRecord.NonLiteralKey<K>, B>\n  /**\n   * Selects properties from a record whose values match the given predicate.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { filter } from \"effect/Record\"\n   *\n   * const x = { a: 1, b: 2, c: 3, d: 4 }\n   * assert.deepStrictEqual(filter(x, (n) => n > 2), { c: 3, d: 4 })\n   * ```\n   *\n   * @category filtering\n   * @since 2.0.0\n   */\n  <K extends string, A>(self: ReadonlyRecord<K, A>, predicate: (a: A, key: K) => boolean): Record<ReadonlyRecord.NonLiteralKey<K>, A>\n} = dual(\n  2,\n  <K extends string, A>(\n    self: ReadonlyRecord<K, A>,\n    predicate: (a: A, key: K) => boolean\n  ): Record<ReadonlyRecord.NonLiteralKey<K>, A> => {\n    const out: Record<string, A> = empty()\n    for (const key of keys(self)) {\n      if (predicate(self[key], key)) {\n        out[key] = self[key]\n      }\n    }\n    return out\n  }\n)\n\n/**\n * Given a record with `Option` values, returns a new record containing only the `Some` values, preserving the original keys.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Record, Option } from \"effect\"\n *\n * assert.deepStrictEqual(\n *   Record.getSomes({ a: Option.some(1), b: Option.none(), c: Option.some(2) }),\n *   { a: 1, c: 2 }\n * )\n * ```\n *\n * @category filtering\n * @since 2.0.0\n */\nexport const getSomes: <K extends string, A>(\n  self: ReadonlyRecord<K, Option.Option<A>>\n) => Record<ReadonlyRecord.NonLiteralKey<K>, A> = filterMap(\n  identity\n)\n\n/**\n * Given a record with `Either` values, returns a new record containing only the `Left` values, preserving the original keys.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Record, Either } from \"effect\"\n *\n * assert.deepStrictEqual(\n *   Record.getLefts({ a: Either.right(1), b: Either.left(\"err\"), c: Either.right(2) }),\n *   { b: \"err\" }\n * )\n * ```\n *\n * @category filtering\n * @since 2.0.0\n */\nexport const getLefts = <K extends string, R, L>(\n  self: ReadonlyRecord<K, Either<R, L>>\n): Record<ReadonlyRecord.NonLiteralKey<K>, L> => {\n  const out: Record<string, L> = empty()\n  for (const key of keys(self)) {\n    const value = self[key]\n    if (E.isLeft(value)) {\n      out[key] = value.left\n    }\n  }\n\n  return out\n}\n\n/**\n * Given a record with `Either` values, returns a new record containing only the `Right` values, preserving the original keys.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Record, Either } from \"effect\"\n *\n * assert.deepStrictEqual(\n *   Record.getRights({ a: Either.right(1), b: Either.left(\"err\"), c: Either.right(2) }),\n *   { a: 1, c: 2 }\n * )\n * ```\n *\n * @category filtering\n * @since 2.0.0\n */\nexport const getRights = <K extends string, R, L>(\n  self: ReadonlyRecord<K, Either<R, L>>\n): Record<string, R> => {\n  const out: Record<string, R> = empty()\n  for (const key of keys(self)) {\n    const value = self[key]\n    if (E.isRight(value)) {\n      out[key] = value.right\n    }\n  }\n\n  return out\n}\n\n/**\n * Partitions the elements of a record into two groups: those that match a predicate, and those that don't.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Record, Either } from \"effect\"\n *\n * const x = { a: 1, b: 2, c: 3 }\n * const f = (n: number) => (n % 2 === 0 ? Either.right(n) : Either.left(n))\n * assert.deepStrictEqual(Record.partitionMap(x, f), [{ a: 1, c: 3 }, { b: 2}])\n * ```\n *\n * @category filtering\n * @since 2.0.0\n */\nexport const partitionMap: {\n  /**\n   * Partitions the elements of a record into two groups: those that match a predicate, and those that don't.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Record, Either } from \"effect\"\n   *\n   * const x = { a: 1, b: 2, c: 3 }\n   * const f = (n: number) => (n % 2 === 0 ? Either.right(n) : Either.left(n))\n   * assert.deepStrictEqual(Record.partitionMap(x, f), [{ a: 1, c: 3 }, { b: 2}])\n   * ```\n   *\n   * @category filtering\n   * @since 2.0.0\n   */\n  <K extends string, A, B, C>(f: (a: A, key: K) => Either<C, B>): (\n    self: ReadonlyRecord<K, A>\n  ) => [left: Record<ReadonlyRecord.NonLiteralKey<K>, B>, right: Record<ReadonlyRecord.NonLiteralKey<K>, C>]\n  /**\n   * Partitions the elements of a record into two groups: those that match a predicate, and those that don't.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Record, Either } from \"effect\"\n   *\n   * const x = { a: 1, b: 2, c: 3 }\n   * const f = (n: number) => (n % 2 === 0 ? Either.right(n) : Either.left(n))\n   * assert.deepStrictEqual(Record.partitionMap(x, f), [{ a: 1, c: 3 }, { b: 2}])\n   * ```\n   *\n   * @category filtering\n   * @since 2.0.0\n   */\n  <K extends string, A, B, C>(self: ReadonlyRecord<K, A>, f: (a: A, key: K) => Either<C, B>): [left: Record<ReadonlyRecord.NonLiteralKey<K>, B>, right: Record<ReadonlyRecord.NonLiteralKey<K>, C>]\n} = dual(\n  2,\n  <K extends string, A, B, C>(\n    self: ReadonlyRecord<K, A>,\n    f: (a: A, key: K) => Either<C, B>\n  ): [left: Record<ReadonlyRecord.NonLiteralKey<K>, B>, right: Record<ReadonlyRecord.NonLiteralKey<K>, C>] => {\n    const left: Record<string, B> = empty()\n    const right: Record<string, C> = empty()\n    for (const key of keys(self)) {\n      const e = f(self[key], key)\n      if (E.isLeft(e)) {\n        left[key] = e.left\n      } else {\n        right[key] = e.right\n      }\n    }\n    return [left, right]\n  }\n)\n\n/**\n * Partitions a record of `Either` values into two separate records,\n * one with the `Left` values and one with the `Right` values.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Record, Either } from \"effect\"\n *\n * assert.deepStrictEqual(\n *   Record.separate({ a: Either.left(\"e\"), b: Either.right(1) }),\n *   [{ a: \"e\" }, { b: 1 }]\n * )\n * ```\n *\n * @category filtering\n * @since 2.0.0\n */\nexport const separate: <K extends string, A, B>(\n  self: ReadonlyRecord<K, Either<B, A>>\n) => [Record<ReadonlyRecord.NonLiteralKey<K>, A>, Record<ReadonlyRecord.NonLiteralKey<K>, B>] = partitionMap(identity)\n\n/**\n * Partitions a record into two separate records based on the result of a predicate function.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { partition } from \"effect/Record\"\n *\n * assert.deepStrictEqual(\n *   partition({ a: 1, b: 3 }, (n) => n > 2),\n *   [{ a: 1 }, { b: 3 }]\n * )\n * ```\n *\n * @category filtering\n * @since 2.0.0\n */\nexport const partition: {\n  /**\n   * Partitions a record into two separate records based on the result of a predicate function.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { partition } from \"effect/Record\"\n   *\n   * assert.deepStrictEqual(\n   *   partition({ a: 1, b: 3 }, (n) => n > 2),\n   *   [{ a: 1 }, { b: 3 }]\n   * )\n   * ```\n   *\n   * @category filtering\n   * @since 2.0.0\n   */\n  <K extends string, A, B extends A>(refinement: (a: NoInfer<A>, key: K) => a is B): (\n    self: ReadonlyRecord<K, A>\n  ) => [\n    excluded: Record<ReadonlyRecord.NonLiteralKey<K>, Exclude<A, B>>,\n    satisfying: Record<ReadonlyRecord.NonLiteralKey<K>, B>\n  ]\n  /**\n   * Partitions a record into two separate records based on the result of a predicate function.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { partition } from \"effect/Record\"\n   *\n   * assert.deepStrictEqual(\n   *   partition({ a: 1, b: 3 }, (n) => n > 2),\n   *   [{ a: 1 }, { b: 3 }]\n   * )\n   * ```\n   *\n   * @category filtering\n   * @since 2.0.0\n   */\n  <K extends string, A>(predicate: (a: NoInfer<A>, key: K) => boolean): (\n    self: ReadonlyRecord<K, A>\n  ) => [excluded: Record<ReadonlyRecord.NonLiteralKey<K>, A>, satisfying: Record<ReadonlyRecord.NonLiteralKey<K>, A>]\n  /**\n   * Partitions a record into two separate records based on the result of a predicate function.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { partition } from \"effect/Record\"\n   *\n   * assert.deepStrictEqual(\n   *   partition({ a: 1, b: 3 }, (n) => n > 2),\n   *   [{ a: 1 }, { b: 3 }]\n   * )\n   * ```\n   *\n   * @category filtering\n   * @since 2.0.0\n   */\n  <K extends string, A, B extends A>(self: ReadonlyRecord<K, A>, refinement: (a: A, key: K) => a is B): [\n    excluded: Record<ReadonlyRecord.NonLiteralKey<K>, Exclude<A, B>>,\n    satisfying: Record<ReadonlyRecord.NonLiteralKey<K>, B>\n  ]\n  /**\n   * Partitions a record into two separate records based on the result of a predicate function.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { partition } from \"effect/Record\"\n   *\n   * assert.deepStrictEqual(\n   *   partition({ a: 1, b: 3 }, (n) => n > 2),\n   *   [{ a: 1 }, { b: 3 }]\n   * )\n   * ```\n   *\n   * @category filtering\n   * @since 2.0.0\n   */\n  <K extends string, A>(self: ReadonlyRecord<K, A>, predicate: (a: A, key: K) => boolean): [excluded: Record<ReadonlyRecord.NonLiteralKey<K>, A>, satisfying: Record<ReadonlyRecord.NonLiteralKey<K>, A>]\n} = dual(\n  2,\n  <K extends string, A>(\n    self: ReadonlyRecord<K, A>,\n    predicate: (a: A, key: K) => boolean\n  ): [excluded: Record<ReadonlyRecord.NonLiteralKey<K>, A>, satisfying: Record<ReadonlyRecord.NonLiteralKey<K>, A>] => {\n    const left: Record<string, A> = empty()\n    const right: Record<string, A> = empty()\n    for (const key of keys(self)) {\n      if (predicate(self[key], key)) {\n        right[key] = self[key]\n      } else {\n        left[key] = self[key]\n      }\n    }\n    return [left, right]\n  }\n)\n\n/**\n * Retrieve the keys of a given record as an array.\n *\n * @since 2.0.0\n */\nexport const keys = <K extends string | symbol, A>(self: ReadonlyRecord<K, A>): Array<K & string> =>\n  Object.keys(self) as Array<K & string>\n\n/**\n * Retrieve the values of a given record as an array.\n *\n * @since 2.0.0\n */\nexport const values = <K extends string, A>(self: ReadonlyRecord<K, A>): Array<A> => collect(self, (_, a) => a)\n\n/**\n * Add a new key-value pair or update an existing key's value in a record.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { set } from \"effect/Record\"\n *\n * assert.deepStrictEqual(set(\"a\", 5)({ a: 1, b: 2 }), { a: 5, b: 2 });\n * assert.deepStrictEqual(set(\"c\", 5)({ a: 1, b: 2 }), { a: 1, b: 2, c: 5 });\n * ```\n *\n * @since 2.0.0\n */\nexport const set: {\n  /**\n   * Add a new key-value pair or update an existing key's value in a record.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { set } from \"effect/Record\"\n   *\n   * assert.deepStrictEqual(set(\"a\", 5)({ a: 1, b: 2 }), { a: 5, b: 2 });\n   * assert.deepStrictEqual(set(\"c\", 5)({ a: 1, b: 2 }), { a: 1, b: 2, c: 5 });\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <K extends string | symbol, K1 extends K | ((string | symbol) & {}), B>(key: K1, value: B): <A>(self: ReadonlyRecord<K, A>) => Record<K | K1, A | B>\n  /**\n   * Add a new key-value pair or update an existing key's value in a record.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { set } from \"effect/Record\"\n   *\n   * assert.deepStrictEqual(set(\"a\", 5)({ a: 1, b: 2 }), { a: 5, b: 2 });\n   * assert.deepStrictEqual(set(\"c\", 5)({ a: 1, b: 2 }), { a: 1, b: 2, c: 5 });\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <K extends string | symbol, A, K1 extends K | ((string | symbol) & {}), B>(self: ReadonlyRecord<K, A>, key: K1, value: B): Record<K | K1, A | B>\n} = dual(\n  3,\n  <K extends string | symbol, A, K1 extends K | ((string | symbol) & {}), B>(\n    self: ReadonlyRecord<K, A>,\n    key: K1,\n    value: B\n  ): Record<K | K1, A | B> => {\n    return { ...self, [key]: value } as any\n  }\n)\n\n/**\n * Replace a key's value in a record and return the updated record.\n * If the key does not exist in the record, a copy of the original record is returned.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Record } from \"effect\"\n *\n * assert.deepStrictEqual(Record.replace(\"a\", 3)({ a: 1, b: 2 }), { a: 3, b: 2 });\n * assert.deepStrictEqual(Record.replace(\"c\", 3)({ a: 1, b: 2 }), { a: 1, b: 2 });\n * ```\n *\n * @since 2.0.0\n */\nexport const replace: {\n  /**\n   * Replace a key's value in a record and return the updated record.\n   * If the key does not exist in the record, a copy of the original record is returned.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Record } from \"effect\"\n   *\n   * assert.deepStrictEqual(Record.replace(\"a\", 3)({ a: 1, b: 2 }), { a: 3, b: 2 });\n   * assert.deepStrictEqual(Record.replace(\"c\", 3)({ a: 1, b: 2 }), { a: 1, b: 2 });\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <K extends string | symbol, B>(key: NoInfer<K>, value: B): <A>(self: ReadonlyRecord<K, A>) => Record<K, A | B>\n  /**\n   * Replace a key's value in a record and return the updated record.\n   * If the key does not exist in the record, a copy of the original record is returned.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Record } from \"effect\"\n   *\n   * assert.deepStrictEqual(Record.replace(\"a\", 3)({ a: 1, b: 2 }), { a: 3, b: 2 });\n   * assert.deepStrictEqual(Record.replace(\"c\", 3)({ a: 1, b: 2 }), { a: 1, b: 2 });\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <K extends string | symbol, A, B>(self: ReadonlyRecord<K, A>, key: NoInfer<K>, value: B): Record<K, A | B>\n} = dual(\n  3,\n  <K extends string | symbol, A, B>(self: ReadonlyRecord<K, A>, key: NoInfer<K>, value: B): Record<K, A | B> => {\n    if (has(self, key)) {\n      return { ...self, [key]: value }\n    }\n    return { ...self }\n  }\n)\n\n/**\n * Check if all the keys and values in one record are also found in another record.\n *\n * @since 2.0.0\n */\nexport const isSubrecordBy = <A>(equivalence: Equivalence<A>): {\n  <K extends string>(that: ReadonlyRecord<K, A>): (self: ReadonlyRecord<K, A>) => boolean\n  <K extends string>(self: ReadonlyRecord<K, A>, that: ReadonlyRecord<K, A>): boolean\n} =>\n  dual(2, <K extends string>(self: ReadonlyRecord<K, A>, that: ReadonlyRecord<K, A>): boolean => {\n    for (const key of keys(self)) {\n      if (!has(that, key) || !equivalence(self[key], that[key])) {\n        return false\n      }\n    }\n    return true\n  })\n\n/**\n * Check if one record is a subrecord of another, meaning it contains all the keys and values found in the second record.\n * This comparison uses default equality checks (`Equal.equivalence()`).\n *\n * @since 2.0.0\n */\nexport const isSubrecord: {\n  /**\n   * Check if one record is a subrecord of another, meaning it contains all the keys and values found in the second record.\n   * This comparison uses default equality checks (`Equal.equivalence()`).\n   *\n   * @since 2.0.0\n   */\n  <K extends string, A>(that: ReadonlyRecord<K, A>): (self: ReadonlyRecord<K, A>) => boolean\n  /**\n   * Check if one record is a subrecord of another, meaning it contains all the keys and values found in the second record.\n   * This comparison uses default equality checks (`Equal.equivalence()`).\n   *\n   * @since 2.0.0\n   */\n  <K extends string, A>(self: ReadonlyRecord<K, A>, that: ReadonlyRecord<K, A>): boolean\n} = isSubrecordBy(Equal.equivalence())\n\n/**\n * Reduce a record to a single value by combining its entries with a specified function.\n *\n * @category folding\n * @since 2.0.0\n */\nexport const reduce: {\n  /**\n   * Reduce a record to a single value by combining its entries with a specified function.\n   *\n   * @category folding\n   * @since 2.0.0\n   */\n  <Z, V, K extends string>(zero: Z, f: (accumulator: Z, value: V, key: K) => Z): (self: ReadonlyRecord<K, V>) => Z\n  /**\n   * Reduce a record to a single value by combining its entries with a specified function.\n   *\n   * @category folding\n   * @since 2.0.0\n   */\n  <K extends string, V, Z>(\n    self: ReadonlyRecord<K, V>,\n    zero: Z,\n    f: (accumulator: Z, value: V, key: K) => Z\n  ): Z\n} = dual(\n  3,\n  <K extends string, V, Z>(\n    self: ReadonlyRecord<K, V>,\n    zero: Z,\n    f: (accumulator: Z, value: V, key: K) => Z\n  ): Z => {\n    let out: Z = zero\n    for (const key of keys(self)) {\n      out = f(out, self[key], key)\n    }\n    return out\n  }\n)\n\n/**\n * Check if all entries in a record meet a specific condition.\n *\n * @since 2.0.0\n */\nexport const every: {\n  /**\n   * Check if all entries in a record meet a specific condition.\n   *\n   * @since 2.0.0\n   */\n  <A, K extends string, B extends A>(refinement: (value: A, key: K) => value is B): (self: ReadonlyRecord<K, A>) => self is ReadonlyRecord<K, B>\n  /**\n   * Check if all entries in a record meet a specific condition.\n   *\n   * @since 2.0.0\n   */\n  <A, K extends string>(predicate: (value: A, key: K) => boolean): (self: ReadonlyRecord<K, A>) => boolean\n  /**\n   * Check if all entries in a record meet a specific condition.\n   *\n   * @since 2.0.0\n   */\n  <A, K extends string, B extends A>(self: ReadonlyRecord<K, A>, refinement: (value: A, key: K) => value is B): self is ReadonlyRecord<K, B>\n  /**\n   * Check if all entries in a record meet a specific condition.\n   *\n   * @since 2.0.0\n   */\n  <K extends string, A>(self: ReadonlyRecord<K, A>, predicate: (value: A, key: K) => boolean): boolean\n} = dual(\n  2,\n  <A, K extends string, B extends A>(\n    self: ReadonlyRecord<K, A>,\n    refinement: (value: A, key: K) => value is B\n  ): self is ReadonlyRecord<K, B> => {\n    for (const key of keys(self)) {\n      if (!refinement(self[key], key)) {\n        return false\n      }\n    }\n    return true\n  }\n)\n\n/**\n * Check if any entry in a record meets a specific condition.\n *\n * @since 2.0.0\n */\nexport const some: {\n  /**\n   * Check if any entry in a record meets a specific condition.\n   *\n   * @since 2.0.0\n   */\n  <A, K extends string>(predicate: (value: A, key: K) => boolean): (self: ReadonlyRecord<K, A>) => boolean\n  /**\n   * Check if any entry in a record meets a specific condition.\n   *\n   * @since 2.0.0\n   */\n  <K extends string, A>(self: ReadonlyRecord<K, A>, predicate: (value: A, key: K) => boolean): boolean\n} = dual(\n  2,\n  <K extends string, A>(self: ReadonlyRecord<K, A>, predicate: (value: A, key: K) => boolean): boolean => {\n    for (const key of keys(self)) {\n      if (predicate(self[key], key)) {\n        return true\n      }\n    }\n    return false\n  }\n)\n\n/**\n * Merge two records, preserving entries that exist in either of the records.\n *\n * @since 2.0.0\n */\nexport const union: {\n  /**\n   * Merge two records, preserving entries that exist in either of the records.\n   *\n   * @since 2.0.0\n   */\n  <K1 extends string, A, B, C>(that: ReadonlyRecord<K1, B>, combine: (selfValue: A, thatValue: B) => C): <K0 extends string>(self: ReadonlyRecord<K0, A>) => Record<K0 | K1, A | B | C>\n  /**\n   * Merge two records, preserving entries that exist in either of the records.\n   *\n   * @since 2.0.0\n   */\n  <K0 extends string, A, K1 extends string, B, C>(\n    self: ReadonlyRecord<K0, A>,\n    that: ReadonlyRecord<K1, B>,\n    combine: (selfValue: A, thatValue: B) => C\n  ): Record<K0 | K1, A | B | C>\n} = dual(\n  3,\n  <K0 extends string, A, K1 extends string, B, C>(\n    self: ReadonlyRecord<K0, A>,\n    that: ReadonlyRecord<K1, B>,\n    combine: (selfValue: A, thatValue: B) => C\n  ): Record<K0 | K1, A | B | C> => {\n    if (isEmptyRecord(self)) {\n      return { ...that } as any\n    }\n    if (isEmptyRecord(that)) {\n      return { ...self } as any\n    }\n    const out: Record<string, A | B | C> = empty()\n    for (const key of keys(self)) {\n      if (has(that, key as any)) {\n        out[key] = combine(self[key], that[key as unknown as K1])\n      } else {\n        out[key] = self[key]\n      }\n    }\n    for (const key of keys(that)) {\n      if (!has(out, key)) {\n        out[key] = that[key]\n      }\n    }\n    return out\n  }\n)\n\n/**\n * Merge two records, retaining only the entries that exist in both records.\n *\n * @since 2.0.0\n */\nexport const intersection: {\n  /**\n   * Merge two records, retaining only the entries that exist in both records.\n   *\n   * @since 2.0.0\n   */\n  <K1 extends string, A, B, C>(that: ReadonlyRecord<K1, B>, combine: (selfValue: A, thatValue: B) => C): <K0 extends string>(self: ReadonlyRecord<K0, A>) => Record<ReadonlyRecord.IntersectKeys<K0, K1>, C>\n  /**\n   * Merge two records, retaining only the entries that exist in both records.\n   *\n   * @since 2.0.0\n   */\n  <K0 extends string, A, K1 extends string, B, C>(\n    self: ReadonlyRecord<K0, A>,\n    that: ReadonlyRecord<K1, B>,\n    combine: (selfValue: A, thatValue: B) => C\n  ): Record<ReadonlyRecord.IntersectKeys<K0, K1>, C>\n} = dual(\n  3,\n  <K0 extends string, A, K1 extends string, B, C>(\n    self: ReadonlyRecord<K0, A>,\n    that: ReadonlyRecord<K1, B>,\n    combine: (selfValue: A, thatValue: B) => C\n  ): Record<ReadonlyRecord.IntersectKeys<K0, K1>, C> => {\n    const out: Record<string, C> = empty()\n    if (isEmptyRecord(self) || isEmptyRecord(that)) {\n      return out\n    }\n    for (const key of keys(self)) {\n      if (has(that, key as any)) {\n        out[key] = combine(self[key], that[key as unknown as K1])\n      }\n    }\n    return out\n  }\n)\n\n/**\n * Merge two records, preserving only the entries that are unique to each record.\n *\n * @since 2.0.0\n */\nexport const difference: {\n  /**\n   * Merge two records, preserving only the entries that are unique to each record.\n   *\n   * @since 2.0.0\n   */\n  <K1 extends string, B>(that: ReadonlyRecord<K1, B>): <K0 extends string, A>(self: ReadonlyRecord<K0, A>) => Record<K0 | K1, A | B>\n  /**\n   * Merge two records, preserving only the entries that are unique to each record.\n   *\n   * @since 2.0.0\n   */\n  <K0 extends string, A, K1 extends string, B>(self: ReadonlyRecord<K0, A>, that: ReadonlyRecord<K1, B>): Record<K0 | K1, A | B>\n} = dual(2, <K0 extends string, A, K1 extends string, B>(\n  self: ReadonlyRecord<K0, A>,\n  that: ReadonlyRecord<K1, B>\n): Record<K0 | K1, A | B> => {\n  if (isEmptyRecord(self)) {\n    return { ...that } as any\n  }\n  if (isEmptyRecord(that)) {\n    return { ...self } as any\n  }\n  const out = <Record<K0 | K1, A | B>> {}\n  for (const key of keys(self)) {\n    if (!has(that, key as any)) {\n      out[key] = self[key]\n    }\n  }\n  for (const key of keys(that)) {\n    if (!has(self, key as any)) {\n      out[key] = that[key]\n    }\n  }\n  return out\n})\n\n/**\n * Create an `Equivalence` for records using the provided `Equivalence` for values.\n *\n * @category instances\n * @since 2.0.0\n */\nexport const getEquivalence = <K extends string, A>(\n  equivalence: Equivalence<A>\n): Equivalence<ReadonlyRecord<K, A>> => {\n  const is = isSubrecordBy(equivalence)\n  return (self, that) => is(self, that) && is(that, self)\n}\n\n/**\n * Create a non-empty record from a single element.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const singleton = <K extends string | symbol, A>(key: K, value: A): Record<K, A> => ({\n  [key]: value\n} as any)\n\n/**\n * Returns the first entry that satisfies the specified\n * predicate, or `None` if no such entry exists.\n *\n * @example\n * ```ts\n * import { Record, Option } from \"effect\"\n *\n * const record = { a: 1, b: 2, c: 3 }\n * const result = Record.findFirst(record, (value, key) => value > 1 && key !== \"b\")\n * console.log(result) // Option.Some([\"c\", 3])\n * ```\n *\n * @category elements\n * @since 3.14.0\n */\nexport const findFirst: {\n  /**\n   * Returns the first entry that satisfies the specified\n   * predicate, or `None` if no such entry exists.\n   *\n   * @example\n   * ```ts\n   * import { Record, Option } from \"effect\"\n   *\n   * const record = { a: 1, b: 2, c: 3 }\n   * const result = Record.findFirst(record, (value, key) => value > 1 && key !== \"b\")\n   * console.log(result) // Option.Some([\"c\", 3])\n   * ```\n   *\n   * @category elements\n   * @since 3.14.0\n   */\n  <K extends string | symbol, V, V2 extends V>(refinement: (value: NoInfer<V>, key: NoInfer<K>) => value is V2): (self: ReadonlyRecord<K, V>) => Option.Option<[K, V2]>\n  /**\n   * Returns the first entry that satisfies the specified\n   * predicate, or `None` if no such entry exists.\n   *\n   * @example\n   * ```ts\n   * import { Record, Option } from \"effect\"\n   *\n   * const record = { a: 1, b: 2, c: 3 }\n   * const result = Record.findFirst(record, (value, key) => value > 1 && key !== \"b\")\n   * console.log(result) // Option.Some([\"c\", 3])\n   * ```\n   *\n   * @category elements\n   * @since 3.14.0\n   */\n  <K extends string | symbol, V>(predicate: (value: NoInfer<V>, key: NoInfer<K>) => boolean): (self: ReadonlyRecord<K, V>) => Option.Option<[K, V]>\n  /**\n   * Returns the first entry that satisfies the specified\n   * predicate, or `None` if no such entry exists.\n   *\n   * @example\n   * ```ts\n   * import { Record, Option } from \"effect\"\n   *\n   * const record = { a: 1, b: 2, c: 3 }\n   * const result = Record.findFirst(record, (value, key) => value > 1 && key !== \"b\")\n   * console.log(result) // Option.Some([\"c\", 3])\n   * ```\n   *\n   * @category elements\n   * @since 3.14.0\n   */\n  <K extends string | symbol, V, V2 extends V>(\n    self: ReadonlyRecord<K, V>,\n    refinement: (value: NoInfer<V>, key: NoInfer<K>) => value is V2\n  ): Option.Option<[K, V2]>\n  /**\n   * Returns the first entry that satisfies the specified\n   * predicate, or `None` if no such entry exists.\n   *\n   * @example\n   * ```ts\n   * import { Record, Option } from \"effect\"\n   *\n   * const record = { a: 1, b: 2, c: 3 }\n   * const result = Record.findFirst(record, (value, key) => value > 1 && key !== \"b\")\n   * console.log(result) // Option.Some([\"c\", 3])\n   * ```\n   *\n   * @category elements\n   * @since 3.14.0\n   */\n  <K extends string | symbol, V>(\n    self: ReadonlyRecord<K, V>,\n    predicate: (value: NoInfer<V>, key: NoInfer<K>) => boolean\n  ): Option.Option<[K, V]>\n} = dual(\n  2,\n  <K extends string | symbol, V>(self: ReadonlyRecord<K, V>, f: (value: V, key: K) => boolean) => {\n    const k = keys(self)\n    for (let i = 0; i < k.length; i++) {\n      const key = k[i]\n      if (f(self[key], key)) {\n        return Option.some([key, self[key]])\n      }\n    }\n    return Option.none()\n  }\n)\n"],"names":["E","Equal","dual","identity","Option","empty","isEmptyRecord","self","keys","length","isEmptyReadonlyRecord","fromIterableWith","f","out","a","k","b","fromIterableBy","items","fromEntries","Object","collect","key","push","toEntries","value","size","has","prototype","hasOwnProperty","call","get","some","none","modify","modifyOption","replaceOption","remove","pop","map","mapKeys","mapEntries","filterMap","o","isSome","filter","predicate","getSomes","getLefts","isLeft","left","getRights","isRight","right","partitionMap","e","separate","partition","values","_","set","replace","isSubrecordBy","equivalence","that","isSubrecord","reduce","zero","every","refinement","union","combine","intersection","difference","getEquivalence","is","singleton","findFirst","i"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8734, "column": 0}, "map": {"version":3,"file":"Array.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/effect/src/Array.ts"],"sourcesContent":["/**\n * This module provides utility functions for working with arrays in TypeScript.\n *\n * @since 2.0.0\n */\n\nimport * as Either from \"./Either.js\"\nimport * as Equal from \"./Equal.js\"\nimport * as Equivalence from \"./Equivalence.js\"\nimport type { LazyArg } from \"./Function.js\"\nimport { dual, identity } from \"./Function.js\"\nimport type { TypeLambda } from \"./HKT.js\"\nimport * as internalArray from \"./internal/array.js\"\nimport * as internalDoNotation from \"./internal/doNotation.js\"\nimport * as moduleIterable from \"./Iterable.js\"\nimport * as Option from \"./Option.js\"\nimport * as Order from \"./Order.js\"\nimport * as Predicate from \"./Predicate.js\"\nimport * as Record from \"./Record.js\"\nimport * as Tuple from \"./Tuple.js\"\nimport type { NoInfer } from \"./Types.js\"\n\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexport interface ReadonlyArrayTypeLambda extends TypeLambda {\n  readonly type: ReadonlyArray<this[\"Target\"]>\n}\n\n/**\n * @category models\n * @since 2.0.0\n */\nexport type NonEmptyReadonlyArray<A> = readonly [A, ...Array<A>]\n\n/**\n * @category models\n * @since 2.0.0\n */\nexport type NonEmptyArray<A> = [A, ...Array<A>]\n\n/**\n * Builds a `NonEmptyArray` from an non-empty collection of elements.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.make(1, 2, 3)\n * console.log(result) // [1, 2, 3]\n * ```\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const make = <Elements extends NonEmptyArray<any>>(\n  ...elements: Elements\n): NonEmptyArray<Elements[number]> => elements\n\n/**\n * Creates a new `Array` of the specified length.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.allocate<number>(3)\n * console.log(result) // [ <3 empty items> ]\n * ```\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const allocate = <A = never>(n: number): Array<A | undefined> => new Array(n)\n\n/**\n * Return a `NonEmptyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to an integer >= 1.\n *\n * **Example**\n *\n * ```ts\n * import { makeBy } from \"effect/Array\"\n *\n * const result = makeBy(5, n => n * 2)\n * console.log(result) // [0, 2, 4, 6, 8]\n * ```\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const makeBy: {\n  /**\n   * Return a `NonEmptyArray` of length `n` with element `i` initialized with `f(i)`.\n   *\n   * **Note**. `n` is normalized to an integer >= 1.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { makeBy } from \"effect/Array\"\n   *\n   * const result = makeBy(5, n => n * 2)\n   * console.log(result) // [0, 2, 4, 6, 8]\n   * ```\n   *\n   * @category constructors\n   * @since 2.0.0\n   */\n  <A>(f: (i: number) => A): (n: number) => NonEmptyArray<A>\n  /**\n   * Return a `NonEmptyArray` of length `n` with element `i` initialized with `f(i)`.\n   *\n   * **Note**. `n` is normalized to an integer >= 1.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { makeBy } from \"effect/Array\"\n   *\n   * const result = makeBy(5, n => n * 2)\n   * console.log(result) // [0, 2, 4, 6, 8]\n   * ```\n   *\n   * @category constructors\n   * @since 2.0.0\n   */\n  <A>(n: number, f: (i: number) => A): NonEmptyArray<A>\n} = dual(2, <A>(n: number, f: (i: number) => A) => {\n  const max = Math.max(1, Math.floor(n))\n  const out = new Array(max)\n  for (let i = 0; i < max; i++) {\n    out[i] = f(i)\n  }\n  return out as NonEmptyArray<A>\n})\n\n/**\n * Return a `NonEmptyArray` containing a range of integers, including both endpoints.\n *\n * **Example**\n *\n * ```ts\n * import { range } from \"effect/Array\"\n *\n * const result = range(1, 3)\n * console.log(result) // [1, 2, 3]\n * ```\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const range = (start: number, end: number): NonEmptyArray<number> =>\n  start <= end ? makeBy(end - start + 1, (i) => start + i) : [start]\n\n/**\n * Return a `NonEmptyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to an integer >= 1.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.replicate(\"a\", 3)\n * console.log(result) // [\"a\", \"a\", \"a\"]\n * ```\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const replicate: {\n  /**\n   * Return a `NonEmptyArray` containing a value repeated the specified number of times.\n   *\n   * **Note**. `n` is normalized to an integer >= 1.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.replicate(\"a\", 3)\n   * console.log(result) // [\"a\", \"a\", \"a\"]\n   * ```\n   *\n   * @category constructors\n   * @since 2.0.0\n   */\n  (n: number): <A>(a: A) => NonEmptyArray<A>\n  /**\n   * Return a `NonEmptyArray` containing a value repeated the specified number of times.\n   *\n   * **Note**. `n` is normalized to an integer >= 1.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.replicate(\"a\", 3)\n   * console.log(result) // [\"a\", \"a\", \"a\"]\n   * ```\n   *\n   * @category constructors\n   * @since 2.0.0\n   */\n  <A>(a: A, n: number): NonEmptyArray<A>\n} = dual(2, <A>(a: A, n: number): NonEmptyArray<A> => makeBy(n, () => a))\n\n/**\n * Creates a new `Array` from an iterable collection of values.\n * If the input is already an array, it returns the input as-is.\n * Otherwise, it converts the iterable collection to an array.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.fromIterable(new Set([1, 2, 3]))\n * console.log(result) // [1, 2, 3]\n * ```\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const fromIterable = <A>(collection: Iterable<A>): Array<A> =>\n  Array.isArray(collection) ? collection : Array.from(collection)\n\n/**\n * Creates a new `Array` from a value that might not be an iterable.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * console.log(Array.ensure(\"a\")) // [\"a\"]\n * console.log(Array.ensure([\"a\"])) // [\"a\"]\n * console.log(Array.ensure([\"a\", \"b\", \"c\"])) // [\"a\", \"b\", \"c\"]\n * ```\n *\n * @category constructors\n * @since 3.3.0\n */\nexport const ensure = <A>(self: ReadonlyArray<A> | A): Array<A> => Array.isArray(self) ? self : [self as A]\n\n/**\n * Takes a record and returns an array of tuples containing its keys and values.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.fromRecord({ a: 1, b: 2, c: 3 })\n * console.log(result) // [[\"a\", 1], [\"b\", 2], [\"c\", 3]]\n * ```\n *\n * @category conversions\n * @since 2.0.0\n */\nexport const fromRecord: <K extends string, A>(self: Readonly<Record<K, A>>) => Array<[K, A]> = Record.toEntries\n\n/**\n * Converts an `Option` to an array.\n *\n * **Example**\n *\n * ```ts\n * import { Array, Option } from \"effect\"\n *\n * console.log(Array.fromOption(Option.some(1))) // [1]\n * console.log(Array.fromOption(Option.none())) // []\n * ```\n *\n * @category conversions\n * @since 2.0.0\n */\nexport const fromOption: <A>(self: Option.Option<A>) => Array<A> = Option.toArray\n\n/**\n * Matches the elements of an array, applying functions to cases of empty and non-empty arrays.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const match = Array.match({\n *   onEmpty: () => \"empty\",\n *   onNonEmpty: ([head, ...tail]) => `head: ${head}, tail: ${tail.length}`\n * })\n * console.log(match([])) // \"empty\"\n * console.log(match([1, 2, 3])) // \"head: 1, tail: 2\"\n * ```\n *\n * @category pattern matching\n * @since 2.0.0\n */\nexport const match: {\n  /**\n   * Matches the elements of an array, applying functions to cases of empty and non-empty arrays.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const match = Array.match({\n   *   onEmpty: () => \"empty\",\n   *   onNonEmpty: ([head, ...tail]) => `head: ${head}, tail: ${tail.length}`\n   * })\n   * console.log(match([])) // \"empty\"\n   * console.log(match([1, 2, 3])) // \"head: 1, tail: 2\"\n   * ```\n   *\n   * @category pattern matching\n   * @since 2.0.0\n   */\n  <B, A, C = B>(\n    options: {\n      readonly onEmpty: LazyArg<B>\n      readonly onNonEmpty: (self: NonEmptyReadonlyArray<A>) => C\n    }\n  ): (self: ReadonlyArray<A>) => B | C\n  /**\n   * Matches the elements of an array, applying functions to cases of empty and non-empty arrays.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const match = Array.match({\n   *   onEmpty: () => \"empty\",\n   *   onNonEmpty: ([head, ...tail]) => `head: ${head}, tail: ${tail.length}`\n   * })\n   * console.log(match([])) // \"empty\"\n   * console.log(match([1, 2, 3])) // \"head: 1, tail: 2\"\n   * ```\n   *\n   * @category pattern matching\n   * @since 2.0.0\n   */\n  <A, B, C = B>(\n    self: ReadonlyArray<A>,\n    options: {\n      readonly onEmpty: LazyArg<B>\n      readonly onNonEmpty: (self: NonEmptyReadonlyArray<A>) => C\n    }\n  ): B | C\n} = dual(2, <A, B, C = B>(\n  self: ReadonlyArray<A>,\n  { onEmpty, onNonEmpty }: {\n    readonly onEmpty: LazyArg<B>\n    readonly onNonEmpty: (self: NonEmptyReadonlyArray<A>) => C\n  }\n): B | C => isNonEmptyReadonlyArray(self) ? onNonEmpty(self) : onEmpty())\n\n/**\n * Matches the elements of an array from the left, applying functions to cases of empty and non-empty arrays.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const matchLeft = Array.matchLeft({\n *   onEmpty: () => \"empty\",\n *   onNonEmpty: (head, tail) => `head: ${head}, tail: ${tail.length}`\n * })\n * console.log(matchLeft([])) // \"empty\"\n * console.log(matchLeft([1, 2, 3])) // \"head: 1, tail: 2\"\n * ```\n *\n * @category pattern matching\n * @since 2.0.0\n */\nexport const matchLeft: {\n  /**\n   * Matches the elements of an array from the left, applying functions to cases of empty and non-empty arrays.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const matchLeft = Array.matchLeft({\n   *   onEmpty: () => \"empty\",\n   *   onNonEmpty: (head, tail) => `head: ${head}, tail: ${tail.length}`\n   * })\n   * console.log(matchLeft([])) // \"empty\"\n   * console.log(matchLeft([1, 2, 3])) // \"head: 1, tail: 2\"\n   * ```\n   *\n   * @category pattern matching\n   * @since 2.0.0\n   */\n  <B, A, C = B>(\n    options: {\n      readonly onEmpty: LazyArg<B>\n      readonly onNonEmpty: (head: A, tail: Array<A>) => C\n    }\n  ): (self: ReadonlyArray<A>) => B | C\n  /**\n   * Matches the elements of an array from the left, applying functions to cases of empty and non-empty arrays.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const matchLeft = Array.matchLeft({\n   *   onEmpty: () => \"empty\",\n   *   onNonEmpty: (head, tail) => `head: ${head}, tail: ${tail.length}`\n   * })\n   * console.log(matchLeft([])) // \"empty\"\n   * console.log(matchLeft([1, 2, 3])) // \"head: 1, tail: 2\"\n   * ```\n   *\n   * @category pattern matching\n   * @since 2.0.0\n   */\n  <A, B, C = B>(\n    self: ReadonlyArray<A>,\n    options: {\n      readonly onEmpty: LazyArg<B>\n      readonly onNonEmpty: (head: A, tail: Array<A>) => C\n    }\n  ): B | C\n} = dual(2, <A, B, C = B>(\n  self: ReadonlyArray<A>,\n  { onEmpty, onNonEmpty }: {\n    readonly onEmpty: LazyArg<B>\n    readonly onNonEmpty: (head: A, tail: Array<A>) => C\n  }\n): B | C => isNonEmptyReadonlyArray(self) ? onNonEmpty(headNonEmpty(self), tailNonEmpty(self)) : onEmpty())\n\n/**\n * Matches the elements of an array from the right, applying functions to cases of empty and non-empty arrays.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const matchRight = Array.matchRight({\n *   onEmpty: () => \"empty\",\n *   onNonEmpty: (init, last) => `init: ${init.length}, last: ${last}`\n * })\n * console.log(matchRight([])) // \"empty\"\n * console.log(matchRight([1, 2, 3])) // \"init: 2, last: 3\"\n * ```\n *\n * @category pattern matching\n * @since 2.0.0\n */\nexport const matchRight: {\n  /**\n   * Matches the elements of an array from the right, applying functions to cases of empty and non-empty arrays.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const matchRight = Array.matchRight({\n   *   onEmpty: () => \"empty\",\n   *   onNonEmpty: (init, last) => `init: ${init.length}, last: ${last}`\n   * })\n   * console.log(matchRight([])) // \"empty\"\n   * console.log(matchRight([1, 2, 3])) // \"init: 2, last: 3\"\n   * ```\n   *\n   * @category pattern matching\n   * @since 2.0.0\n   */\n  <B, A, C = B>(\n    options: {\n      readonly onEmpty: LazyArg<B>\n      readonly onNonEmpty: (init: Array<A>, last: A) => C\n    }\n  ): (self: ReadonlyArray<A>) => B | C\n  /**\n   * Matches the elements of an array from the right, applying functions to cases of empty and non-empty arrays.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const matchRight = Array.matchRight({\n   *   onEmpty: () => \"empty\",\n   *   onNonEmpty: (init, last) => `init: ${init.length}, last: ${last}`\n   * })\n   * console.log(matchRight([])) // \"empty\"\n   * console.log(matchRight([1, 2, 3])) // \"init: 2, last: 3\"\n   * ```\n   *\n   * @category pattern matching\n   * @since 2.0.0\n   */\n  <A, B, C = B>(\n    self: ReadonlyArray<A>,\n    options: {\n      readonly onEmpty: LazyArg<B>\n      readonly onNonEmpty: (init: Array<A>, last: A) => C\n    }\n  ): B | C\n} = dual(2, <A, B, C = B>(\n  self: ReadonlyArray<A>,\n  { onEmpty, onNonEmpty }: {\n    readonly onEmpty: LazyArg<B>\n    readonly onNonEmpty: (init: Array<A>, last: A) => C\n  }\n): B | C =>\n  isNonEmptyReadonlyArray(self) ?\n    onNonEmpty(initNonEmpty(self), lastNonEmpty(self)) :\n    onEmpty())\n\n/**\n * Prepend an element to the front of an `Iterable`, creating a new `NonEmptyArray`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.prepend([2, 3, 4], 1)\n * console.log(result) // [1, 2, 3, 4]\n * ```\n *\n * @category concatenating\n * @since 2.0.0\n */\nexport const prepend: {\n  /**\n   * Prepend an element to the front of an `Iterable`, creating a new `NonEmptyArray`.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.prepend([2, 3, 4], 1)\n   * console.log(result) // [1, 2, 3, 4]\n   * ```\n   *\n   * @category concatenating\n   * @since 2.0.0\n   */\n  <B>(head: B): <A>(self: Iterable<A>) => NonEmptyArray<A | B>\n  /**\n   * Prepend an element to the front of an `Iterable`, creating a new `NonEmptyArray`.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.prepend([2, 3, 4], 1)\n   * console.log(result) // [1, 2, 3, 4]\n   * ```\n   *\n   * @category concatenating\n   * @since 2.0.0\n   */\n  <A, B>(self: Iterable<A>, head: B): NonEmptyArray<A | B>\n} = dual(2, <A, B>(self: Iterable<A>, head: B): NonEmptyArray<A | B> => [head, ...self])\n\n/**\n * Prepends the specified prefix array (or iterable) to the beginning of the specified array (or iterable).\n * If either array is non-empty, the result is also a non-empty array.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.prependAll([2, 3], [0, 1])\n * console.log(result) // [0, 1, 2, 3]\n * ```\n *\n * @category concatenating\n * @since 2.0.0\n */\nexport const prependAll: {\n  /**\n   * Prepends the specified prefix array (or iterable) to the beginning of the specified array (or iterable).\n   * If either array is non-empty, the result is also a non-empty array.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.prependAll([2, 3], [0, 1])\n   * console.log(result) // [0, 1, 2, 3]\n   * ```\n   *\n   * @category concatenating\n   * @since 2.0.0\n   */\n  <S extends Iterable<any>, T extends Iterable<any>>(that: T): (self: S) => ReadonlyArray.OrNonEmpty<S, T, ReadonlyArray.Infer<S> | ReadonlyArray.Infer<T>>\n  /**\n   * Prepends the specified prefix array (or iterable) to the beginning of the specified array (or iterable).\n   * If either array is non-empty, the result is also a non-empty array.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.prependAll([2, 3], [0, 1])\n   * console.log(result) // [0, 1, 2, 3]\n   * ```\n   *\n   * @category concatenating\n   * @since 2.0.0\n   */\n  <A, B>(self: Iterable<A>, that: NonEmptyReadonlyArray<B>): NonEmptyArray<A | B>\n  /**\n   * Prepends the specified prefix array (or iterable) to the beginning of the specified array (or iterable).\n   * If either array is non-empty, the result is also a non-empty array.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.prependAll([2, 3], [0, 1])\n   * console.log(result) // [0, 1, 2, 3]\n   * ```\n   *\n   * @category concatenating\n   * @since 2.0.0\n   */\n  <A, B>(self: NonEmptyReadonlyArray<A>, that: Iterable<B>): NonEmptyArray<A | B>\n  /**\n   * Prepends the specified prefix array (or iterable) to the beginning of the specified array (or iterable).\n   * If either array is non-empty, the result is also a non-empty array.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.prependAll([2, 3], [0, 1])\n   * console.log(result) // [0, 1, 2, 3]\n   * ```\n   *\n   * @category concatenating\n   * @since 2.0.0\n   */\n  <A, B>(self: Iterable<A>, that: Iterable<B>): Array<A | B>\n} = dual(\n  2,\n  <A>(self: Iterable<A>, that: Iterable<A>): Array<A> => fromIterable(that).concat(fromIterable(self))\n)\n\n/**\n * Append an element to the end of an `Iterable`, creating a new `NonEmptyArray`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.append([1, 2, 3], 4);\n * console.log(result) // [1, 2, 3, 4]\n * ```\n *\n * @category concatenating\n * @since 2.0.0\n */\nexport const append: {\n  /**\n   * Append an element to the end of an `Iterable`, creating a new `NonEmptyArray`.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.append([1, 2, 3], 4);\n   * console.log(result) // [1, 2, 3, 4]\n   * ```\n   *\n   * @category concatenating\n   * @since 2.0.0\n   */\n  <B>(last: B): <A>(self: Iterable<A>) => NonEmptyArray<A | B>\n  /**\n   * Append an element to the end of an `Iterable`, creating a new `NonEmptyArray`.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.append([1, 2, 3], 4);\n   * console.log(result) // [1, 2, 3, 4]\n   * ```\n   *\n   * @category concatenating\n   * @since 2.0.0\n   */\n  <A, B>(self: Iterable<A>, last: B): NonEmptyArray<A | B>\n} = dual(2, <A, B>(self: Iterable<A>, last: B): Array<A | B> => [...self, last])\n\n/**\n * Concatenates two arrays (or iterables), combining their elements.\n * If either array is non-empty, the result is also a non-empty array.\n *\n * @category concatenating\n * @since 2.0.0\n */\nexport const appendAll: {\n  /**\n   * Concatenates two arrays (or iterables), combining their elements.\n   * If either array is non-empty, the result is also a non-empty array.\n   *\n   * @category concatenating\n   * @since 2.0.0\n   */\n  <S extends Iterable<any>, T extends Iterable<any>>(that: T): (self: S) => ReadonlyArray.OrNonEmpty<S, T, ReadonlyArray.Infer<S> | ReadonlyArray.Infer<T>>\n  /**\n   * Concatenates two arrays (or iterables), combining their elements.\n   * If either array is non-empty, the result is also a non-empty array.\n   *\n   * @category concatenating\n   * @since 2.0.0\n   */\n  <A, B>(self: Iterable<A>, that: NonEmptyReadonlyArray<B>): NonEmptyArray<A | B>\n  /**\n   * Concatenates two arrays (or iterables), combining their elements.\n   * If either array is non-empty, the result is also a non-empty array.\n   *\n   * @category concatenating\n   * @since 2.0.0\n   */\n  <A, B>(self: NonEmptyReadonlyArray<A>, that: Iterable<B>): NonEmptyArray<A | B>\n  /**\n   * Concatenates two arrays (or iterables), combining their elements.\n   * If either array is non-empty, the result is also a non-empty array.\n   *\n   * @category concatenating\n   * @since 2.0.0\n   */\n  <A, B>(self: Iterable<A>, that: Iterable<B>): Array<A | B>\n} = dual(\n  2,\n  <A>(self: Iterable<A>, that: Iterable<A>): Array<A> => fromIterable(self).concat(fromIterable(that))\n)\n\n/**\n * Accumulates values from an `Iterable` starting from the left, storing\n * each intermediate result in an array. Useful for tracking the progression of\n * a value through a series of transformations.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\";\n *\n * const result = Array.scan([1, 2, 3, 4], 0, (acc, value) => acc + value)\n * console.log(result) // [0, 1, 3, 6, 10]\n *\n * // Explanation:\n * // This function starts with the initial value (0 in this case)\n * // and adds each element of the array to this accumulator one by one,\n * // keeping track of the cumulative sum after each addition.\n * // Each of these sums is captured in the resulting array.\n * ```\n *\n * @category folding\n * @since 2.0.0\n */\nexport const scan: {\n  /**\n   * Accumulates values from an `Iterable` starting from the left, storing\n   * each intermediate result in an array. Useful for tracking the progression of\n   * a value through a series of transformations.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\";\n   *\n   * const result = Array.scan([1, 2, 3, 4], 0, (acc, value) => acc + value)\n   * console.log(result) // [0, 1, 3, 6, 10]\n   *\n   * // Explanation:\n   * // This function starts with the initial value (0 in this case)\n   * // and adds each element of the array to this accumulator one by one,\n   * // keeping track of the cumulative sum after each addition.\n   * // Each of these sums is captured in the resulting array.\n   * ```\n   *\n   * @category folding\n   * @since 2.0.0\n   */\n  <B, A>(b: B, f: (b: B, a: A) => B): (self: Iterable<A>) => NonEmptyArray<B>\n  /**\n   * Accumulates values from an `Iterable` starting from the left, storing\n   * each intermediate result in an array. Useful for tracking the progression of\n   * a value through a series of transformations.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\";\n   *\n   * const result = Array.scan([1, 2, 3, 4], 0, (acc, value) => acc + value)\n   * console.log(result) // [0, 1, 3, 6, 10]\n   *\n   * // Explanation:\n   * // This function starts with the initial value (0 in this case)\n   * // and adds each element of the array to this accumulator one by one,\n   * // keeping track of the cumulative sum after each addition.\n   * // Each of these sums is captured in the resulting array.\n   * ```\n   *\n   * @category folding\n   * @since 2.0.0\n   */\n  <A, B>(self: Iterable<A>, b: B, f: (b: B, a: A) => B): NonEmptyArray<B>\n} = dual(3, <A, B>(self: Iterable<A>, b: B, f: (b: B, a: A) => B): NonEmptyArray<B> => {\n  const out: NonEmptyArray<B> = [b]\n  let i = 0\n  for (const a of self) {\n    out[i + 1] = f(out[i], a)\n    i++\n  }\n  return out\n})\n\n/**\n * Accumulates values from an `Iterable` starting from the right, storing\n * each intermediate result in an array. Useful for tracking the progression of\n * a value through a series of transformations.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\";\n *\n * const result = Array.scanRight([1, 2, 3, 4], 0, (acc, value) => acc + value)\n * console.log(result) // [10, 9, 7, 4, 0]\n * ```\n *\n * @category folding\n * @since 2.0.0\n */\nexport const scanRight: {\n  /**\n   * Accumulates values from an `Iterable` starting from the right, storing\n   * each intermediate result in an array. Useful for tracking the progression of\n   * a value through a series of transformations.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\";\n   *\n   * const result = Array.scanRight([1, 2, 3, 4], 0, (acc, value) => acc + value)\n   * console.log(result) // [10, 9, 7, 4, 0]\n   * ```\n   *\n   * @category folding\n   * @since 2.0.0\n   */\n  <B, A>(b: B, f: (b: B, a: A) => B): (self: Iterable<A>) => NonEmptyArray<B>\n  /**\n   * Accumulates values from an `Iterable` starting from the right, storing\n   * each intermediate result in an array. Useful for tracking the progression of\n   * a value through a series of transformations.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\";\n   *\n   * const result = Array.scanRight([1, 2, 3, 4], 0, (acc, value) => acc + value)\n   * console.log(result) // [10, 9, 7, 4, 0]\n   * ```\n   *\n   * @category folding\n   * @since 2.0.0\n   */\n  <A, B>(self: Iterable<A>, b: B, f: (b: B, a: A) => B): NonEmptyArray<B>\n} = dual(3, <A, B>(self: Iterable<A>, b: B, f: (b: B, a: A) => B): NonEmptyArray<B> => {\n  const input = fromIterable(self)\n  const out: NonEmptyArray<B> = new Array(input.length + 1) as any\n  out[input.length] = b\n  for (let i = input.length - 1; i >= 0; i--) {\n    out[i] = f(out[i + 1], input[i])\n  }\n  return out\n})\n\n/**\n * Determine if `unknown` is an Array.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * console.log(Array.isArray(null)) // false\n * console.log(Array.isArray([1, 2, 3])) // true\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isArray: {\n  /**\n   * Determine if `unknown` is an Array.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * console.log(Array.isArray(null)) // false\n   * console.log(Array.isArray([1, 2, 3])) // true\n   * ```\n   *\n   * @category guards\n   * @since 2.0.0\n   */\n  (self: unknown): self is Array<unknown>\n  /**\n   * Determine if `unknown` is an Array.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * console.log(Array.isArray(null)) // false\n   * console.log(Array.isArray([1, 2, 3])) // true\n   * ```\n   *\n   * @category guards\n   * @since 2.0.0\n   */\n  <T>(self: T): self is Extract<T, ReadonlyArray<any>>\n} = Array.isArray\n\n/**\n * Determine if an `Array` is empty narrowing down the type to `[]`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * console.log(Array.isEmptyArray([])) // true\n * console.log(Array.isEmptyArray([1, 2, 3])) // false\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isEmptyArray = <A>(self: Array<A>): self is [] => self.length === 0\n\n/**\n * Determine if a `ReadonlyArray` is empty narrowing down the type to `readonly []`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * console.log(Array.isEmptyReadonlyArray([])) // true\n * console.log(Array.isEmptyReadonlyArray([1, 2, 3])) // false\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isEmptyReadonlyArray: <A>(self: ReadonlyArray<A>) => self is readonly [] = isEmptyArray as any\n\n/**\n * Determine if an `Array` is non empty narrowing down the type to `NonEmptyArray`.\n *\n * An `Array` is considered to be a `NonEmptyArray` if it contains at least one element.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * console.log(Array.isNonEmptyArray([])) // false\n * console.log(Array.isNonEmptyArray([1, 2, 3])) // true\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isNonEmptyArray: <A>(self: Array<A>) => self is NonEmptyArray<A> = internalArray.isNonEmptyArray\n\n/**\n * Determine if a `ReadonlyArray` is non empty narrowing down the type to `NonEmptyReadonlyArray`.\n *\n * A `ReadonlyArray` is considered to be a `NonEmptyReadonlyArray` if it contains at least one element.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * console.log(Array.isNonEmptyReadonlyArray([])) // false\n * console.log(Array.isNonEmptyReadonlyArray([1, 2, 3])) // true\n * ```\n *\n * @category guards\n * @since 2.0.0\n */\nexport const isNonEmptyReadonlyArray: <A>(self: ReadonlyArray<A>) => self is NonEmptyReadonlyArray<A> =\n  internalArray.isNonEmptyArray\n\n/**\n * Return the number of elements in a `ReadonlyArray`.\n *\n * @category getters\n * @since 2.0.0\n */\nexport const length = <A>(self: ReadonlyArray<A>): number => self.length\n\nconst isOutOfBounds = <A>(i: number, as: ReadonlyArray<A>): boolean => i < 0 || i >= as.length\n\nconst clamp = <A>(i: number, as: ReadonlyArray<A>): number => Math.floor(Math.min(Math.max(0, i), as.length))\n\n/**\n * This function provides a safe way to read a value at a particular index from a `ReadonlyArray`.\n *\n * @category getters\n * @since 2.0.0\n */\nexport const get: {\n  /**\n   * This function provides a safe way to read a value at a particular index from a `ReadonlyArray`.\n   *\n   * @category getters\n   * @since 2.0.0\n   */\n  (index: number): <A>(self: ReadonlyArray<A>) => Option.Option<A>\n  /**\n   * This function provides a safe way to read a value at a particular index from a `ReadonlyArray`.\n   *\n   * @category getters\n   * @since 2.0.0\n   */\n  <A>(self: ReadonlyArray<A>, index: number): Option.Option<A>\n} = dual(2, <A>(self: ReadonlyArray<A>, index: number): Option.Option<A> => {\n  const i = Math.floor(index)\n  return isOutOfBounds(i, self) ? Option.none() : Option.some(self[i])\n})\n\n/**\n * Gets an element unsafely, will throw on out of bounds.\n *\n * @since 2.0.0\n * @category unsafe\n */\nexport const unsafeGet: {\n  /**\n   * Gets an element unsafely, will throw on out of bounds.\n   *\n   * @since 2.0.0\n   * @category unsafe\n   */\n  (index: number): <A>(self: ReadonlyArray<A>) => A\n  /**\n   * Gets an element unsafely, will throw on out of bounds.\n   *\n   * @since 2.0.0\n   * @category unsafe\n   */\n  <A>(self: ReadonlyArray<A>, index: number): A\n} = dual(2, <A>(self: ReadonlyArray<A>, index: number): A => {\n  const i = Math.floor(index)\n  if (isOutOfBounds(i, self)) {\n    throw new Error(`Index ${i} out of bounds`)\n  }\n  return self[i]\n})\n\n/**\n * Return a tuple containing the first element, and a new `Array` of the remaining elements, if any.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\";\n *\n * const result = Array.unprepend([1, 2, 3, 4])\n * console.log(result) // [1, [2, 3, 4]]\n * ```\n *\n * @category splitting\n * @since 2.0.0\n */\nexport const unprepend = <A>(\n  self: NonEmptyReadonlyArray<A>\n): [firstElement: A, remainingElements: Array<A>] => [headNonEmpty(self), tailNonEmpty(self)]\n\n/**\n * Return a tuple containing a copy of the `NonEmptyReadonlyArray` without its last element, and that last element.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\";\n *\n * const result = Array.unappend([1, 2, 3, 4])\n * console.log(result) // [[1, 2, 3], 4]\n * ```\n *\n * @category splitting\n * @since 2.0.0\n */\nexport const unappend = <A>(\n  self: NonEmptyReadonlyArray<A>\n): [arrayWithoutLastElement: Array<A>, lastElement: A] => [initNonEmpty(self), lastNonEmpty(self)]\n\n/**\n * Get the first element of a `ReadonlyArray`, or `None` if the `ReadonlyArray` is empty.\n *\n * @category getters\n * @since 2.0.0\n */\nexport const head: <A>(self: ReadonlyArray<A>) => Option.Option<A> = get(0)\n\n/**\n * Get the first element of a non empty array.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.headNonEmpty([1, 2, 3, 4])\n * console.log(result) // 1\n * ```\n *\n * @category getters\n * @since 2.0.0\n */\nexport const headNonEmpty: <A>(self: NonEmptyReadonlyArray<A>) => A = unsafeGet(0)\n\n/**\n * Get the last element in a `ReadonlyArray`, or `None` if the `ReadonlyArray` is empty.\n *\n * @category getters\n * @since 2.0.0\n */\nexport const last = <A>(self: ReadonlyArray<A>): Option.Option<A> =>\n  isNonEmptyReadonlyArray(self) ? Option.some(lastNonEmpty(self)) : Option.none()\n\n/**\n * Get the last element of a non empty array.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.lastNonEmpty([1, 2, 3, 4])\n * console.log(result) // 4\n * ```\n *\n * @category getters\n * @since 2.0.0\n */\nexport const lastNonEmpty = <A>(self: NonEmptyReadonlyArray<A>): A => self[self.length - 1]\n\n/**\n * Get all but the first element of an `Iterable`, creating a new `Array`, or `None` if the `Iterable` is empty.\n *\n * @category getters\n * @since 2.0.0\n */\nexport const tail = <A>(self: Iterable<A>): Option.Option<Array<A>> => {\n  const input = fromIterable(self)\n  return isNonEmptyReadonlyArray(input) ? Option.some(tailNonEmpty(input)) : Option.none()\n}\n\n/**\n * Get all but the first element of a `NonEmptyReadonlyArray`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.tailNonEmpty([1, 2, 3, 4])\n * console.log(result) // [2, 3, 4]\n * ```\n *\n * @category getters\n * @since 2.0.0\n */\nexport const tailNonEmpty = <A>(self: NonEmptyReadonlyArray<A>): Array<A> => self.slice(1)\n\n/**\n * Get all but the last element of an `Iterable`, creating a new `Array`, or `None` if the `Iterable` is empty.\n *\n * @category getters\n * @since 2.0.0\n */\nexport const init = <A>(self: Iterable<A>): Option.Option<Array<A>> => {\n  const input = fromIterable(self)\n  return isNonEmptyReadonlyArray(input) ? Option.some(initNonEmpty(input)) : Option.none()\n}\n\n/**\n * Get all but the last element of a non empty array, creating a new array.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.initNonEmpty([1, 2, 3, 4])\n * console.log(result) // [1, 2, 3]\n * ```\n *\n * @category getters\n * @since 2.0.0\n */\nexport const initNonEmpty = <A>(self: NonEmptyReadonlyArray<A>): Array<A> => self.slice(0, -1)\n\n/**\n * Keep only a max number of elements from the start of an `Iterable`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.take([1, 2, 3, 4, 5], 3)\n * console.log(result) // [1, 2, 3]\n * ```\n *\n * @category getters\n * @since 2.0.0\n */\nexport const take: {\n  /**\n   * Keep only a max number of elements from the start of an `Iterable`, creating a new `Array`.\n   *\n   * **Note**. `n` is normalized to a non negative integer.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.take([1, 2, 3, 4, 5], 3)\n   * console.log(result) // [1, 2, 3]\n   * ```\n   *\n   * @category getters\n   * @since 2.0.0\n   */\n  (n: number): <A>(self: Iterable<A>) => Array<A>\n  /**\n   * Keep only a max number of elements from the start of an `Iterable`, creating a new `Array`.\n   *\n   * **Note**. `n` is normalized to a non negative integer.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.take([1, 2, 3, 4, 5], 3)\n   * console.log(result) // [1, 2, 3]\n   * ```\n   *\n   * @category getters\n   * @since 2.0.0\n   */\n  <A>(self: Iterable<A>, n: number): Array<A>\n} = dual(2, <A>(self: Iterable<A>, n: number): Array<A> => {\n  const input = fromIterable(self)\n  return input.slice(0, clamp(n, input))\n})\n\n/**\n * Keep only a max number of elements from the end of an `Iterable`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.takeRight([1, 2, 3, 4, 5], 3)\n * console.log(result) // [3, 4, 5]\n * ```\n *\n * @category getters\n * @since 2.0.0\n */\nexport const takeRight: {\n  /**\n   * Keep only a max number of elements from the end of an `Iterable`, creating a new `Array`.\n   *\n   * **Note**. `n` is normalized to a non negative integer.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.takeRight([1, 2, 3, 4, 5], 3)\n   * console.log(result) // [3, 4, 5]\n   * ```\n   *\n   * @category getters\n   * @since 2.0.0\n   */\n  (n: number): <A>(self: Iterable<A>) => Array<A>\n  /**\n   * Keep only a max number of elements from the end of an `Iterable`, creating a new `Array`.\n   *\n   * **Note**. `n` is normalized to a non negative integer.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.takeRight([1, 2, 3, 4, 5], 3)\n   * console.log(result) // [3, 4, 5]\n   * ```\n   *\n   * @category getters\n   * @since 2.0.0\n   */\n  <A>(self: Iterable<A>, n: number): Array<A>\n} = dual(2, <A>(self: Iterable<A>, n: number): Array<A> => {\n  const input = fromIterable(self)\n  const i = clamp(n, input)\n  return i === 0 ? [] : input.slice(-i)\n})\n\n/**\n * Calculate the longest initial subarray for which all element satisfy the specified predicate, creating a new `Array`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.takeWhile([1, 3, 2, 4, 1, 2], x => x < 4)\n * console.log(result) // [1, 3, 2]\n *\n * // Explanation:\n * // - The function starts with the first element (`1`), which is less than `4`, so it adds `1` to the result.\n * // - The next element (`3`) is also less than `4`, so it adds `3`.\n * // - The next element (`2`) is again less than `4`, so it adds `2`.\n * // - The function then encounters `4`, which is not less than `4`. At this point, it stops checking further elements and finalizes the result.\n * ```\n *\n * @category getters\n * @since 2.0.0\n */\nexport const takeWhile: {\n  /**\n   * Calculate the longest initial subarray for which all element satisfy the specified predicate, creating a new `Array`.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.takeWhile([1, 3, 2, 4, 1, 2], x => x < 4)\n   * console.log(result) // [1, 3, 2]\n   *\n   * // Explanation:\n   * // - The function starts with the first element (`1`), which is less than `4`, so it adds `1` to the result.\n   * // - The next element (`3`) is also less than `4`, so it adds `3`.\n   * // - The next element (`2`) is again less than `4`, so it adds `2`.\n   * // - The function then encounters `4`, which is not less than `4`. At this point, it stops checking further elements and finalizes the result.\n   * ```\n   *\n   * @category getters\n   * @since 2.0.0\n   */\n  <A, B extends A>(refinement: (a: NoInfer<A>, i: number) => a is B): (self: Iterable<A>) => Array<B>\n  /**\n   * Calculate the longest initial subarray for which all element satisfy the specified predicate, creating a new `Array`.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.takeWhile([1, 3, 2, 4, 1, 2], x => x < 4)\n   * console.log(result) // [1, 3, 2]\n   *\n   * // Explanation:\n   * // - The function starts with the first element (`1`), which is less than `4`, so it adds `1` to the result.\n   * // - The next element (`3`) is also less than `4`, so it adds `3`.\n   * // - The next element (`2`) is again less than `4`, so it adds `2`.\n   * // - The function then encounters `4`, which is not less than `4`. At this point, it stops checking further elements and finalizes the result.\n   * ```\n   *\n   * @category getters\n   * @since 2.0.0\n   */\n  <A>(predicate: (a: NoInfer<A>, i: number) => boolean): (self: Iterable<A>) => Array<A>\n  /**\n   * Calculate the longest initial subarray for which all element satisfy the specified predicate, creating a new `Array`.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.takeWhile([1, 3, 2, 4, 1, 2], x => x < 4)\n   * console.log(result) // [1, 3, 2]\n   *\n   * // Explanation:\n   * // - The function starts with the first element (`1`), which is less than `4`, so it adds `1` to the result.\n   * // - The next element (`3`) is also less than `4`, so it adds `3`.\n   * // - The next element (`2`) is again less than `4`, so it adds `2`.\n   * // - The function then encounters `4`, which is not less than `4`. At this point, it stops checking further elements and finalizes the result.\n   * ```\n   *\n   * @category getters\n   * @since 2.0.0\n   */\n  <A, B extends A>(self: Iterable<A>, refinement: (a: A, i: number) => a is B): Array<B>\n  /**\n   * Calculate the longest initial subarray for which all element satisfy the specified predicate, creating a new `Array`.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.takeWhile([1, 3, 2, 4, 1, 2], x => x < 4)\n   * console.log(result) // [1, 3, 2]\n   *\n   * // Explanation:\n   * // - The function starts with the first element (`1`), which is less than `4`, so it adds `1` to the result.\n   * // - The next element (`3`) is also less than `4`, so it adds `3`.\n   * // - The next element (`2`) is again less than `4`, so it adds `2`.\n   * // - The function then encounters `4`, which is not less than `4`. At this point, it stops checking further elements and finalizes the result.\n   * ```\n   *\n   * @category getters\n   * @since 2.0.0\n   */\n  <A>(self: Iterable<A>, predicate: (a: A, i: number) => boolean): Array<A>\n} = dual(2, <A>(self: Iterable<A>, predicate: (a: A, i: number) => boolean): Array<A> => {\n  let i = 0\n  const out: Array<A> = []\n  for (const a of self) {\n    if (!predicate(a, i)) {\n      break\n    }\n    out.push(a)\n    i++\n  }\n  return out\n})\n\nconst spanIndex = <A>(self: Iterable<A>, predicate: (a: A, i: number) => boolean): number => {\n  let i = 0\n  for (const a of self) {\n    if (!predicate(a, i)) {\n      break\n    }\n    i++\n  }\n  return i\n}\n\n/**\n * Split an `Iterable` into two parts:\n *\n * 1. the longest initial subarray for which all elements satisfy the specified predicate\n * 2. the remaining elements\n *\n * @category splitting\n * @since 2.0.0\n */\nexport const span: {\n  /**\n   * Split an `Iterable` into two parts:\n   *\n   * 1. the longest initial subarray for which all elements satisfy the specified predicate\n   * 2. the remaining elements\n   *\n   * @category splitting\n   * @since 2.0.0\n   */\n  <A, B extends A>(refinement: (a: NoInfer<A>, i: number) => a is B): (self: Iterable<A>) => [init: Array<B>, rest: Array<Exclude<A, B>>]\n  /**\n   * Split an `Iterable` into two parts:\n   *\n   * 1. the longest initial subarray for which all elements satisfy the specified predicate\n   * 2. the remaining elements\n   *\n   * @category splitting\n   * @since 2.0.0\n   */\n  <A>(predicate: (a: NoInfer<A>, i: number) => boolean): (self: Iterable<A>) => [init: Array<A>, rest: Array<A>]\n  /**\n   * Split an `Iterable` into two parts:\n   *\n   * 1. the longest initial subarray for which all elements satisfy the specified predicate\n   * 2. the remaining elements\n   *\n   * @category splitting\n   * @since 2.0.0\n   */\n  <A, B extends A>(self: Iterable<A>, refinement: (a: A, i: number) => a is B): [init: Array<B>, rest: Array<Exclude<A, B>>]\n  /**\n   * Split an `Iterable` into two parts:\n   *\n   * 1. the longest initial subarray for which all elements satisfy the specified predicate\n   * 2. the remaining elements\n   *\n   * @category splitting\n   * @since 2.0.0\n   */\n  <A>(self: Iterable<A>, predicate: (a: A, i: number) => boolean): [init: Array<A>, rest: Array<A>]\n} = dual(\n  2,\n  <A>(self: Iterable<A>, predicate: (a: A, i: number) => boolean): [init: Array<A>, rest: Array<A>] =>\n    splitAt(self, spanIndex(self, predicate))\n)\n\n/**\n * Drop a max number of elements from the start of an `Iterable`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.drop([1, 2, 3, 4, 5], 2)\n * console.log(result) // [3, 4, 5]\n * ```\n *\n * @category getters\n * @since 2.0.0\n */\nexport const drop: {\n  /**\n   * Drop a max number of elements from the start of an `Iterable`, creating a new `Array`.\n   *\n   * **Note**. `n` is normalized to a non negative integer.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.drop([1, 2, 3, 4, 5], 2)\n   * console.log(result) // [3, 4, 5]\n   * ```\n   *\n   * @category getters\n   * @since 2.0.0\n   */\n  (n: number): <A>(self: Iterable<A>) => Array<A>\n  /**\n   * Drop a max number of elements from the start of an `Iterable`, creating a new `Array`.\n   *\n   * **Note**. `n` is normalized to a non negative integer.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.drop([1, 2, 3, 4, 5], 2)\n   * console.log(result) // [3, 4, 5]\n   * ```\n   *\n   * @category getters\n   * @since 2.0.0\n   */\n  <A>(self: Iterable<A>, n: number): Array<A>\n} = dual(2, <A>(self: Iterable<A>, n: number): Array<A> => {\n  const input = fromIterable(self)\n  return input.slice(clamp(n, input), input.length)\n})\n\n/**\n * Drop a max number of elements from the end of an `Iterable`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.dropRight([1, 2, 3, 4, 5], 2)\n * console.log(result) // [1, 2, 3]\n * ```\n *\n * @category getters\n * @since 2.0.0\n */\nexport const dropRight: {\n  /**\n   * Drop a max number of elements from the end of an `Iterable`, creating a new `Array`.\n   *\n   * **Note**. `n` is normalized to a non negative integer.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.dropRight([1, 2, 3, 4, 5], 2)\n   * console.log(result) // [1, 2, 3]\n   * ```\n   *\n   * @category getters\n   * @since 2.0.0\n   */\n  (n: number): <A>(self: Iterable<A>) => Array<A>\n  /**\n   * Drop a max number of elements from the end of an `Iterable`, creating a new `Array`.\n   *\n   * **Note**. `n` is normalized to a non negative integer.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.dropRight([1, 2, 3, 4, 5], 2)\n   * console.log(result) // [1, 2, 3]\n   * ```\n   *\n   * @category getters\n   * @since 2.0.0\n   */\n  <A>(self: Iterable<A>, n: number): Array<A>\n} = dual(2, <A>(self: Iterable<A>, n: number): Array<A> => {\n  const input = fromIterable(self)\n  return input.slice(0, input.length - clamp(n, input))\n})\n\n/**\n * Remove the longest initial subarray for which all element satisfy the specified predicate, creating a new `Array`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.dropWhile([1, 2, 3, 4, 5], x => x < 4)\n * console.log(result) // [4, 5]\n * ```\n *\n * @category getters\n * @since 2.0.0\n */\nexport const dropWhile: {\n  /**\n   * Remove the longest initial subarray for which all element satisfy the specified predicate, creating a new `Array`.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.dropWhile([1, 2, 3, 4, 5], x => x < 4)\n   * console.log(result) // [4, 5]\n   * ```\n   *\n   * @category getters\n   * @since 2.0.0\n   */\n  <A>(predicate: (a: NoInfer<A>, i: number) => boolean): (self: Iterable<A>) => Array<A>\n  /**\n   * Remove the longest initial subarray for which all element satisfy the specified predicate, creating a new `Array`.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.dropWhile([1, 2, 3, 4, 5], x => x < 4)\n   * console.log(result) // [4, 5]\n   * ```\n   *\n   * @category getters\n   * @since 2.0.0\n   */\n  <A>(self: Iterable<A>, predicate: (a: A, i: number) => boolean): Array<A>\n} = dual(\n  2,\n  <A>(self: Iterable<A>, predicate: (a: A, i: number) => boolean): Array<A> =>\n    fromIterable(self).slice(spanIndex(self, predicate))\n)\n\n/**\n * Return the first index for which a predicate holds.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.findFirstIndex([5, 3, 8, 9], x => x > 5)\n * console.log(result) // Option.some(2)\n * ```\n *\n * @category elements\n * @since 2.0.0\n */\nexport const findFirstIndex: {\n  /**\n   * Return the first index for which a predicate holds.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.findFirstIndex([5, 3, 8, 9], x => x > 5)\n   * console.log(result) // Option.some(2)\n   * ```\n   *\n   * @category elements\n   * @since 2.0.0\n   */\n  <A>(predicate: (a: NoInfer<A>, i: number) => boolean): (self: Iterable<A>) => Option.Option<number>\n  /**\n   * Return the first index for which a predicate holds.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.findFirstIndex([5, 3, 8, 9], x => x > 5)\n   * console.log(result) // Option.some(2)\n   * ```\n   *\n   * @category elements\n   * @since 2.0.0\n   */\n  <A>(self: Iterable<A>, predicate: (a: A, i: number) => boolean): Option.Option<number>\n} = dual(2, <A>(self: Iterable<A>, predicate: (a: A, i: number) => boolean): Option.Option<number> => {\n  let i = 0\n  for (const a of self) {\n    if (predicate(a, i)) {\n      return Option.some(i)\n    }\n    i++\n  }\n  return Option.none()\n})\n\n/**\n * Return the last index for which a predicate holds.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.findLastIndex([1, 3, 8, 9], x => x < 5)\n * console.log(result) // Option.some(1)\n * ```\n *\n * @category elements\n * @since 2.0.0\n */\nexport const findLastIndex: {\n  /**\n   * Return the last index for which a predicate holds.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.findLastIndex([1, 3, 8, 9], x => x < 5)\n   * console.log(result) // Option.some(1)\n   * ```\n   *\n   * @category elements\n   * @since 2.0.0\n   */\n  <A>(predicate: (a: NoInfer<A>, i: number) => boolean): (self: Iterable<A>) => Option.Option<number>\n  /**\n   * Return the last index for which a predicate holds.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.findLastIndex([1, 3, 8, 9], x => x < 5)\n   * console.log(result) // Option.some(1)\n   * ```\n   *\n   * @category elements\n   * @since 2.0.0\n   */\n  <A>(self: Iterable<A>, predicate: (a: A, i: number) => boolean): Option.Option<number>\n} = dual(2, <A>(self: Iterable<A>, predicate: (a: A, i: number) => boolean): Option.Option<number> => {\n  const input = fromIterable(self)\n  for (let i = input.length - 1; i >= 0; i--) {\n    if (predicate(input[i], i)) {\n      return Option.some(i)\n    }\n  }\n  return Option.none()\n})\n\n/**\n * Returns the first element that satisfies the specified\n * predicate, or `None` if no such element exists.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.findFirst([1, 2, 3, 4, 5], x => x > 3)\n * console.log(result) // Option.some(4)\n * ```\n *\n * @category elements\n * @since 2.0.0\n */\nexport const findFirst: {\n  /**\n   * Returns the first element that satisfies the specified\n   * predicate, or `None` if no such element exists.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.findFirst([1, 2, 3, 4, 5], x => x > 3)\n   * console.log(result) // Option.some(4)\n   * ```\n   *\n   * @category elements\n   * @since 2.0.0\n   */\n  <A, B>(f: (a: NoInfer<A>, i: number) => Option.Option<B>): (self: Iterable<A>) => Option.Option<B>\n  /**\n   * Returns the first element that satisfies the specified\n   * predicate, or `None` if no such element exists.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.findFirst([1, 2, 3, 4, 5], x => x > 3)\n   * console.log(result) // Option.some(4)\n   * ```\n   *\n   * @category elements\n   * @since 2.0.0\n   */\n  <A, B extends A>(refinement: (a: NoInfer<A>, i: number) => a is B): (self: Iterable<A>) => Option.Option<B>\n  /**\n   * Returns the first element that satisfies the specified\n   * predicate, or `None` if no such element exists.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.findFirst([1, 2, 3, 4, 5], x => x > 3)\n   * console.log(result) // Option.some(4)\n   * ```\n   *\n   * @category elements\n   * @since 2.0.0\n   */\n  <A>(predicate: (a: NoInfer<A>, i: number) => boolean): (self: Iterable<A>) => Option.Option<A>\n  /**\n   * Returns the first element that satisfies the specified\n   * predicate, or `None` if no such element exists.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.findFirst([1, 2, 3, 4, 5], x => x > 3)\n   * console.log(result) // Option.some(4)\n   * ```\n   *\n   * @category elements\n   * @since 2.0.0\n   */\n  <A, B>(self: Iterable<A>, f: (a: A, i: number) => Option.Option<B>): Option.Option<B>\n  /**\n   * Returns the first element that satisfies the specified\n   * predicate, or `None` if no such element exists.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.findFirst([1, 2, 3, 4, 5], x => x > 3)\n   * console.log(result) // Option.some(4)\n   * ```\n   *\n   * @category elements\n   * @since 2.0.0\n   */\n  <A, B extends A>(self: Iterable<A>, refinement: (a: A, i: number) => a is B): Option.Option<B>\n  /**\n   * Returns the first element that satisfies the specified\n   * predicate, or `None` if no such element exists.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.findFirst([1, 2, 3, 4, 5], x => x > 3)\n   * console.log(result) // Option.some(4)\n   * ```\n   *\n   * @category elements\n   * @since 2.0.0\n   */\n  <A>(self: Iterable<A>, predicate: (a: A, i: number) => boolean): Option.Option<A>\n} = moduleIterable.findFirst\n\n/**\n * Finds the last element in an iterable collection that satisfies the given predicate or refinement.\n * Returns an `Option` containing the found element, or `Option.none` if no element matches.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.findLast([1, 2, 3, 4, 5], n => n % 2 === 0)\n * console.log(result) // Option.some(4)\n * ```\n *\n * @category elements\n * @since 2.0.0\n */\nexport const findLast: {\n  /**\n   * Finds the last element in an iterable collection that satisfies the given predicate or refinement.\n   * Returns an `Option` containing the found element, or `Option.none` if no element matches.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.findLast([1, 2, 3, 4, 5], n => n % 2 === 0)\n   * console.log(result) // Option.some(4)\n   * ```\n   *\n   * @category elements\n   * @since 2.0.0\n   */\n  <A, B>(f: (a: NoInfer<A>, i: number) => Option.Option<B>): (self: Iterable<A>) => Option.Option<B>\n  /**\n   * Finds the last element in an iterable collection that satisfies the given predicate or refinement.\n   * Returns an `Option` containing the found element, or `Option.none` if no element matches.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.findLast([1, 2, 3, 4, 5], n => n % 2 === 0)\n   * console.log(result) // Option.some(4)\n   * ```\n   *\n   * @category elements\n   * @since 2.0.0\n   */\n  <A, B extends A>(refinement: (a: NoInfer<A>, i: number) => a is B): (self: Iterable<A>) => Option.Option<B>\n  /**\n   * Finds the last element in an iterable collection that satisfies the given predicate or refinement.\n   * Returns an `Option` containing the found element, or `Option.none` if no element matches.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.findLast([1, 2, 3, 4, 5], n => n % 2 === 0)\n   * console.log(result) // Option.some(4)\n   * ```\n   *\n   * @category elements\n   * @since 2.0.0\n   */\n  <A>(predicate: (a: NoInfer<A>, i: number) => boolean): (self: Iterable<A>) => Option.Option<A>\n  /**\n   * Finds the last element in an iterable collection that satisfies the given predicate or refinement.\n   * Returns an `Option` containing the found element, or `Option.none` if no element matches.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.findLast([1, 2, 3, 4, 5], n => n % 2 === 0)\n   * console.log(result) // Option.some(4)\n   * ```\n   *\n   * @category elements\n   * @since 2.0.0\n   */\n  <A, B>(self: Iterable<A>, f: (a: A, i: number) => Option.Option<B>): Option.Option<B>\n  /**\n   * Finds the last element in an iterable collection that satisfies the given predicate or refinement.\n   * Returns an `Option` containing the found element, or `Option.none` if no element matches.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.findLast([1, 2, 3, 4, 5], n => n % 2 === 0)\n   * console.log(result) // Option.some(4)\n   * ```\n   *\n   * @category elements\n   * @since 2.0.0\n   */\n  <A, B extends A>(self: Iterable<A>, refinement: (a: A, i: number) => a is B): Option.Option<B>\n  /**\n   * Finds the last element in an iterable collection that satisfies the given predicate or refinement.\n   * Returns an `Option` containing the found element, or `Option.none` if no element matches.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.findLast([1, 2, 3, 4, 5], n => n % 2 === 0)\n   * console.log(result) // Option.some(4)\n   * ```\n   *\n   * @category elements\n   * @since 2.0.0\n   */\n  <A>(self: Iterable<A>, predicate: (a: A, i: number) => boolean): Option.Option<A>\n} = dual(\n  2,\n  <A>(\n    self: Iterable<A>,\n    f: ((a: A, i: number) => boolean) | ((a: A, i: number) => Option.Option<A>)\n  ): Option.Option<A> => {\n    const input = fromIterable(self)\n    for (let i = input.length - 1; i >= 0; i--) {\n      const a = input[i]\n      const o = f(a, i)\n      if (Predicate.isBoolean(o)) {\n        if (o) {\n          return Option.some(a)\n        }\n      } else {\n        if (Option.isSome(o)) {\n          return o\n        }\n      }\n    }\n    return Option.none()\n  }\n)\n\n/**\n * Counts all the element of the given array that pass the given predicate\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.countBy([1, 2, 3, 4, 5], n => n % 2 === 0)\n * console.log(result) // 2\n * ```\n *\n * @category folding\n * @since 3.16.0\n */\nexport const countBy: {\n  /**\n   * Counts all the element of the given array that pass the given predicate\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.countBy([1, 2, 3, 4, 5], n => n % 2 === 0)\n   * console.log(result) // 2\n   * ```\n   *\n   * @category folding\n   * @since 3.16.0\n   */\n  <A>(predicate: (a: NoInfer<A>, i: number) => boolean): (self: Iterable<A>) => number\n  /**\n   * Counts all the element of the given array that pass the given predicate\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.countBy([1, 2, 3, 4, 5], n => n % 2 === 0)\n   * console.log(result) // 2\n   * ```\n   *\n   * @category folding\n   * @since 3.16.0\n   */\n  <A>(self: Iterable<A>, predicate: (a: A, i: number) => boolean): number\n} = dual(\n  2,\n  <A>(\n    self: Iterable<A>,\n    f: (a: A, i: number) => boolean\n  ): number => {\n    let count = 0\n    const as = fromIterable(self)\n    for (let i = 0; i < as.length; i++) {\n      const a = as[i]\n      if (f(a, i)) {\n        count++\n      }\n    }\n    return count\n  }\n)\n\n/**\n * Insert an element at the specified index, creating a new `NonEmptyArray`,\n * or return `None` if the index is out of bounds.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.insertAt(['a', 'b', 'c', 'e'], 3, 'd')\n * console.log(result) // Option.some(['a', 'b', 'c', 'd', 'e'])\n * ```\n *\n * @since 2.0.0\n */\nexport const insertAt: {\n  /**\n   * Insert an element at the specified index, creating a new `NonEmptyArray`,\n   * or return `None` if the index is out of bounds.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.insertAt(['a', 'b', 'c', 'e'], 3, 'd')\n   * console.log(result) // Option.some(['a', 'b', 'c', 'd', 'e'])\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <B>(i: number, b: B): <A>(self: Iterable<A>) => Option.Option<NonEmptyArray<A | B>>\n  /**\n   * Insert an element at the specified index, creating a new `NonEmptyArray`,\n   * or return `None` if the index is out of bounds.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.insertAt(['a', 'b', 'c', 'e'], 3, 'd')\n   * console.log(result) // Option.some(['a', 'b', 'c', 'd', 'e'])\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A, B>(self: Iterable<A>, i: number, b: B): Option.Option<NonEmptyArray<A | B>>\n} = dual(3, <A, B>(self: Iterable<A>, i: number, b: B): Option.Option<NonEmptyArray<A | B>> => {\n  const out: Array<A | B> = Array.from(self)\n  //             v--- `= self.length` is ok, it means inserting in last position\n  if (i < 0 || i > out.length) {\n    return Option.none()\n  }\n  out.splice(i, 0, b)\n  return Option.some(out) as any\n})\n\n/**\n * Change the element at the specified index, creating a new `Array`,\n * or return a copy of the input if the index is out of bounds.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.replace(['a', 'b', 'c', 'd'], 1, 'z')\n * console.log(result) // ['a', 'z', 'c', 'd']\n * ```\n *\n * @since 2.0.0\n */\nexport const replace: {\n  /**\n   * Change the element at the specified index, creating a new `Array`,\n   * or return a copy of the input if the index is out of bounds.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.replace(['a', 'b', 'c', 'd'], 1, 'z')\n   * console.log(result) // ['a', 'z', 'c', 'd']\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <B>(i: number, b: B): <A, S extends Iterable<A> = Iterable<A>>(\n    self: S\n  ) => ReadonlyArray.With<S, ReadonlyArray.Infer<S> | B>\n  /**\n   * Change the element at the specified index, creating a new `Array`,\n   * or return a copy of the input if the index is out of bounds.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.replace(['a', 'b', 'c', 'd'], 1, 'z')\n   * console.log(result) // ['a', 'z', 'c', 'd']\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A, B, S extends Iterable<A> = Iterable<A>>(self: S, i: number, b: B): ReadonlyArray.With<S, ReadonlyArray.Infer<S> | B>\n} = dual(3, <A, B>(self: Iterable<A>, i: number, b: B): Array<A | B> => modify(self, i, () => b))\n\n/**\n * Replaces an element in an array with the given value, returning an option of the updated array.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.replaceOption([1, 2, 3], 1, 4)\n * console.log(result) // Option.some([1, 4, 3])\n * ```\n *\n * @since 2.0.0\n */\nexport const replaceOption: {\n  /**\n   * Replaces an element in an array with the given value, returning an option of the updated array.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.replaceOption([1, 2, 3], 1, 4)\n   * console.log(result) // Option.some([1, 4, 3])\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <B>(i: number, b: B): <A, S extends Iterable<A> = Iterable<A>>(\n    self: S\n  ) => Option.Option<ReadonlyArray.With<S, ReadonlyArray.Infer<S> | B>>\n  /**\n   * Replaces an element in an array with the given value, returning an option of the updated array.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.replaceOption([1, 2, 3], 1, 4)\n   * console.log(result) // Option.some([1, 4, 3])\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A, B, S extends Iterable<A> = Iterable<A>>(self: S, i: number, b: B): Option.Option<ReadonlyArray.With<S, ReadonlyArray.Infer<S> | B>>\n} = dual(\n  3,\n  <A, B>(self: Iterable<A>, i: number, b: B): Option.Option<Array<A | B>> => modifyOption(self, i, () => b)\n)\n\n/**\n * Apply a function to the element at the specified index, creating a new `Array`,\n * or return a copy of the input if the index is out of bounds.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.modify([1, 2, 3, 4], 2, (n) => n * 2)\n * console.log(result) // [1, 2, 6, 4]\n * ```\n *\n * @since 2.0.0\n */\nexport const modify: {\n  /**\n   * Apply a function to the element at the specified index, creating a new `Array`,\n   * or return a copy of the input if the index is out of bounds.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.modify([1, 2, 3, 4], 2, (n) => n * 2)\n   * console.log(result) // [1, 2, 6, 4]\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A, B, S extends Iterable<A> = Iterable<A>>(i: number, f: (a: ReadonlyArray.Infer<S>) => B): (self: S) => ReadonlyArray.With<S, ReadonlyArray.Infer<S> | B>\n  /**\n   * Apply a function to the element at the specified index, creating a new `Array`,\n   * or return a copy of the input if the index is out of bounds.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.modify([1, 2, 3, 4], 2, (n) => n * 2)\n   * console.log(result) // [1, 2, 6, 4]\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A, B, S extends Iterable<A> = Iterable<A>>(self: S, i: number, f: (a: ReadonlyArray.Infer<S>) => B): ReadonlyArray.With<S, ReadonlyArray.Infer<S> | B>\n} = dual(\n  3,\n  <A, B>(self: Iterable<A>, i: number, f: (a: A) => B): Array<A | B> => {\n    const out: Array<A | B> = Array.from(self)\n    if (isOutOfBounds(i, out)) {\n      return out\n    }\n    const b = f(out[i] as A)\n    out[i] = b\n    return out\n  }\n)\n\n/**\n * Apply a function to the element at the specified index, creating a new `Array`,\n * or return `None` if the index is out of bounds.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const input = [1, 2, 3, 4]\n * const result = Array.modifyOption(input, 2, (n) => n * 2)\n * console.log(result) // Option.some([1, 2, 6, 4])\n *\n * const outOfBoundsResult = Array.modifyOption(input, 5, (n) => n * 2)\n * console.log(outOfBoundsResult) // Option.none()\n * ```\n *\n * @since 2.0.0\n */\nexport const modifyOption: {\n  /**\n   * Apply a function to the element at the specified index, creating a new `Array`,\n   * or return `None` if the index is out of bounds.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const input = [1, 2, 3, 4]\n   * const result = Array.modifyOption(input, 2, (n) => n * 2)\n   * console.log(result) // Option.some([1, 2, 6, 4])\n   *\n   * const outOfBoundsResult = Array.modifyOption(input, 5, (n) => n * 2)\n   * console.log(outOfBoundsResult) // Option.none()\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A, B, S extends Iterable<A> = Iterable<A>>(i: number, f: (a: ReadonlyArray.Infer<S>) => B): (self: S) => Option.Option<ReadonlyArray.With<S, ReadonlyArray.Infer<S> | B>>\n  /**\n   * Apply a function to the element at the specified index, creating a new `Array`,\n   * or return `None` if the index is out of bounds.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const input = [1, 2, 3, 4]\n   * const result = Array.modifyOption(input, 2, (n) => n * 2)\n   * console.log(result) // Option.some([1, 2, 6, 4])\n   *\n   * const outOfBoundsResult = Array.modifyOption(input, 5, (n) => n * 2)\n   * console.log(outOfBoundsResult) // Option.none()\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A, B, S extends Iterable<A> = Iterable<A>>(self: S, i: number, f: (a: ReadonlyArray.Infer<S>) => B): Option.Option<ReadonlyArray.With<S, ReadonlyArray.Infer<S> | B>>\n} = dual(3, <A, B>(self: Iterable<A>, i: number, f: (a: A) => B): Option.Option<Array<A | B>> => {\n  const arr = fromIterable(self)\n  if (isOutOfBounds(i, arr)) {\n    return Option.none()\n  }\n  const out: Array<A | B> = Array.isArray(self) ? self.slice() : arr\n  const b = f(arr[i])\n  out[i] = b\n  return Option.some(out)\n})\n\n/**\n * Delete the element at the specified index, creating a new `Array`,\n * or return a copy of the input if the index is out of bounds.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const input = [1, 2, 3, 4]\n * const result = Array.remove(input, 2)\n * console.log(result) // [1, 2, 4]\n *\n * const outOfBoundsResult = Array.remove(input, 5)\n * console.log(outOfBoundsResult) // [1, 2, 3, 4]\n * ```\n *\n * @since 2.0.0\n */\nexport const remove: {\n  /**\n   * Delete the element at the specified index, creating a new `Array`,\n   * or return a copy of the input if the index is out of bounds.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const input = [1, 2, 3, 4]\n   * const result = Array.remove(input, 2)\n   * console.log(result) // [1, 2, 4]\n   *\n   * const outOfBoundsResult = Array.remove(input, 5)\n   * console.log(outOfBoundsResult) // [1, 2, 3, 4]\n   * ```\n   *\n   * @since 2.0.0\n   */\n  (i: number): <A>(self: Iterable<A>) => Array<A>\n  /**\n   * Delete the element at the specified index, creating a new `Array`,\n   * or return a copy of the input if the index is out of bounds.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const input = [1, 2, 3, 4]\n   * const result = Array.remove(input, 2)\n   * console.log(result) // [1, 2, 4]\n   *\n   * const outOfBoundsResult = Array.remove(input, 5)\n   * console.log(outOfBoundsResult) // [1, 2, 3, 4]\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A>(self: Iterable<A>, i: number): Array<A>\n} = dual(2, <A>(self: Iterable<A>, i: number): Array<A> => {\n  const out = Array.from(self)\n  if (isOutOfBounds(i, out)) {\n    return out\n  }\n  out.splice(i, 1)\n  return out\n})\n\n/**\n * Delete the element at the specified index, creating a new `Array`,\n * or return `None` if the index is out of bounds.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Array, Option } from \"effect\"\n *\n * const numbers = [1, 2, 3, 4]\n * const result = Array.removeOption(numbers, 2)\n * assert.deepStrictEqual(result, Option.some([1, 2, 4]))\n *\n * const outOfBoundsResult = Array.removeOption(numbers, 5)\n * assert.deepStrictEqual(outOfBoundsResult, Option.none())\n * ```\n *\n * @since 3.16.0\n */\nexport const removeOption: {\n  /**\n   * Delete the element at the specified index, creating a new `Array`,\n   * or return `None` if the index is out of bounds.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Array, Option } from \"effect\"\n   *\n   * const numbers = [1, 2, 3, 4]\n   * const result = Array.removeOption(numbers, 2)\n   * assert.deepStrictEqual(result, Option.some([1, 2, 4]))\n   *\n   * const outOfBoundsResult = Array.removeOption(numbers, 5)\n   * assert.deepStrictEqual(outOfBoundsResult, Option.none())\n   * ```\n   *\n   * @since 3.16.0\n   */\n  (i: number): <A>(self: Iterable<A>) => Option.Option<Array<A>>\n  /**\n   * Delete the element at the specified index, creating a new `Array`,\n   * or return `None` if the index is out of bounds.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Array, Option } from \"effect\"\n   *\n   * const numbers = [1, 2, 3, 4]\n   * const result = Array.removeOption(numbers, 2)\n   * assert.deepStrictEqual(result, Option.some([1, 2, 4]))\n   *\n   * const outOfBoundsResult = Array.removeOption(numbers, 5)\n   * assert.deepStrictEqual(outOfBoundsResult, Option.none())\n   * ```\n   *\n   * @since 3.16.0\n   */\n  <A>(self: Iterable<A>, i: number): Option.Option<Array<A>>\n} = dual(2, <A>(self: Iterable<A>, i: number): Option.Option<Array<A>> => {\n  const arr = fromIterable(self)\n  if (isOutOfBounds(i, arr)) {\n    return Option.none()\n  }\n  const out = Array.isArray(self) ? self.slice() : arr\n  out.splice(i, 1)\n  return Option.some(out)\n})\n\n/**\n * Reverse an `Iterable`, creating a new `Array`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.reverse([1, 2, 3, 4])\n * console.log(result) // [4, 3, 2, 1]\n * ```\n *\n * @category elements\n * @since 2.0.0\n */\nexport const reverse = <S extends Iterable<any>>(\n  self: S\n): S extends NonEmptyReadonlyArray<infer A> ? NonEmptyArray<A> : S extends Iterable<infer A> ? Array<A> : never =>\n  Array.from(self).reverse() as any\n\n/**\n * Create a new array with elements sorted in increasing order based on the specified comparator.\n * If the input is a `NonEmptyReadonlyArray`, the output will also be a `NonEmptyReadonlyArray`.\n *\n * @category sorting\n * @since 2.0.0\n */\nexport const sort: {\n  /**\n   * Create a new array with elements sorted in increasing order based on the specified comparator.\n   * If the input is a `NonEmptyReadonlyArray`, the output will also be a `NonEmptyReadonlyArray`.\n   *\n   * @category sorting\n   * @since 2.0.0\n   */\n  <B>(O: Order.Order<B>): <A extends B, S extends Iterable<A>>(self: S) => ReadonlyArray.With<S, ReadonlyArray.Infer<S>>\n  /**\n   * Create a new array with elements sorted in increasing order based on the specified comparator.\n   * If the input is a `NonEmptyReadonlyArray`, the output will also be a `NonEmptyReadonlyArray`.\n   *\n   * @category sorting\n   * @since 2.0.0\n   */\n  <A extends B, B>(self: NonEmptyReadonlyArray<A>, O: Order.Order<B>): NonEmptyArray<A>\n  /**\n   * Create a new array with elements sorted in increasing order based on the specified comparator.\n   * If the input is a `NonEmptyReadonlyArray`, the output will also be a `NonEmptyReadonlyArray`.\n   *\n   * @category sorting\n   * @since 2.0.0\n   */\n  <A extends B, B>(self: Iterable<A>, O: Order.Order<B>): Array<A>\n} = dual(2, <A extends B, B>(self: Iterable<A>, O: Order.Order<B>): Array<A> => {\n  const out = Array.from(self)\n  out.sort(O)\n  return out\n})\n\n/**\n * Sorts an array based on a provided mapping function and order. The mapping\n * function transforms the elements into a value that can be compared, and the\n * order defines how those values should be sorted.\n *\n * **Example**\n *\n * ```ts\n * import { Array, Order } from \"effect\"\n *\n * const result = Array.sortWith([\"aaa\", \"b\", \"cc\"], (s) => s.length, Order.number)\n * console.log(result) // [\"b\", \"cc\", \"aaa\"]\n *\n * // Explanation:\n * // The array of strings is sorted based on their lengths. The mapping function `(s) => s.length`\n * // converts each string into its length, and the `Order.number` specifies that the lengths should\n * // be sorted in ascending order.\n * ```\n *\n * @since 2.0.0\n * @category elements\n */\nexport const sortWith: {\n  /**\n   * Sorts an array based on a provided mapping function and order. The mapping\n   * function transforms the elements into a value that can be compared, and the\n   * order defines how those values should be sorted.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array, Order } from \"effect\"\n   *\n   * const result = Array.sortWith([\"aaa\", \"b\", \"cc\"], (s) => s.length, Order.number)\n   * console.log(result) // [\"b\", \"cc\", \"aaa\"]\n   *\n   * // Explanation:\n   * // The array of strings is sorted based on their lengths. The mapping function `(s) => s.length`\n   * // converts each string into its length, and the `Order.number` specifies that the lengths should\n   * // be sorted in ascending order.\n   * ```\n   *\n   * @since 2.0.0\n   * @category elements\n   */\n  <S extends Iterable<any>, B>(f: (a: ReadonlyArray.Infer<S>) => B, order: Order.Order<B>): (self: S) => ReadonlyArray.With<S, ReadonlyArray.Infer<S>>\n  /**\n   * Sorts an array based on a provided mapping function and order. The mapping\n   * function transforms the elements into a value that can be compared, and the\n   * order defines how those values should be sorted.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array, Order } from \"effect\"\n   *\n   * const result = Array.sortWith([\"aaa\", \"b\", \"cc\"], (s) => s.length, Order.number)\n   * console.log(result) // [\"b\", \"cc\", \"aaa\"]\n   *\n   * // Explanation:\n   * // The array of strings is sorted based on their lengths. The mapping function `(s) => s.length`\n   * // converts each string into its length, and the `Order.number` specifies that the lengths should\n   * // be sorted in ascending order.\n   * ```\n   *\n   * @since 2.0.0\n   * @category elements\n   */\n  <A, B>(self: NonEmptyReadonlyArray<A>, f: (a: A) => B, O: Order.Order<B>): NonEmptyArray<A>\n  /**\n   * Sorts an array based on a provided mapping function and order. The mapping\n   * function transforms the elements into a value that can be compared, and the\n   * order defines how those values should be sorted.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array, Order } from \"effect\"\n   *\n   * const result = Array.sortWith([\"aaa\", \"b\", \"cc\"], (s) => s.length, Order.number)\n   * console.log(result) // [\"b\", \"cc\", \"aaa\"]\n   *\n   * // Explanation:\n   * // The array of strings is sorted based on their lengths. The mapping function `(s) => s.length`\n   * // converts each string into its length, and the `Order.number` specifies that the lengths should\n   * // be sorted in ascending order.\n   * ```\n   *\n   * @since 2.0.0\n   * @category elements\n   */\n  <A, B>(self: Iterable<A>, f: (a: A) => B, order: Order.Order<B>): Array<A>\n} = dual(\n  3,\n  <A, B>(self: Iterable<A>, f: (a: A) => B, order: Order.Order<B>): Array<A> =>\n    Array.from(self).map((a) => [a, f(a)] as const).sort(([, a], [, b]) => order(a, b)).map(([_]) => _)\n)\n\n/**\n * Sorts the elements of an `Iterable` in increasing order based on the provided\n * orders. The elements are compared using the first order in `orders`, then the\n * second order if the first comparison is equal, and so on.\n *\n * **Example**\n *\n * ```ts\n * import { Array, Order, pipe } from \"effect\"\n *\n * const users = [\n *   { name: \"Alice\", age: 30 },\n *   { name: \"Bob\", age: 25 },\n *   { name: \"Charlie\", age: 30 }\n * ]\n *\n * const result = pipe(\n *   users,\n *   Array.sortBy(\n *     Order.mapInput(Order.number, (user: (typeof users)[number]) => user.age),\n *     Order.mapInput(Order.string, (user: (typeof users)[number]) => user.name)\n *   )\n * )\n *\n * console.log(result)\n * // [\n * //   { name: \"Bob\", age: 25 },\n * //   { name: \"Alice\", age: 30 },\n * //   { name: \"Charlie\", age: 30 }\n * // ]\n *\n * // Explanation:\n * // The array of users is sorted first by age in ascending order. When ages are equal,\n * // the users are further sorted by name in ascending order.\n * ```\n *\n * @category sorting\n * @since 2.0.0\n */\nexport const sortBy = <S extends Iterable<any>>(\n  ...orders: ReadonlyArray<Order.Order<ReadonlyArray.Infer<S>>>\n) => {\n  const sortByAll = sort(Order.combineAll(orders))\n  return (\n    self: S\n  ): S extends NonEmptyReadonlyArray<infer A> ? NonEmptyArray<A> : S extends Iterable<infer A> ? Array<A> : never => {\n    const input = fromIterable(self)\n    if (isNonEmptyReadonlyArray(input)) {\n      return sortByAll(input) as any\n    }\n    return [] as any\n  }\n}\n\n/**\n * Takes two `Iterable`s and returns an `Array` of corresponding pairs.\n * If one input `Iterable` is short, excess elements of the\n * longer `Iterable` are discarded.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.zip([1, 2, 3], ['a', 'b'])\n * console.log(result) // [[1, 'a'], [2, 'b']]\n * ```\n *\n * @category zipping\n * @since 2.0.0\n */\nexport const zip: {\n  /**\n   * Takes two `Iterable`s and returns an `Array` of corresponding pairs.\n   * If one input `Iterable` is short, excess elements of the\n   * longer `Iterable` are discarded.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.zip([1, 2, 3], ['a', 'b'])\n   * console.log(result) // [[1, 'a'], [2, 'b']]\n   * ```\n   *\n   * @category zipping\n   * @since 2.0.0\n   */\n  <B>(that: NonEmptyReadonlyArray<B>): <A>(self: NonEmptyReadonlyArray<A>) => NonEmptyArray<[A, B]>\n  /**\n   * Takes two `Iterable`s and returns an `Array` of corresponding pairs.\n   * If one input `Iterable` is short, excess elements of the\n   * longer `Iterable` are discarded.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.zip([1, 2, 3], ['a', 'b'])\n   * console.log(result) // [[1, 'a'], [2, 'b']]\n   * ```\n   *\n   * @category zipping\n   * @since 2.0.0\n   */\n  <B>(that: Iterable<B>): <A>(self: Iterable<A>) => Array<[A, B]>\n  /**\n   * Takes two `Iterable`s and returns an `Array` of corresponding pairs.\n   * If one input `Iterable` is short, excess elements of the\n   * longer `Iterable` are discarded.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.zip([1, 2, 3], ['a', 'b'])\n   * console.log(result) // [[1, 'a'], [2, 'b']]\n   * ```\n   *\n   * @category zipping\n   * @since 2.0.0\n   */\n  <A, B>(self: NonEmptyReadonlyArray<A>, that: NonEmptyReadonlyArray<B>): NonEmptyArray<[A, B]>\n  /**\n   * Takes two `Iterable`s and returns an `Array` of corresponding pairs.\n   * If one input `Iterable` is short, excess elements of the\n   * longer `Iterable` are discarded.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.zip([1, 2, 3], ['a', 'b'])\n   * console.log(result) // [[1, 'a'], [2, 'b']]\n   * ```\n   *\n   * @category zipping\n   * @since 2.0.0\n   */\n  <A, B>(self: Iterable<A>, that: Iterable<B>): Array<[A, B]>\n} = dual(\n  2,\n  <A, B>(self: Iterable<A>, that: Iterable<B>): Array<[A, B]> => zipWith(self, that, Tuple.make)\n)\n\n/**\n * Apply a function to pairs of elements at the same index in two `Iterable`s, collecting the results in a new `Array`. If one\n * input `Iterable` is short, excess elements of the longer `Iterable` are discarded.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.zipWith([1, 2, 3], [4, 5, 6], (a, b) => a + b)\n * console.log(result) // [5, 7, 9]\n * ```\n *\n * @category zipping\n * @since 2.0.0\n */\nexport const zipWith: {\n  /**\n   * Apply a function to pairs of elements at the same index in two `Iterable`s, collecting the results in a new `Array`. If one\n   * input `Iterable` is short, excess elements of the longer `Iterable` are discarded.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.zipWith([1, 2, 3], [4, 5, 6], (a, b) => a + b)\n   * console.log(result) // [5, 7, 9]\n   * ```\n   *\n   * @category zipping\n   * @since 2.0.0\n   */\n  <B, A, C>(that: NonEmptyReadonlyArray<B>, f: (a: A, b: B) => C): (self: NonEmptyReadonlyArray<A>) => NonEmptyArray<C>\n  /**\n   * Apply a function to pairs of elements at the same index in two `Iterable`s, collecting the results in a new `Array`. If one\n   * input `Iterable` is short, excess elements of the longer `Iterable` are discarded.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.zipWith([1, 2, 3], [4, 5, 6], (a, b) => a + b)\n   * console.log(result) // [5, 7, 9]\n   * ```\n   *\n   * @category zipping\n   * @since 2.0.0\n   */\n  <B, A, C>(that: Iterable<B>, f: (a: A, b: B) => C): (self: Iterable<A>) => Array<C>\n  /**\n   * Apply a function to pairs of elements at the same index in two `Iterable`s, collecting the results in a new `Array`. If one\n   * input `Iterable` is short, excess elements of the longer `Iterable` are discarded.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.zipWith([1, 2, 3], [4, 5, 6], (a, b) => a + b)\n   * console.log(result) // [5, 7, 9]\n   * ```\n   *\n   * @category zipping\n   * @since 2.0.0\n   */\n  <A, B, C>(\n    self: NonEmptyReadonlyArray<A>,\n    that: NonEmptyReadonlyArray<B>,\n    f: (a: A, b: B) => C\n  ): NonEmptyArray<C>\n  /**\n   * Apply a function to pairs of elements at the same index in two `Iterable`s, collecting the results in a new `Array`. If one\n   * input `Iterable` is short, excess elements of the longer `Iterable` are discarded.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.zipWith([1, 2, 3], [4, 5, 6], (a, b) => a + b)\n   * console.log(result) // [5, 7, 9]\n   * ```\n   *\n   * @category zipping\n   * @since 2.0.0\n   */\n  <B, A, C>(self: Iterable<A>, that: Iterable<B>, f: (a: A, b: B) => C): Array<C>\n} = dual(3, <B, A, C>(self: Iterable<A>, that: Iterable<B>, f: (a: A, b: B) => C): Array<C> => {\n  const as = fromIterable(self)\n  const bs = fromIterable(that)\n  if (isNonEmptyReadonlyArray(as) && isNonEmptyReadonlyArray(bs)) {\n    const out: NonEmptyArray<C> = [f(headNonEmpty(as), headNonEmpty(bs))]\n    const len = Math.min(as.length, bs.length)\n    for (let i = 1; i < len; i++) {\n      out[i] = f(as[i], bs[i])\n    }\n    return out\n  }\n  return []\n})\n\n/**\n * This function is the inverse of `zip`. Takes an `Iterable` of pairs and return two corresponding `Array`s.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.unzip([[1, \"a\"], [2, \"b\"], [3, \"c\"]])\n * console.log(result) // [[1, 2, 3], ['a', 'b', 'c']]\n * ```\n *\n * @since 2.0.0\n */\nexport const unzip: <S extends Iterable<readonly [any, any]>>(\n  self: S\n) => S extends NonEmptyReadonlyArray<readonly [infer A, infer B]> ? [NonEmptyArray<A>, NonEmptyArray<B>]\n  : S extends Iterable<readonly [infer A, infer B]> ? [Array<A>, Array<B>]\n  : never = (<A, B>(self: Iterable<readonly [A, B]>): [Array<A>, Array<B>] => {\n    const input = fromIterable(self)\n    if (isNonEmptyReadonlyArray(input)) {\n      const fa: NonEmptyArray<A> = [input[0][0]]\n      const fb: NonEmptyArray<B> = [input[0][1]]\n      for (let i = 1; i < input.length; i++) {\n        fa[i] = input[i][0]\n        fb[i] = input[i][1]\n      }\n      return [fa, fb]\n    }\n    return [[], []]\n  }) as any\n\n/**\n * Places an element in between members of an `Iterable`.\n * If the input is a non-empty array, the result is also a non-empty array.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.intersperse([1, 2, 3], 0)\n * console.log(result) // [1, 0, 2, 0, 3]\n * ```\n *\n * @since 2.0.0\n */\nexport const intersperse: {\n  /**\n   * Places an element in between members of an `Iterable`.\n   * If the input is a non-empty array, the result is also a non-empty array.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.intersperse([1, 2, 3], 0)\n   * console.log(result) // [1, 0, 2, 0, 3]\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <B>(middle: B): <S extends Iterable<any>>(self: S) => ReadonlyArray.With<S, ReadonlyArray.Infer<S> | B>\n  /**\n   * Places an element in between members of an `Iterable`.\n   * If the input is a non-empty array, the result is also a non-empty array.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.intersperse([1, 2, 3], 0)\n   * console.log(result) // [1, 0, 2, 0, 3]\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A, B>(self: NonEmptyReadonlyArray<A>, middle: B): NonEmptyArray<A | B>\n  /**\n   * Places an element in between members of an `Iterable`.\n   * If the input is a non-empty array, the result is also a non-empty array.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.intersperse([1, 2, 3], 0)\n   * console.log(result) // [1, 0, 2, 0, 3]\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A, B>(self: Iterable<A>, middle: B): Array<A | B>\n} = dual(2, <A, B>(self: Iterable<A>, middle: B): Array<A | B> => {\n  const input = fromIterable(self)\n  if (isNonEmptyReadonlyArray(input)) {\n    const out: NonEmptyArray<A | B> = [headNonEmpty(input)]\n    const tail = tailNonEmpty(input)\n    for (let i = 0; i < tail.length; i++) {\n      if (i < tail.length) {\n        out.push(middle)\n      }\n      out.push(tail[i])\n    }\n    return out\n  }\n  return []\n})\n\n/**\n * Apply a function to the head, creating a new `NonEmptyReadonlyArray`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.modifyNonEmptyHead([1, 2, 3], n => n * 10)\n * console.log(result) // [10, 2, 3]\n * ```\n *\n * @since 2.0.0\n */\nexport const modifyNonEmptyHead: {\n  /**\n   * Apply a function to the head, creating a new `NonEmptyReadonlyArray`.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.modifyNonEmptyHead([1, 2, 3], n => n * 10)\n   * console.log(result) // [10, 2, 3]\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A, B>(f: (a: A) => B): (self: NonEmptyReadonlyArray<A>) => NonEmptyArray<A | B>\n  /**\n   * Apply a function to the head, creating a new `NonEmptyReadonlyArray`.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.modifyNonEmptyHead([1, 2, 3], n => n * 10)\n   * console.log(result) // [10, 2, 3]\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A, B>(self: NonEmptyReadonlyArray<A>, f: (a: A) => B): NonEmptyArray<A | B>\n} = dual(\n  2,\n  <A, B>(\n    self: NonEmptyReadonlyArray<A>,\n    f: (a: A) => B\n  ): NonEmptyArray<A | B> => [f(headNonEmpty(self)), ...tailNonEmpty(self)]\n)\n\n/**\n * Change the head, creating a new `NonEmptyReadonlyArray`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.setNonEmptyHead([1, 2, 3], 10)\n * console.log(result) // [10, 2, 3]\n * ```\n *\n * @since 2.0.0\n */\nexport const setNonEmptyHead: {\n  /**\n   * Change the head, creating a new `NonEmptyReadonlyArray`.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.setNonEmptyHead([1, 2, 3], 10)\n   * console.log(result) // [10, 2, 3]\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <B>(b: B): <A>(self: NonEmptyReadonlyArray<A>) => NonEmptyArray<A | B>\n  /**\n   * Change the head, creating a new `NonEmptyReadonlyArray`.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.setNonEmptyHead([1, 2, 3], 10)\n   * console.log(result) // [10, 2, 3]\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A, B>(self: NonEmptyReadonlyArray<A>, b: B): NonEmptyArray<A | B>\n} = dual(\n  2,\n  <A, B>(self: NonEmptyReadonlyArray<A>, b: B): NonEmptyArray<A | B> => modifyNonEmptyHead(self, () => b)\n)\n\n/**\n * Apply a function to the last element, creating a new `NonEmptyReadonlyArray`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.modifyNonEmptyLast([1, 2, 3], n => n * 2)\n * console.log(result) // [1, 2, 6]\n * ```\n *\n * @since 2.0.0\n */\nexport const modifyNonEmptyLast: {\n  /**\n   * Apply a function to the last element, creating a new `NonEmptyReadonlyArray`.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.modifyNonEmptyLast([1, 2, 3], n => n * 2)\n   * console.log(result) // [1, 2, 6]\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A, B>(f: (a: A) => B): (self: NonEmptyReadonlyArray<A>) => NonEmptyArray<A | B>\n  /**\n   * Apply a function to the last element, creating a new `NonEmptyReadonlyArray`.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.modifyNonEmptyLast([1, 2, 3], n => n * 2)\n   * console.log(result) // [1, 2, 6]\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A, B>(self: NonEmptyReadonlyArray<A>, f: (a: A) => B): NonEmptyArray<A | B>\n} = dual(\n  2,\n  <A, B>(self: NonEmptyReadonlyArray<A>, f: (a: A) => B): NonEmptyArray<A | B> =>\n    append(initNonEmpty(self), f(lastNonEmpty(self)))\n)\n\n/**\n * Change the last element, creating a new `NonEmptyReadonlyArray`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.setNonEmptyLast([1, 2, 3], 4)\n * console.log(result) // [1, 2, 4]\n * ```\n *\n * @since 2.0.0\n */\nexport const setNonEmptyLast: {\n  /**\n   * Change the last element, creating a new `NonEmptyReadonlyArray`.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.setNonEmptyLast([1, 2, 3], 4)\n   * console.log(result) // [1, 2, 4]\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <B>(b: B): <A>(self: NonEmptyReadonlyArray<A>) => NonEmptyArray<A | B>\n  /**\n   * Change the last element, creating a new `NonEmptyReadonlyArray`.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.setNonEmptyLast([1, 2, 3], 4)\n   * console.log(result) // [1, 2, 4]\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A, B>(self: NonEmptyReadonlyArray<A>, b: B): NonEmptyArray<A | B>\n} = dual(\n  2,\n  <A, B>(self: NonEmptyReadonlyArray<A>, b: B): NonEmptyArray<A | B> => modifyNonEmptyLast(self, () => b)\n)\n\n/**\n * Rotate an `Iterable` by `n` steps.\n * If the input is a non-empty array, the result is also a non-empty array.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.rotate(['a', 'b', 'c', 'd'], 2)\n * console.log(result) // ['c', 'd', 'a', 'b']\n * ```\n *\n * @since 2.0.0\n */\nexport const rotate: {\n  /**\n   * Rotate an `Iterable` by `n` steps.\n   * If the input is a non-empty array, the result is also a non-empty array.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.rotate(['a', 'b', 'c', 'd'], 2)\n   * console.log(result) // ['c', 'd', 'a', 'b']\n   * ```\n   *\n   * @since 2.0.0\n   */\n  (n: number): <S extends Iterable<any>>(self: S) => ReadonlyArray.With<S, ReadonlyArray.Infer<S>>\n  /**\n   * Rotate an `Iterable` by `n` steps.\n   * If the input is a non-empty array, the result is also a non-empty array.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.rotate(['a', 'b', 'c', 'd'], 2)\n   * console.log(result) // ['c', 'd', 'a', 'b']\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A>(self: NonEmptyReadonlyArray<A>, n: number): NonEmptyArray<A>\n  /**\n   * Rotate an `Iterable` by `n` steps.\n   * If the input is a non-empty array, the result is also a non-empty array.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.rotate(['a', 'b', 'c', 'd'], 2)\n   * console.log(result) // ['c', 'd', 'a', 'b']\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A>(self: Iterable<A>, n: number): Array<A>\n} = dual(2, <A>(self: Iterable<A>, n: number): Array<A> => {\n  const input = fromIterable(self)\n  if (isNonEmptyReadonlyArray(input)) {\n    const len = input.length\n    const m = Math.round(n) % len\n    if (isOutOfBounds(Math.abs(m), input) || m === 0) {\n      return copy(input)\n    }\n    if (m < 0) {\n      const [f, s] = splitNonEmptyAt(input, -m)\n      return appendAll(s, f)\n    } else {\n      return rotate(self, m - len)\n    }\n  }\n  return []\n})\n\n/**\n * Returns a function that checks if a `ReadonlyArray` contains a given value using a provided `isEquivalent` function.\n *\n * **Example**\n *\n * ```ts\n * import { Array, pipe } from \"effect\"\n *\n * const isEquivalent = (a: number, b: number) => a === b\n * const containsNumber = Array.containsWith(isEquivalent)\n * const result = pipe([1, 2, 3, 4], containsNumber(3))\n * console.log(result) // true\n * ```\n *\n * @category elements\n * @since 2.0.0\n */\nexport const containsWith = <A>(isEquivalent: (self: A, that: A) => boolean): {\n  (a: A): (self: Iterable<A>) => boolean\n  (self: Iterable<A>, a: A): boolean\n} =>\n  dual(2, (self: Iterable<A>, a: A): boolean => {\n    for (const i of self) {\n      if (isEquivalent(a, i)) {\n        return true\n      }\n    }\n    return false\n  })\n\nconst _equivalence = Equal.equivalence()\n\n/**\n * Returns a function that checks if a `ReadonlyArray` contains a given value using the default `Equivalence`.\n *\n * **Example**\n *\n * ```ts\n * import { Array, pipe } from \"effect\"\n *\n * const result = pipe(['a', 'b', 'c', 'd'], Array.contains('c'))\n * console.log(result) // true\n * ```\n *\n * @category elements\n * @since 2.0.0\n */\nexport const contains: {\n  /**\n   * Returns a function that checks if a `ReadonlyArray` contains a given value using the default `Equivalence`.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array, pipe } from \"effect\"\n   *\n   * const result = pipe(['a', 'b', 'c', 'd'], Array.contains('c'))\n   * console.log(result) // true\n   * ```\n   *\n   * @category elements\n   * @since 2.0.0\n   */\n  <A>(a: A): (self: Iterable<A>) => boolean\n  /**\n   * Returns a function that checks if a `ReadonlyArray` contains a given value using the default `Equivalence`.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array, pipe } from \"effect\"\n   *\n   * const result = pipe(['a', 'b', 'c', 'd'], Array.contains('c'))\n   * console.log(result) // true\n   * ```\n   *\n   * @category elements\n   * @since 2.0.0\n   */\n  <A>(self: Iterable<A>, a: A): boolean\n} = containsWith(_equivalence)\n\n/**\n * A useful recursion pattern for processing an `Iterable` to produce a new `Array`, often used for \"chopping\" up the input\n * `Iterable`. Typically chop is called with some function that will consume an initial prefix of the `Iterable` and produce a\n * value and the rest of the `Array`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.chop([1, 2, 3, 4, 5], (as): [number, Array<number>] => [as[0] * 2, as.slice(1)])\n * console.log(result) // [2, 4, 6, 8, 10]\n *\n * // Explanation:\n * // The `chopFunction` takes the first element of the array, doubles it, and then returns it along with the rest of the array.\n * // The `chop` function applies this `chopFunction` recursively to the input array `[1, 2, 3, 4, 5]`,\n * // resulting in a new array `[2, 4, 6, 8, 10]`.\n * ```\n *\n * @since 2.0.0\n */\nexport const chop: {\n  /**\n   * A useful recursion pattern for processing an `Iterable` to produce a new `Array`, often used for \"chopping\" up the input\n   * `Iterable`. Typically chop is called with some function that will consume an initial prefix of the `Iterable` and produce a\n   * value and the rest of the `Array`.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.chop([1, 2, 3, 4, 5], (as): [number, Array<number>] => [as[0] * 2, as.slice(1)])\n   * console.log(result) // [2, 4, 6, 8, 10]\n   *\n   * // Explanation:\n   * // The `chopFunction` takes the first element of the array, doubles it, and then returns it along with the rest of the array.\n   * // The `chop` function applies this `chopFunction` recursively to the input array `[1, 2, 3, 4, 5]`,\n   * // resulting in a new array `[2, 4, 6, 8, 10]`.\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <S extends Iterable<any>, B>(\n    f: (as: NonEmptyReadonlyArray<ReadonlyArray.Infer<S>>) => readonly [B, ReadonlyArray<ReadonlyArray.Infer<S>>]\n  ): (self: S) => ReadonlyArray.With<S, ReadonlyArray.Infer<S>>\n  /**\n   * A useful recursion pattern for processing an `Iterable` to produce a new `Array`, often used for \"chopping\" up the input\n   * `Iterable`. Typically chop is called with some function that will consume an initial prefix of the `Iterable` and produce a\n   * value and the rest of the `Array`.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.chop([1, 2, 3, 4, 5], (as): [number, Array<number>] => [as[0] * 2, as.slice(1)])\n   * console.log(result) // [2, 4, 6, 8, 10]\n   *\n   * // Explanation:\n   * // The `chopFunction` takes the first element of the array, doubles it, and then returns it along with the rest of the array.\n   * // The `chop` function applies this `chopFunction` recursively to the input array `[1, 2, 3, 4, 5]`,\n   * // resulting in a new array `[2, 4, 6, 8, 10]`.\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A, B>(\n    self: NonEmptyReadonlyArray<A>,\n    f: (as: NonEmptyReadonlyArray<A>) => readonly [B, ReadonlyArray<A>]\n  ): NonEmptyArray<B>\n  /**\n   * A useful recursion pattern for processing an `Iterable` to produce a new `Array`, often used for \"chopping\" up the input\n   * `Iterable`. Typically chop is called with some function that will consume an initial prefix of the `Iterable` and produce a\n   * value and the rest of the `Array`.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.chop([1, 2, 3, 4, 5], (as): [number, Array<number>] => [as[0] * 2, as.slice(1)])\n   * console.log(result) // [2, 4, 6, 8, 10]\n   *\n   * // Explanation:\n   * // The `chopFunction` takes the first element of the array, doubles it, and then returns it along with the rest of the array.\n   * // The `chop` function applies this `chopFunction` recursively to the input array `[1, 2, 3, 4, 5]`,\n   * // resulting in a new array `[2, 4, 6, 8, 10]`.\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A, B>(\n    self: Iterable<A>,\n    f: (as: NonEmptyReadonlyArray<A>) => readonly [B, ReadonlyArray<A>]\n  ): Array<B>\n} = dual(2, <A, B>(\n  self: Iterable<A>,\n  f: (as: NonEmptyReadonlyArray<A>) => readonly [B, ReadonlyArray<A>]\n): Array<B> => {\n  const input = fromIterable(self)\n  if (isNonEmptyReadonlyArray(input)) {\n    const [b, rest] = f(input)\n    const out: NonEmptyArray<B> = [b]\n    let next: ReadonlyArray<A> = rest\n    while (internalArray.isNonEmptyArray(next)) {\n      const [b, rest] = f(next)\n      out.push(b)\n      next = rest\n    }\n    return out\n  }\n  return []\n})\n\n/**\n * Splits an `Iterable` into two segments, with the first segment containing a maximum of `n` elements.\n * The value of `n` can be `0`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.splitAt([1, 2, 3, 4, 5], 3)\n * console.log(result) // [[1, 2, 3], [4, 5]]\n * ```\n *\n * @category splitting\n * @since 2.0.0\n */\nexport const splitAt: {\n  /**\n   * Splits an `Iterable` into two segments, with the first segment containing a maximum of `n` elements.\n   * The value of `n` can be `0`.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.splitAt([1, 2, 3, 4, 5], 3)\n   * console.log(result) // [[1, 2, 3], [4, 5]]\n   * ```\n   *\n   * @category splitting\n   * @since 2.0.0\n   */\n  (n: number): <A>(self: Iterable<A>) => [beforeIndex: Array<A>, fromIndex: Array<A>]\n  /**\n   * Splits an `Iterable` into two segments, with the first segment containing a maximum of `n` elements.\n   * The value of `n` can be `0`.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.splitAt([1, 2, 3, 4, 5], 3)\n   * console.log(result) // [[1, 2, 3], [4, 5]]\n   * ```\n   *\n   * @category splitting\n   * @since 2.0.0\n   */\n  <A>(self: Iterable<A>, n: number): [beforeIndex: Array<A>, fromIndex: Array<A>]\n} = dual(2, <A>(self: Iterable<A>, n: number): [Array<A>, Array<A>] => {\n  const input = Array.from(self)\n  const _n = Math.floor(n)\n  if (isNonEmptyReadonlyArray(input)) {\n    if (_n >= 1) {\n      return splitNonEmptyAt(input, _n)\n    }\n    return [[], input]\n  }\n  return [input, []]\n})\n\n/**\n * Splits a `NonEmptyReadonlyArray` into two segments, with the first segment containing a maximum of `n` elements.\n * The value of `n` must be `>= 1`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.splitNonEmptyAt([\"a\", \"b\", \"c\", \"d\", \"e\"], 3)\n * console.log(result) // [[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]\n * ```\n *\n * @category splitting\n * @since 2.0.0\n */\nexport const splitNonEmptyAt: {\n  /**\n   * Splits a `NonEmptyReadonlyArray` into two segments, with the first segment containing a maximum of `n` elements.\n   * The value of `n` must be `>= 1`.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.splitNonEmptyAt([\"a\", \"b\", \"c\", \"d\", \"e\"], 3)\n   * console.log(result) // [[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]\n   * ```\n   *\n   * @category splitting\n   * @since 2.0.0\n   */\n  (n: number): <A>(self: NonEmptyReadonlyArray<A>) => [beforeIndex: NonEmptyArray<A>, fromIndex: Array<A>]\n  /**\n   * Splits a `NonEmptyReadonlyArray` into two segments, with the first segment containing a maximum of `n` elements.\n   * The value of `n` must be `>= 1`.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.splitNonEmptyAt([\"a\", \"b\", \"c\", \"d\", \"e\"], 3)\n   * console.log(result) // [[\"a\", \"b\", \"c\"], [\"d\", \"e\"]]\n   * ```\n   *\n   * @category splitting\n   * @since 2.0.0\n   */\n  <A>(self: NonEmptyReadonlyArray<A>, n: number): [beforeIndex: NonEmptyArray<A>, fromIndex: Array<A>]\n} = dual(2, <A>(self: NonEmptyReadonlyArray<A>, n: number): [NonEmptyArray<A>, Array<A>] => {\n  const _n = Math.max(1, Math.floor(n))\n  return _n >= self.length ?\n    [copy(self), []] :\n    [prepend(self.slice(1, _n), headNonEmpty(self)), self.slice(_n)]\n})\n\n/**\n * Splits this iterable into `n` equally sized arrays.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.split([1, 2, 3, 4, 5, 6, 7, 8], 3)\n * console.log(result) // [[1, 2, 3], [4, 5, 6], [7, 8]]\n * ```\n *\n * @since 2.0.0\n * @category splitting\n */\nexport const split: {\n  /**\n   * Splits this iterable into `n` equally sized arrays.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.split([1, 2, 3, 4, 5, 6, 7, 8], 3)\n   * console.log(result) // [[1, 2, 3], [4, 5, 6], [7, 8]]\n   * ```\n   *\n   * @since 2.0.0\n   * @category splitting\n   */\n  (n: number): <A>(self: Iterable<A>) => Array<Array<A>>\n  /**\n   * Splits this iterable into `n` equally sized arrays.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.split([1, 2, 3, 4, 5, 6, 7, 8], 3)\n   * console.log(result) // [[1, 2, 3], [4, 5, 6], [7, 8]]\n   * ```\n   *\n   * @since 2.0.0\n   * @category splitting\n   */\n  <A>(self: Iterable<A>, n: number): Array<Array<A>>\n} = dual(2, <A>(self: Iterable<A>, n: number) => {\n  const input = fromIterable(self)\n  return chunksOf(input, Math.ceil(input.length / Math.floor(n)))\n})\n\n/**\n * Splits this iterable on the first element that matches this predicate.\n * Returns a tuple containing two arrays: the first one is before the match, and the second one is from the match onward.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.splitWhere([1, 2, 3, 4, 5], n => n > 3)\n * console.log(result) // [[1, 2, 3], [4, 5]]\n * ```\n *\n * @category splitting\n * @since 2.0.0\n */\nexport const splitWhere: {\n  /**\n   * Splits this iterable on the first element that matches this predicate.\n   * Returns a tuple containing two arrays: the first one is before the match, and the second one is from the match onward.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.splitWhere([1, 2, 3, 4, 5], n => n > 3)\n   * console.log(result) // [[1, 2, 3], [4, 5]]\n   * ```\n   *\n   * @category splitting\n   * @since 2.0.0\n   */\n  <A>(predicate: (a: NoInfer<A>, i: number) => boolean): (self: Iterable<A>) => [beforeMatch: Array<A>, fromMatch: Array<A>]\n  /**\n   * Splits this iterable on the first element that matches this predicate.\n   * Returns a tuple containing two arrays: the first one is before the match, and the second one is from the match onward.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.splitWhere([1, 2, 3, 4, 5], n => n > 3)\n   * console.log(result) // [[1, 2, 3], [4, 5]]\n   * ```\n   *\n   * @category splitting\n   * @since 2.0.0\n   */\n  <A>(self: Iterable<A>, predicate: (a: A, i: number) => boolean): [beforeMatch: Array<A>, fromMatch: Array<A>]\n} = dual(\n  2,\n  <A>(self: Iterable<A>, predicate: (a: A, i: number) => boolean): [beforeMatch: Array<A>, fromMatch: Array<A>] =>\n    span(self, (a: A, i: number) => !predicate(a, i))\n)\n\n/**\n * Copies an array.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.copy([1, 2, 3])\n * console.log(result) // [1, 2, 3]\n * ```\n *\n * @since 2.0.0\n */\nexport const copy: {\n  /**\n   * Copies an array.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.copy([1, 2, 3])\n   * console.log(result) // [1, 2, 3]\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A>(self: NonEmptyReadonlyArray<A>): NonEmptyArray<A>\n  /**\n   * Copies an array.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.copy([1, 2, 3])\n   * console.log(result) // [1, 2, 3]\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A>(self: ReadonlyArray<A>): Array<A>\n} = (<A>(self: ReadonlyArray<A>): Array<A> => self.slice()) as any\n\n/**\n * Pads an array.\n * Returns a new array of length `n` with the elements of `array` followed by `fill` elements if `array` is shorter than `n`.\n * If `array` is longer than `n`, the returned array will be a slice of `array` containing the `n` first elements of `array`.\n * If `n` is less than or equal to 0, the returned array will be an empty array.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.pad([1, 2, 3], 6, 0)\n * console.log(result) // [1, 2, 3, 0, 0, 0]\n * ```\n *\n * @since 3.8.4\n */\nexport const pad: {\n  /**\n   * Pads an array.\n   * Returns a new array of length `n` with the elements of `array` followed by `fill` elements if `array` is shorter than `n`.\n   * If `array` is longer than `n`, the returned array will be a slice of `array` containing the `n` first elements of `array`.\n   * If `n` is less than or equal to 0, the returned array will be an empty array.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.pad([1, 2, 3], 6, 0)\n   * console.log(result) // [1, 2, 3, 0, 0, 0]\n   * ```\n   *\n   * @since 3.8.4\n   */\n  <A, T>(n: number, fill: T): (\n    self: Array<A>\n  ) => Array<A | T>\n  /**\n   * Pads an array.\n   * Returns a new array of length `n` with the elements of `array` followed by `fill` elements if `array` is shorter than `n`.\n   * If `array` is longer than `n`, the returned array will be a slice of `array` containing the `n` first elements of `array`.\n   * If `n` is less than or equal to 0, the returned array will be an empty array.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.pad([1, 2, 3], 6, 0)\n   * console.log(result) // [1, 2, 3, 0, 0, 0]\n   * ```\n   *\n   * @since 3.8.4\n   */\n  <A, T>(self: Array<A>, n: number, fill: T): Array<A | T>\n} = dual(3, <A, T>(self: Array<A>, n: number, fill: T): Array<A | T> => {\n  if (self.length >= n) {\n    return take(self, n)\n  }\n  return appendAll(\n    self,\n    makeBy(n - self.length, () => fill)\n  )\n})\n\n/**\n * Splits an `Iterable` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the `Iterable`. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that\n *\n * ```ts skip-type-checking\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `self`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.chunksOf([1, 2, 3, 4, 5], 2)\n * console.log(result) // [[1, 2], [3, 4], [5]]\n *\n * // Explanation:\n * // The `chunksOf` function takes an array of numbers `[1, 2, 3, 4, 5]` and a number `2`.\n * // It splits the array into chunks of length 2. Since the array length is not evenly divisible by 2,\n * // the last chunk contains the remaining elements.\n * // The result is `[[1, 2], [3, 4], [5]]`.\n * ```\n *\n * @category splitting\n * @since 2.0.0\n */\nexport const chunksOf: {\n  /**\n   * Splits an `Iterable` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n   * the `Iterable`. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n   * definition of `chunksOf`; it satisfies the property that\n   *\n   * ```ts skip-type-checking\n   * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n   * ```\n   *\n   * whenever `n` evenly divides the length of `self`.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.chunksOf([1, 2, 3, 4, 5], 2)\n   * console.log(result) // [[1, 2], [3, 4], [5]]\n   *\n   * // Explanation:\n   * // The `chunksOf` function takes an array of numbers `[1, 2, 3, 4, 5]` and a number `2`.\n   * // It splits the array into chunks of length 2. Since the array length is not evenly divisible by 2,\n   * // the last chunk contains the remaining elements.\n   * // The result is `[[1, 2], [3, 4], [5]]`.\n   * ```\n   *\n   * @category splitting\n   * @since 2.0.0\n   */\n  (n: number): <S extends Iterable<any>>(\n    self: S\n  ) => ReadonlyArray.With<S, NonEmptyArray<ReadonlyArray.Infer<S>>>\n  /**\n   * Splits an `Iterable` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n   * the `Iterable`. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n   * definition of `chunksOf`; it satisfies the property that\n   *\n   * ```ts skip-type-checking\n   * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n   * ```\n   *\n   * whenever `n` evenly divides the length of `self`.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.chunksOf([1, 2, 3, 4, 5], 2)\n   * console.log(result) // [[1, 2], [3, 4], [5]]\n   *\n   * // Explanation:\n   * // The `chunksOf` function takes an array of numbers `[1, 2, 3, 4, 5]` and a number `2`.\n   * // It splits the array into chunks of length 2. Since the array length is not evenly divisible by 2,\n   * // the last chunk contains the remaining elements.\n   * // The result is `[[1, 2], [3, 4], [5]]`.\n   * ```\n   *\n   * @category splitting\n   * @since 2.0.0\n   */\n  <A>(self: NonEmptyReadonlyArray<A>, n: number): NonEmptyArray<NonEmptyArray<A>>\n  /**\n   * Splits an `Iterable` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n   * the `Iterable`. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n   * definition of `chunksOf`; it satisfies the property that\n   *\n   * ```ts skip-type-checking\n   * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n   * ```\n   *\n   * whenever `n` evenly divides the length of `self`.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.chunksOf([1, 2, 3, 4, 5], 2)\n   * console.log(result) // [[1, 2], [3, 4], [5]]\n   *\n   * // Explanation:\n   * // The `chunksOf` function takes an array of numbers `[1, 2, 3, 4, 5]` and a number `2`.\n   * // It splits the array into chunks of length 2. Since the array length is not evenly divisible by 2,\n   * // the last chunk contains the remaining elements.\n   * // The result is `[[1, 2], [3, 4], [5]]`.\n   * ```\n   *\n   * @category splitting\n   * @since 2.0.0\n   */\n  <A>(self: Iterable<A>, n: number): Array<NonEmptyArray<A>>\n} = dual(2, <A>(self: Iterable<A>, n: number): Array<NonEmptyArray<A>> => {\n  const input = fromIterable(self)\n  if (isNonEmptyReadonlyArray(input)) {\n    return chop(input, splitNonEmptyAt(n))\n  }\n  return []\n})\n\n/**\n * Creates sliding windows of size `n` from an `Iterable`.\n * If the number of elements is less than `n` or if `n` is not greater than zero,\n * an empty array is returned.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Array } from \"effect\"\n *\n * const numbers = [1, 2, 3, 4, 5]\n * assert.deepStrictEqual(Array.window(numbers, 3), [[1, 2, 3], [2, 3, 4], [3, 4, 5]])\n * assert.deepStrictEqual(Array.window(numbers, 6), [])\n * ```\n *\n * @category splitting\n * @since 3.13.2\n */\nexport const window: {\n  /**\n   * Creates sliding windows of size `n` from an `Iterable`.\n   * If the number of elements is less than `n` or if `n` is not greater than zero,\n   * an empty array is returned.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Array } from \"effect\"\n   *\n   * const numbers = [1, 2, 3, 4, 5]\n   * assert.deepStrictEqual(Array.window(numbers, 3), [[1, 2, 3], [2, 3, 4], [3, 4, 5]])\n   * assert.deepStrictEqual(Array.window(numbers, 6), [])\n   * ```\n   *\n   * @category splitting\n   * @since 3.13.2\n   */\n  (n: number): <A>(self: Iterable<A>) => Array<Array<A>>\n  /**\n   * Creates sliding windows of size `n` from an `Iterable`.\n   * If the number of elements is less than `n` or if `n` is not greater than zero,\n   * an empty array is returned.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Array } from \"effect\"\n   *\n   * const numbers = [1, 2, 3, 4, 5]\n   * assert.deepStrictEqual(Array.window(numbers, 3), [[1, 2, 3], [2, 3, 4], [3, 4, 5]])\n   * assert.deepStrictEqual(Array.window(numbers, 6), [])\n   * ```\n   *\n   * @category splitting\n   * @since 3.13.2\n   */\n  <A>(self: Iterable<A>, n: number): Array<Array<A>>\n} = dual(2, <A>(self: Iterable<A>, n: number): Array<Array<A>> => {\n  const input = fromIterable(self)\n  if (n > 0 && isNonEmptyReadonlyArray(input)) {\n    return Array.from(\n      { length: input.length - (n - 1) },\n      (_, index) => input.slice(index, index + n)\n    )\n  }\n  return []\n})\n\n/**\n * Group equal, consecutive elements of a `NonEmptyReadonlyArray` into `NonEmptyArray`s using the provided `isEquivalent` function.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.groupWith([\"a\", \"a\", \"b\", \"b\", \"b\", \"c\", \"a\"], (x, y) => x === y)\n * console.log(result) // [[\"a\", \"a\"], [\"b\", \"b\", \"b\"], [\"c\"], [\"a\"]]\n * ```\n *\n * @category grouping\n * @since 2.0.0\n */\nexport const groupWith: {\n  /**\n   * Group equal, consecutive elements of a `NonEmptyReadonlyArray` into `NonEmptyArray`s using the provided `isEquivalent` function.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.groupWith([\"a\", \"a\", \"b\", \"b\", \"b\", \"c\", \"a\"], (x, y) => x === y)\n   * console.log(result) // [[\"a\", \"a\"], [\"b\", \"b\", \"b\"], [\"c\"], [\"a\"]]\n   * ```\n   *\n   * @category grouping\n   * @since 2.0.0\n   */\n  <A>(isEquivalent: (self: A, that: A) => boolean): (self: NonEmptyReadonlyArray<A>) => NonEmptyArray<NonEmptyArray<A>>\n  /**\n   * Group equal, consecutive elements of a `NonEmptyReadonlyArray` into `NonEmptyArray`s using the provided `isEquivalent` function.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.groupWith([\"a\", \"a\", \"b\", \"b\", \"b\", \"c\", \"a\"], (x, y) => x === y)\n   * console.log(result) // [[\"a\", \"a\"], [\"b\", \"b\", \"b\"], [\"c\"], [\"a\"]]\n   * ```\n   *\n   * @category grouping\n   * @since 2.0.0\n   */\n  <A>(\n    self: NonEmptyReadonlyArray<A>,\n    isEquivalent: (self: A, that: A) => boolean\n  ): NonEmptyArray<NonEmptyArray<A>>\n} = dual(\n  2,\n  <A>(self: NonEmptyReadonlyArray<A>, isEquivalent: (self: A, that: A) => boolean): NonEmptyArray<NonEmptyArray<A>> =>\n    chop(self, (as) => {\n      const h = headNonEmpty(as)\n      const out: NonEmptyArray<A> = [h]\n      let i = 1\n      for (; i < as.length; i++) {\n        const a = as[i]\n        if (isEquivalent(a, h)) {\n          out.push(a)\n        } else {\n          break\n        }\n      }\n      return [out, as.slice(i)]\n    })\n)\n\n/**\n * Group equal, consecutive elements of a `NonEmptyReadonlyArray` into `NonEmptyArray`s.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.group([1, 1, 2, 2, 2, 3, 1])\n * console.log(result) // [[1, 1], [2, 2, 2], [3], [1]]\n * ```\n *\n * @category grouping\n * @since 2.0.0\n */\nexport const group: <A>(self: NonEmptyReadonlyArray<A>) => NonEmptyArray<NonEmptyArray<A>> = groupWith(\n  Equal.equivalence()\n)\n\n/**\n * Splits an `Iterable` into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n * function on each element, and grouping the results according to values returned\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const people = [\n *   { name: \"Alice\", group: \"A\" },\n *   { name: \"Bob\", group: \"B\" },\n *   { name: \"Charlie\", group: \"A\" }\n * ]\n *\n * const result = Array.groupBy(people, person => person.group)\n * console.log(result)\n * // {\n * //  A: [{ name: \"Alice\", group: \"A\" }, { name: \"Charlie\", group: \"A\" }],\n * //  B: [{ name: \"Bob\", group: \"B\" }]\n * // }\n * ```\n *\n * @category grouping\n * @since 2.0.0\n */\nexport const groupBy: {\n  /**\n   * Splits an `Iterable` into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n   * function on each element, and grouping the results according to values returned\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const people = [\n   *   { name: \"Alice\", group: \"A\" },\n   *   { name: \"Bob\", group: \"B\" },\n   *   { name: \"Charlie\", group: \"A\" }\n   * ]\n   *\n   * const result = Array.groupBy(people, person => person.group)\n   * console.log(result)\n   * // {\n   * //  A: [{ name: \"Alice\", group: \"A\" }, { name: \"Charlie\", group: \"A\" }],\n   * //  B: [{ name: \"Bob\", group: \"B\" }]\n   * // }\n   * ```\n   *\n   * @category grouping\n   * @since 2.0.0\n   */\n  <A, K extends string | symbol>(f: (a: A) => K): (self: Iterable<A>) => Record<Record.ReadonlyRecord.NonLiteralKey<K>, NonEmptyArray<A>>\n  /**\n   * Splits an `Iterable` into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n   * function on each element, and grouping the results according to values returned\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const people = [\n   *   { name: \"Alice\", group: \"A\" },\n   *   { name: \"Bob\", group: \"B\" },\n   *   { name: \"Charlie\", group: \"A\" }\n   * ]\n   *\n   * const result = Array.groupBy(people, person => person.group)\n   * console.log(result)\n   * // {\n   * //  A: [{ name: \"Alice\", group: \"A\" }, { name: \"Charlie\", group: \"A\" }],\n   * //  B: [{ name: \"Bob\", group: \"B\" }]\n   * // }\n   * ```\n   *\n   * @category grouping\n   * @since 2.0.0\n   */\n  <A, K extends string | symbol>(self: Iterable<A>, f: (a: A) => K): Record<Record.ReadonlyRecord.NonLiteralKey<K>, NonEmptyArray<A>>\n} = dual(2, <A, K extends string | symbol>(\n  self: Iterable<A>,\n  f: (a: A) => K\n): Record<Record.ReadonlyRecord.NonLiteralKey<K>, NonEmptyArray<A>> => {\n  const out: Record<string | symbol, NonEmptyArray<A>> = {}\n  for (const a of self) {\n    const k = f(a)\n    if (Object.prototype.hasOwnProperty.call(out, k)) {\n      out[k].push(a)\n    } else {\n      out[k] = [a]\n    }\n  }\n  return out\n})\n\n/**\n * Calculates the union of two arrays using the provided equivalence relation.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const union = Array.unionWith([1, 2], [2, 3], (a, b) => a === b)\n * console.log(union) // [1, 2, 3]\n * ```\n *\n * @since 2.0.0\n */\nexport const unionWith: {\n  /**\n   * Calculates the union of two arrays using the provided equivalence relation.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const union = Array.unionWith([1, 2], [2, 3], (a, b) => a === b)\n   * console.log(union) // [1, 2, 3]\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <S extends Iterable<any>, T extends Iterable<any>>(\n    that: T,\n    isEquivalent: (self: ReadonlyArray.Infer<S>, that: ReadonlyArray.Infer<T>) => boolean\n  ): (self: S) => ReadonlyArray.OrNonEmpty<S, T, ReadonlyArray.Infer<S> | ReadonlyArray.Infer<T>>\n  /**\n   * Calculates the union of two arrays using the provided equivalence relation.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const union = Array.unionWith([1, 2], [2, 3], (a, b) => a === b)\n   * console.log(union) // [1, 2, 3]\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A, B>(\n    self: NonEmptyReadonlyArray<A>,\n    that: Iterable<B>,\n    isEquivalent: (self: A, that: B) => boolean\n  ): NonEmptyArray<A | B>\n  /**\n   * Calculates the union of two arrays using the provided equivalence relation.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const union = Array.unionWith([1, 2], [2, 3], (a, b) => a === b)\n   * console.log(union) // [1, 2, 3]\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A, B>(\n    self: Iterable<A>,\n    that: NonEmptyReadonlyArray<B>,\n    isEquivalent: (self: A, that: B) => boolean\n  ): NonEmptyArray<A | B>\n  /**\n   * Calculates the union of two arrays using the provided equivalence relation.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const union = Array.unionWith([1, 2], [2, 3], (a, b) => a === b)\n   * console.log(union) // [1, 2, 3]\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A, B>(\n    self: Iterable<A>,\n    that: Iterable<B>,\n    isEquivalent: (self: A, that: B) => boolean\n  ): Array<A | B>\n} = dual(3, <A>(self: Iterable<A>, that: Iterable<A>, isEquivalent: (self: A, that: A) => boolean): Array<A> => {\n  const a = fromIterable(self)\n  const b = fromIterable(that)\n  if (isNonEmptyReadonlyArray(a)) {\n    if (isNonEmptyReadonlyArray(b)) {\n      const dedupe = dedupeWith(isEquivalent)\n      return dedupe(appendAll(a, b))\n    }\n    return a\n  }\n  return b\n})\n\n/**\n * Creates a union of two arrays, removing duplicates.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.union([1, 2], [2, 3])\n * console.log(result) // [1, 2, 3]\n * ```\n *\n * @since 2.0.0\n */\nexport const union: {\n  /**\n   * Creates a union of two arrays, removing duplicates.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.union([1, 2], [2, 3])\n   * console.log(result) // [1, 2, 3]\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <T extends Iterable<any>>(that: T): <S extends Iterable<any>>(\n    self: S\n  ) => ReadonlyArray.OrNonEmpty<S, T, ReadonlyArray.Infer<S> | ReadonlyArray.Infer<T>>\n  /**\n   * Creates a union of two arrays, removing duplicates.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.union([1, 2], [2, 3])\n   * console.log(result) // [1, 2, 3]\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A, B>(self: NonEmptyReadonlyArray<A>, that: ReadonlyArray<B>): NonEmptyArray<A | B>\n  /**\n   * Creates a union of two arrays, removing duplicates.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.union([1, 2], [2, 3])\n   * console.log(result) // [1, 2, 3]\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A, B>(self: ReadonlyArray<A>, that: NonEmptyReadonlyArray<B>): NonEmptyArray<A | B>\n  /**\n   * Creates a union of two arrays, removing duplicates.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.union([1, 2], [2, 3])\n   * console.log(result) // [1, 2, 3]\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A, B>(self: Iterable<A>, that: Iterable<B>): Array<A | B>\n} = dual(2, <A, B>(self: Iterable<A>, that: Iterable<B>): Array<A | B> => unionWith(self, that, _equivalence))\n\n/**\n * Creates an `Array` of unique values that are included in all given `Iterable`s using the provided `isEquivalent` function.\n * The order and references of result values are determined by the first `Iterable`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const array1 = [{ id: 1 }, { id: 2 }, { id: 3 }]\n * const array2 = [{ id: 3 }, { id: 4 }, { id: 1 }]\n * const isEquivalent = (a: { id: number }, b: { id: number }) => a.id === b.id\n * const result = Array.intersectionWith(isEquivalent)(array2)(array1)\n * console.log(result) // [{ id: 1 }, { id: 3 }]\n * ```\n *\n * @since 2.0.0\n */\nexport const intersectionWith = <A>(isEquivalent: (self: A, that: A) => boolean): {\n  (that: Iterable<A>): (self: Iterable<A>) => Array<A>\n  (self: Iterable<A>, that: Iterable<A>): Array<A>\n} => {\n  const has = containsWith(isEquivalent)\n  return dual(\n    2,\n    (self: Iterable<A>, that: Iterable<A>): Array<A> => fromIterable(self).filter((a) => has(that, a))\n  )\n}\n\n/**\n * Creates an `Array` of unique values that are included in all given `Iterable`s.\n * The order and references of result values are determined by the first `Iterable`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.intersection([1, 2, 3], [3, 4, 1])\n * console.log(result) // [1, 3]\n * ```\n *\n * @since 2.0.0\n */\nexport const intersection: {\n  /**\n   * Creates an `Array` of unique values that are included in all given `Iterable`s.\n   * The order and references of result values are determined by the first `Iterable`.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.intersection([1, 2, 3], [3, 4, 1])\n   * console.log(result) // [1, 3]\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <B>(that: Iterable<B>): <A>(self: Iterable<A>) => Array<A & B>\n  /**\n   * Creates an `Array` of unique values that are included in all given `Iterable`s.\n   * The order and references of result values are determined by the first `Iterable`.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.intersection([1, 2, 3], [3, 4, 1])\n   * console.log(result) // [1, 3]\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A, B>(self: Iterable<A>, that: Iterable<B>): Array<A & B>\n} = intersectionWith(_equivalence)\n\n/**\n * Creates a `Array` of values not included in the other given `Iterable` using the provided `isEquivalent` function.\n * The order and references of result values are determined by the first `Iterable`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const array1 = [1, 2, 3]\n * const array2 = [2, 3, 4]\n * const difference = Array.differenceWith<number>((a, b) => a === b)(array1, array2)\n * console.log(difference) // [1]\n * ```\n *\n * @since 2.0.0\n */\nexport const differenceWith = <A>(isEquivalent: (self: A, that: A) => boolean): {\n  (that: Iterable<A>): (self: Iterable<A>) => Array<A>\n  (self: Iterable<A>, that: Iterable<A>): Array<A>\n} => {\n  const has = containsWith(isEquivalent)\n  return dual(\n    2,\n    (self: Iterable<A>, that: Iterable<A>): Array<A> => fromIterable(self).filter((a) => !has(that, a))\n  )\n}\n\n/**\n * Creates a `Array` of values not included in the other given `Iterable`.\n * The order and references of result values are determined by the first `Iterable`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const difference = Array.difference([1, 2, 3], [2, 3, 4])\n * console.log(difference) // [1]\n * ```\n *\n * @since 2.0.0\n */\nexport const difference: {\n  /**\n   * Creates a `Array` of values not included in the other given `Iterable`.\n   * The order and references of result values are determined by the first `Iterable`.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const difference = Array.difference([1, 2, 3], [2, 3, 4])\n   * console.log(difference) // [1]\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A>(that: Iterable<A>): (self: Iterable<A>) => Array<A>\n  /**\n   * Creates a `Array` of values not included in the other given `Iterable`.\n   * The order and references of result values are determined by the first `Iterable`.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const difference = Array.difference([1, 2, 3], [2, 3, 4])\n   * console.log(difference) // [1]\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A>(self: Iterable<A>, that: Iterable<A>): Array<A>\n} = differenceWith(_equivalence)\n\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport const empty: <A = never>() => Array<A> = () => []\n\n/**\n * Constructs a new `NonEmptyArray<A>` from the specified value.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport const of = <A>(a: A): NonEmptyArray<A> => [a]\n\n/**\n * @since 2.0.0\n */\nexport declare namespace ReadonlyArray {\n  /**\n   * @since 2.0.0\n   */\n  export type Infer<S extends Iterable<any>> = S extends ReadonlyArray<infer A> ? A\n    : S extends Iterable<infer A> ? A\n    : never\n\n  /**\n   * @since 2.0.0\n   */\n  export type With<S extends Iterable<any>, A> = S extends NonEmptyReadonlyArray<any> ? NonEmptyArray<A>\n    : Array<A>\n\n  /**\n   * @since 2.0.0\n   */\n  export type OrNonEmpty<\n    S extends Iterable<any>,\n    T extends Iterable<any>,\n    A\n  > = S extends NonEmptyReadonlyArray<any> ? NonEmptyArray<A>\n    : T extends NonEmptyReadonlyArray<any> ? NonEmptyArray<A>\n    : Array<A>\n\n  /**\n   * @since 2.0.0\n   */\n  export type AndNonEmpty<\n    S extends Iterable<any>,\n    T extends Iterable<any>,\n    A\n  > = S extends NonEmptyReadonlyArray<any> ? T extends NonEmptyReadonlyArray<any> ? NonEmptyArray<A>\n    : Array<A>\n    : Array<A>\n\n  /**\n   * @since 2.0.0\n   */\n  export type Flatten<T extends ReadonlyArray<ReadonlyArray<any>>> = T extends\n    NonEmptyReadonlyArray<NonEmptyReadonlyArray<infer A>> ? NonEmptyArray<A>\n    : T extends ReadonlyArray<ReadonlyArray<infer A>> ? Array<A>\n    : never\n}\n\n/**\n * @category mapping\n * @since 2.0.0\n */\nexport const map: {\n  /**\n   * @category mapping\n   * @since 2.0.0\n   */\n  <S extends ReadonlyArray<any>, B>(f: (a: ReadonlyArray.Infer<S>, i: number) => B): (self: S) => ReadonlyArray.With<S, B>\n  /**\n   * @category mapping\n   * @since 2.0.0\n   */\n  <S extends ReadonlyArray<any>, B>(self: S, f: (a: ReadonlyArray.Infer<S>, i: number) => B): ReadonlyArray.With<S, B>\n} = dual(2, <A, B>(self: ReadonlyArray<A>, f: (a: A, i: number) => B): Array<B> => self.map(f))\n\n/**\n * Applies a function to each element in an array and returns a new array containing the concatenated mapped elements.\n *\n * @category sequencing\n * @since 2.0.0\n */\nexport const flatMap: {\n  /**\n   * Applies a function to each element in an array and returns a new array containing the concatenated mapped elements.\n   *\n   * @category sequencing\n   * @since 2.0.0\n   */\n  <S extends ReadonlyArray<any>, T extends ReadonlyArray<any>>(f: (a: ReadonlyArray.Infer<S>, i: number) => T): (self: S) => ReadonlyArray.AndNonEmpty<S, T, ReadonlyArray.Infer<T>>\n  /**\n   * Applies a function to each element in an array and returns a new array containing the concatenated mapped elements.\n   *\n   * @category sequencing\n   * @since 2.0.0\n   */\n  <A, B>(\n    self: NonEmptyReadonlyArray<A>,\n    f: (a: A, i: number) => NonEmptyReadonlyArray<B>\n  ): NonEmptyArray<B>\n  /**\n   * Applies a function to each element in an array and returns a new array containing the concatenated mapped elements.\n   *\n   * @category sequencing\n   * @since 2.0.0\n   */\n  <A, B>(self: ReadonlyArray<A>, f: (a: A, i: number) => ReadonlyArray<B>): Array<B>\n} = dual(\n  2,\n  <A, B>(self: ReadonlyArray<A>, f: (a: A, i: number) => ReadonlyArray<B>): Array<B> => {\n    if (isEmptyReadonlyArray(self)) {\n      return []\n    }\n    const out: Array<B> = []\n    for (let i = 0; i < self.length; i++) {\n      const inner = f(self[i], i)\n      for (let j = 0; j < inner.length; j++) {\n        out.push(inner[j])\n      }\n    }\n    return out\n  }\n)\n\n/**\n * Combines multiple arrays into a single array by concatenating all elements\n * from each nested array. This function ensures that the structure of nested\n * arrays is collapsed into a single, flat array.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.flatten([[1, 2], [], [3, 4], [], [5, 6]])\n * console.log(result) // [1, 2, 3, 4, 5, 6]\n * ```\n *\n * @category sequencing\n * @since 2.0.0\n */\nexport const flatten: <S extends ReadonlyArray<ReadonlyArray<any>>>(self: S) => ReadonlyArray.Flatten<S> = flatMap(\n  identity\n) as any\n\n/**\n * Applies a function to each element of the `Iterable` and filters based on the result, keeping the transformed values where the function returns `Some`.\n * This method combines filtering and mapping functionalities, allowing transformations and filtering of elements based on a single function pass.\n *\n * **Example**\n *\n * ```ts\n * import { Array, Option } from \"effect\"\n *\n * const evenSquares = (x: number) => x % 2 === 0 ? Option.some(x * x) : Option.none()\n *\n * const result = Array.filterMap([1, 2, 3, 4, 5], evenSquares);\n * console.log(result) // [4, 16]\n * ```\n *\n * @category filtering\n * @since 2.0.0\n */\nexport const filterMap: {\n  /**\n   * Applies a function to each element of the `Iterable` and filters based on the result, keeping the transformed values where the function returns `Some`.\n   * This method combines filtering and mapping functionalities, allowing transformations and filtering of elements based on a single function pass.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array, Option } from \"effect\"\n   *\n   * const evenSquares = (x: number) => x % 2 === 0 ? Option.some(x * x) : Option.none()\n   *\n   * const result = Array.filterMap([1, 2, 3, 4, 5], evenSquares);\n   * console.log(result) // [4, 16]\n   * ```\n   *\n   * @category filtering\n   * @since 2.0.0\n   */\n  <A, B>(f: (a: A, i: number) => Option.Option<B>): (self: Iterable<A>) => Array<B>\n  /**\n   * Applies a function to each element of the `Iterable` and filters based on the result, keeping the transformed values where the function returns `Some`.\n   * This method combines filtering and mapping functionalities, allowing transformations and filtering of elements based on a single function pass.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array, Option } from \"effect\"\n   *\n   * const evenSquares = (x: number) => x % 2 === 0 ? Option.some(x * x) : Option.none()\n   *\n   * const result = Array.filterMap([1, 2, 3, 4, 5], evenSquares);\n   * console.log(result) // [4, 16]\n   * ```\n   *\n   * @category filtering\n   * @since 2.0.0\n   */\n  <A, B>(self: Iterable<A>, f: (a: A, i: number) => Option.Option<B>): Array<B>\n} = dual(\n  2,\n  <A, B>(self: Iterable<A>, f: (a: A, i: number) => Option.Option<B>): Array<B> => {\n    const as = fromIterable(self)\n    const out: Array<B> = []\n    for (let i = 0; i < as.length; i++) {\n      const o = f(as[i], i)\n      if (Option.isSome(o)) {\n        out.push(o.value)\n      }\n    }\n    return out\n  }\n)\n\n/**\n * Applies a function to each element of the array and filters based on the result, stopping when a condition is not met.\n * This method combines filtering and mapping in a single pass, and short-circuits, i.e., stops processing, as soon as the function returns `None`.\n * This is useful when you need to transform an array but only up to the point where a certain condition holds true.\n *\n * **Example**\n *\n * ```ts\n * import { Array, Option } from \"effect\"\n *\n * const toSquareTillOdd = (x: number) => x % 2 === 0 ? Option.some(x * x) : Option.none()\n *\n * const result = Array.filterMapWhile([2, 4, 5], toSquareTillOdd)\n * console.log(result) // [4, 16]\n * ```\n *\n * @category filtering\n * @since 2.0.0\n */\nexport const filterMapWhile: {\n  /**\n   * Applies a function to each element of the array and filters based on the result, stopping when a condition is not met.\n   * This method combines filtering and mapping in a single pass, and short-circuits, i.e., stops processing, as soon as the function returns `None`.\n   * This is useful when you need to transform an array but only up to the point where a certain condition holds true.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array, Option } from \"effect\"\n   *\n   * const toSquareTillOdd = (x: number) => x % 2 === 0 ? Option.some(x * x) : Option.none()\n   *\n   * const result = Array.filterMapWhile([2, 4, 5], toSquareTillOdd)\n   * console.log(result) // [4, 16]\n   * ```\n   *\n   * @category filtering\n   * @since 2.0.0\n   */\n  <A, B>(f: (a: A, i: number) => Option.Option<B>): (self: Iterable<A>) => Array<B>\n  /**\n   * Applies a function to each element of the array and filters based on the result, stopping when a condition is not met.\n   * This method combines filtering and mapping in a single pass, and short-circuits, i.e., stops processing, as soon as the function returns `None`.\n   * This is useful when you need to transform an array but only up to the point where a certain condition holds true.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array, Option } from \"effect\"\n   *\n   * const toSquareTillOdd = (x: number) => x % 2 === 0 ? Option.some(x * x) : Option.none()\n   *\n   * const result = Array.filterMapWhile([2, 4, 5], toSquareTillOdd)\n   * console.log(result) // [4, 16]\n   * ```\n   *\n   * @category filtering\n   * @since 2.0.0\n   */\n  <A, B>(self: Iterable<A>, f: (a: A, i: number) => Option.Option<B>): Array<B>\n} = dual(2, <A, B>(self: Iterable<A>, f: (a: A, i: number) => Option.Option<B>) => {\n  let i = 0\n  const out: Array<B> = []\n  for (const a of self) {\n    const b = f(a, i)\n    if (Option.isSome(b)) {\n      out.push(b.value)\n    } else {\n      break\n    }\n    i++\n  }\n  return out\n})\n\n/**\n * Applies a function to each element of the `Iterable`, categorizing the results into two separate arrays.\n * This function is particularly useful for operations where each element can result in two possible types,\n * and you want to separate these types into different collections. For instance, separating validation results\n * into successes and failures.\n *\n * **Example**\n *\n * ```ts\n * import { Array, Either } from \"effect\";\n *\n * const isEven = (x: number) => x % 2 === 0\n *\n * const result = Array.partitionMap([1, 2, 3, 4, 5], x =>\n *   isEven(x) ? Either.right(x) : Either.left(x)\n * )\n * console.log(result)\n * // [\n * //   [1, 3, 5],\n * //   [2, 4]\n * // ]\n * ```\n *\n * @category filtering\n * @since 2.0.0\n */\nexport const partitionMap: {\n  /**\n   * Applies a function to each element of the `Iterable`, categorizing the results into two separate arrays.\n   * This function is particularly useful for operations where each element can result in two possible types,\n   * and you want to separate these types into different collections. For instance, separating validation results\n   * into successes and failures.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array, Either } from \"effect\";\n   *\n   * const isEven = (x: number) => x % 2 === 0\n   *\n   * const result = Array.partitionMap([1, 2, 3, 4, 5], x =>\n   *   isEven(x) ? Either.right(x) : Either.left(x)\n   * )\n   * console.log(result)\n   * // [\n   * //   [1, 3, 5],\n   * //   [2, 4]\n   * // ]\n   * ```\n   *\n   * @category filtering\n   * @since 2.0.0\n   */\n  <A, B, C>(f: (a: A, i: number) => Either.Either<C, B>): (self: Iterable<A>) => [left: Array<B>, right: Array<C>]\n  /**\n   * Applies a function to each element of the `Iterable`, categorizing the results into two separate arrays.\n   * This function is particularly useful for operations where each element can result in two possible types,\n   * and you want to separate these types into different collections. For instance, separating validation results\n   * into successes and failures.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array, Either } from \"effect\";\n   *\n   * const isEven = (x: number) => x % 2 === 0\n   *\n   * const result = Array.partitionMap([1, 2, 3, 4, 5], x =>\n   *   isEven(x) ? Either.right(x) : Either.left(x)\n   * )\n   * console.log(result)\n   * // [\n   * //   [1, 3, 5],\n   * //   [2, 4]\n   * // ]\n   * ```\n   *\n   * @category filtering\n   * @since 2.0.0\n   */\n  <A, B, C>(self: Iterable<A>, f: (a: A, i: number) => Either.Either<C, B>): [left: Array<B>, right: Array<C>]\n} = dual(\n  2,\n  <A, B, C>(self: Iterable<A>, f: (a: A, i: number) => Either.Either<C, B>): [left: Array<B>, right: Array<C>] => {\n    const left: Array<B> = []\n    const right: Array<C> = []\n    const as = fromIterable(self)\n    for (let i = 0; i < as.length; i++) {\n      const e = f(as[i], i)\n      if (Either.isLeft(e)) {\n        left.push(e.left)\n      } else {\n        right.push(e.right)\n      }\n    }\n    return [left, right]\n  }\n)\n\n/**\n * Retrieves the `Some` values from an `Iterable` of `Option`s, collecting them into an array.\n *\n * **Example**\n *\n * ```ts\n * import { Array, Option } from \"effect\"\n *\n * const result = Array.getSomes([Option.some(1), Option.none(), Option.some(2)])\n * console.log(result) // [1, 2]\n * ```\n *\n * @category filtering\n * @since 2.0.0\n */\n\nexport const getSomes: <T extends Iterable<Option.Option<X>>, X = any>(\n  self: T\n) => Array<Option.Option.Value<ReadonlyArray.Infer<T>>> = filterMap(identity as any)\n\n/**\n * Retrieves the `Left` values from an `Iterable` of `Either`s, collecting them into an array.\n *\n * **Example**\n *\n * ```ts\n * import { Array, Either } from \"effect\"\n *\n * const result = Array.getLefts([Either.right(1), Either.left(\"err\"), Either.right(2)])\n * console.log(result) // [\"err\"]\n * ```\n *\n * @category filtering\n * @since 2.0.0\n */\nexport const getLefts = <T extends Iterable<Either.Either<any, any>>>(\n  self: T\n): Array<Either.Either.Left<ReadonlyArray.Infer<T>>> => {\n  const out: Array<any> = []\n  for (const a of self) {\n    if (Either.isLeft(a)) {\n      out.push(a.left)\n    }\n  }\n\n  return out\n}\n\n/**\n * Retrieves the `Right` values from an `Iterable` of `Either`s, collecting them into an array.\n *\n * **Example**\n *\n * ```ts\n * import { Array, Either } from \"effect\"\n *\n * const result = Array.getRights([Either.right(1), Either.left(\"err\"), Either.right(2)])\n * console.log(result) // [1, 2]\n * ```\n *\n * @category filtering\n * @since 2.0.0\n */\nexport const getRights = <T extends Iterable<Either.Either<any, any>>>(\n  self: T\n): Array<Either.Either.Right<ReadonlyArray.Infer<T>>> => {\n  const out: Array<any> = []\n  for (const a of self) {\n    if (Either.isRight(a)) {\n      out.push(a.right)\n    }\n  }\n\n  return out\n}\n\n/**\n * @category filtering\n * @since 2.0.0\n */\nexport const filter: {\n  /**\n   * @category filtering\n   * @since 2.0.0\n   */\n  <A, B extends A>(refinement: (a: NoInfer<A>, i: number) => a is B): (self: Iterable<A>) => Array<B>\n  /**\n   * @category filtering\n   * @since 2.0.0\n   */\n  <A>(predicate: (a: NoInfer<A>, i: number) => boolean): (self: Iterable<A>) => Array<A>\n  /**\n   * @category filtering\n   * @since 2.0.0\n   */\n  <A, B extends A>(self: Iterable<A>, refinement: (a: A, i: number) => a is B): Array<B>\n  /**\n   * @category filtering\n   * @since 2.0.0\n   */\n  <A>(self: Iterable<A>, predicate: (a: A, i: number) => boolean): Array<A>\n} = dual(\n  2,\n  <A>(self: Iterable<A>, predicate: (a: A, i: number) => boolean): Array<A> => {\n    const as = fromIterable(self)\n    const out: Array<A> = []\n    for (let i = 0; i < as.length; i++) {\n      if (predicate(as[i], i)) {\n        out.push(as[i])\n      }\n    }\n    return out\n  }\n)\n\n/**\n * Separate elements based on a predicate that also exposes the index of the element.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.partition([1, 2, 3, 4], n => n % 2 === 0)\n * console.log(result) // [[1, 3], [2, 4]]\n * ```\n *\n * @category filtering\n * @since 2.0.0\n */\nexport const partition: {\n  /**\n   * Separate elements based on a predicate that also exposes the index of the element.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.partition([1, 2, 3, 4], n => n % 2 === 0)\n   * console.log(result) // [[1, 3], [2, 4]]\n   * ```\n   *\n   * @category filtering\n   * @since 2.0.0\n   */\n  <A, B extends A>(refinement: (a: NoInfer<A>, i: number) => a is B): (\n    self: Iterable<A>\n  ) => [excluded: Array<Exclude<A, B>>, satisfying: Array<B>]\n  /**\n   * Separate elements based on a predicate that also exposes the index of the element.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.partition([1, 2, 3, 4], n => n % 2 === 0)\n   * console.log(result) // [[1, 3], [2, 4]]\n   * ```\n   *\n   * @category filtering\n   * @since 2.0.0\n   */\n  <A>(predicate: (a: NoInfer<A>, i: number) => boolean): (self: Iterable<A>) => [excluded: Array<A>, satisfying: Array<A>]\n  /**\n   * Separate elements based on a predicate that also exposes the index of the element.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.partition([1, 2, 3, 4], n => n % 2 === 0)\n   * console.log(result) // [[1, 3], [2, 4]]\n   * ```\n   *\n   * @category filtering\n   * @since 2.0.0\n   */\n  <A, B extends A>(self: Iterable<A>, refinement: (a: A, i: number) => a is B): [excluded: Array<Exclude<A, B>>, satisfying: Array<B>]\n  /**\n   * Separate elements based on a predicate that also exposes the index of the element.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.partition([1, 2, 3, 4], n => n % 2 === 0)\n   * console.log(result) // [[1, 3], [2, 4]]\n   * ```\n   *\n   * @category filtering\n   * @since 2.0.0\n   */\n  <A>(self: Iterable<A>, predicate: (a: A, i: number) => boolean): [excluded: Array<A>, satisfying: Array<A>]\n} = dual(\n  2,\n  <A>(self: Iterable<A>, predicate: (a: A, i: number) => boolean): [excluded: Array<A>, satisfying: Array<A>] => {\n    const left: Array<A> = []\n    const right: Array<A> = []\n    const as = fromIterable(self)\n    for (let i = 0; i < as.length; i++) {\n      if (predicate(as[i], i)) {\n        right.push(as[i])\n      } else {\n        left.push(as[i])\n      }\n    }\n    return [left, right]\n  }\n)\n\n/**\n * Separates an `Iterable` into two arrays based on a predicate.\n *\n * @category filtering\n * @since 2.0.0\n */\nexport const separate: <T extends Iterable<Either.Either<any, any>>>(\n  self: T\n) => [Array<Either.Either.Left<ReadonlyArray.Infer<T>>>, Array<Either.Either.Right<ReadonlyArray.Infer<T>>>] =\n  partitionMap(identity)\n\n/**\n * Reduces an array from the left.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.reduce([1, 2, 3], 0, (acc, n) => acc + n)\n * console.log(result) // 6\n * ```\n *\n * @category folding\n * @since 2.0.0\n */\nexport const reduce: {\n  /**\n   * Reduces an array from the left.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.reduce([1, 2, 3], 0, (acc, n) => acc + n)\n   * console.log(result) // 6\n   * ```\n   *\n   * @category folding\n   * @since 2.0.0\n   */\n  <B, A>(b: B, f: (b: B, a: A, i: number) => B): (self: Iterable<A>) => B\n  /**\n   * Reduces an array from the left.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.reduce([1, 2, 3], 0, (acc, n) => acc + n)\n   * console.log(result) // 6\n   * ```\n   *\n   * @category folding\n   * @since 2.0.0\n   */\n  <A, B>(self: Iterable<A>, b: B, f: (b: B, a: A, i: number) => B): B\n} = dual(\n  3,\n  <B, A>(self: Iterable<A>, b: B, f: (b: B, a: A, i: number) => B): B =>\n    fromIterable(self).reduce((b, a, i) => f(b, a, i), b)\n)\n\n/**\n * Reduces an array from the right.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.reduceRight([1, 2, 3], 0, (acc, n) => acc + n)\n * console.log(result) // 6\n * ```\n *\n * @category folding\n * @since 2.0.0\n */\nexport const reduceRight: {\n  /**\n   * Reduces an array from the right.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.reduceRight([1, 2, 3], 0, (acc, n) => acc + n)\n   * console.log(result) // 6\n   * ```\n   *\n   * @category folding\n   * @since 2.0.0\n   */\n  <B, A>(b: B, f: (b: B, a: A, i: number) => B): (self: Iterable<A>) => B\n  /**\n   * Reduces an array from the right.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.reduceRight([1, 2, 3], 0, (acc, n) => acc + n)\n   * console.log(result) // 6\n   * ```\n   *\n   * @category folding\n   * @since 2.0.0\n   */\n  <A, B>(self: Iterable<A>, b: B, f: (b: B, a: A, i: number) => B): B\n} = dual(\n  3,\n  <A, B>(self: Iterable<A>, b: B, f: (b: B, a: A, i: number) => B): B =>\n    fromIterable(self).reduceRight((b, a, i) => f(b, a, i), b)\n)\n\n/**\n * Lifts a predicate into an array.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const isEven = (n: number) => n % 2 === 0\n * const to = Array.liftPredicate(isEven)\n * console.log(to(1)) // []\n * console.log(to(2)) // [2]\n * ```\n *\n * @category lifting\n * @since 2.0.0\n */\nexport const liftPredicate: { // Note: I intentionally avoid using the NoInfer pattern here.\n  <A, B extends A>(refinement: Predicate.Refinement<A, B>): (a: A) => Array<B>\n  /**\n   * Lifts a predicate into an array.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const isEven = (n: number) => n % 2 === 0\n   * const to = Array.liftPredicate(isEven)\n   * console.log(to(1)) // []\n   * console.log(to(2)) // [2]\n   * ```\n   *\n   * @category lifting\n   * @since 2.0.0\n   */\n  <A>(predicate: Predicate.Predicate<A>): <B extends A>(b: B) => Array<B>\n} = <A>(predicate: Predicate.Predicate<A>) => <B extends A>(b: B): Array<B> => predicate(b) ? [b] : []\n\n/**\n * @category lifting\n * @since 2.0.0\n */\nexport const liftOption = <A extends Array<unknown>, B>(\n  f: (...a: A) => Option.Option<B>\n) =>\n(...a: A): Array<B> => fromOption(f(...a))\n\n/**\n * @category conversions\n * @since 2.0.0\n */\nexport const fromNullable = <A>(a: A): Array<NonNullable<A>> => a == null ? empty() : [a as NonNullable<A>]\n\n/**\n * @category lifting\n * @since 2.0.0\n */\nexport const liftNullable = <A extends Array<unknown>, B>(\n  f: (...a: A) => B | null | undefined\n): (...a: A) => Array<NonNullable<B>> =>\n(...a) => fromNullable(f(...a))\n\n/**\n * Maps over an array and flattens the result, removing null and undefined values.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.flatMapNullable([1, 2, 3], n => (n % 2 === 0 ? null : n))\n * console.log(result) // [1, 3]\n *\n * // Explanation:\n * // The array of numbers [1, 2, 3] is mapped with a function that returns null for even numbers\n * // and the number itself for odd numbers. The resulting array [1, null, 3] is then flattened\n * // to remove null values, resulting in [1, 3].\n * ```\n *\n * @category sequencing\n * @since 2.0.0\n */\nexport const flatMapNullable: {\n  /**\n   * Maps over an array and flattens the result, removing null and undefined values.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.flatMapNullable([1, 2, 3], n => (n % 2 === 0 ? null : n))\n   * console.log(result) // [1, 3]\n   *\n   * // Explanation:\n   * // The array of numbers [1, 2, 3] is mapped with a function that returns null for even numbers\n   * // and the number itself for odd numbers. The resulting array [1, null, 3] is then flattened\n   * // to remove null values, resulting in [1, 3].\n   * ```\n   *\n   * @category sequencing\n   * @since 2.0.0\n   */\n  <A, B>(f: (a: A) => B | null | undefined): (self: ReadonlyArray<A>) => Array<NonNullable<B>>\n  /**\n   * Maps over an array and flattens the result, removing null and undefined values.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.flatMapNullable([1, 2, 3], n => (n % 2 === 0 ? null : n))\n   * console.log(result) // [1, 3]\n   *\n   * // Explanation:\n   * // The array of numbers [1, 2, 3] is mapped with a function that returns null for even numbers\n   * // and the number itself for odd numbers. The resulting array [1, null, 3] is then flattened\n   * // to remove null values, resulting in [1, 3].\n   * ```\n   *\n   * @category sequencing\n   * @since 2.0.0\n   */\n  <A, B>(self: ReadonlyArray<A>, f: (a: A) => B | null | undefined): Array<NonNullable<B>>\n} = dual(\n  2,\n  <A, B>(self: ReadonlyArray<A>, f: (a: A) => B | null | undefined): Array<NonNullable<B>> =>\n    flatMap(self, (a) => fromNullable(f(a)))\n)\n\n/**\n * Lifts a function that returns an `Either` into a function that returns an array.\n * If the `Either` is a left, it returns an empty array.\n * If the `Either` is a right, it returns an array with the right value.\n *\n * **Example**\n *\n * ```ts\n * import { Array, Either } from \"effect\"\n *\n * const parseNumber = (s: string): Either.Either<number, Error> =>\n *   isNaN(Number(s)) ? Either.left(new Error(\"Not a number\")) : Either.right(Number(s))\n *\n * const liftedParseNumber = Array.liftEither(parseNumber)\n *\n * const result1 = liftedParseNumber(\"42\")\n * console.log(result1) // [42]\n *\n * const result2 = liftedParseNumber(\"not a number\")\n * console.log(result2) // []\n *\n * // Explanation:\n * // The function parseNumber is lifted to return an array.\n * // When parsing \"42\", it returns an Either.left with the number 42, resulting in [42].\n * // When parsing \"not a number\", it returns an Either.right with an error, resulting in an empty array [].\n * ```\n *\n * @category lifting\n * @since 2.0.0\n */\nexport const liftEither = <A extends Array<unknown>, E, B>(\n  f: (...a: A) => Either.Either<B, E>\n) =>\n(...a: A): Array<B> => {\n  const e = f(...a)\n  return Either.isLeft(e) ? [] : [e.right]\n}\n\n/**\n * Check if a predicate holds true for every `ReadonlyArray` element.\n *\n * @category elements\n * @since 2.0.0\n */\nexport const every: {\n  /**\n   * Check if a predicate holds true for every `ReadonlyArray` element.\n   *\n   * @category elements\n   * @since 2.0.0\n   */\n  <A, B extends A>(refinement: (a: NoInfer<A>, i: number) => a is B): (self: ReadonlyArray<A>) => self is ReadonlyArray<B>\n  /**\n   * Check if a predicate holds true for every `ReadonlyArray` element.\n   *\n   * @category elements\n   * @since 2.0.0\n   */\n  <A>(predicate: (a: NoInfer<A>, i: number) => boolean): (self: ReadonlyArray<A>) => boolean\n  /**\n   * Check if a predicate holds true for every `ReadonlyArray` element.\n   *\n   * @category elements\n   * @since 2.0.0\n   */\n  <A, B extends A>(self: ReadonlyArray<A>, refinement: (a: A, i: number) => a is B): self is ReadonlyArray<B>\n  /**\n   * Check if a predicate holds true for every `ReadonlyArray` element.\n   *\n   * @category elements\n   * @since 2.0.0\n   */\n  <A>(self: ReadonlyArray<A>, predicate: (a: A, i: number) => boolean): boolean\n} = dual(\n  2,\n  <A, B extends A>(self: ReadonlyArray<A>, refinement: (a: A, i: number) => a is B): self is ReadonlyArray<B> =>\n    self.every(refinement)\n)\n\n/**\n * Check if a predicate holds true for some `ReadonlyArray` element.\n *\n * @category elements\n * @since 2.0.0\n */\nexport const some: {\n  /**\n   * Check if a predicate holds true for some `ReadonlyArray` element.\n   *\n   * @category elements\n   * @since 2.0.0\n   */\n  <A>(predicate: (a: NoInfer<A>, i: number) => boolean): (self: ReadonlyArray<A>) => self is NonEmptyReadonlyArray<A>\n  /**\n   * Check if a predicate holds true for some `ReadonlyArray` element.\n   *\n   * @category elements\n   * @since 2.0.0\n   */\n  <A>(self: ReadonlyArray<A>, predicate: (a: A, i: number) => boolean): self is NonEmptyReadonlyArray<A>\n} = dual(\n  2,\n  <A>(self: ReadonlyArray<A>, predicate: (a: A, i: number) => boolean): self is NonEmptyReadonlyArray<A> =>\n    self.some(predicate)\n)\n\n/**\n * Extends an array with a function that maps each subarray to a value.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.extend([1, 2, 3], as => as.length)\n * console.log(result) // [3, 2, 1]\n *\n * // Explanation:\n * // The function maps each subarray starting from each element to its length.\n * // The subarrays are: [1, 2, 3], [2, 3], [3].\n * // The lengths are: 3, 2, 1.\n * // Therefore, the result is [3, 2, 1].\n * ```\n *\n * @since 2.0.0\n */\nexport const extend: {\n  /**\n   * Extends an array with a function that maps each subarray to a value.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.extend([1, 2, 3], as => as.length)\n   * console.log(result) // [3, 2, 1]\n   *\n   * // Explanation:\n   * // The function maps each subarray starting from each element to its length.\n   * // The subarrays are: [1, 2, 3], [2, 3], [3].\n   * // The lengths are: 3, 2, 1.\n   * // Therefore, the result is [3, 2, 1].\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A, B>(f: (as: ReadonlyArray<A>) => B): (self: ReadonlyArray<A>) => Array<B>\n  /**\n   * Extends an array with a function that maps each subarray to a value.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.extend([1, 2, 3], as => as.length)\n   * console.log(result) // [3, 2, 1]\n   *\n   * // Explanation:\n   * // The function maps each subarray starting from each element to its length.\n   * // The subarrays are: [1, 2, 3], [2, 3], [3].\n   * // The lengths are: 3, 2, 1.\n   * // Therefore, the result is [3, 2, 1].\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A, B>(self: ReadonlyArray<A>, f: (as: ReadonlyArray<A>) => B): Array<B>\n} = dual(\n  2,\n  <A, B>(self: ReadonlyArray<A>, f: (as: ReadonlyArray<A>) => B): Array<B> => self.map((_, i, as) => f(as.slice(i)))\n)\n\n/**\n * Finds the minimum element in an array based on a comparator.\n *\n * **Example**\n *\n * ```ts\n * import { Array, Order } from \"effect\"\n *\n * const result = Array.min([3, 1, 2], Order.number)\n * console.log(result) // 1\n * ```\n *\n * @since 2.0.0\n */\nexport const min: {\n  /**\n   * Finds the minimum element in an array based on a comparator.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array, Order } from \"effect\"\n   *\n   * const result = Array.min([3, 1, 2], Order.number)\n   * console.log(result) // 1\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A>(O: Order.Order<A>): (self: NonEmptyReadonlyArray<A>) => A\n  /**\n   * Finds the minimum element in an array based on a comparator.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array, Order } from \"effect\"\n   *\n   * const result = Array.min([3, 1, 2], Order.number)\n   * console.log(result) // 1\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A>(self: NonEmptyReadonlyArray<A>, O: Order.Order<A>): A\n} = dual(2, <A>(self: NonEmptyReadonlyArray<A>, O: Order.Order<A>): A => self.reduce(Order.min(O)))\n\n/**\n * Finds the maximum element in an array based on a comparator.\n *\n * **Example**\n *\n * ```ts\n * import { Array, Order } from \"effect\"\n *\n * const result = Array.max([3, 1, 2], Order.number)\n * console.log(result) // 3\n * ```\n *\n * @since 2.0.0\n */\nexport const max: {\n  /**\n   * Finds the maximum element in an array based on a comparator.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array, Order } from \"effect\"\n   *\n   * const result = Array.max([3, 1, 2], Order.number)\n   * console.log(result) // 3\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A>(O: Order.Order<A>): (self: NonEmptyReadonlyArray<A>) => A\n  /**\n   * Finds the maximum element in an array based on a comparator.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array, Order } from \"effect\"\n   *\n   * const result = Array.max([3, 1, 2], Order.number)\n   * console.log(result) // 3\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A>(self: NonEmptyReadonlyArray<A>, O: Order.Order<A>): A\n} = dual(2, <A>(self: NonEmptyReadonlyArray<A>, O: Order.Order<A>): A => self.reduce(Order.max(O)))\n\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport const unfold = <B, A>(b: B, f: (b: B) => Option.Option<readonly [A, B]>): Array<A> => {\n  const out: Array<A> = []\n  let next: B = b\n  let o: Option.Option<readonly [A, B]>\n  while (Option.isSome(o = f(next))) {\n    const [a, b] = o.value\n    out.push(a)\n    next = b\n  }\n  return out\n}\n\n/**\n * This function creates and returns a new `Order` for an array of values based on a given `Order` for the elements of the array.\n * The returned `Order` compares two arrays by applying the given `Order` to each element in the arrays.\n * If all elements are equal, the arrays are then compared based on their length.\n * It is useful when you need to compare two arrays of the same type and you have a specific way of comparing each element of the array.\n *\n * @category instances\n * @since 2.0.0\n */\nexport const getOrder: <A>(O: Order.Order<A>) => Order.Order<ReadonlyArray<A>> = Order.array\n\n/**\n * Creates an equivalence relation for arrays.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const eq = Array.getEquivalence<number>((a, b) => a === b)\n * console.log(eq([1, 2, 3], [1, 2, 3])) // true\n * ```\n *\n * @category instances\n * @since 2.0.0\n */\nexport const getEquivalence: <A>(\n  isEquivalent: Equivalence.Equivalence<A>\n) => Equivalence.Equivalence<ReadonlyArray<A>> = Equivalence.array\n\n/**\n * Performs a side-effect for each element of the `Iterable`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * Array.forEach([1, 2, 3], n => console.log(n)) // 1, 2, 3\n * ```\n *\n * @since 2.0.0\n */\nexport const forEach: {\n  /**\n   * Performs a side-effect for each element of the `Iterable`.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * Array.forEach([1, 2, 3], n => console.log(n)) // 1, 2, 3\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A>(f: (a: A, i: number) => void): (self: Iterable<A>) => void\n  /**\n   * Performs a side-effect for each element of the `Iterable`.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * Array.forEach([1, 2, 3], n => console.log(n)) // 1, 2, 3\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A>(self: Iterable<A>, f: (a: A, i: number) => void): void\n} = dual(2, <A>(self: Iterable<A>, f: (a: A, i: number) => void): void => fromIterable(self).forEach((a, i) => f(a, i)))\n\n/**\n * Remove duplicates from an `Iterable` using the provided `isEquivalent` function,\n * preserving the order of the first occurrence of each element.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.dedupeWith([1, 2, 2, 3, 3, 3], (a, b) => a === b)\n * console.log(result) // [1, 2, 3]\n * ```\n *\n * @since 2.0.0\n */\nexport const dedupeWith: {\n  /**\n   * Remove duplicates from an `Iterable` using the provided `isEquivalent` function,\n   * preserving the order of the first occurrence of each element.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.dedupeWith([1, 2, 2, 3, 3, 3], (a, b) => a === b)\n   * console.log(result) // [1, 2, 3]\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <S extends Iterable<any>>(\n    isEquivalent: (self: ReadonlyArray.Infer<S>, that: ReadonlyArray.Infer<S>) => boolean\n  ): (self: S) => ReadonlyArray.With<S, ReadonlyArray.Infer<S>>\n  /**\n   * Remove duplicates from an `Iterable` using the provided `isEquivalent` function,\n   * preserving the order of the first occurrence of each element.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.dedupeWith([1, 2, 2, 3, 3, 3], (a, b) => a === b)\n   * console.log(result) // [1, 2, 3]\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A>(\n    self: NonEmptyReadonlyArray<A>,\n    isEquivalent: (self: A, that: A) => boolean\n  ): NonEmptyArray<A>\n  /**\n   * Remove duplicates from an `Iterable` using the provided `isEquivalent` function,\n   * preserving the order of the first occurrence of each element.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.dedupeWith([1, 2, 2, 3, 3, 3], (a, b) => a === b)\n   * console.log(result) // [1, 2, 3]\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A>(self: Iterable<A>, isEquivalent: (self: A, that: A) => boolean): Array<A>\n} = dual(\n  2,\n  <A>(self: Iterable<A>, isEquivalent: (self: A, that: A) => boolean): Array<A> => {\n    const input = fromIterable(self)\n    if (isNonEmptyReadonlyArray(input)) {\n      const out: NonEmptyArray<A> = [headNonEmpty(input)]\n      const rest = tailNonEmpty(input)\n      for (const r of rest) {\n        if (out.every((a) => !isEquivalent(r, a))) {\n          out.push(r)\n        }\n      }\n      return out\n    }\n    return []\n  }\n)\n\n/**\n * Remove duplicates from an `Iterable`, preserving the order of the first occurrence of each element.\n * The equivalence used to compare elements is provided by `Equal.equivalence()` from the `Equal` module.\n *\n * @since 2.0.0\n */\nexport const dedupe = <S extends Iterable<any>>(\n  self: S\n): S extends NonEmptyReadonlyArray<infer A> ? NonEmptyArray<A> : S extends Iterable<infer A> ? Array<A> : never =>\n  dedupeWith(self, Equal.equivalence()) as any\n\n/**\n * Deduplicates adjacent elements that are identical using the provided `isEquivalent` function.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.dedupeAdjacentWith([1, 1, 2, 2, 3, 3], (a, b) => a === b)\n * console.log(result) // [1, 2, 3]\n * ```\n *\n * @since 2.0.0\n */\nexport const dedupeAdjacentWith: {\n  /**\n   * Deduplicates adjacent elements that are identical using the provided `isEquivalent` function.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.dedupeAdjacentWith([1, 1, 2, 2, 3, 3], (a, b) => a === b)\n   * console.log(result) // [1, 2, 3]\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A>(isEquivalent: (self: A, that: A) => boolean): (self: Iterable<A>) => Array<A>\n  /**\n   * Deduplicates adjacent elements that are identical using the provided `isEquivalent` function.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.dedupeAdjacentWith([1, 1, 2, 2, 3, 3], (a, b) => a === b)\n   * console.log(result) // [1, 2, 3]\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <A>(self: Iterable<A>, isEquivalent: (self: A, that: A) => boolean): Array<A>\n} = dual(2, <A>(self: Iterable<A>, isEquivalent: (self: A, that: A) => boolean): Array<A> => {\n  const out: Array<A> = []\n  let lastA: Option.Option<A> = Option.none()\n  for (const a of self) {\n    if (Option.isNone(lastA) || !isEquivalent(a, lastA.value)) {\n      out.push(a)\n      lastA = Option.some(a)\n    }\n  }\n  return out\n})\n\n/**\n * Deduplicates adjacent elements that are identical.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.dedupeAdjacent([1, 1, 2, 2, 3, 3])\n * console.log(result) // [1, 2, 3]\n * ```\n *\n * @since 2.0.0\n */\nexport const dedupeAdjacent: <A>(self: Iterable<A>) => Array<A> = dedupeAdjacentWith(Equal.equivalence())\n\n/**\n * Joins the elements together with \"sep\" in the middle.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const strings = [\"a\", \"b\", \"c\"]\n * const joined = Array.join(strings, \"-\")\n * console.log(joined) // \"a-b-c\"\n * ```\n *\n * @since 2.0.0\n * @category folding\n */\nexport const join: {\n  /**\n   * Joins the elements together with \"sep\" in the middle.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const strings = [\"a\", \"b\", \"c\"]\n   * const joined = Array.join(strings, \"-\")\n   * console.log(joined) // \"a-b-c\"\n   * ```\n   *\n   * @since 2.0.0\n   * @category folding\n   */\n  (sep: string): (self: Iterable<string>) => string\n  /**\n   * Joins the elements together with \"sep\" in the middle.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const strings = [\"a\", \"b\", \"c\"]\n   * const joined = Array.join(strings, \"-\")\n   * console.log(joined) // \"a-b-c\"\n   * ```\n   *\n   * @since 2.0.0\n   * @category folding\n   */\n  (self: Iterable<string>, sep: string): string\n} = dual(2, (self: Iterable<string>, sep: string): string => fromIterable(self).join(sep))\n\n/**\n * Statefully maps over the chunk, producing new elements of type `B`.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.mapAccum([1, 2, 3], 0, (acc, n) => [acc + n, acc + n])\n * console.log(result) // [6, [1, 3, 6]]\n * ```\n *\n * @since 2.0.0\n * @category folding\n */\nexport const mapAccum: {\n  /**\n   * Statefully maps over the chunk, producing new elements of type `B`.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.mapAccum([1, 2, 3], 0, (acc, n) => [acc + n, acc + n])\n   * console.log(result) // [6, [1, 3, 6]]\n   * ```\n   *\n   * @since 2.0.0\n   * @category folding\n   */\n  <S, A, B, I extends Iterable<A> = Iterable<A>>(s: S, f: (s: S, a: ReadonlyArray.Infer<I>, i: number) => readonly [S, B]): (self: I) => [state: S, mappedArray: ReadonlyArray.With<I, B>]\n  /**\n   * Statefully maps over the chunk, producing new elements of type `B`.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.mapAccum([1, 2, 3], 0, (acc, n) => [acc + n, acc + n])\n   * console.log(result) // [6, [1, 3, 6]]\n   * ```\n   *\n   * @since 2.0.0\n   * @category folding\n   */\n  <S, A, B, I extends Iterable<A> = Iterable<A>>(\n    self: I,\n    s: S,\n    f: (s: S, a: ReadonlyArray.Infer<I>, i: number) => readonly [S, B]\n  ): [state: S, mappedArray: ReadonlyArray.With<I, B>]\n} = dual(\n  3,\n  <S, A, B>(self: Iterable<A>, s: S, f: (s: S, a: A, i: number) => [S, B]): [state: S, mappedArray: Array<B>] => {\n    let i = 0\n    let s1 = s\n    const out: Array<B> = []\n    for (const a of self) {\n      const r = f(s1, a, i)\n      s1 = r[0]\n      out.push(r[1])\n      i++\n    }\n    return [s1, out]\n  }\n)\n\n/**\n * Zips this chunk crosswise with the specified chunk using the specified combiner.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.cartesianWith([1, 2], [\"a\", \"b\"], (a, b) => `${a}-${b}`)\n * console.log(result) // [\"1-a\", \"1-b\", \"2-a\", \"2-b\"]\n * ```\n *\n * @since 2.0.0\n * @category elements\n */\nexport const cartesianWith: {\n  /**\n   * Zips this chunk crosswise with the specified chunk using the specified combiner.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.cartesianWith([1, 2], [\"a\", \"b\"], (a, b) => `${a}-${b}`)\n   * console.log(result) // [\"1-a\", \"1-b\", \"2-a\", \"2-b\"]\n   * ```\n   *\n   * @since 2.0.0\n   * @category elements\n   */\n  <A, B, C>(that: ReadonlyArray<B>, f: (a: A, b: B) => C): (self: ReadonlyArray<A>) => Array<C>\n  /**\n   * Zips this chunk crosswise with the specified chunk using the specified combiner.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.cartesianWith([1, 2], [\"a\", \"b\"], (a, b) => `${a}-${b}`)\n   * console.log(result) // [\"1-a\", \"1-b\", \"2-a\", \"2-b\"]\n   * ```\n   *\n   * @since 2.0.0\n   * @category elements\n   */\n  <A, B, C>(self: ReadonlyArray<A>, that: ReadonlyArray<B>, f: (a: A, b: B) => C): Array<C>\n} = dual(\n  3,\n  <A, B, C>(self: ReadonlyArray<A>, that: ReadonlyArray<B>, f: (a: A, b: B) => C): Array<C> =>\n    flatMap(self, (a) => map(that, (b) => f(a, b)))\n)\n\n/**\n * Zips this chunk crosswise with the specified chunk.\n *\n * **Example**\n *\n * ```ts\n * import { Array } from \"effect\"\n *\n * const result = Array.cartesian([1, 2], [\"a\", \"b\"])\n * console.log(result) // [[1, \"a\"], [1, \"b\"], [2, \"a\"], [2, \"b\"]]\n * ```\n *\n * @since 2.0.0\n * @category elements\n */\nexport const cartesian: {\n  /**\n   * Zips this chunk crosswise with the specified chunk.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.cartesian([1, 2], [\"a\", \"b\"])\n   * console.log(result) // [[1, \"a\"], [1, \"b\"], [2, \"a\"], [2, \"b\"]]\n   * ```\n   *\n   * @since 2.0.0\n   * @category elements\n   */\n  <B>(that: ReadonlyArray<B>): <A>(self: ReadonlyArray<A>) => Array<[A, B]>\n  /**\n   * Zips this chunk crosswise with the specified chunk.\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array } from \"effect\"\n   *\n   * const result = Array.cartesian([1, 2], [\"a\", \"b\"])\n   * console.log(result) // [[1, \"a\"], [1, \"b\"], [2, \"a\"], [2, \"b\"]]\n   * ```\n   *\n   * @since 2.0.0\n   * @category elements\n   */\n  <A, B>(self: ReadonlyArray<A>, that: ReadonlyArray<B>): Array<[A, B]>\n} = dual(\n  2,\n  <A, B>(self: ReadonlyArray<A>, that: ReadonlyArray<B>): Array<[A, B]> => cartesianWith(self, that, (a, b) => [a, b])\n)\n\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n\n/**\n * The \"do simulation\" for array allows you to sequentially apply operations to the elements of arrays, just as nested loops allow you to go through all combinations of elements in an arrays.\n *\n * It can be used to simulate \"array comprehension\".\n * It's a technique that allows you to create new arrays by iterating over existing ones and applying specific **conditions** or **transformations** to the elements. It's like assembling a new collection from pieces of other collections based on certain rules.\n *\n * Here's how the do simulation works:\n *\n * 1. Start the do simulation using the `Do` value\n * 2. Within the do simulation scope, you can use the `bind` function to define variables and bind them to `Array` values\n * 3. You can accumulate multiple `bind` statements to define multiple variables within the scope\n * 4. Inside the do simulation scope, you can also use the `let` function to define variables and bind them to simple values\n * 5. Regular `Option` functions like `map` and `filter` can still be used within the do simulation. These functions will receive the accumulated variables as arguments within the scope\n *\n * **Example**\n *\n * ```ts\n * import { Array, pipe } from \"effect\"\n *\n * const doResult = pipe(\n *   Array.Do,\n *   Array.bind(\"x\", () => [1, 3, 5]),\n *   Array.bind(\"y\", () => [2, 4, 6]),\n *   Array.filter(({ x, y }) => x < y), // condition\n *   Array.map(({ x, y }) => [x, y] as const) // transformation\n * )\n * console.log(doResult) // [[1, 2], [1, 4], [1, 6], [3, 4], [3, 6], [5, 6]]\n *\n * // equivalent\n * const x = [1, 3, 5],\n *       y = [2, 4, 6],\n *       result = [];\n * for(let i = 0; i < x.length; i++) {\n *   for(let j = 0; j < y.length; j++) {\n *     const _x = x[i], _y = y[j];\n *     if(_x < _y) result.push([_x, _y] as const)\n *   }\n * }\n * ```\n *\n * @see {@link bindTo}\n * @see {@link bind}\n * @see {@link let_ let}\n *\n * @category do notation\n * @since 3.2.0\n */\nexport const Do: ReadonlyArray<{}> = of({})\n\n/**\n * The \"do simulation\" for array allows you to sequentially apply operations to the elements of arrays, just as nested loops allow you to go through all combinations of elements in an arrays.\n *\n * It can be used to simulate \"array comprehension\".\n * It's a technique that allows you to create new arrays by iterating over existing ones and applying specific **conditions** or **transformations** to the elements. It's like assembling a new collection from pieces of other collections based on certain rules.\n *\n * Here's how the do simulation works:\n *\n * 1. Start the do simulation using the `Do` value\n * 2. Within the do simulation scope, you can use the `bind` function to define variables and bind them to `Array` values\n * 3. You can accumulate multiple `bind` statements to define multiple variables within the scope\n * 4. Inside the do simulation scope, you can also use the `let` function to define variables and bind them to simple values\n * 5. Regular `Option` functions like `map` and `filter` can still be used within the do simulation. These functions will receive the accumulated variables as arguments within the scope\n *\n * **Example**\n *\n * ```ts\n * import { Array, pipe } from \"effect\"\n *\n * const doResult = pipe(\n *   Array.Do,\n *   Array.bind(\"x\", () => [1, 3, 5]),\n *   Array.bind(\"y\", () => [2, 4, 6]),\n *   Array.filter(({ x, y }) => x < y), // condition\n *   Array.map(({ x, y }) => [x, y] as const) // transformation\n * )\n * console.log(doResult) // [[1, 2], [1, 4], [1, 6], [3, 4], [3, 6], [5, 6]]\n *\n * // equivalent\n * const x = [1, 3, 5],\n *       y = [2, 4, 6],\n *       result = [];\n * for(let i = 0; i < x.length; i++) {\n *   for(let j = 0; j < y.length; j++) {\n *     const _x = x[i], _y = y[j];\n *     if(_x < _y) result.push([_x, _y] as const)\n *   }\n * }\n * ```\n *\n * @see {@link bindTo}\n * @see {@link Do}\n * @see {@link let_ let}\n *\n * @category do notation\n * @since 3.2.0\n */\nexport const bind: {\n  /**\n   * The \"do simulation\" for array allows you to sequentially apply operations to the elements of arrays, just as nested loops allow you to go through all combinations of elements in an arrays.\n   *\n   * It can be used to simulate \"array comprehension\".\n   * It's a technique that allows you to create new arrays by iterating over existing ones and applying specific **conditions** or **transformations** to the elements. It's like assembling a new collection from pieces of other collections based on certain rules.\n   *\n   * Here's how the do simulation works:\n   *\n   * 1. Start the do simulation using the `Do` value\n   * 2. Within the do simulation scope, you can use the `bind` function to define variables and bind them to `Array` values\n   * 3. You can accumulate multiple `bind` statements to define multiple variables within the scope\n   * 4. Inside the do simulation scope, you can also use the `let` function to define variables and bind them to simple values\n   * 5. Regular `Option` functions like `map` and `filter` can still be used within the do simulation. These functions will receive the accumulated variables as arguments within the scope\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array, pipe } from \"effect\"\n   *\n   * const doResult = pipe(\n   *   Array.Do,\n   *   Array.bind(\"x\", () => [1, 3, 5]),\n   *   Array.bind(\"y\", () => [2, 4, 6]),\n   *   Array.filter(({ x, y }) => x < y), // condition\n   *   Array.map(({ x, y }) => [x, y] as const) // transformation\n   * )\n   * console.log(doResult) // [[1, 2], [1, 4], [1, 6], [3, 4], [3, 6], [5, 6]]\n   *\n   * // equivalent\n   * const x = [1, 3, 5],\n   *       y = [2, 4, 6],\n   *       result = [];\n   * for(let i = 0; i < x.length; i++) {\n   *   for(let j = 0; j < y.length; j++) {\n   *     const _x = x[i], _y = y[j];\n   *     if(_x < _y) result.push([_x, _y] as const)\n   *   }\n   * }\n   * ```\n   *\n   * @see {@link bindTo}\n   * @see {@link Do}\n   * @see {@link let_ let}\n   *\n   * @category do notation\n   * @since 3.2.0\n   */\n  <A extends object, N extends string, B>(tag: Exclude<N, keyof A>, f: (a: NoInfer<A>) => ReadonlyArray<B>): (\n    self: ReadonlyArray<A>\n  ) => Array<{ [K in N | keyof A]: K extends keyof A ? A[K] : B }>\n  /**\n   * The \"do simulation\" for array allows you to sequentially apply operations to the elements of arrays, just as nested loops allow you to go through all combinations of elements in an arrays.\n   *\n   * It can be used to simulate \"array comprehension\".\n   * It's a technique that allows you to create new arrays by iterating over existing ones and applying specific **conditions** or **transformations** to the elements. It's like assembling a new collection from pieces of other collections based on certain rules.\n   *\n   * Here's how the do simulation works:\n   *\n   * 1. Start the do simulation using the `Do` value\n   * 2. Within the do simulation scope, you can use the `bind` function to define variables and bind them to `Array` values\n   * 3. You can accumulate multiple `bind` statements to define multiple variables within the scope\n   * 4. Inside the do simulation scope, you can also use the `let` function to define variables and bind them to simple values\n   * 5. Regular `Option` functions like `map` and `filter` can still be used within the do simulation. These functions will receive the accumulated variables as arguments within the scope\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array, pipe } from \"effect\"\n   *\n   * const doResult = pipe(\n   *   Array.Do,\n   *   Array.bind(\"x\", () => [1, 3, 5]),\n   *   Array.bind(\"y\", () => [2, 4, 6]),\n   *   Array.filter(({ x, y }) => x < y), // condition\n   *   Array.map(({ x, y }) => [x, y] as const) // transformation\n   * )\n   * console.log(doResult) // [[1, 2], [1, 4], [1, 6], [3, 4], [3, 6], [5, 6]]\n   *\n   * // equivalent\n   * const x = [1, 3, 5],\n   *       y = [2, 4, 6],\n   *       result = [];\n   * for(let i = 0; i < x.length; i++) {\n   *   for(let j = 0; j < y.length; j++) {\n   *     const _x = x[i], _y = y[j];\n   *     if(_x < _y) result.push([_x, _y] as const)\n   *   }\n   * }\n   * ```\n   *\n   * @see {@link bindTo}\n   * @see {@link Do}\n   * @see {@link let_ let}\n   *\n   * @category do notation\n   * @since 3.2.0\n   */\n  <A extends object, N extends string, B>(\n    self: ReadonlyArray<A>,\n    tag: Exclude<N, keyof A>,\n    f: (a: NoInfer<A>) => ReadonlyArray<B>\n  ): Array<{ [K in N | keyof A]: K extends keyof A ? A[K] : B }>\n} = internalDoNotation.bind<ReadonlyArrayTypeLambda>(map, flatMap) as any\n\n/**\n * The \"do simulation\" for array allows you to sequentially apply operations to the elements of arrays, just as nested loops allow you to go through all combinations of elements in an arrays.\n *\n * It can be used to simulate \"array comprehension\".\n * It's a technique that allows you to create new arrays by iterating over existing ones and applying specific **conditions** or **transformations** to the elements. It's like assembling a new collection from pieces of other collections based on certain rules.\n *\n * Here's how the do simulation works:\n *\n * 1. Start the do simulation using the `Do` value\n * 2. Within the do simulation scope, you can use the `bind` function to define variables and bind them to `Array` values\n * 3. You can accumulate multiple `bind` statements to define multiple variables within the scope\n * 4. Inside the do simulation scope, you can also use the `let` function to define variables and bind them to simple values\n * 5. Regular `Option` functions like `map` and `filter` can still be used within the do simulation. These functions will receive the accumulated variables as arguments within the scope\n *\n * **Example**\n *\n * ```ts\n * import { Array, pipe } from \"effect\"\n *\n * const doResult = pipe(\n *   Array.Do,\n *   Array.bind(\"x\", () => [1, 3, 5]),\n *   Array.bind(\"y\", () => [2, 4, 6]),\n *   Array.filter(({ x, y }) => x < y), // condition\n *   Array.map(({ x, y }) => [x, y] as const) // transformation\n * )\n * console.log(doResult) // [[1, 2], [1, 4], [1, 6], [3, 4], [3, 6], [5, 6]]\n *\n * // equivalent\n * const x = [1, 3, 5],\n *       y = [2, 4, 6],\n *       result = [];\n * for(let i = 0; i < x.length; i++) {\n *   for(let j = 0; j < y.length; j++) {\n *     const _x = x[i], _y = y[j];\n *     if(_x < _y) result.push([_x, _y] as const)\n *   }\n * }\n * ```\n *\n * @see {@link bindTo}\n * @see {@link Do}\n * @see {@link let_ let}\n *\n * @category do notation\n * @since 3.2.0\n */\nexport const bindTo: {\n  /**\n   * The \"do simulation\" for array allows you to sequentially apply operations to the elements of arrays, just as nested loops allow you to go through all combinations of elements in an arrays.\n   *\n   * It can be used to simulate \"array comprehension\".\n   * It's a technique that allows you to create new arrays by iterating over existing ones and applying specific **conditions** or **transformations** to the elements. It's like assembling a new collection from pieces of other collections based on certain rules.\n   *\n   * Here's how the do simulation works:\n   *\n   * 1. Start the do simulation using the `Do` value\n   * 2. Within the do simulation scope, you can use the `bind` function to define variables and bind them to `Array` values\n   * 3. You can accumulate multiple `bind` statements to define multiple variables within the scope\n   * 4. Inside the do simulation scope, you can also use the `let` function to define variables and bind them to simple values\n   * 5. Regular `Option` functions like `map` and `filter` can still be used within the do simulation. These functions will receive the accumulated variables as arguments within the scope\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array, pipe } from \"effect\"\n   *\n   * const doResult = pipe(\n   *   Array.Do,\n   *   Array.bind(\"x\", () => [1, 3, 5]),\n   *   Array.bind(\"y\", () => [2, 4, 6]),\n   *   Array.filter(({ x, y }) => x < y), // condition\n   *   Array.map(({ x, y }) => [x, y] as const) // transformation\n   * )\n   * console.log(doResult) // [[1, 2], [1, 4], [1, 6], [3, 4], [3, 6], [5, 6]]\n   *\n   * // equivalent\n   * const x = [1, 3, 5],\n   *       y = [2, 4, 6],\n   *       result = [];\n   * for(let i = 0; i < x.length; i++) {\n   *   for(let j = 0; j < y.length; j++) {\n   *     const _x = x[i], _y = y[j];\n   *     if(_x < _y) result.push([_x, _y] as const)\n   *   }\n   * }\n   * ```\n   *\n   * @see {@link bindTo}\n   * @see {@link Do}\n   * @see {@link let_ let}\n   *\n   * @category do notation\n   * @since 3.2.0\n   */\n  <N extends string>(tag: N): <A>(self: ReadonlyArray<A>) => Array<{ [K in N]: A }>\n  /**\n   * The \"do simulation\" for array allows you to sequentially apply operations to the elements of arrays, just as nested loops allow you to go through all combinations of elements in an arrays.\n   *\n   * It can be used to simulate \"array comprehension\".\n   * It's a technique that allows you to create new arrays by iterating over existing ones and applying specific **conditions** or **transformations** to the elements. It's like assembling a new collection from pieces of other collections based on certain rules.\n   *\n   * Here's how the do simulation works:\n   *\n   * 1. Start the do simulation using the `Do` value\n   * 2. Within the do simulation scope, you can use the `bind` function to define variables and bind them to `Array` values\n   * 3. You can accumulate multiple `bind` statements to define multiple variables within the scope\n   * 4. Inside the do simulation scope, you can also use the `let` function to define variables and bind them to simple values\n   * 5. Regular `Option` functions like `map` and `filter` can still be used within the do simulation. These functions will receive the accumulated variables as arguments within the scope\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array, pipe } from \"effect\"\n   *\n   * const doResult = pipe(\n   *   Array.Do,\n   *   Array.bind(\"x\", () => [1, 3, 5]),\n   *   Array.bind(\"y\", () => [2, 4, 6]),\n   *   Array.filter(({ x, y }) => x < y), // condition\n   *   Array.map(({ x, y }) => [x, y] as const) // transformation\n   * )\n   * console.log(doResult) // [[1, 2], [1, 4], [1, 6], [3, 4], [3, 6], [5, 6]]\n   *\n   * // equivalent\n   * const x = [1, 3, 5],\n   *       y = [2, 4, 6],\n   *       result = [];\n   * for(let i = 0; i < x.length; i++) {\n   *   for(let j = 0; j < y.length; j++) {\n   *     const _x = x[i], _y = y[j];\n   *     if(_x < _y) result.push([_x, _y] as const)\n   *   }\n   * }\n   * ```\n   *\n   * @see {@link bindTo}\n   * @see {@link Do}\n   * @see {@link let_ let}\n   *\n   * @category do notation\n   * @since 3.2.0\n   */\n  <A, N extends string>(self: ReadonlyArray<A>, tag: N): Array<{ [K in N]: A }>\n} = internalDoNotation.bindTo<ReadonlyArrayTypeLambda>(map) as any\n\nconst let_: {\n  <N extends string, B, A extends object>(\n    tag: Exclude<N, keyof A>,\n    f: (a: NoInfer<A>) => B\n  ): (self: ReadonlyArray<A>) => Array<{ [K in N | keyof A]: K extends keyof A ? A[K] : B }>\n  <N extends string, A extends object, B>(\n    self: ReadonlyArray<A>,\n    tag: Exclude<N, keyof A>,\n    f: (a: NoInfer<A>) => B\n  ): Array<{ [K in N | keyof A]: K extends keyof A ? A[K] : B }>\n} = internalDoNotation.let_<ReadonlyArrayTypeLambda>(map) as any\n\nexport {\n  /**\n   * The \"do simulation\" for array allows you to sequentially apply operations to the elements of arrays, just as nested loops allow you to go through all combinations of elements in an arrays.\n   *\n   * It can be used to simulate \"array comprehension\".\n   * It's a technique that allows you to create new arrays by iterating over existing ones and applying specific **conditions** or **transformations** to the elements. It's like assembling a new collection from pieces of other collections based on certain rules.\n   *\n   * Here's how the do simulation works:\n   *\n   * 1. Start the do simulation using the `Do` value\n   * 2. Within the do simulation scope, you can use the `bind` function to define variables and bind them to `Array` values\n   * 3. You can accumulate multiple `bind` statements to define multiple variables within the scope\n   * 4. Inside the do simulation scope, you can also use the `let` function to define variables and bind them to simple values\n   * 5. Regular `Option` functions like `map` and `filter` can still be used within the do simulation. These functions will receive the accumulated variables as arguments within the scope\n   *\n   * **Example**\n   *\n   * ```ts\n   * import { Array, pipe } from \"effect\"\n   *\n   * const doResult = pipe(\n   *   Array.Do,\n   *   Array.bind(\"x\", () => [1, 3, 5]),\n   *   Array.bind(\"y\", () => [2, 4, 6]),\n   *   Array.filter(({ x, y }) => x < y), // condition\n   *   Array.map(({ x, y }) => [x, y] as const) // transformation\n   * )\n   * console.log(doResult) // [[1, 2], [1, 4], [1, 6], [3, 4], [3, 6], [5, 6]]\n   *\n   * // equivalent\n   * const x = [1, 3, 5],\n   *       y = [2, 4, 6],\n   *       result = [];\n   * for(let i = 0; i < x.length; i++) {\n   *   for(let j = 0; j < y.length; j++) {\n   *     const _x = x[i], _y = y[j];\n   *     if(_x < _y) result.push([_x, _y] as const)\n   *   }\n   * }\n   *\n   * ```\n   *\n   * @see {@link bindTo}\n   * @see {@link bind}\n   * @see {@link Do}\n   *\n   * @category do notation\n   * @since 3.2.0\n   */\n  let_ as let\n}\n"],"names":["Either","Equal","Equivalence","dual","identity","internalArray","internalDoNotation","moduleIterable","Option","Order","Predicate","Record","Tuple","make","elements","allocate","n","Array","makeBy","f","max","Math","floor","out","i","range","start","end","replicate","a","fromIterable","collection","isArray","from","ensure","self","fromRecord","toEntries","fromOption","toArray","match","onEmpty","onNonEmpty","isNonEmptyReadonlyArray","matchLeft","headNonEmpty","tailNonEmpty","matchRight","initNonEmpty","lastNonEmpty","prepend","head","prependAll","that","concat","append","last","appendAll","scan","b","scanRight","input","length","isEmptyArray","isEmptyReadonlyArray","isNonEmptyArray","isOutOfBounds","as","clamp","min","get","index","none","some","unsafeGet","Error","unprepend","unappend","tail","slice","init","take","takeRight","takeWhile","predicate","push","spanIndex","span","splitAt","drop","dropRight","dropWhile","findFirstIndex","findLastIndex","findFirst","findLast","o","isBoolean","isSome","countBy","count","insertAt","splice","replace","modify","replaceOption","modifyOption","arr","remove","removeOption","reverse","sort","O","sortWith","order","map","_","sortBy","orders","sortByAll","combineAll","zip","zipWith","bs","len","unzip","fa","fb","intersperse","middle","modifyNonEmptyHead","setNonEmptyHead","modifyNonEmptyLast","setNonEmptyLast","rotate","m","round","abs","copy","s","splitNonEmptyAt","containsWith","isEquivalent","_equivalence","equivalence","contains","chop","rest","next","_n","split","chunksOf","ceil","splitWhere","pad","fill","window","groupWith","h","group","groupBy","k","Object","prototype","hasOwnProperty","call","unionWith","dedupe","dedupeWith","union","intersectionWith","has","filter","intersection","differenceWith","difference","empty","of","flatMap","inner","j","flatten","filterMap","value","filterMapWhile","partitionMap","left","right","e","isLeft","getSomes","getLefts","getRights","isRight","partition","separate","reduce","reduceRight","liftPredicate","liftOption","fromNullable","liftNullable","flatMapNullable","liftEither","every","refinement","extend","unfold","getOrder","array","getEquivalence","forEach","r","dedupeAdjacentWith","lastA","isNone","dedupeAdjacent","join","sep","mapAccum","s1","cartesianWith","cartesian","Do","bind","bindTo","let_","let"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9569, "column": 0}, "map": {"version":3,"file":"context.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/effect/src/internal/context.ts"],"sourcesContent":["import type * as C from \"../Context.js\"\nimport * as Equal from \"../Equal.js\"\nimport type { LazyArg } from \"../Function.js\"\nimport { dual } from \"../Function.js\"\nimport { globalValue } from \"../GlobalValue.js\"\nimport * as Hash from \"../Hash.js\"\nimport { format, NodeInspectSymbol, toJSON } from \"../Inspectable.js\"\nimport type * as O from \"../Option.js\"\nimport { pipeArguments } from \"../Pipeable.js\"\nimport { hasProperty } from \"../Predicate.js\"\nimport type * as STM from \"../STM.js\"\nimport type { NoInfer } from \"../Types.js\"\nimport { EffectPrototype, effectVariance } from \"./effectable.js\"\nimport * as option from \"./option.js\"\n\n/** @internal */\nexport const TagTypeId: C.TagTypeId = Symbol.for(\"effect/Context/Tag\") as C.TagTypeId\n\n/** @internal */\nexport const ReferenceTypeId: C.ReferenceTypeId = Symbol.for(\"effect/Context/Reference\") as C.ReferenceTypeId\n\n/** @internal */\nconst STMSymbolKey = \"effect/STM\"\n\n/** @internal */\nexport const STMTypeId: STM.STMTypeId = Symbol.for(\n  STMSymbolKey\n) as STM.STMTypeId\n\n/** @internal */\nexport const TagProto: any = {\n  ...EffectPrototype,\n  _op: \"Tag\",\n  [STMTypeId]: effectVariance,\n  [TagTypeId]: {\n    _Service: (_: unknown) => _,\n    _Identifier: (_: unknown) => _\n  },\n  toString() {\n    return format(this.toJSON())\n  },\n  toJSON<I, A>(this: C.Tag<I, A>) {\n    return {\n      _id: \"Tag\",\n      key: this.key,\n      stack: this.stack\n    }\n  },\n  [NodeInspectSymbol]() {\n    return this.toJSON()\n  },\n  of<Service>(self: Service): Service {\n    return self\n  },\n  context<Identifier, Service>(\n    this: C.Tag<Identifier, Service>,\n    self: Service\n  ): C.Context<Identifier> {\n    return make(this, self)\n  }\n}\n\nexport const ReferenceProto: any = {\n  ...TagProto,\n  [ReferenceTypeId]: ReferenceTypeId\n}\n\n/** @internal */\nexport const makeGenericTag = <Identifier, Service = Identifier>(key: string): C.Tag<Identifier, Service> => {\n  const limit = Error.stackTraceLimit\n  Error.stackTraceLimit = 2\n  const creationError = new Error()\n  Error.stackTraceLimit = limit\n  const tag = Object.create(TagProto)\n  Object.defineProperty(tag, \"stack\", {\n    get() {\n      return creationError.stack\n    }\n  })\n  tag.key = key\n  return tag\n}\n\n/** @internal */\nexport const Tag = <const Id extends string>(id: Id) => <Self, Shape>(): C.TagClass<Self, Id, Shape> => {\n  const limit = Error.stackTraceLimit\n  Error.stackTraceLimit = 2\n  const creationError = new Error()\n  Error.stackTraceLimit = limit\n\n  function TagClass() {}\n  Object.setPrototypeOf(TagClass, TagProto)\n  TagClass.key = id\n  Object.defineProperty(TagClass, \"stack\", {\n    get() {\n      return creationError.stack\n    }\n  })\n  return TagClass as any\n}\n\n/** @internal */\nexport const Reference = <Self>() =>\n<const Id extends string, Service>(id: Id, options: {\n  readonly defaultValue: () => Service\n}): C.ReferenceClass<Self, Id, Service> => {\n  const limit = Error.stackTraceLimit\n  Error.stackTraceLimit = 2\n  const creationError = new Error()\n  Error.stackTraceLimit = limit\n\n  function ReferenceClass() {}\n  Object.setPrototypeOf(ReferenceClass, ReferenceProto)\n  ReferenceClass.key = id\n  ReferenceClass.defaultValue = options.defaultValue\n  Object.defineProperty(ReferenceClass, \"stack\", {\n    get() {\n      return creationError.stack\n    }\n  })\n  return ReferenceClass as any\n}\n\n/** @internal */\nexport const TypeId: C.TypeId = Symbol.for(\"effect/Context\") as C.TypeId\n\n/** @internal */\nexport const ContextProto: Omit<C.Context<unknown>, \"unsafeMap\"> = {\n  [TypeId]: {\n    _Services: (_: unknown) => _\n  },\n  [Equal.symbol]<A>(this: C.Context<A>, that: unknown): boolean {\n    if (isContext(that)) {\n      if (this.unsafeMap.size === that.unsafeMap.size) {\n        for (const k of this.unsafeMap.keys()) {\n          if (!that.unsafeMap.has(k) || !Equal.equals(this.unsafeMap.get(k), that.unsafeMap.get(k))) {\n            return false\n          }\n        }\n        return true\n      }\n    }\n    return false\n  },\n  [Hash.symbol]<A>(this: C.Context<A>): number {\n    return Hash.cached(this, Hash.number(this.unsafeMap.size))\n  },\n  pipe<A>(this: C.Context<A>) {\n    return pipeArguments(this, arguments)\n  },\n  toString() {\n    return format(this.toJSON())\n  },\n  toJSON<A>(this: C.Context<A>) {\n    return {\n      _id: \"Context\",\n      services: Array.from(this.unsafeMap).map(toJSON)\n    }\n  },\n  [NodeInspectSymbol]() {\n    return (this as any).toJSON()\n  }\n}\n\n/** @internal */\nexport const makeContext = <Services>(unsafeMap: Map<string, any>): C.Context<Services> => {\n  const context = Object.create(ContextProto)\n  context.unsafeMap = unsafeMap\n  return context\n}\n\nconst serviceNotFoundError = (tag: C.Tag<any, any>) => {\n  const error = new Error(`Service not found${tag.key ? `: ${String(tag.key)}` : \"\"}`)\n  if (tag.stack) {\n    const lines = tag.stack.split(\"\\n\")\n    if (lines.length > 2) {\n      const afterAt = lines[2].match(/at (.*)/)\n      if (afterAt) {\n        error.message = error.message + ` (defined at ${afterAt[1]})`\n      }\n    }\n  }\n  if (error.stack) {\n    const lines = error.stack.split(\"\\n\")\n    lines.splice(1, 3)\n    error.stack = lines.join(\"\\n\")\n  }\n  return error\n}\n\n/** @internal */\nexport const isContext = (u: unknown): u is C.Context<never> => hasProperty(u, TypeId)\n\n/** @internal */\nexport const isTag = (u: unknown): u is C.Tag<any, any> => hasProperty(u, TagTypeId)\n\n/** @internal */\nexport const isReference = (u: unknown): u is C.Reference<any, any> => hasProperty(u, ReferenceTypeId)\n\nconst _empty = makeContext(new Map())\n\n/** @internal */\nexport const empty = (): C.Context<never> => _empty\n\n/** @internal */\nexport const make = <I, S>(tag: C.Tag<I, S>, service: NoInfer<S>): C.Context<I> =>\n  makeContext(new Map([[tag.key, service]]))\n\n/** @internal */\nexport const add = dual<\n  <I, S>(\n    tag: C.Tag<I, S>,\n    service: NoInfer<S>\n  ) => <Services>(\n    self: C.Context<Services>\n  ) => C.Context<Services | I>,\n  <Services, I, S>(\n    self: C.Context<Services>,\n    tag: C.Tag<I, S>,\n    service: NoInfer<S>\n  ) => C.Context<Services | I>\n>(3, (self, tag, service) => {\n  const map = new Map(self.unsafeMap)\n  map.set(tag.key, service)\n  return makeContext(map)\n})\n\nconst defaultValueCache = globalValue(\"effect/Context/defaultValueCache\", () => new Map<string, any>())\nconst getDefaultValue = (tag: C.Reference<any, any>) => {\n  if (defaultValueCache.has(tag.key)) {\n    return defaultValueCache.get(tag.key)\n  }\n  const value = tag.defaultValue()\n  defaultValueCache.set(tag.key, value)\n  return value\n}\n\n/** @internal */\nexport const unsafeGetReference = <Services, I, S>(self: C.Context<Services>, tag: C.Reference<I, S>): S => {\n  return self.unsafeMap.has(tag.key) ? self.unsafeMap.get(tag.key) : getDefaultValue(tag)\n}\n\n/** @internal */\nexport const unsafeGet = dual<\n  <S, I>(tag: C.Tag<I, S>) => <Services>(self: C.Context<Services>) => S,\n  <Services, S, I>(self: C.Context<Services>, tag: C.Tag<I, S>) => S\n>(2, (self, tag) => {\n  if (!self.unsafeMap.has(tag.key)) {\n    if (ReferenceTypeId in tag) return getDefaultValue(tag as any)\n    throw serviceNotFoundError(tag)\n  }\n  return self.unsafeMap.get(tag.key)! as any\n})\n\n/** @internal */\nexport const get: {\n  <I, S>(tag: C.Reference<I, S>): <Services>(self: C.Context<Services>) => S\n  <Services, I extends Services, S>(tag: C.Tag<I, S>): (self: C.Context<Services>) => S\n  <Services, I, S>(self: C.Context<Services>, tag: C.Reference<I, S>): S\n  <Services, I extends Services, S>(self: C.Context<Services>, tag: C.Tag<I, S>): S\n} = unsafeGet as any\n\n/** @internal */\nexport const getOrElse = dual<\n  <S, I, B>(tag: C.Tag<I, S>, orElse: LazyArg<B>) => <Services>(self: C.Context<Services>) => S | B,\n  <Services, S, I, B>(self: C.Context<Services>, tag: C.Tag<I, S>, orElse: LazyArg<B>) => S | B\n>(3, (self, tag, orElse) => {\n  if (!self.unsafeMap.has(tag.key)) {\n    return isReference(tag) ? getDefaultValue(tag) : orElse()\n  }\n  return self.unsafeMap.get(tag.key)! as any\n})\n\n/** @internal */\nexport const getOption = dual<\n  <S, I>(tag: C.Tag<I, S>) => <Services>(self: C.Context<Services>) => O.Option<S>,\n  <Services, S, I>(self: C.Context<Services>, tag: C.Tag<I, S>) => O.Option<S>\n>(2, (self, tag) => {\n  if (!self.unsafeMap.has(tag.key)) {\n    return isReference(tag) ? option.some(getDefaultValue(tag)) : option.none\n  }\n  return option.some(self.unsafeMap.get(tag.key)! as any)\n})\n\n/** @internal */\nexport const merge = dual<\n  <R1>(that: C.Context<R1>) => <Services>(self: C.Context<Services>) => C.Context<Services | R1>,\n  <Services, R1>(self: C.Context<Services>, that: C.Context<R1>) => C.Context<Services | R1>\n>(2, (self, that) => {\n  const map = new Map(self.unsafeMap)\n  for (const [tag, s] of that.unsafeMap) {\n    map.set(tag, s)\n  }\n  return makeContext(map)\n})\n\n/** @internal */\nexport const mergeAll = <T extends Array<unknown>>(\n  ...ctxs: [...{ [K in keyof T]: C.Context<T[K]> }]\n): C.Context<T[number]> => {\n  const map = new Map()\n  for (const ctx of ctxs) {\n    for (const [tag, s] of ctx.unsafeMap) {\n      map.set(tag, s)\n    }\n  }\n  return makeContext(map)\n}\n\n/** @internal */\nexport const pick =\n  <Tags extends ReadonlyArray<C.Tag<any, any>>>(...tags: Tags) =>\n  <Services>(self: C.Context<Services>): C.Context<\n    Services & C.Tag.Identifier<Tags[number]>\n  > => {\n    const tagSet = new Set<string>(tags.map((_) => _.key))\n    const newEnv = new Map()\n    for (const [tag, s] of self.unsafeMap.entries()) {\n      if (tagSet.has(tag)) {\n        newEnv.set(tag, s)\n      }\n    }\n    return makeContext(newEnv)\n  }\n\n/** @internal */\nexport const omit =\n  <Tags extends ReadonlyArray<C.Tag<any, any>>>(...tags: Tags) =>\n  <Services>(self: C.Context<Services>): C.Context<\n    Exclude<Services, C.Tag.Identifier<Tags[number]>>\n  > => {\n    const newEnv = new Map(self.unsafeMap)\n    for (const tag of tags) {\n      newEnv.delete(tag.key)\n    }\n    return makeContext(newEnv)\n  }\n"],"names":["Equal","dual","globalValue","Hash","format","NodeInspectSymbol","toJSON","pipeArguments","hasProperty","EffectPrototype","effectVariance","option","TagTypeId","Symbol","for","ReferenceTypeId","STMSymbolKey","STMTypeId","TagProto","_op","_Service","_","_Identifier","toString","_id","key","stack","of","self","context","make","ReferenceProto","makeGenericTag","limit","Error","stackTraceLimit","creationError","tag","Object","create","defineProperty","get","Tag","id","TagClass","setPrototypeOf","Reference","options","ReferenceClass","defaultValue","TypeId","ContextProto","_Services","symbol","that","isContext","unsafeMap","size","k","keys","has","equals","cached","number","pipe","arguments","services","Array","from","map","makeContext","serviceNotFoundError","error","String","lines","split","length","afterAt","match","message","splice","join","u","isTag","isReference","_empty","Map","empty","service","add","set","defaultValueCache","getDefaultValue","value","unsafeGetReference","unsafeGet","getOrElse","orElse","getOption","some","none","merge","s","mergeAll","ctxs","ctx","pick","tags","tagSet","Set","newEnv","entries","omit","delete"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9843, "column": 0}, "map": {"version":3,"file":"Context.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/effect/src/Context.ts"],"sourcesContent":["/**\n * This module provides a data structure called `Context` that can be used for dependency injection in effectful\n * programs. It is essentially a table mapping `Tag`s to their implementations (called `Service`s), and can be used to\n * manage dependencies in a type-safe way. The `Context` data structure is essentially a way of providing access to a set\n * of related services that can be passed around as a single unit. This module provides functions to create, modify, and\n * query the contents of a `Context`, as well as a number of utility types for working with tags and services.\n *\n * @since 2.0.0\n */\nimport type { Equal } from \"./Equal.js\"\nimport type { LazyArg } from \"./Function.js\"\nimport type { Inspectable } from \"./Inspectable.js\"\nimport * as internal from \"./internal/context.js\"\nimport type { Option } from \"./Option.js\"\nimport type { Pipeable } from \"./Pipeable.js\"\nimport type * as Types from \"./Types.js\"\nimport type * as Unify from \"./Unify.js\"\n\nconst TagTypeId: unique symbol = internal.TagTypeId\n\n/**\n * @since 2.0.0\n * @category symbol\n */\nexport type TagTypeId = typeof TagTypeId\n\n/**\n * @since 3.5.9\n * @category models\n */\nexport interface Tag<in out Id, in out Value> extends Pipeable, Inspectable {\n  readonly _op: \"Tag\"\n  readonly Service: Value\n  readonly Identifier: Id\n  readonly [TagTypeId]: {\n    readonly _Service: Types.Invariant<Value>\n    readonly _Identifier: Types.Invariant<Id>\n  }\n  of(self: Value): Value\n  context(self: Value): Context<Id>\n  readonly stack?: string | undefined\n  readonly key: string\n  [Unify.typeSymbol]?: unknown\n  [Unify.unifySymbol]?: TagUnify<this>\n  [Unify.ignoreSymbol]?: TagUnifyIgnore\n}\n\nconst ReferenceTypeId: unique symbol = internal.ReferenceTypeId\n\n/**\n * @since 3.11.0\n * @category symbol\n */\nexport type ReferenceTypeId = typeof ReferenceTypeId\n\n/**\n * @since 3.11.0\n * @category models\n */\nexport interface Reference<in out Id, in out Value> extends Pipeable, Inspectable {\n  readonly [ReferenceTypeId]: ReferenceTypeId\n  readonly defaultValue: () => Value\n\n  readonly _op: \"Tag\"\n  readonly Service: Value\n  readonly Identifier: Id\n  readonly [TagTypeId]: {\n    readonly _Service: Types.Invariant<Value>\n    readonly _Identifier: Types.Invariant<Id>\n  }\n  of(self: Value): Value\n  context(self: Value): Context<Id>\n  readonly stack?: string | undefined\n  readonly key: string\n  [Unify.typeSymbol]?: unknown\n  [Unify.unifySymbol]?: TagUnify<this>\n  [Unify.ignoreSymbol]?: TagUnifyIgnore\n}\n\n/**\n * @since 2.0.0\n * @category models\n */\nexport interface TagClassShape<Id, Shape> {\n  readonly [TagTypeId]: TagTypeId\n  readonly Type: Shape\n  readonly Id: Id\n}\n\n// TODO(4.0): move key narrowing to the Tag interface\n/**\n * @since 2.0.0\n * @category models\n */\nexport interface TagClass<Self, Id extends string, Type> extends Tag<Self, Type> {\n  new(_: never): TagClassShape<Id, Type>\n  readonly key: Id\n}\n\n// TODO(4.0): move key narrowing to the Reference interface\n/**\n * @since 3.11.0\n * @category models\n */\nexport interface ReferenceClass<Self, Id extends string, Type> extends Reference<Self, Type> {\n  new(_: never): TagClassShape<Id, Type>\n  readonly key: Id\n}\n\n/**\n * @category models\n * @since 2.0.0\n */\nexport interface TagUnify<A extends { [Unify.typeSymbol]?: any }> {\n  Tag?: () => Extract<A[Unify.typeSymbol], Tag<any, any>>\n}\n\n/**\n * @category models\n * @since 2.0.0\n */\nexport interface TagUnifyIgnore {}\n\n/**\n * @since 2.0.0\n */\nexport declare namespace Tag {\n  /**\n   * @since 2.0.0\n   */\n  export type Service<T extends Tag<any, any> | TagClassShape<any, any>> = T extends Tag<any, any> ? T[\"Service\"]\n    : T extends TagClassShape<any, infer A> ? A\n    : never\n  /**\n   * @since 2.0.0\n   */\n  export type Identifier<T extends Tag<any, any> | TagClassShape<any, any>> = T extends Tag<any, any> ? T[\"Identifier\"]\n    : T extends TagClassShape<any, any> ? T\n    : never\n}\n\n/**\n * Creates a new `Tag` instance with an optional key parameter.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Context } from \"effect\"\n *\n * assert.strictEqual(Context.GenericTag(\"PORT\").key === Context.GenericTag(\"PORT\").key, true)\n * ```\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const GenericTag: <Identifier, Service = Identifier>(key: string) => Tag<Identifier, Service> =\n  internal.makeGenericTag\n\nconst TypeId: unique symbol = internal.TypeId as TypeId\n\n/**\n * @since 2.0.0\n * @category symbol\n */\nexport type TypeId = typeof TypeId\n\n/**\n * @since 2.0.0\n * @category models\n */\nexport type ValidTagsById<R> = R extends infer S ? Tag<S, any> : never\n\n/**\n * @since 2.0.0\n * @category models\n */\nexport interface Context<in Services> extends Equal, Pipeable, Inspectable {\n  readonly [TypeId]: {\n    readonly _Services: Types.Contravariant<Services>\n  }\n  readonly unsafeMap: Map<string, any>\n}\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport const unsafeMake: <Services>(unsafeMap: Map<string, any>) => Context<Services> = internal.makeContext\n\n/**\n * Checks if the provided argument is a `Context`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Context } from \"effect\"\n *\n * assert.strictEqual(Context.isContext(Context.empty()), true)\n * ```\n *\n * @since 2.0.0\n * @category guards\n */\nexport const isContext: (input: unknown) => input is Context<never> = internal.isContext\n\n/**\n * Checks if the provided argument is a `Tag`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Context } from \"effect\"\n *\n * assert.strictEqual(Context.isTag(Context.GenericTag(\"Tag\")), true)\n * ```\n *\n * @since 2.0.0\n * @category guards\n */\nexport const isTag: (input: unknown) => input is Tag<any, any> = internal.isTag\n\n/**\n * Checks if the provided argument is a `Reference`.\n *\n * @since 3.11.0\n * @category guards\n * @experimental\n */\nexport const isReference: (u: unknown) => u is Reference<any, any> = internal.isReference\n\n/**\n * Returns an empty `Context`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Context } from \"effect\"\n *\n * assert.strictEqual(Context.isContext(Context.empty()), true)\n * ```\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const empty: () => Context<never> = internal.empty\n\n/**\n * Creates a new `Context` with a single service associated to the tag.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Context } from \"effect\"\n *\n * const Port = Context.GenericTag<{ PORT: number }>(\"Port\")\n *\n * const Services = Context.make(Port, { PORT: 8080 })\n *\n * assert.deepStrictEqual(Context.get(Services, Port), { PORT: 8080 })\n * ```\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const make: <I, S>(tag: Tag<I, S>, service: Types.NoInfer<S>) => Context<I> = internal.make\n\n/**\n * Adds a service to a given `Context`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Context, pipe } from \"effect\"\n *\n * const Port = Context.GenericTag<{ PORT: number }>(\"Port\")\n * const Timeout = Context.GenericTag<{ TIMEOUT: number }>(\"Timeout\")\n *\n * const someContext = Context.make(Port, { PORT: 8080 })\n *\n * const Services = pipe(\n *   someContext,\n *   Context.add(Timeout, { TIMEOUT: 5000 })\n * )\n *\n * assert.deepStrictEqual(Context.get(Services, Port), { PORT: 8080 })\n * assert.deepStrictEqual(Context.get(Services, Timeout), { TIMEOUT: 5000 })\n * ```\n *\n * @since 2.0.0\n */\nexport const add: {\n  /**\n   * Adds a service to a given `Context`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Context, pipe } from \"effect\"\n   *\n   * const Port = Context.GenericTag<{ PORT: number }>(\"Port\")\n   * const Timeout = Context.GenericTag<{ TIMEOUT: number }>(\"Timeout\")\n   *\n   * const someContext = Context.make(Port, { PORT: 8080 })\n   *\n   * const Services = pipe(\n   *   someContext,\n   *   Context.add(Timeout, { TIMEOUT: 5000 })\n   * )\n   *\n   * assert.deepStrictEqual(Context.get(Services, Port), { PORT: 8080 })\n   * assert.deepStrictEqual(Context.get(Services, Timeout), { TIMEOUT: 5000 })\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <I, S>(tag: Tag<I, S>, service: Types.NoInfer<S>): <Services>(self: Context<Services>) => Context<Services | I>\n  /**\n   * Adds a service to a given `Context`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Context, pipe } from \"effect\"\n   *\n   * const Port = Context.GenericTag<{ PORT: number }>(\"Port\")\n   * const Timeout = Context.GenericTag<{ TIMEOUT: number }>(\"Timeout\")\n   *\n   * const someContext = Context.make(Port, { PORT: 8080 })\n   *\n   * const Services = pipe(\n   *   someContext,\n   *   Context.add(Timeout, { TIMEOUT: 5000 })\n   * )\n   *\n   * assert.deepStrictEqual(Context.get(Services, Port), { PORT: 8080 })\n   * assert.deepStrictEqual(Context.get(Services, Timeout), { TIMEOUT: 5000 })\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <Services, I, S>(self: Context<Services>, tag: Tag<I, S>, service: Types.NoInfer<S>): Context<Services | I>\n} = internal.add\n\n/**\n * Get a service from the context that corresponds to the given tag.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { pipe, Context } from \"effect\"\n *\n * const Port = Context.GenericTag<{ PORT: number }>(\"Port\")\n * const Timeout = Context.GenericTag<{ TIMEOUT: number }>(\"Timeout\")\n *\n * const Services = pipe(\n *   Context.make(Port, { PORT: 8080 }),\n *   Context.add(Timeout, { TIMEOUT: 5000 })\n * )\n *\n * assert.deepStrictEqual(Context.get(Services, Timeout), { TIMEOUT: 5000 })\n * ```\n *\n * @since 2.0.0\n * @category getters\n */\nexport const get: {\n  /**\n   * Get a service from the context that corresponds to the given tag.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { pipe, Context } from \"effect\"\n   *\n   * const Port = Context.GenericTag<{ PORT: number }>(\"Port\")\n   * const Timeout = Context.GenericTag<{ TIMEOUT: number }>(\"Timeout\")\n   *\n   * const Services = pipe(\n   *   Context.make(Port, { PORT: 8080 }),\n   *   Context.add(Timeout, { TIMEOUT: 5000 })\n   * )\n   *\n   * assert.deepStrictEqual(Context.get(Services, Timeout), { TIMEOUT: 5000 })\n   * ```\n   *\n   * @since 2.0.0\n   * @category getters\n   */\n  <I, S>(tag: Reference<I, S>): <Services>(self: Context<Services>) => S\n  /**\n   * Get a service from the context that corresponds to the given tag.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { pipe, Context } from \"effect\"\n   *\n   * const Port = Context.GenericTag<{ PORT: number }>(\"Port\")\n   * const Timeout = Context.GenericTag<{ TIMEOUT: number }>(\"Timeout\")\n   *\n   * const Services = pipe(\n   *   Context.make(Port, { PORT: 8080 }),\n   *   Context.add(Timeout, { TIMEOUT: 5000 })\n   * )\n   *\n   * assert.deepStrictEqual(Context.get(Services, Timeout), { TIMEOUT: 5000 })\n   * ```\n   *\n   * @since 2.0.0\n   * @category getters\n   */\n  <Services, I extends Services, S>(tag: Tag<I, S>): (self: Context<Services>) => S\n  /**\n   * Get a service from the context that corresponds to the given tag.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { pipe, Context } from \"effect\"\n   *\n   * const Port = Context.GenericTag<{ PORT: number }>(\"Port\")\n   * const Timeout = Context.GenericTag<{ TIMEOUT: number }>(\"Timeout\")\n   *\n   * const Services = pipe(\n   *   Context.make(Port, { PORT: 8080 }),\n   *   Context.add(Timeout, { TIMEOUT: 5000 })\n   * )\n   *\n   * assert.deepStrictEqual(Context.get(Services, Timeout), { TIMEOUT: 5000 })\n   * ```\n   *\n   * @since 2.0.0\n   * @category getters\n   */\n  <Services, I, S>(self: Context<Services>, tag: Reference<I, S>): S\n  /**\n   * Get a service from the context that corresponds to the given tag.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { pipe, Context } from \"effect\"\n   *\n   * const Port = Context.GenericTag<{ PORT: number }>(\"Port\")\n   * const Timeout = Context.GenericTag<{ TIMEOUT: number }>(\"Timeout\")\n   *\n   * const Services = pipe(\n   *   Context.make(Port, { PORT: 8080 }),\n   *   Context.add(Timeout, { TIMEOUT: 5000 })\n   * )\n   *\n   * assert.deepStrictEqual(Context.get(Services, Timeout), { TIMEOUT: 5000 })\n   * ```\n   *\n   * @since 2.0.0\n   * @category getters\n   */\n  <Services, I extends Services, S>(self: Context<Services>, tag: Tag<I, S>): S\n} = internal.get\n\n/**\n * Get a service from the context that corresponds to the given tag, or\n * use the fallback value.\n *\n * @since 3.7.0\n * @category getters\n */\nexport const getOrElse: {\n  /**\n   * Get a service from the context that corresponds to the given tag, or\n   * use the fallback value.\n   *\n   * @since 3.7.0\n   * @category getters\n   */\n  <S, I, B>(tag: Tag<I, S>, orElse: LazyArg<B>): <Services>(self: Context<Services>) => S | B\n  /**\n   * Get a service from the context that corresponds to the given tag, or\n   * use the fallback value.\n   *\n   * @since 3.7.0\n   * @category getters\n   */\n  <Services, S, I, B>(self: Context<Services>, tag: Tag<I, S>, orElse: LazyArg<B>): S | B\n} = internal.getOrElse\n\n/**\n * Get a service from the context that corresponds to the given tag.\n * This function is unsafe because if the tag is not present in the context, a runtime error will be thrown.\n *\n * For a safer version see {@link getOption}.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Context } from \"effect\"\n *\n * const Port = Context.GenericTag<{ PORT: number }>(\"Port\")\n * const Timeout = Context.GenericTag<{ TIMEOUT: number }>(\"Timeout\")\n *\n * const Services = Context.make(Port, { PORT: 8080 })\n *\n * assert.deepStrictEqual(Context.unsafeGet(Services, Port), { PORT: 8080 })\n * assert.throws(() => Context.unsafeGet(Services, Timeout))\n * ```\n *\n * @since 2.0.0\n * @category unsafe\n */\nexport const unsafeGet: {\n  /**\n   * Get a service from the context that corresponds to the given tag.\n   * This function is unsafe because if the tag is not present in the context, a runtime error will be thrown.\n   *\n   * For a safer version see {@link getOption}.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Context } from \"effect\"\n   *\n   * const Port = Context.GenericTag<{ PORT: number }>(\"Port\")\n   * const Timeout = Context.GenericTag<{ TIMEOUT: number }>(\"Timeout\")\n   *\n   * const Services = Context.make(Port, { PORT: 8080 })\n   *\n   * assert.deepStrictEqual(Context.unsafeGet(Services, Port), { PORT: 8080 })\n   * assert.throws(() => Context.unsafeGet(Services, Timeout))\n   * ```\n   *\n   * @since 2.0.0\n   * @category unsafe\n   */\n  <S, I>(tag: Tag<I, S>): <Services>(self: Context<Services>) => S\n  /**\n   * Get a service from the context that corresponds to the given tag.\n   * This function is unsafe because if the tag is not present in the context, a runtime error will be thrown.\n   *\n   * For a safer version see {@link getOption}.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Context } from \"effect\"\n   *\n   * const Port = Context.GenericTag<{ PORT: number }>(\"Port\")\n   * const Timeout = Context.GenericTag<{ TIMEOUT: number }>(\"Timeout\")\n   *\n   * const Services = Context.make(Port, { PORT: 8080 })\n   *\n   * assert.deepStrictEqual(Context.unsafeGet(Services, Port), { PORT: 8080 })\n   * assert.throws(() => Context.unsafeGet(Services, Timeout))\n   * ```\n   *\n   * @since 2.0.0\n   * @category unsafe\n   */\n  <Services, S, I>(self: Context<Services>, tag: Tag<I, S>): S\n} = internal.unsafeGet\n\n/**\n * Get the value associated with the specified tag from the context wrapped in an `Option` object. If the tag is not\n * found, the `Option` object will be `None`.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Context, Option } from \"effect\"\n *\n * const Port = Context.GenericTag<{ PORT: number }>(\"Port\")\n * const Timeout = Context.GenericTag<{ TIMEOUT: number }>(\"Timeout\")\n *\n * const Services = Context.make(Port, { PORT: 8080 })\n *\n * assert.deepStrictEqual(Context.getOption(Services, Port), Option.some({ PORT: 8080 }))\n * assert.deepStrictEqual(Context.getOption(Services, Timeout), Option.none())\n * ```\n *\n * @since 2.0.0\n * @category getters\n */\nexport const getOption: {\n  /**\n   * Get the value associated with the specified tag from the context wrapped in an `Option` object. If the tag is not\n   * found, the `Option` object will be `None`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Context, Option } from \"effect\"\n   *\n   * const Port = Context.GenericTag<{ PORT: number }>(\"Port\")\n   * const Timeout = Context.GenericTag<{ TIMEOUT: number }>(\"Timeout\")\n   *\n   * const Services = Context.make(Port, { PORT: 8080 })\n   *\n   * assert.deepStrictEqual(Context.getOption(Services, Port), Option.some({ PORT: 8080 }))\n   * assert.deepStrictEqual(Context.getOption(Services, Timeout), Option.none())\n   * ```\n   *\n   * @since 2.0.0\n   * @category getters\n   */\n  <S, I>(tag: Tag<I, S>): <Services>(self: Context<Services>) => Option<S>\n  /**\n   * Get the value associated with the specified tag from the context wrapped in an `Option` object. If the tag is not\n   * found, the `Option` object will be `None`.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Context, Option } from \"effect\"\n   *\n   * const Port = Context.GenericTag<{ PORT: number }>(\"Port\")\n   * const Timeout = Context.GenericTag<{ TIMEOUT: number }>(\"Timeout\")\n   *\n   * const Services = Context.make(Port, { PORT: 8080 })\n   *\n   * assert.deepStrictEqual(Context.getOption(Services, Port), Option.some({ PORT: 8080 }))\n   * assert.deepStrictEqual(Context.getOption(Services, Timeout), Option.none())\n   * ```\n   *\n   * @since 2.0.0\n   * @category getters\n   */\n  <Services, S, I>(self: Context<Services>, tag: Tag<I, S>): Option<S>\n} = internal.getOption\n\n/**\n * Merges two `Context`s, returning a new `Context` containing the services of both.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Context } from \"effect\"\n *\n * const Port = Context.GenericTag<{ PORT: number }>(\"Port\")\n * const Timeout = Context.GenericTag<{ TIMEOUT: number }>(\"Timeout\")\n *\n * const firstContext = Context.make(Port, { PORT: 8080 })\n * const secondContext = Context.make(Timeout, { TIMEOUT: 5000 })\n *\n * const Services = Context.merge(firstContext, secondContext)\n *\n * assert.deepStrictEqual(Context.get(Services, Port), { PORT: 8080 })\n * assert.deepStrictEqual(Context.get(Services, Timeout), { TIMEOUT: 5000 })\n * ```\n *\n * @since 2.0.0\n */\nexport const merge: {\n  /**\n   * Merges two `Context`s, returning a new `Context` containing the services of both.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Context } from \"effect\"\n   *\n   * const Port = Context.GenericTag<{ PORT: number }>(\"Port\")\n   * const Timeout = Context.GenericTag<{ TIMEOUT: number }>(\"Timeout\")\n   *\n   * const firstContext = Context.make(Port, { PORT: 8080 })\n   * const secondContext = Context.make(Timeout, { TIMEOUT: 5000 })\n   *\n   * const Services = Context.merge(firstContext, secondContext)\n   *\n   * assert.deepStrictEqual(Context.get(Services, Port), { PORT: 8080 })\n   * assert.deepStrictEqual(Context.get(Services, Timeout), { TIMEOUT: 5000 })\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <R1>(that: Context<R1>): <Services>(self: Context<Services>) => Context<R1 | Services>\n  /**\n   * Merges two `Context`s, returning a new `Context` containing the services of both.\n   *\n   * @example\n   * ```ts\n   * import * as assert from \"node:assert\"\n   * import { Context } from \"effect\"\n   *\n   * const Port = Context.GenericTag<{ PORT: number }>(\"Port\")\n   * const Timeout = Context.GenericTag<{ TIMEOUT: number }>(\"Timeout\")\n   *\n   * const firstContext = Context.make(Port, { PORT: 8080 })\n   * const secondContext = Context.make(Timeout, { TIMEOUT: 5000 })\n   *\n   * const Services = Context.merge(firstContext, secondContext)\n   *\n   * assert.deepStrictEqual(Context.get(Services, Port), { PORT: 8080 })\n   * assert.deepStrictEqual(Context.get(Services, Timeout), { TIMEOUT: 5000 })\n   * ```\n   *\n   * @since 2.0.0\n   */\n  <Services, R1>(self: Context<Services>, that: Context<R1>): Context<Services | R1>\n} = internal.merge\n\n/**\n * Merges any number of `Context`s, returning a new `Context` containing the services of all.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Context } from \"effect\"\n *\n * const Port = Context.GenericTag<{ PORT: number }>(\"Port\")\n * const Timeout = Context.GenericTag<{ TIMEOUT: number }>(\"Timeout\")\n * const Host = Context.GenericTag<{ HOST: string }>(\"Host\")\n *\n * const firstContext = Context.make(Port, { PORT: 8080 })\n * const secondContext = Context.make(Timeout, { TIMEOUT: 5000 })\n * const thirdContext = Context.make(Host, { HOST: \"localhost\" })\n *\n * const Services = Context.mergeAll(firstContext, secondContext, thirdContext)\n *\n * assert.deepStrictEqual(Context.get(Services, Port), { PORT: 8080 })\n * assert.deepStrictEqual(Context.get(Services, Timeout), { TIMEOUT: 5000 })\n * assert.deepStrictEqual(Context.get(Services, Host), { HOST: \"localhost\" })\n * ```\n *\n * @since 3.12.0\n */\nexport const mergeAll: <T extends Array<unknown>>(\n  ...ctxs: [...{ [K in keyof T]: Context<T[K]> }]\n) => Context<T[number]> = internal.mergeAll\n\n/**\n * Returns a new `Context` that contains only the specified services.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { pipe, Context, Option } from \"effect\"\n *\n * const Port = Context.GenericTag<{ PORT: number }>(\"Port\")\n * const Timeout = Context.GenericTag<{ TIMEOUT: number }>(\"Timeout\")\n *\n * const someContext = pipe(\n *   Context.make(Port, { PORT: 8080 }),\n *   Context.add(Timeout, { TIMEOUT: 5000 })\n * )\n *\n * const Services = pipe(someContext, Context.pick(Port))\n *\n * assert.deepStrictEqual(Context.getOption(Services, Port), Option.some({ PORT: 8080 }))\n * assert.deepStrictEqual(Context.getOption(Services, Timeout), Option.none())\n * ```\n *\n * @since 2.0.0\n */\nexport const pick: <Tags extends ReadonlyArray<Tag<any, any>>>(\n  ...tags: Tags\n) => <Services>(self: Context<Services>) => Context<Services & Tag.Identifier<Tags[number]>> = internal.pick\n\n/**\n * @since 2.0.0\n */\nexport const omit: <Tags extends ReadonlyArray<Tag<any, any>>>(\n  ...tags: Tags\n) => <Services>(self: Context<Services>) => Context<Exclude<Services, Tag.Identifier<Tags[number]>>> = internal.omit\n\n/**\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Context, Layer } from \"effect\"\n *\n * class MyTag extends Context.Tag(\"MyTag\")<\n *  MyTag,\n *  { readonly myNum: number }\n * >() {\n *  static Live = Layer.succeed(this, { myNum: 108 })\n * }\n * ```\n *\n * @since 2.0.0\n * @category constructors\n */\nexport const Tag: <const Id extends string>(id: Id) => <Self, Shape>() => TagClass<Self, Id, Shape> = internal.Tag\n\n/**\n * Creates a context tag with a default value.\n *\n * **Details**\n *\n * `Context.Reference` allows you to create a tag that can hold a value. You can\n * provide a default value for the service, which will automatically be used\n * when the context is accessed, or override it with a custom implementation\n * when needed.\n *\n * **Example** (Declaring a Tag with a default value)\n *\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Context, Effect } from \"effect\"\n *\n * class SpecialNumber extends Context.Reference<SpecialNumber>()(\n *   \"SpecialNumber\",\n *   { defaultValue: () => 2048 }\n * ) {}\n *\n * //      ┌─── Effect<void, never, never>\n * //      ▼\n * const program = Effect.gen(function* () {\n *   const specialNumber = yield* SpecialNumber\n *   console.log(`The special number is ${specialNumber}`)\n * })\n *\n * // No need to provide the SpecialNumber implementation\n * Effect.runPromise(program)\n * // Output: The special number is 2048\n * ```\n *\n * **Example** (Overriding the default value)\n *\n * ```ts\n * import { Context, Effect } from \"effect\"\n *\n * class SpecialNumber extends Context.Reference<SpecialNumber>()(\n *   \"SpecialNumber\",\n *   { defaultValue: () => 2048 }\n * ) {}\n *\n * const program = Effect.gen(function* () {\n *   const specialNumber = yield* SpecialNumber\n *   console.log(`The special number is ${specialNumber}`)\n * })\n *\n * Effect.runPromise(program.pipe(Effect.provideService(SpecialNumber, -1)))\n * // Output: The special number is -1\n * ```\n *\n * @since 3.11.0\n * @category constructors\n * @experimental\n */\nexport const Reference: <Self>() => <const Id extends string, Service>(\n  id: Id,\n  options: { readonly defaultValue: () => Service }\n) => ReferenceClass<Self, Id, Service> = internal.Reference\n"],"names":["internal","TagTypeId","ReferenceTypeId","GenericTag","makeGenericTag","TypeId","unsafeMake","makeContext","isContext","isTag","isReference","empty","make","add","get","getOrElse","unsafeGet","getOption","merge","mergeAll","pick","omit","Tag","Reference"],"mappings":";;;;;;;;;;;;;;;;;;;;AAYA,OAAO,KAAKA,QAAQ,MAAM,uBAAuB;;AAMjD,MAAMC,SAAS,gKAAkBD,QAAQ,CAACC,GAAS;AA6BnD,MAAMC,eAAe,gKAAkBF,QAAQ,CAACE,SAAe;AA4GxD,MAAMC,UAAU,gKACrBH,QAAQ,CAACI,QAAc;AAEzB,MAAMC,MAAM,gKAAkBL,QAAQ,CAACK,AAAgB;AA6BhD,MAAMC,UAAU,gKAAiEN,QAAQ,CAACO,KAAW;AAgBrG,MAAMC,SAAS,gKAAgDR,QAAQ,CAACQ,GAAS;AAgBjF,MAAMC,KAAK,gKAA+CT,QAAQ,AAAM,CAALS;AASnE,MAAMC,WAAW,gKAA6CV,QAAQ,CAACU,KAAW;AAgBlF,MAAMC,KAAK,gKAAyBX,QAAQ,AAAM,CAALW;AAoB7C,MAAMC,IAAI,gKAAoEZ,OAAa,CAAL,CAACY;AA0BvF,MAAMC,GAAG,gKAmDZb,MAAY,EAAJ,CAACa;AAwBN,MAAMC,GAAG,gKA6FZd,MAAY,EAAJ,CAACc;AASN,MAAMC,SAAS,gKAiBlBf,QAAQ,CAACe,GAAS;AAyBf,MAAMC,SAAS,gKAiDlBhB,QAAQ,CAACgB,GAAS;AAuBf,MAAMC,SAAS,gKA6ClBjB,QAAQ,CAACiB,GAAS;AAwBf,MAAMC,KAAK,gKA+CdlB,QAAQ,AAAM,CAALkB;AA2BN,MAAMC,QAAQ,gKAEKnB,QAAQ,CAACmB,EAAQ;AA0BpC,MAAMC,IAAI,gKAE8EpB,OAAa,CAAL,CAACoB;AAKjG,MAAMC,IAAI,gKAEsFrB,OAAa,CAAL,CAACqB;AAmBzG,MAAMC,GAAG,gKAAsFtB,MAAY,EAAJ,CAACsB;AA0DxG,MAAMC,SAAS,gKAGmBvB,QAAQ,CAACuB,GAAS","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9892, "column": 0}, "map": {"version":3,"file":"Effectable.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/effect/src/Effectable.ts"],"sourcesContent":["/**\n * @since 2.0.0\n */\nimport type * as Channel from \"./Channel.js\"\nimport type * as Effect from \"./Effect.js\"\nimport * as internal from \"./internal/effectable.js\"\nimport type * as Sink from \"./Sink.js\"\nimport type * as Stream from \"./Stream.js\"\n\n/**\n * @since 2.0.0\n * @category type ids\n */\nexport const EffectTypeId: Effect.EffectTypeId = internal.EffectTypeId\n\n/**\n * @since 2.0.0\n * @category type ids\n */\nexport type EffectTypeId = Effect.EffectTypeId\n\n/**\n * @since 2.0.0\n * @category type ids\n */\nexport const StreamTypeId: Stream.StreamTypeId = internal.StreamTypeId\n\n/**\n * @since 2.0.0\n * @category type ids\n */\nexport type StreamTypeId = Stream.StreamTypeId\n\n/**\n * @since 2.0.0\n * @category type ids\n */\nexport const SinkTypeId: Sink.SinkTypeId = internal.SinkTypeId\n\n/**\n * @since 2.0.0\n * @category type ids\n */\nexport type SinkTypeId = Sink.SinkTypeId\n\n/**\n * @since 2.0.0\n * @category type ids\n */\nexport const ChannelTypeId: Channel.ChannelTypeId = internal.ChannelTypeId\n\n/**\n * @since 2.0.0\n * @category type ids\n */\nexport type ChannelTypeId = Channel.ChannelTypeId\n\n/**\n * @since 2.0.0\n * @category models\n */\nexport interface CommitPrimitive {\n  new<A, E = never, R = never>(): Effect.Effect<A, E, R>\n}\n\n/**\n * @since 2.0.0\n * @category prototypes\n */\nexport const EffectPrototype: Effect.Effect<never> = internal.EffectPrototype\n\n/**\n * @since 2.0.0\n * @category prototypes\n */\nexport const CommitPrototype: Effect.Effect<never> = internal.CommitPrototype\n\n/**\n * @since 2.0.0\n * @category prototypes\n */\nexport const StructuralCommitPrototype: Effect.Effect<never> = internal.StructuralCommitPrototype\n\nconst Base: CommitPrimitive = internal.Base\nconst StructuralBase: CommitPrimitive = internal.StructuralBase\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport abstract class Class<A, E = never, R = never> extends Base<A, E, R> {\n  /**\n   * @since 2.0.0\n   */\n  abstract commit(): Effect.Effect<A, E, R>\n}\n\n/**\n * @since 2.0.0\n * @category constructors\n */\nexport abstract class StructuralClass<A, E = never, R = never> extends StructuralBase<A, E, R> {\n  /**\n   * @since 2.0.0\n   */\n  abstract commit(): Effect.Effect<A, E, R>\n}\n"],"names":["internal","EffectTypeId","StreamTypeId","SinkTypeId","ChannelTypeId","EffectPrototype","CommitPrototype","StructuralCommitPrototype","Base","StructuralBase","Class","StructuralClass"],"mappings":";;;;;;;;;;;AAKA,OAAO,KAAKA,QAAQ,MAAM,0BAA0B;;AAQ7C,MAAMC,YAAY,mKAAwBD,QAAQ,CAACC,MAAY;AAY/D,MAAMC,YAAY,mKAAwBF,QAAQ,CAACE,MAAY;AAY/D,MAAMC,UAAU,mKAAoBH,QAAQ,CAACG,IAAU;AAYvD,MAAMC,aAAa,mKAA0BJ,QAAQ,CAACI,OAAa;AAoBnE,MAAMC,eAAe,mKAAyBL,QAAQ,CAACK,SAAe;AAMtE,MAAMC,eAAe,mKAAyBN,QAAQ,CAACM,SAAe;AAMtE,MAAMC,yBAAyB,mKAAyBP,QAAQ,CAACO,mBAAyB;AAEjG,MAAMC,IAAI,mKAAoBR,OAAa,CAAL,CAACQ;AACvC,MAAMC,cAAc,mKAAoBT,QAAQ,CAACS,QAAc;AAMzD,MAAgBC,KAA+B,SAAQF,IAAa;AAAA;AAWpE,MAAgBG,eAAyC,SAAQF,cAAuB;AAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9924, "column": 0}, "map": {"version":3,"file":"Micro.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/effect/src/Micro.ts"],"sourcesContent":["/**\n * A lightweight alternative to the `Effect` data type, with a subset of the functionality.\n *\n * @since 3.4.0\n * @experimental\n */\nimport * as Arr from \"./Array.js\"\nimport type { Channel } from \"./Channel.js\"\nimport * as Context from \"./Context.js\"\nimport type { Effect, EffectUnify, EffectUnifyIgnore } from \"./Effect.js\"\nimport * as Effectable from \"./Effectable.js\"\nimport * as Either from \"./Either.js\"\nimport * as Equal from \"./Equal.js\"\nimport type { LazyArg } from \"./Function.js\"\nimport { constTrue, constVoid, dual, identity } from \"./Function.js\"\nimport { globalValue } from \"./GlobalValue.js\"\nimport * as Hash from \"./Hash.js\"\nimport type { TypeLambda } from \"./HKT.js\"\nimport type { Inspectable } from \"./Inspectable.js\"\nimport { format, NodeInspectSymbol, toStringUnknown } from \"./Inspectable.js\"\nimport * as InternalContext from \"./internal/context.js\"\nimport * as doNotation from \"./internal/doNotation.js\"\nimport { StructuralPrototype } from \"./internal/effectable.js\"\nimport * as Option from \"./Option.js\"\nimport type { Pipeable } from \"./Pipeable.js\"\nimport { pipeArguments } from \"./Pipeable.js\"\nimport type { Predicate, Refinement } from \"./Predicate.js\"\nimport { hasProperty, isIterable, isTagged } from \"./Predicate.js\"\nimport type { Sink } from \"./Sink.js\"\nimport type { Stream } from \"./Stream.js\"\nimport type { Concurrency, Covariant, Equals, NoExcessProperties, NotFunction, Simplify } from \"./Types.js\"\nimport type * as Unify from \"./Unify.js\"\nimport { SingleShotGen, YieldWrap, yieldWrapGet } from \"./Utils.js\"\n\n/**\n * @since 3.4.0\n * @experimental\n * @category type ids\n */\nexport const TypeId: unique symbol = Symbol.for(\"effect/Micro\")\n\n/**\n * @since 3.4.0\n * @experimental\n * @category type ids\n */\nexport type TypeId = typeof TypeId\n\n/**\n * @since 3.4.0\n * @experimental\n * @category MicroExit\n */\nexport const MicroExitTypeId: unique symbol = Symbol.for(\n  \"effect/Micro/MicroExit\"\n)\n\n/**\n * @since 3.4.0\n * @experimental\n * @category MicroExit\n */\nexport type MicroExitTypeId = typeof TypeId\n\n/**\n * A lightweight alternative to the `Effect` data type, with a subset of the functionality.\n *\n * @since 3.4.0\n * @experimental\n * @category models\n */\nexport interface Micro<out A, out E = never, out R = never> extends Effect<A, E, R> {\n  readonly [TypeId]: Micro.Variance<A, E, R>\n  [Symbol.iterator](): MicroIterator<Micro<A, E, R>>\n  [Unify.typeSymbol]?: unknown\n  [Unify.unifySymbol]?: MicroUnify<this>\n  [Unify.ignoreSymbol]?: MicroUnifyIgnore\n}\n\n/**\n * @category models\n * @since 3.4.3\n */\nexport interface MicroUnify<A extends { [Unify.typeSymbol]?: any }> extends EffectUnify<A> {\n  Micro?: () => A[Unify.typeSymbol] extends Micro<infer A0, infer E0, infer R0> | infer _ ? Micro<A0, E0, R0> : never\n}\n\n/**\n * @category models\n * @since 3.4.3\n */\nexport interface MicroUnifyIgnore extends EffectUnifyIgnore {\n  Effect?: true\n}\n/**\n * @category type lambdas\n * @since 3.4.1\n */\nexport interface MicroTypeLambda extends TypeLambda {\n  readonly type: Micro<this[\"Target\"], this[\"Out1\"], this[\"Out2\"]>\n}\n\n/**\n * @since 3.4.0\n * @experimental\n */\nexport declare namespace Micro {\n  /**\n   * @since 3.4.0\n   * @experimental\n   */\n  export interface Variance<A, E, R> {\n    _A: Covariant<A>\n    _E: Covariant<E>\n    _R: Covariant<R>\n  }\n\n  /**\n   * @since 3.4.0\n   * @experimental\n   */\n  export type Success<T> = T extends Micro<infer _A, infer _E, infer _R> ? _A : never\n\n  /**\n   * @since 3.4.0\n   * @experimental\n   */\n  export type Error<T> = T extends Micro<infer _A, infer _E, infer _R> ? _E : never\n\n  /**\n   * @since 3.4.0\n   * @experimental\n   */\n  export type Context<T> = T extends Micro<infer _A, infer _E, infer _R> ? _R : never\n}\n\n/**\n * @since 3.4.0\n * @experimental\n * @category guards\n */\nexport const isMicro = (u: unknown): u is Micro<any, any, any> => typeof u === \"object\" && u !== null && TypeId in u\n\n/**\n * @since 3.4.0\n * @experimental\n * @category models\n */\nexport interface MicroIterator<T extends Micro<any, any, any>> {\n  next(...args: ReadonlyArray<any>): IteratorResult<YieldWrap<T>, Micro.Success<T>>\n}\n\n// ----------------------------------------------------------------------------\n// MicroCause\n// ----------------------------------------------------------------------------\n\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroCause\n */\nexport const MicroCauseTypeId = Symbol.for(\"effect/Micro/MicroCause\")\n\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroCause\n */\nexport type MicroCauseTypeId = typeof MicroCauseTypeId\n\n/**\n * A `MicroCause` is a data type that represents the different ways a `Micro` can fail.\n *\n * **Details**\n *\n * `MicroCause` comes in three forms:\n *\n * - `Die`: Indicates an unforeseen defect that wasn't planned for in the system's logic.\n * - `Fail`: Covers anticipated errors that are recognized and typically handled within the application.\n * - `Interrupt`: Signifies an operation that has been purposefully stopped.\n *\n * @since 3.4.6\n * @experimental\n * @category MicroCause\n */\nexport type MicroCause<E> =\n  | MicroCause.Die\n  | MicroCause.Fail<E>\n  | MicroCause.Interrupt\n\n/**\n * @since 3.6.6\n * @experimental\n * @category guards\n */\nexport const isMicroCause = (self: unknown): self is MicroCause<unknown> => hasProperty(self, MicroCauseTypeId)\n\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroCause\n */\nexport declare namespace MicroCause {\n  /**\n   * @since 3.4.6\n   * @experimental\n   */\n  export type Error<T> = T extends MicroCause.Fail<infer E> ? E : never\n\n  /**\n   * @since 3.4.0\n   * @experimental\n   */\n  export interface Proto<Tag extends string, E> extends Pipeable, globalThis.Error {\n    readonly [MicroCauseTypeId]: {\n      _E: Covariant<E>\n    }\n    readonly _tag: Tag\n    readonly traces: ReadonlyArray<string>\n  }\n\n  /**\n   * @since 3.4.6\n   * @experimental\n   * @category MicroCause\n   */\n  export interface Die extends Proto<\"Die\", never> {\n    readonly defect: unknown\n  }\n\n  /**\n   * @since 3.4.6\n   * @experimental\n   * @category MicroCause\n   */\n  export interface Fail<E> extends Proto<\"Fail\", E> {\n    readonly error: E\n  }\n\n  /**\n   * @since 3.4.6\n   * @experimental\n   * @category MicroCause\n   */\n  export interface Interrupt extends Proto<\"Interrupt\", never> {}\n}\n\nconst microCauseVariance = {\n  _E: identity\n}\n\nabstract class MicroCauseImpl<Tag extends string, E> extends globalThis.Error implements MicroCause.Proto<Tag, E> {\n  readonly [MicroCauseTypeId]: {\n    _E: Covariant<E>\n  }\n  constructor(\n    readonly _tag: Tag,\n    originalError: unknown,\n    readonly traces: ReadonlyArray<string>\n  ) {\n    const causeName = `MicroCause.${_tag}`\n    let name: string\n    let message: string\n    let stack: string\n    if (originalError instanceof globalThis.Error) {\n      name = `(${causeName}) ${originalError.name}`\n      message = originalError.message as string\n      const messageLines = message.split(\"\\n\").length\n      stack = originalError.stack\n        ? `(${causeName}) ${\n          originalError.stack\n            .split(\"\\n\")\n            .slice(0, messageLines + 3)\n            .join(\"\\n\")\n        }`\n        : `${name}: ${message}`\n    } else {\n      name = causeName\n      message = toStringUnknown(originalError, 0)\n      stack = `${name}: ${message}`\n    }\n    if (traces.length > 0) {\n      stack += `\\n    ${traces.join(\"\\n    \")}`\n    }\n    super(message)\n    this[MicroCauseTypeId] = microCauseVariance\n    this.name = name\n    this.stack = stack\n  }\n  pipe() {\n    return pipeArguments(this, arguments)\n  }\n  toString() {\n    return this.stack\n  }\n  [NodeInspectSymbol]() {\n    return this.stack\n  }\n}\n\nclass Fail<E> extends MicroCauseImpl<\"Fail\", E> implements MicroCause.Fail<E> {\n  constructor(\n    readonly error: E,\n    traces: ReadonlyArray<string> = []\n  ) {\n    super(\"Fail\", error, traces)\n  }\n}\n\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroCause\n */\nexport const causeFail = <E>(\n  error: E,\n  traces: ReadonlyArray<string> = []\n): MicroCause<E> => new Fail(error, traces)\n\nclass Die extends MicroCauseImpl<\"Die\", never> implements MicroCause.Die {\n  constructor(\n    readonly defect: unknown,\n    traces: ReadonlyArray<string> = []\n  ) {\n    super(\"Die\", defect, traces)\n  }\n}\n\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroCause\n */\nexport const causeDie = (\n  defect: unknown,\n  traces: ReadonlyArray<string> = []\n): MicroCause<never> => new Die(defect, traces)\n\nclass Interrupt extends MicroCauseImpl<\"Interrupt\", never> implements MicroCause.Interrupt {\n  constructor(traces: ReadonlyArray<string> = []) {\n    super(\"Interrupt\", \"interrupted\", traces)\n  }\n}\n\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroCause\n */\nexport const causeInterrupt = (\n  traces: ReadonlyArray<string> = []\n): MicroCause<never> => new Interrupt(traces)\n\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroCause\n */\nexport const causeIsFail = <E>(\n  self: MicroCause<E>\n): self is MicroCause.Fail<E> => self._tag === \"Fail\"\n\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroCause\n */\nexport const causeIsDie = <E>(self: MicroCause<E>): self is MicroCause.Die => self._tag === \"Die\"\n\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroCause\n */\nexport const causeIsInterrupt = <E>(\n  self: MicroCause<E>\n): self is MicroCause.Interrupt => self._tag === \"Interrupt\"\n\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroCause\n */\nexport const causeSquash = <E>(self: MicroCause<E>): unknown =>\n  self._tag === \"Fail\" ? self.error : self._tag === \"Die\" ? self.defect : self\n\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroCause\n */\nexport const causeWithTrace: {\n  /**\n   * @since 3.4.6\n   * @experimental\n   * @category MicroCause\n   */\n  (trace: string): <E>(self: MicroCause<E>) => MicroCause<E>\n  /**\n   * @since 3.4.6\n   * @experimental\n   * @category MicroCause\n   */\n  <E>(self: MicroCause<E>, trace: string): MicroCause<E>\n} = dual(2, <E>(self: MicroCause<E>, trace: string): MicroCause<E> => {\n  const traces = [...self.traces, trace]\n  switch (self._tag) {\n    case \"Die\":\n      return causeDie(self.defect, traces)\n    case \"Interrupt\":\n      return causeInterrupt(traces)\n    case \"Fail\":\n      return causeFail(self.error, traces)\n  }\n})\n\n// ----------------------------------------------------------------------------\n// MicroFiber\n// ----------------------------------------------------------------------------\n\n/**\n * @since 3.11.0\n * @experimental\n * @category MicroFiber\n */\nexport const MicroFiberTypeId = Symbol.for(\"effect/Micro/MicroFiber\")\n\n/**\n * @since 3.11.0\n * @experimental\n * @category MicroFiber\n */\nexport type MicroFiberTypeId = typeof MicroFiberTypeId\n\n/**\n * @since 3.11.0\n * @experimental\n * @category MicroFiber\n */\nexport interface MicroFiber<out A, out E = never> {\n  readonly [MicroFiberTypeId]: MicroFiber.Variance<A, E>\n\n  readonly currentOpCount: number\n  readonly getRef: <I, A>(ref: Context.Reference<I, A>) => A\n  readonly context: Context.Context<never>\n  readonly addObserver: (cb: (exit: MicroExit<A, E>) => void) => () => void\n  readonly unsafeInterrupt: () => void\n  readonly unsafePoll: () => MicroExit<A, E> | undefined\n}\n\n/**\n * @since 3.11.0\n * @experimental\n * @category MicroFiber\n */\nexport declare namespace MicroFiber {\n  /**\n   * @since 3.11.0\n   * @experimental\n   * @category MicroFiber\n   */\n  export interface Variance<out A, out E = never> {\n    readonly _A: Covariant<A>\n    readonly _E: Covariant<E>\n  }\n}\n\nconst fiberVariance = {\n  _A: identity,\n  _E: identity\n}\n\nclass MicroFiberImpl<in out A = any, in out E = any> implements MicroFiber<A, E> {\n  readonly [MicroFiberTypeId]: MicroFiber.Variance<A, E>\n\n  readonly _stack: Array<Primitive> = []\n  readonly _observers: Array<(exit: MicroExit<A, E>) => void> = []\n  _exit: MicroExit<A, E> | undefined\n  public _children: Set<MicroFiberImpl<any, any>> | undefined\n\n  public currentOpCount = 0\n\n  constructor(\n    public context: Context.Context<never>,\n    public interruptible = true\n  ) {\n    this[MicroFiberTypeId] = fiberVariance\n  }\n\n  getRef<I, A>(ref: Context.Reference<I, A>): A {\n    return InternalContext.unsafeGetReference(this.context, ref)\n  }\n\n  addObserver(cb: (exit: MicroExit<A, E>) => void): () => void {\n    if (this._exit) {\n      cb(this._exit)\n      return constVoid\n    }\n    this._observers.push(cb)\n    return () => {\n      const index = this._observers.indexOf(cb)\n      if (index >= 0) {\n        this._observers.splice(index, 1)\n      }\n    }\n  }\n\n  _interrupted = false\n  unsafeInterrupt(): void {\n    if (this._exit) {\n      return\n    }\n    this._interrupted = true\n    if (this.interruptible) {\n      this.evaluate(exitInterrupt as any)\n    }\n  }\n\n  unsafePoll(): MicroExit<A, E> | undefined {\n    return this._exit\n  }\n\n  evaluate(effect: Primitive): void {\n    if (this._exit) {\n      return\n    } else if (this._yielded !== undefined) {\n      const yielded = this._yielded as () => void\n      this._yielded = undefined\n      yielded()\n    }\n    const exit = this.runLoop(effect)\n    if (exit === Yield) {\n      return\n    }\n\n    // the interruptChildren middlware is added in Micro.fork, so it can be\n    // tree-shaken if not used\n    const interruptChildren = fiberMiddleware.interruptChildren && fiberMiddleware.interruptChildren(this)\n    if (interruptChildren !== undefined) {\n      return this.evaluate(flatMap(interruptChildren, () => exit) as any)\n    }\n\n    this._exit = exit\n    for (let i = 0; i < this._observers.length; i++) {\n      this._observers[i](exit)\n    }\n    this._observers.length = 0\n  }\n\n  runLoop(effect: Primitive): MicroExit<A, E> | Yield {\n    let yielding = false\n    let current: Primitive | Yield = effect\n    this.currentOpCount = 0\n    try {\n      while (true) {\n        this.currentOpCount++\n        if (!yielding && this.getRef(CurrentScheduler).shouldYield(this as any)) {\n          yielding = true\n          const prev = current\n          current = flatMap(yieldNow, () => prev as any) as any\n        }\n        current = (current as any)[evaluate](this)\n        if (current === Yield) {\n          const yielded = this._yielded!\n          if (MicroExitTypeId in yielded) {\n            this._yielded = undefined\n            return yielded\n          }\n          return Yield\n        }\n      }\n    } catch (error) {\n      if (!hasProperty(current, evaluate)) {\n        return exitDie(`MicroFiber.runLoop: Not a valid effect: ${String(current)}`)\n      }\n      return exitDie(error)\n    }\n  }\n\n  getCont<S extends successCont | failureCont>(\n    symbol: S\n  ): Primitive & Record<S, (value: any, fiber: MicroFiberImpl) => Primitive> | undefined {\n    while (true) {\n      const op = this._stack.pop()\n      if (!op) return undefined\n      const cont = op[ensureCont] && op[ensureCont](this)\n      if (cont) return { [symbol]: cont } as any\n      if (op[symbol]) return op as any\n    }\n  }\n\n  // cancel the yielded operation, or for the yielded exit value\n  _yielded: MicroExit<any, any> | (() => void) | undefined = undefined\n  yieldWith(value: MicroExit<any, any> | (() => void)): Yield {\n    this._yielded = value\n    return Yield\n  }\n\n  children(): Set<MicroFiber<any, any>> {\n    return this._children ??= new Set()\n  }\n}\n\nconst fiberMiddleware = globalValue(\"effect/Micro/fiberMiddleware\", () => ({\n  interruptChildren: undefined as ((fiber: MicroFiberImpl) => Micro<void> | undefined) | undefined\n}))\n\nconst fiberInterruptChildren = (fiber: MicroFiberImpl) => {\n  if (fiber._children === undefined || fiber._children.size === 0) {\n    return undefined\n  }\n  return fiberInterruptAll(fiber._children)\n}\n\n/**\n * @since 3.11.0\n * @experimental\n * @category MicroFiber\n */\nexport const fiberAwait = <A, E>(self: MicroFiber<A, E>): Micro<MicroExit<A, E>> =>\n  async((resume) => sync(self.addObserver((exit) => resume(succeed(exit)))))\n\n/**\n * @since 3.11.2\n * @experimental\n * @category MicroFiber\n */\nexport const fiberJoin = <A, E>(self: MicroFiber<A, E>): Micro<A, E> => flatten(fiberAwait(self))\n\n/**\n * @since 3.11.0\n * @experimental\n * @category MicroFiber\n */\nexport const fiberInterrupt = <A, E>(self: MicroFiber<A, E>): Micro<void> =>\n  suspend(() => {\n    self.unsafeInterrupt()\n    return asVoid(fiberAwait(self))\n  })\n\n/**\n * @since 3.11.0\n * @experimental\n * @category MicroFiber\n */\nexport const fiberInterruptAll = <A extends Iterable<MicroFiber<any, any>>>(fibers: A): Micro<void> =>\n  suspend(() => {\n    for (const fiber of fibers) fiber.unsafeInterrupt()\n    const iter = fibers[Symbol.iterator]()\n    const wait: Micro<void> = suspend(() => {\n      let result = iter.next()\n      while (!result.done) {\n        if (result.value.unsafePoll()) {\n          result = iter.next()\n          continue\n        }\n        const fiber = result.value\n        return async((resume) => {\n          fiber.addObserver((_) => {\n            resume(wait)\n          })\n        })\n      }\n      return exitVoid\n    })\n    return wait\n  })\n\nconst identifier = Symbol.for(\"effect/Micro/identifier\")\ntype identifier = typeof identifier\n\nconst args = Symbol.for(\"effect/Micro/args\")\ntype args = typeof args\n\nconst evaluate = Symbol.for(\"effect/Micro/evaluate\")\ntype evaluate = typeof evaluate\n\nconst successCont = Symbol.for(\"effect/Micro/successCont\")\ntype successCont = typeof successCont\n\nconst failureCont = Symbol.for(\"effect/Micro/failureCont\")\ntype failureCont = typeof failureCont\n\nconst ensureCont = Symbol.for(\"effect/Micro/ensureCont\")\ntype ensureCont = typeof ensureCont\n\nconst Yield = Symbol.for(\"effect/Micro/Yield\")\ntype Yield = typeof Yield\n\ninterface Primitive {\n  readonly [identifier]: string\n  readonly [successCont]: ((value: unknown, fiber: MicroFiberImpl) => Primitive | Yield) | undefined\n  readonly [failureCont]:\n    | ((cause: MicroCause<unknown>, fiber: MicroFiberImpl) => Primitive | Yield)\n    | undefined\n  readonly [ensureCont]:\n    | ((fiber: MicroFiberImpl) =>\n      | ((value: unknown, fiber: MicroFiberImpl) => Primitive | Yield)\n      | undefined)\n    | undefined\n  [evaluate](fiber: MicroFiberImpl): Primitive | Yield\n}\n\nconst microVariance = {\n  _A: identity,\n  _E: identity,\n  _R: identity\n}\n\nconst MicroProto = {\n  ...Effectable.EffectPrototype,\n  _op: \"Micro\",\n  [TypeId]: microVariance,\n  pipe() {\n    return pipeArguments(this, arguments)\n  },\n  [Symbol.iterator]() {\n    return new SingleShotGen(new YieldWrap(this)) as any\n  },\n  toJSON(this: Primitive) {\n    return {\n      _id: \"Micro\",\n      op: this[identifier],\n      ...(args in this ? { args: this[args] } : undefined)\n    }\n  },\n  toString() {\n    return format(this)\n  },\n  [NodeInspectSymbol]() {\n    return format(this)\n  }\n}\n\nfunction defaultEvaluate(_fiber: MicroFiberImpl): Primitive | Yield {\n  return exitDie(`Micro.evaluate: Not implemented`) as any\n}\n\nconst makePrimitiveProto = <Op extends string>(options: {\n  readonly op: Op\n  readonly eval?: (fiber: MicroFiberImpl) => Primitive | Micro<any, any, any> | Yield\n  readonly contA?: (this: Primitive, value: any, fiber: MicroFiberImpl) => Primitive | Micro<any, any, any> | Yield\n  readonly contE?: (\n    this: Primitive,\n    cause: MicroCause<any>,\n    fiber: MicroFiberImpl\n  ) => Primitive | Micro<any, any, any> | Yield\n  readonly ensure?: (this: Primitive, fiber: MicroFiberImpl) => void | ((value: any, fiber: MicroFiberImpl) => void)\n}): Primitive => ({\n  ...MicroProto,\n  [identifier]: options.op,\n  [evaluate]: options.eval ?? defaultEvaluate,\n  [successCont]: options.contA,\n  [failureCont]: options.contE,\n  [ensureCont]: options.ensure\n} as any)\n\nconst makePrimitive = <Fn extends (...args: Array<any>) => any, Single extends boolean = true>(options: {\n  readonly op: string\n  readonly single?: Single\n  readonly eval?: (\n    this: Primitive & { readonly [args]: Single extends true ? Parameters<Fn>[0] : Parameters<Fn> },\n    fiber: MicroFiberImpl\n  ) => Primitive | Micro<any, any, any> | Yield\n  readonly contA?: (\n    this: Primitive & { readonly [args]: Single extends true ? Parameters<Fn>[0] : Parameters<Fn> },\n    value: any,\n    fiber: MicroFiberImpl\n  ) => Primitive | Micro<any, any, any> | Yield\n  readonly contE?: (\n    this: Primitive & { readonly [args]: Single extends true ? Parameters<Fn>[0] : Parameters<Fn> },\n    cause: MicroCause<any>,\n    fiber: MicroFiberImpl\n  ) => Primitive | Micro<any, any, any> | Yield\n  readonly ensure?: (\n    this: Primitive & { readonly [args]: Single extends true ? Parameters<Fn>[0] : Parameters<Fn> },\n    fiber: MicroFiberImpl\n  ) => void | ((value: any, fiber: MicroFiberImpl) => void)\n}): Fn => {\n  const Proto = makePrimitiveProto(options as any)\n  return function() {\n    const self = Object.create(Proto)\n    self[args] = options.single === false ? arguments : arguments[0]\n    return self\n  } as Fn\n}\n\nconst makeExit = <Fn extends (...args: Array<any>) => any, Prop extends string>(options: {\n  readonly op: \"Success\" | \"Failure\"\n  readonly prop: Prop\n  readonly eval: (\n    this:\n      & MicroExit<unknown, unknown>\n      & { [args]: Parameters<Fn>[0] },\n    fiber: MicroFiberImpl<unknown, unknown>\n  ) => Primitive | Yield\n}): Fn => {\n  const Proto = {\n    ...makePrimitiveProto(options),\n    [MicroExitTypeId]: MicroExitTypeId,\n    _tag: options.op,\n    get [options.prop](): any {\n      return (this as any)[args]\n    },\n    toJSON(this: any) {\n      return {\n        _id: \"MicroExit\",\n        _tag: options.op,\n        [options.prop]: this[args]\n      }\n    },\n    [Equal.symbol](this: any, that: any): boolean {\n      return isMicroExit(that) && that._tag === options.op &&\n        Equal.equals(this[args], (that as any)[args])\n    },\n    [Hash.symbol](this: any): number {\n      return Hash.cached(this, Hash.combine(Hash.string(options.op))(Hash.hash(this[args])))\n    }\n  }\n  return function(value: unknown) {\n    const self = Object.create(Proto)\n    self[args] = value\n    self[successCont] = undefined\n    self[failureCont] = undefined\n    self[ensureCont] = undefined\n    return self\n  } as Fn\n}\n\n/**\n * Creates a `Micro` effect that will succeed with the specified constant value.\n *\n * @since 3.4.0\n * @experimental\n * @category constructors\n */\nexport const succeed: <A>(value: A) => Micro<A> = makeExit({\n  op: \"Success\",\n  prop: \"value\",\n  eval(fiber) {\n    const cont = fiber.getCont(successCont)\n    return cont ? cont[successCont](this[args], fiber) : fiber.yieldWith(this)\n  }\n})\n\n/**\n * Creates a `Micro` effect that will fail with the specified `MicroCause`.\n *\n * @since 3.4.6\n * @experimental\n * @category constructors\n */\nexport const failCause: <E>(cause: MicroCause<E>) => Micro<never, E> = makeExit({\n  op: \"Failure\",\n  prop: \"cause\",\n  eval(fiber) {\n    let cont = fiber.getCont(failureCont)\n    while (causeIsInterrupt(this[args]) && cont && fiber.interruptible) {\n      cont = fiber.getCont(failureCont)\n    }\n    return cont ? cont[failureCont](this[args], fiber) : fiber.yieldWith(this)\n  }\n})\n\n/**\n * Creates a `Micro` effect that fails with the given error.\n *\n * This results in a `Fail` variant of the `MicroCause` type, where the error is\n * tracked at the type level.\n *\n * @since 3.4.0\n * @experimental\n * @category constructors\n */\nexport const fail = <E>(error: E): Micro<never, E> => failCause(causeFail(error))\n\n/**\n * Creates a `Micro` effect that succeeds with a lazily evaluated value.\n *\n * If the evaluation of the value throws an error, the effect will fail with a\n * `Die` variant of the `MicroCause` type.\n *\n * @since 3.4.0\n * @experimental\n * @category constructors\n */\nexport const sync: <A>(evaluate: LazyArg<A>) => Micro<A> = makePrimitive({\n  op: \"Sync\",\n  eval(fiber): Primitive | Yield {\n    const value = this[args]()\n    const cont = fiber.getCont(successCont)\n    return cont ? cont[successCont](value, fiber) : fiber.yieldWith(exitSucceed(value))\n  }\n})\n\n/**\n * Lazily creates a `Micro` effect from the given side-effect.\n *\n * @since 3.4.0\n * @experimental\n * @category constructors\n */\nexport const suspend: <A, E, R>(evaluate: LazyArg<Micro<A, E, R>>) => Micro<A, E, R> = makePrimitive({\n  op: \"Suspend\",\n  eval(_fiber) {\n    return this[args]()\n  }\n})\n\n/**\n * Pause the execution of the current `Micro` effect, and resume it on the next\n * scheduler tick.\n *\n * @since 3.4.0\n * @experimental\n * @category constructors\n */\nexport const yieldNowWith: (priority?: number) => Micro<void> = makePrimitive({\n  op: \"Yield\",\n  eval(fiber) {\n    let resumed = false\n    fiber.getRef(CurrentScheduler).scheduleTask(() => {\n      if (resumed) return\n      fiber.evaluate(exitVoid as any)\n    }, this[args] ?? 0)\n    return fiber.yieldWith(() => {\n      resumed = true\n    })\n  }\n})\n\n/**\n * Pause the execution of the current `Micro` effect, and resume it on the next\n * scheduler tick.\n *\n * @since 3.4.0\n * @experimental\n * @category constructors\n */\nexport const yieldNow: Micro<void> = yieldNowWith(0)\n\n/**\n * Creates a `Micro` effect that will succeed with the value wrapped in `Some`.\n *\n * @since 3.4.0\n * @experimental\n * @category constructors\n */\nexport const succeedSome = <A>(a: A): Micro<Option.Option<A>> => succeed(Option.some(a))\n\n/**\n * Creates a `Micro` effect that succeeds with `None`.\n *\n * @since 3.4.0\n * @experimental\n * @category constructors\n */\nexport const succeedNone: Micro<Option.Option<never>> = succeed(Option.none())\n\n/**\n * Creates a `Micro` effect that will fail with the lazily evaluated `MicroCause`.\n *\n * @since 3.4.0\n * @experimental\n * @category constructors\n */\nexport const failCauseSync = <E>(evaluate: LazyArg<MicroCause<E>>): Micro<never, E> =>\n  suspend(() => failCause(evaluate()))\n\n/**\n * Creates a `Micro` effect that will die with the specified error.\n *\n * This results in a `Die` variant of the `MicroCause` type, where the error is\n * not tracked at the type level.\n *\n * @since 3.4.0\n * @experimental\n * @category constructors\n */\nexport const die = (defect: unknown): Micro<never> => exitDie(defect)\n\n/**\n * Creates a `Micro` effect that will fail with the lazily evaluated error.\n *\n * This results in a `Fail` variant of the `MicroCause` type, where the error is\n * tracked at the type level.\n *\n * @since 3.4.6\n * @experimental\n * @category constructors\n */\nexport const failSync = <E>(error: LazyArg<E>): Micro<never, E> => suspend(() => fail(error()))\n\n/**\n * Converts an `Option` into a `Micro` effect, that will fail with\n * `NoSuchElementException` if the option is `None`. Otherwise, it will succeed with the\n * value of the option.\n *\n * @since 3.4.0\n * @experimental\n * @category constructors\n */\nexport const fromOption = <A>(option: Option.Option<A>): Micro<A, NoSuchElementException> =>\n  option._tag === \"Some\" ? succeed(option.value) : fail(new NoSuchElementException({}))\n\n/**\n * Converts an `Either` into a `Micro` effect, that will fail with the left side\n * of the either if it is a `Left`. Otherwise, it will succeed with the right\n * side of the either.\n *\n * @since 3.4.0\n * @experimental\n * @category constructors\n */\nexport const fromEither = <R, L>(either: Either.Either<R, L>): Micro<R, L> =>\n  either._tag === \"Right\" ? succeed(either.right) : fail(either.left)\n\nconst void_: Micro<void> = succeed(void 0)\nexport {\n  /**\n   * A `Micro` effect that will succeed with `void` (`undefined`).\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category constructors\n   */\n  void_ as void\n}\n\nconst try_ = <A, E>(options: {\n  try: LazyArg<A>\n  catch: (error: unknown) => E\n}): Micro<A, E> =>\n  suspend(() => {\n    try {\n      return succeed(options.try())\n    } catch (err) {\n      return fail(options.catch(err))\n    }\n  })\nexport {\n  /**\n   * The `Micro` equivalent of a try / catch block, which allows you to map\n   * thrown errors to a specific error type.\n   *\n   * @example\n   * ```ts\n   * import { Micro } from \"effect\"\n   *\n   * Micro.try({\n   *   try: () => { throw new Error(\"boom\") },\n   *   catch: (cause) => new Error(\"caught\", { cause })\n   * })\n   * ```\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category constructors\n   */\n  try_ as try\n}\n\n/**\n * Wrap a `Promise` into a `Micro` effect.\n *\n * Any errors will result in a `Die` variant of the `MicroCause` type, where the\n * error is not tracked at the type level.\n *\n * @since 3.4.0\n * @experimental\n * @category constructors\n */\nexport const promise = <A>(evaluate: (signal: AbortSignal) => PromiseLike<A>): Micro<A> =>\n  asyncOptions<A>(function(resume, signal) {\n    evaluate(signal!).then(\n      (a) => resume(succeed(a)),\n      (e) => resume(die(e))\n    )\n  }, evaluate.length !== 0)\n\n/**\n * Wrap a `Promise` into a `Micro` effect. Any errors will be caught and\n * converted into a specific error type.\n *\n * @example\n * ```ts\n * import { Micro } from \"effect\"\n *\n * Micro.tryPromise({\n *   try: () => Promise.resolve(\"success\"),\n *   catch: (cause) => new Error(\"caught\", { cause })\n * })\n * ```\n *\n * @since 3.4.0\n * @experimental\n * @category constructors\n */\nexport const tryPromise = <A, E>(options: {\n  readonly try: (signal: AbortSignal) => PromiseLike<A>\n  readonly catch: (error: unknown) => E\n}): Micro<A, E> =>\n  asyncOptions<A, E>(function(resume, signal) {\n    try {\n      options.try(signal!).then(\n        (a) => resume(succeed(a)),\n        (e) => resume(fail(options.catch(e)))\n      )\n    } catch (err) {\n      resume(fail(options.catch(err)))\n    }\n  }, options.try.length !== 0)\n\n/**\n * Create a `Micro` effect using the current `MicroFiber`.\n *\n * @since 3.4.0\n * @experimental\n * @category constructors\n */\nexport const withMicroFiber: <A, E = never, R = never>(\n  evaluate: (fiber: MicroFiberImpl<A, E>) => Micro<A, E, R>\n) => Micro<A, E, R> = makePrimitive({\n  op: \"WithMicroFiber\",\n  eval(fiber) {\n    return this[args](fiber)\n  }\n})\n\n/**\n * Flush any yielded effects that are waiting to be executed.\n *\n * @since 3.4.0\n * @experimental\n * @category constructors\n */\nexport const yieldFlush: Micro<void> = withMicroFiber((fiber) => {\n  fiber.getRef(CurrentScheduler).flush()\n  return exitVoid\n})\n\nconst asyncOptions: <A, E = never, R = never>(\n  register: (\n    resume: (effect: Micro<A, E, R>) => void,\n    signal?: AbortSignal\n  ) => void | Micro<void, never, R>,\n  withSignal: boolean\n) => Micro<A, E, R> = makePrimitive({\n  op: \"Async\",\n  single: false,\n  eval(fiber) {\n    const register = this[args][0]\n    let resumed = false\n    let yielded: boolean | Primitive = false\n    const controller = this[args][1] ? new AbortController() : undefined\n    const onCancel = register((effect) => {\n      if (resumed) return\n      resumed = true\n      if (yielded) {\n        fiber.evaluate(effect as any)\n      } else {\n        yielded = effect as any\n      }\n    }, controller?.signal)\n    if (yielded !== false) return yielded\n    yielded = true\n    fiber._yielded = () => {\n      resumed = true\n    }\n    if (controller === undefined && onCancel === undefined) {\n      return Yield\n    }\n    fiber._stack.push(asyncFinalizer(() => {\n      resumed = true\n      controller?.abort()\n      return onCancel ?? exitVoid\n    }))\n    return Yield\n  }\n})\nconst asyncFinalizer: (onInterrupt: () => Micro<void, any, any>) => Primitive = makePrimitive({\n  op: \"AsyncFinalizer\",\n  ensure(fiber) {\n    if (fiber.interruptible) {\n      fiber.interruptible = false\n      fiber._stack.push(setInterruptible(true))\n    }\n  },\n  contE(cause, _fiber) {\n    return causeIsInterrupt(cause)\n      ? flatMap(this[args](), () => failCause(cause))\n      : failCause(cause)\n  }\n})\n\n/**\n * Create a `Micro` effect from an asynchronous computation.\n *\n * You can return a cleanup effect that will be run when the effect is aborted.\n * It is also passed an `AbortSignal` that is triggered when the effect is\n * aborted.\n *\n * @since 3.4.0\n * @experimental\n * @category constructors\n */\nexport const async = <A, E = never, R = never>(\n  register: (\n    resume: (effect: Micro<A, E, R>) => void,\n    signal: AbortSignal\n  ) => void | Micro<void, never, R>\n): Micro<A, E, R> => asyncOptions(register as any, register.length >= 2)\n\n/**\n * A `Micro` that will never succeed or fail. It wraps `setInterval` to prevent\n * the Javascript runtime from exiting.\n *\n * @since 3.4.0\n * @experimental\n * @category constructors\n */\nexport const never: Micro<never> = async<never>(function() {\n  const interval = setInterval(constVoid, 2147483646)\n  return sync(() => clearInterval(interval))\n})\n\n/**\n * @since 3.4.0\n * @experimental\n * @category constructors\n */\nexport const gen = <Self, Eff extends YieldWrap<Micro<any, any, any>>, AEff>(\n  ...args:\n    | [self: Self, body: (this: Self) => Generator<Eff, AEff, never>]\n    | [body: () => Generator<Eff, AEff, never>]\n): Micro<\n  AEff,\n  [Eff] extends [never] ? never : [Eff] extends [YieldWrap<Micro<infer _A, infer E, infer _R>>] ? E : never,\n  [Eff] extends [never] ? never : [Eff] extends [YieldWrap<Micro<infer _A, infer _E, infer R>>] ? R : never\n> => suspend(() => fromIterator(args.length === 1 ? args[0]() : args[1].call(args[0]) as any))\n\nconst fromIterator: (\n  iterator: Iterator<any, YieldWrap<Micro<any, any, any>>>\n) => Micro<any, any, any> = makePrimitive({\n  op: \"Iterator\",\n  contA(value, fiber) {\n    const state = this[args].next(value)\n    if (state.done) return succeed(state.value)\n    fiber._stack.push(this)\n    return yieldWrapGet(state.value)\n  },\n  eval(this: any, fiber: MicroFiberImpl) {\n    return this[successCont](undefined, fiber)\n  }\n})\n\n// ----------------------------------------------------------------------------\n// mapping & sequencing\n// ----------------------------------------------------------------------------\n\n/**\n * Create a `Micro` effect that will replace the success value of the given\n * effect.\n *\n * @since 3.4.0\n * @experimental\n * @category mapping & sequencing\n */\nexport const as: {\n  // ----------------------------------------------------------------------------\n  // mapping & sequencing\n  // ----------------------------------------------------------------------------\n\n  /**\n   * Create a `Micro` effect that will replace the success value of the given\n   * effect.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category mapping & sequencing\n   */\n  <A, B>(value: B): <E, R>(self: Micro<A, E, R>) => Micro<B, E, R>\n  // ----------------------------------------------------------------------------\n  // mapping & sequencing\n  // ----------------------------------------------------------------------------\n\n  /**\n   * Create a `Micro` effect that will replace the success value of the given\n   * effect.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category mapping & sequencing\n   */\n  <A, E, R, B>(self: Micro<A, E, R>, value: B): Micro<B, E, R>\n} = dual(2, <A, E, R, B>(self: Micro<A, E, R>, value: B): Micro<B, E, R> => map(self, (_) => value))\n\n/**\n * Wrap the success value of this `Micro` effect in a `Some`.\n *\n * @since 3.4.0\n * @experimental\n * @category mapping & sequencing\n */\nexport const asSome = <A, E, R>(self: Micro<A, E, R>): Micro<Option.Option<A>, E, R> => map(self, Option.some)\n\n/**\n * Swap the error and success types of the `Micro` effect.\n *\n * @since 3.4.0\n * @experimental\n * @category mapping & sequencing\n */\nexport const flip = <A, E, R>(self: Micro<A, E, R>): Micro<E, A, R> =>\n  matchEffect(self, {\n    onFailure: succeed,\n    onSuccess: fail\n  })\n\n/**\n * A more flexible version of `flatMap` that combines `map` and `flatMap` into a\n * single API.\n *\n * It also lets you directly pass a `Micro` effect, which will be executed after\n * the current effect.\n *\n * @since 3.4.0\n * @experimental\n * @category mapping & sequencing\n */\nexport const andThen: {\n  /**\n   * A more flexible version of `flatMap` that combines `map` and `flatMap` into a\n   * single API.\n   *\n   * It also lets you directly pass a `Micro` effect, which will be executed after\n   * the current effect.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category mapping & sequencing\n   */\n  <A, X>(f: (a: A) => X): <E, R>(\n    self: Micro<A, E, R>\n  ) => [X] extends [Micro<infer A1, infer E1, infer R1>] ? Micro<A1, E | E1, R | R1>\n    : Micro<X, E, R>\n  /**\n   * A more flexible version of `flatMap` that combines `map` and `flatMap` into a\n   * single API.\n   *\n   * It also lets you directly pass a `Micro` effect, which will be executed after\n   * the current effect.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category mapping & sequencing\n   */\n  <X>(f: NotFunction<X>): <A, E, R>(\n    self: Micro<A, E, R>\n  ) => [X] extends [Micro<infer A1, infer E1, infer R1>] ? Micro<A1, E | E1, R | R1>\n    : Micro<X, E, R>\n  /**\n   * A more flexible version of `flatMap` that combines `map` and `flatMap` into a\n   * single API.\n   *\n   * It also lets you directly pass a `Micro` effect, which will be executed after\n   * the current effect.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category mapping & sequencing\n   */\n  <A, E, R, X>(self: Micro<A, E, R>, f: (a: A) => X): [X] extends [Micro<infer A1, infer E1, infer R1>] ? Micro<A1, E | E1, R | R1>\n    : Micro<X, E, R>\n  /**\n   * A more flexible version of `flatMap` that combines `map` and `flatMap` into a\n   * single API.\n   *\n   * It also lets you directly pass a `Micro` effect, which will be executed after\n   * the current effect.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category mapping & sequencing\n   */\n  <A, E, R, X>(self: Micro<A, E, R>, f: NotFunction<X>): [X] extends [Micro<infer A1, infer E1, infer R1>] ? Micro<A1, E | E1, R | R1>\n    : Micro<X, E, R>\n} = dual(\n  2,\n  <A, E, R, B, E2, R2>(self: Micro<A, E, R>, f: any): Micro<B, E | E2, R | R2> =>\n    flatMap(self, (a) => {\n      const value = isMicro(f) ? f : typeof f === \"function\" ? f(a) : f\n      return isMicro(value) ? value : succeed(value)\n    })\n)\n\n/**\n * Execute a side effect from the success value of the `Micro` effect.\n *\n * It is similar to the `andThen` api, but the success value is ignored.\n *\n * @since 3.4.0\n * @experimental\n * @category mapping & sequencing\n */\nexport const tap: {\n  /**\n   * Execute a side effect from the success value of the `Micro` effect.\n   *\n   * It is similar to the `andThen` api, but the success value is ignored.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category mapping & sequencing\n   */\n  <A, X>(f: (a: NoInfer<A>) => X): <E, R>(\n    self: Micro<A, E, R>\n  ) => [X] extends [Micro<infer _A1, infer E1, infer R1>] ? Micro<A, E | E1, R | R1>\n    : Micro<A, E, R>\n  /**\n   * Execute a side effect from the success value of the `Micro` effect.\n   *\n   * It is similar to the `andThen` api, but the success value is ignored.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category mapping & sequencing\n   */\n  <X>(f: NotFunction<X>): <A, E, R>(\n    self: Micro<A, E, R>\n  ) => [X] extends [Micro<infer _A1, infer E1, infer R1>] ? Micro<A, E | E1, R | R1>\n    : Micro<A, E, R>\n  /**\n   * Execute a side effect from the success value of the `Micro` effect.\n   *\n   * It is similar to the `andThen` api, but the success value is ignored.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category mapping & sequencing\n   */\n  <A, E, R, X>(self: Micro<A, E, R>, f: (a: NoInfer<A>) => X): [X] extends [Micro<infer _A1, infer E1, infer R1>] ? Micro<A, E | E1, R | R1>\n    : Micro<A, E, R>\n  /**\n   * Execute a side effect from the success value of the `Micro` effect.\n   *\n   * It is similar to the `andThen` api, but the success value is ignored.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category mapping & sequencing\n   */\n  <A, E, R, X>(self: Micro<A, E, R>, f: NotFunction<X>): [X] extends [Micro<infer _A1, infer E1, infer R1>] ? Micro<A, E | E1, R | R1>\n    : Micro<A, E, R>\n} = dual(\n  2,\n  <A, E, R, B, E2, R2>(self: Micro<A, E, R>, f: (a: A) => Micro<B, E2, R2>): Micro<A, E | E2, R | R2> =>\n    flatMap(self, (a) => {\n      const value = isMicro(f) ? f : typeof f === \"function\" ? f(a) : f\n      return isMicro(value) ? as(value, a) : succeed(a)\n    })\n)\n\n/**\n * Replace the success value of the `Micro` effect with `void`.\n *\n * @since 3.4.0\n * @experimental\n * @category mapping & sequencing\n */\nexport const asVoid = <A, E, R>(self: Micro<A, E, R>): Micro<void, E, R> => flatMap(self, (_) => exitVoid)\n\n/**\n * Access the `MicroExit` of the given `Micro` effect.\n *\n * @since 3.4.6\n * @experimental\n * @category mapping & sequencing\n */\nexport const exit = <A, E, R>(self: Micro<A, E, R>): Micro<MicroExit<A, E>, never, R> =>\n  matchCause(self, {\n    onFailure: exitFailCause,\n    onSuccess: exitSucceed\n  })\n\n/**\n * Replace the error type of the given `Micro` with the full `MicroCause` object.\n *\n * @since 3.4.0\n * @experimental\n * @category mapping & sequencing\n */\nexport const sandbox = <A, E, R>(self: Micro<A, E, R>): Micro<A, MicroCause<E>, R> => catchAllCause(self, fail)\n\n/**\n * Returns an effect that races all the specified effects,\n * yielding the value of the first effect to succeed with a value. Losers of\n * the race will be interrupted immediately\n *\n * @since 3.4.0\n * @experimental\n * @category sequencing\n */\nexport const raceAll = <Eff extends Micro<any, any, any>>(\n  all: Iterable<Eff>\n): Micro<Micro.Success<Eff>, Micro.Error<Eff>, Micro.Context<Eff>> =>\n  withMicroFiber((parent) =>\n    async((resume) => {\n      const effects = Arr.fromIterable(all)\n      const len = effects.length\n      let doneCount = 0\n      let done = false\n      const fibers = new Set<MicroFiber<any, any>>()\n      const causes: Array<MicroCause<any>> = []\n      const onExit = (exit: MicroExit<any, any>) => {\n        doneCount++\n        if (exit._tag === \"Failure\") {\n          causes.push(exit.cause)\n          if (doneCount >= len) {\n            resume(failCause(causes[0]))\n          }\n          return\n        }\n        done = true\n        resume(fibers.size === 0 ? exit : flatMap(uninterruptible(fiberInterruptAll(fibers)), () => exit))\n      }\n\n      for (let i = 0; i < len; i++) {\n        if (done) break\n        const fiber = unsafeFork(parent, interruptible(effects[i]), true, true)\n        fibers.add(fiber)\n        fiber.addObserver((exit) => {\n          fibers.delete(fiber)\n          onExit(exit)\n        })\n      }\n\n      return fiberInterruptAll(fibers)\n    })\n  )\n\n/**\n * Returns an effect that races all the specified effects,\n * yielding the value of the first effect to succeed or fail. Losers of\n * the race will be interrupted immediately.\n *\n * @since 3.4.0\n * @experimental\n * @category sequencing\n */\nexport const raceAllFirst = <Eff extends Micro<any, any, any>>(\n  all: Iterable<Eff>\n): Micro<Micro.Success<Eff>, Micro.Error<Eff>, Micro.Context<Eff>> =>\n  withMicroFiber((parent) =>\n    async((resume) => {\n      let done = false\n      const fibers = new Set<MicroFiber<any, any>>()\n      const onExit = (exit: MicroExit<any, any>) => {\n        done = true\n        resume(fibers.size === 0 ? exit : flatMap(fiberInterruptAll(fibers), () => exit))\n      }\n\n      for (const effect of all) {\n        if (done) break\n        const fiber = unsafeFork(parent, interruptible(effect), true, true)\n        fibers.add(fiber)\n        fiber.addObserver((exit) => {\n          fibers.delete(fiber)\n          onExit(exit)\n        })\n      }\n\n      return fiberInterruptAll(fibers)\n    })\n  )\n\n/**\n * Returns an effect that races two effects, yielding the value of the first\n * effect to succeed. Losers of the race will be interrupted immediately.\n *\n * @since 3.4.0\n * @experimental\n * @category sequencing\n */\nexport const race: {\n  /**\n   * Returns an effect that races two effects, yielding the value of the first\n   * effect to succeed. Losers of the race will be interrupted immediately.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category sequencing\n   */\n  <A2, E2, R2>(that: Micro<A2, E2, R2>): <A, E, R>(self: Micro<A, E, R>) => Micro<A | A2, E | E2, R | R2>\n  /**\n   * Returns an effect that races two effects, yielding the value of the first\n   * effect to succeed. Losers of the race will be interrupted immediately.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category sequencing\n   */\n  <A, E, R, A2, E2, R2>(self: Micro<A, E, R>, that: Micro<A2, E2, R2>): Micro<A | A2, E | E2, R | R2>\n} = dual(\n  2,\n  <A, E, R, A2, E2, R2>(self: Micro<A, E, R>, that: Micro<A2, E2, R2>): Micro<A | A2, E | E2, R | R2> =>\n    raceAll([self, that])\n)\n\n/**\n * Returns an effect that races two effects, yielding the value of the first\n * effect to succeed *or* fail. Losers of the race will be interrupted immediately.\n *\n * @since 3.4.0\n * @experimental\n * @category sequencing\n */\nexport const raceFirst: {\n  /**\n   * Returns an effect that races two effects, yielding the value of the first\n   * effect to succeed *or* fail. Losers of the race will be interrupted immediately.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category sequencing\n   */\n  <A2, E2, R2>(that: Micro<A2, E2, R2>): <A, E, R>(self: Micro<A, E, R>) => Micro<A | A2, E | E2, R | R2>\n  /**\n   * Returns an effect that races two effects, yielding the value of the first\n   * effect to succeed *or* fail. Losers of the race will be interrupted immediately.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category sequencing\n   */\n  <A, E, R, A2, E2, R2>(self: Micro<A, E, R>, that: Micro<A2, E2, R2>): Micro<A | A2, E | E2, R | R2>\n} = dual(\n  2,\n  <A, E, R, A2, E2, R2>(self: Micro<A, E, R>, that: Micro<A2, E2, R2>): Micro<A | A2, E | E2, R | R2> =>\n    raceAllFirst([self, that])\n)\n\n/**\n * Map the success value of this `Micro` effect to another `Micro` effect, then\n * flatten the result.\n *\n * @since 3.4.0\n * @experimental\n * @category mapping & sequencing\n */\nexport const flatMap: {\n  /**\n   * Map the success value of this `Micro` effect to another `Micro` effect, then\n   * flatten the result.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category mapping & sequencing\n   */\n  <A, B, E2, R2>(f: (a: A) => Micro<B, E2, R2>): <E, R>(self: Micro<A, E, R>) => Micro<B, E | E2, R | R2>\n  /**\n   * Map the success value of this `Micro` effect to another `Micro` effect, then\n   * flatten the result.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category mapping & sequencing\n   */\n  <A, E, R, B, E2, R2>(self: Micro<A, E, R>, f: (a: A) => Micro<B, E2, R2>): Micro<B, E | E2, R | R2>\n} = dual(\n  2,\n  <A, E, R, B, E2, R2>(\n    self: Micro<A, E, R>,\n    f: (a: A) => Micro<B, E2, R2>\n  ): Micro<B, E | E2, R | R2> => {\n    const onSuccess = Object.create(OnSuccessProto)\n    onSuccess[args] = self\n    onSuccess[successCont] = f\n    return onSuccess\n  }\n)\nconst OnSuccessProto = makePrimitiveProto({\n  op: \"OnSuccess\",\n  eval(this: any, fiber: MicroFiberImpl): Primitive {\n    fiber._stack.push(this)\n    return this[args]\n  }\n})\n\n// ----------------------------------------------------------------------------\n// mapping & sequencing\n// ----------------------------------------------------------------------------\n\n/**\n * Flattens any nested `Micro` effects, merging the error and requirement types.\n *\n * @since 3.4.0\n * @experimental\n * @category mapping & sequencing\n */\nexport const flatten = <A, E, R, E2, R2>(\n  self: Micro<Micro<A, E, R>, E2, R2>\n): Micro<A, E | E2, R | R2> => flatMap(self, identity)\n\n/**\n * Transforms the success value of the `Micro` effect with the specified\n * function.\n *\n * @since 3.4.0\n * @experimental\n * @category mapping & sequencing\n */\nexport const map: {\n  /**\n   * Transforms the success value of the `Micro` effect with the specified\n   * function.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category mapping & sequencing\n   */\n  <A, B>(f: (a: A) => B): <E, R>(self: Micro<A, E, R>) => Micro<B, E, R>\n  /**\n   * Transforms the success value of the `Micro` effect with the specified\n   * function.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category mapping & sequencing\n   */\n  <A, E, R, B>(self: Micro<A, E, R>, f: (a: A) => B): Micro<B, E, R>\n} = dual(\n  2,\n  <A, E, R, B>(self: Micro<A, E, R>, f: (a: A) => B): Micro<B, E, R> => flatMap(self, (a) => succeed(f(a)))\n)\n\n// ----------------------------------------------------------------------------\n// MicroExit\n// ----------------------------------------------------------------------------\n\n/**\n * The `MicroExit` type is used to represent the result of a `Micro` computation. It\n * can either be successful, containing a value of type `A`, or it can fail,\n * containing an error of type `E` wrapped in a `MicroCause`.\n *\n * @since 3.4.6\n * @experimental\n * @category MicroExit\n */\nexport type MicroExit<A, E = never> =\n  | MicroExit.Success<A, E>\n  | MicroExit.Failure<A, E>\n\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroExit\n */\nexport declare namespace MicroExit {\n  /**\n   * @since 3.4.6\n   * @experimental\n   * @category MicroExit\n   */\n  export interface Proto<out A, out E = never> extends Micro<A, E> {\n    readonly [MicroExitTypeId]: MicroExitTypeId\n  }\n\n  /**\n   * @since 3.4.6\n   * @experimental\n   * @category MicroExit\n   */\n  export interface Success<out A, out E> extends Proto<A, E> {\n    readonly _tag: \"Success\"\n    readonly value: A\n  }\n\n  /**\n   * @since 3.4.6\n   * @experimental\n   * @category MicroExit\n   */\n  export interface Failure<out A, out E> extends Proto<A, E> {\n    readonly _tag: \"Failure\"\n    readonly cause: MicroCause<E>\n  }\n}\n\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroExit\n */\nexport const isMicroExit = (u: unknown): u is MicroExit<unknown, unknown> => hasProperty(u, MicroExitTypeId)\n\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroExit\n */\nexport const exitSucceed: <A>(a: A) => MicroExit<A, never> = succeed as any\n\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroExit\n */\nexport const exitFailCause: <E>(cause: MicroCause<E>) => MicroExit<never, E> = failCause as any\n\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroExit\n */\nexport const exitInterrupt: MicroExit<never> = exitFailCause(causeInterrupt())\n\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroExit\n */\nexport const exitFail = <E>(e: E): MicroExit<never, E> => exitFailCause(causeFail(e))\n\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroExit\n */\nexport const exitDie = (defect: unknown): MicroExit<never> => exitFailCause(causeDie(defect))\n\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroExit\n */\nexport const exitIsSuccess = <A, E>(\n  self: MicroExit<A, E>\n): self is MicroExit.Success<A, E> => self._tag === \"Success\"\n\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroExit\n */\nexport const exitIsFailure = <A, E>(\n  self: MicroExit<A, E>\n): self is MicroExit.Failure<A, E> => self._tag === \"Failure\"\n\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroExit\n */\nexport const exitIsInterrupt = <A, E>(\n  self: MicroExit<A, E>\n): self is MicroExit.Failure<A, E> & {\n  readonly cause: MicroCause.Interrupt\n} => exitIsFailure(self) && self.cause._tag === \"Interrupt\"\n\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroExit\n */\nexport const exitIsFail = <A, E>(\n  self: MicroExit<A, E>\n): self is MicroExit.Failure<A, E> & {\n  readonly cause: MicroCause.Fail<E>\n} => exitIsFailure(self) && self.cause._tag === \"Fail\"\n\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroExit\n */\nexport const exitIsDie = <A, E>(\n  self: MicroExit<A, E>\n): self is MicroExit.Failure<A, E> & {\n  readonly cause: MicroCause.Die\n} => exitIsFailure(self) && self.cause._tag === \"Die\"\n\n/**\n * @since 3.4.6\n * @experimental\n * @category MicroExit\n */\nexport const exitVoid: MicroExit<void> = exitSucceed(void 0)\n\n/**\n * @since 3.11.0\n * @experimental\n * @category MicroExit\n */\nexport const exitVoidAll = <I extends Iterable<MicroExit<any, any>>>(\n  exits: I\n): MicroExit<void, I extends Iterable<MicroExit<infer _A, infer _E>> ? _E : never> => {\n  for (const exit of exits) {\n    if (exit._tag === \"Failure\") {\n      return exit\n    }\n  }\n  return exitVoid\n}\n\n// ----------------------------------------------------------------------------\n// scheduler\n// ----------------------------------------------------------------------------\n\n/**\n * @since 3.5.9\n * @experimental\n * @category scheduler\n */\nexport interface MicroScheduler {\n  readonly scheduleTask: (task: () => void, priority: number) => void\n  readonly shouldYield: (fiber: MicroFiber<unknown, unknown>) => boolean\n  readonly flush: () => void\n}\n\nconst setImmediate = \"setImmediate\" in globalThis\n  ? globalThis.setImmediate\n  : (f: () => void) => setTimeout(f, 0)\n\n/**\n * @since 3.5.9\n * @experimental\n * @category scheduler\n */\nexport class MicroSchedulerDefault implements MicroScheduler {\n  private tasks: Array<() => void> = []\n  private running = false\n\n  /**\n   * @since 3.5.9\n   */\n  scheduleTask(task: () => void, _priority: number) {\n    this.tasks.push(task)\n    if (!this.running) {\n      this.running = true\n      setImmediate(this.afterScheduled)\n    }\n  }\n\n  /**\n   * @since 3.5.9\n   */\n  afterScheduled = () => {\n    this.running = false\n    this.runTasks()\n  }\n\n  /**\n   * @since 3.5.9\n   */\n  runTasks() {\n    const tasks = this.tasks\n    this.tasks = []\n    for (let i = 0, len = tasks.length; i < len; i++) {\n      tasks[i]()\n    }\n  }\n\n  /**\n   * @since 3.5.9\n   */\n  shouldYield(fiber: MicroFiber<unknown, unknown>) {\n    return fiber.currentOpCount >= fiber.getRef(MaxOpsBeforeYield)\n  }\n\n  /**\n   * @since 3.5.9\n   */\n  flush() {\n    while (this.tasks.length > 0) {\n      this.runTasks()\n    }\n  }\n}\n\n/**\n * Access the given `Context.Tag` from the environment.\n *\n * @since 3.4.0\n * @experimental\n * @category environment\n */\nexport const service: {\n  /**\n   * Access the given `Context.Tag` from the environment.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category environment\n   */\n  <I, S>(tag: Context.Reference<I, S>): Micro<S>\n  /**\n   * Access the given `Context.Tag` from the environment.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category environment\n   */\n  <I, S>(tag: Context.Tag<I, S>): Micro<S, never, I>\n} =\n  (<I, S>(tag: Context.Tag<I, S>): Micro<S, never, I> =>\n    withMicroFiber((fiber) => succeed(Context.unsafeGet(fiber.context, tag)))) as any\n\n/**\n * Access the given `Context.Tag` from the environment, without tracking the\n * dependency at the type level.\n *\n * It will return an `Option` of the service, depending on whether it is\n * available in the environment or not.\n *\n * @since 3.4.0\n * @experimental\n * @category environment\n */\nexport const serviceOption = <I, S>(\n  tag: Context.Tag<I, S>\n): Micro<Option.Option<S>> => withMicroFiber((fiber) => succeed(Context.getOption(fiber.context, tag)))\n\n/**\n * Update the Context with the given mapping function.\n *\n * @since 3.11.0\n * @experimental\n * @category environment\n */\nexport const updateContext: {\n  /**\n   * Update the Context with the given mapping function.\n   *\n   * @since 3.11.0\n   * @experimental\n   * @category environment\n   */\n  <R2, R>(f: (context: Context.Context<R2>) => Context.Context<NoInfer<R>>): <A, E>(self: Micro<A, E, R>) => Micro<A, E, R2>\n  /**\n   * Update the Context with the given mapping function.\n   *\n   * @since 3.11.0\n   * @experimental\n   * @category environment\n   */\n  <A, E, R, R2>(\n    self: Micro<A, E, R>,\n    f: (context: Context.Context<R2>) => Context.Context<NoInfer<R>>\n  ): Micro<A, E, R2>\n} = dual(\n  2,\n  <A, E, R, R2>(\n    self: Micro<A, E, R>,\n    f: (context: Context.Context<R2>) => Context.Context<NoInfer<R>>\n  ): Micro<A, E, R2> =>\n    withMicroFiber</**\n     * Update the Context with the given mapping function.\n     *\n     * @since 3.11.0\n     * @experimental\n     * @category environment\n     */\n    A, /**\n     * Update the Context with the given mapping function.\n     *\n     * @since 3.11.0\n     * @experimental\n     * @category environment\n     */\n    E, /**\n     * Update the Context with the given mapping function.\n     *\n     * @since 3.11.0\n     * @experimental\n     * @category environment\n     */\n    R2>((fiber) => {\n      const prev = fiber.context as Context.Context<R2>\n      fiber.context = f(prev)\n      return onExit(\n        self as any,\n        () => {\n          fiber.context = prev\n          return void_\n        }\n      )\n    })\n)\n\n/**\n * Update the service for the given `Context.Tag` in the environment.\n *\n * @since 3.11.0\n * @experimental\n * @category environment\n */\nexport const updateService: {\n  /**\n   * Update the service for the given `Context.Tag` in the environment.\n   *\n   * @since 3.11.0\n   * @experimental\n   * @category environment\n   */\n  <I, A>(tag: Context.Reference<I, A>, f: (value: A) => A): <XA, E, R>(self: Micro<XA, E, R>) => Micro<XA, E, R>\n  /**\n   * Update the service for the given `Context.Tag` in the environment.\n   *\n   * @since 3.11.0\n   * @experimental\n   * @category environment\n   */\n  <I, A>(tag: Context.Tag<I, A>, f: (value: A) => A): <XA, E, R>(self: Micro<XA, E, R>) => Micro<XA, E, R | I>\n  /**\n   * Update the service for the given `Context.Tag` in the environment.\n   *\n   * @since 3.11.0\n   * @experimental\n   * @category environment\n   */\n  <XA, E, R, I, A>(self: Micro<XA, E, R>, tag: Context.Reference<I, A>, f: (value: A) => A): Micro<XA, E, R>\n  /**\n   * Update the service for the given `Context.Tag` in the environment.\n   *\n   * @since 3.11.0\n   * @experimental\n   * @category environment\n   */\n  <XA, E, R, I, A>(self: Micro<XA, E, R>, tag: Context.Tag<I, A>, f: (value: A) => A): Micro<XA, E, R | I>\n} = dual(\n  3,\n  <XA, E, R, I, A>(\n    self: Micro<XA, E, R>,\n    tag: Context.Reference<I, A>,\n    f: (value: A) => A\n  ): Micro<XA, E, R> =>\n    withMicroFiber((fiber) => {\n      const prev = Context.unsafeGet(fiber.context, tag)\n      fiber.context = Context.add(fiber.context, tag, f(prev))\n      return onExit(\n        self,\n        () => {\n          fiber.context = Context.add(fiber.context, tag, prev)\n          return void_\n        }\n      )\n    })\n)\n\n/**\n * Access the current `Context` from the environment.\n *\n * @since 3.4.0\n * @experimental\n * @category environment\n */\nexport const context = <R>(): Micro<Context.Context<R>> => getContext as any\nconst getContext = withMicroFiber((fiber) => succeed(fiber.context))\n\n/**\n * Merge the given `Context` with the current context.\n *\n * @since 3.4.0\n * @experimental\n * @category environment\n */\nexport const provideContext: {\n  /**\n   * Merge the given `Context` with the current context.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category environment\n   */\n  <XR>(context: Context.Context<XR>): <A, E, R>(self: Micro<A, E, R>) => Micro<A, E, Exclude<R, XR>>\n  /**\n   * Merge the given `Context` with the current context.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category environment\n   */\n  <A, E, R, XR>(self: Micro<A, E, R>, context: Context.Context<XR>): Micro<A, E, Exclude<R, XR>>\n} = dual(\n  2,\n  <A, E, R, XR>(\n    self: Micro<A, E, R>,\n    provided: Context.Context<XR>\n  ): Micro<A, E, Exclude<R, XR>> => updateContext(self, Context.merge(provided)) as any\n)\n\n/**\n * Add the provided service to the current context.\n *\n * @since 3.4.0\n * @experimental\n * @category environment\n */\nexport const provideService: {\n  /**\n   * Add the provided service to the current context.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category environment\n   */\n  <I, S>(tag: Context.Tag<I, S>, service: S): <A, E, R>(self: Micro<A, E, R>) => Micro<A, E, Exclude<R, I>>\n  /**\n   * Add the provided service to the current context.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category environment\n   */\n  <A, E, R, I, S>(self: Micro<A, E, R>, tag: Context.Tag<I, S>, service: S): Micro<A, E, Exclude<R, I>>\n} = dual(\n  3,\n  <A, E, R, I, S>(\n    self: Micro<A, E, R>,\n    tag: Context.Tag<I, S>,\n    service: S\n  ): Micro<A, E, Exclude<R, I>> => updateContext(self, Context.add(tag, service)) as any\n)\n\n/**\n * Create a service using the provided `Micro` effect, and add it to the\n * current context.\n *\n * @since 3.4.6\n * @experimental\n * @category environment\n */\nexport const provideServiceEffect: {\n  /**\n   * Create a service using the provided `Micro` effect, and add it to the\n   * current context.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category environment\n   */\n  <I, S, E2, R2>(tag: Context.Tag<I, S>, acquire: Micro<S, E2, R2>): <A, E, R>(self: Micro<A, E, R>) => Micro<A, E | E2, Exclude<R, I> | R2>\n  /**\n   * Create a service using the provided `Micro` effect, and add it to the\n   * current context.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category environment\n   */\n  <A, E, R, I, S, E2, R2>(self: Micro<A, E, R>, tag: Context.Tag<I, S>, acquire: Micro<S, E2, R2>): Micro<A, E | E2, Exclude<R, I> | R2>\n} = dual(\n  3,\n  <A, E, R, I, S, E2, R2>(\n    self: Micro<A, E, R>,\n    tag: Context.Tag<I, S>,\n    acquire: Micro<S, E2, R2>\n  ): Micro<A, E | E2, Exclude<R, I> | R2> => flatMap(acquire, (service) => provideService(self, tag, service))\n)\n\n// ========================================================================\n// References\n// ========================================================================\n\n/**\n * @since 3.11.0\n * @experimental\n * @category references\n */\nexport class MaxOpsBeforeYield extends Context.Reference<MaxOpsBeforeYield>()<\n  \"effect/Micro/currentMaxOpsBeforeYield\",\n  number\n>(\n  \"effect/Micro/currentMaxOpsBeforeYield\",\n  { defaultValue: () => 2048 }\n) {}\n\n/**\n * @since 3.11.0\n * @experimental\n * @category environment refs\n */\nexport class CurrentConcurrency extends Context.Reference<CurrentConcurrency>()<\n  \"effect/Micro/currentConcurrency\",\n  \"unbounded\" | number\n>(\n  \"effect/Micro/currentConcurrency\",\n  { defaultValue: () => \"unbounded\" }\n) {}\n\n/**\n * @since 3.11.0\n * @experimental\n * @category environment refs\n */\nexport class CurrentScheduler extends Context.Reference<CurrentScheduler>()<\n  \"effect/Micro/currentScheduler\",\n  MicroScheduler\n>(\n  \"effect/Micro/currentScheduler\",\n  { defaultValue: () => new MicroSchedulerDefault() }\n) {}\n\n/**\n * If you have a `Micro` that uses `concurrency: \"inherit\"`, you can use this\n * api to control the concurrency of that `Micro` when it is run.\n *\n * @example\n * ```ts\n * import * as Micro from \"effect/Micro\"\n *\n * Micro.forEach([1, 2, 3], (n) => Micro.succeed(n), {\n *   concurrency: \"inherit\"\n * }).pipe(\n *   Micro.withConcurrency(2) // use a concurrency of 2\n * )\n * ```\n *\n * @since 3.4.0\n * @experimental\n * @category environment refs\n */\nexport const withConcurrency: {\n  /**\n   * If you have a `Micro` that uses `concurrency: \"inherit\"`, you can use this\n   * api to control the concurrency of that `Micro` when it is run.\n   *\n   * @example\n   * ```ts\n   * import * as Micro from \"effect/Micro\"\n   *\n   * Micro.forEach([1, 2, 3], (n) => Micro.succeed(n), {\n   *   concurrency: \"inherit\"\n   * }).pipe(\n   *   Micro.withConcurrency(2) // use a concurrency of 2\n   * )\n   * ```\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category environment refs\n   */\n  (concurrency: \"unbounded\" | number): <A, E, R>(self: Micro<A, E, R>) => Micro<A, E, R>\n  /**\n   * If you have a `Micro` that uses `concurrency: \"inherit\"`, you can use this\n   * api to control the concurrency of that `Micro` when it is run.\n   *\n   * @example\n   * ```ts\n   * import * as Micro from \"effect/Micro\"\n   *\n   * Micro.forEach([1, 2, 3], (n) => Micro.succeed(n), {\n   *   concurrency: \"inherit\"\n   * }).pipe(\n   *   Micro.withConcurrency(2) // use a concurrency of 2\n   * )\n   * ```\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category environment refs\n   */\n  <A, E, R>(self: Micro<A, E, R>, concurrency: \"unbounded\" | number): Micro<A, E, R>\n} = dual(\n  2,\n  <A, E, R>(\n    self: Micro<A, E, R>,\n    concurrency: \"unbounded\" | number\n  ): Micro<A, E, R> => provideService(self, CurrentConcurrency, concurrency)\n)\n\n// ----------------------------------------------------------------------------\n// zipping\n// ----------------------------------------------------------------------------\n\n/**\n * Combine two `Micro` effects into a single effect that produces a tuple of\n * their results.\n *\n * @since 3.4.0\n * @experimental\n * @category zipping\n */\nexport const zip: {\n  // ----------------------------------------------------------------------------\n  // zipping\n  // ----------------------------------------------------------------------------\n\n  /**\n   * Combine two `Micro` effects into a single effect that produces a tuple of\n   * their results.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category zipping\n   */\n  <A2, E2, R2>(\n    that: Micro<A2, E2, R2>,\n    options?:\n      | { readonly concurrent?: boolean | undefined }\n      | undefined\n  ): <A, E, R>(self: Micro<A, E, R>) => Micro<[A, A2], E2 | E, R2 | R>\n  // ----------------------------------------------------------------------------\n  // zipping\n  // ----------------------------------------------------------------------------\n\n  /**\n   * Combine two `Micro` effects into a single effect that produces a tuple of\n   * their results.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category zipping\n   */\n  <A, E, R, A2, E2, R2>(\n    self: Micro<A, E, R>,\n    that: Micro<A2, E2, R2>,\n    options?: { readonly concurrent?: boolean | undefined }\n  ): Micro<[A, A2], E | E2, R | R2>\n} = dual((args) => isMicro(args[1]), <A, E, R, A2, E2, R2>(\n  self: Micro<A, E, R>,\n  that: Micro<A2, E2, R2>,\n  options?: { readonly concurrent?: boolean | undefined }\n): Micro<[A, A2], E | E2, R | R2> => zipWith(self, that, (a, a2) => [a, a2], options))\n\n/**\n * The `Micro.zipWith` function combines two `Micro` effects and allows you to\n * apply a function to the results of the combined effects, transforming them\n * into a single value.\n *\n * @since 3.4.3\n * @experimental\n * @category zipping\n */\nexport const zipWith: {\n  /**\n   * The `Micro.zipWith` function combines two `Micro` effects and allows you to\n   * apply a function to the results of the combined effects, transforming them\n   * into a single value.\n   *\n   * @since 3.4.3\n   * @experimental\n   * @category zipping\n   */\n  <A2, E2, R2, A, B>(\n    that: Micro<A2, E2, R2>,\n    f: (a: A, b: A2) => B,\n    options?: { readonly concurrent?: boolean | undefined }\n  ): <E, R>(self: Micro<A, E, R>) => Micro<B, E2 | E, R2 | R>\n  /**\n   * The `Micro.zipWith` function combines two `Micro` effects and allows you to\n   * apply a function to the results of the combined effects, transforming them\n   * into a single value.\n   *\n   * @since 3.4.3\n   * @experimental\n   * @category zipping\n   */\n  <A, E, R, A2, E2, R2, B>(\n    self: Micro<A, E, R>,\n    that: Micro<A2, E2, R2>,\n    f: (a: A, b: A2) => B,\n    options?: { readonly concurrent?: boolean | undefined }\n  ): Micro<B, E2 | E, R2 | R>\n} = dual((args) => isMicro(args[1]), <A, E, R, A2, E2, R2, B>(\n  self: Micro<A, E, R>,\n  that: Micro<A2, E2, R2>,\n  f: (a: A, b: A2) => B,\n  options?: { readonly concurrent?: boolean | undefined }\n): Micro<B, E2 | E, R2 | R> =>\n  options?.concurrent\n    // Use `all` exclusively for concurrent cases, as it introduces additional overhead due to the management of concurrency\n    ? map(all([self, that], { concurrency: 2 }), ([a, a2]) => f(a, a2))\n    : flatMap(self, (a) => map(that, (a2) => f(a, a2))))\n\n// ----------------------------------------------------------------------------\n// filtering & conditionals\n// ----------------------------------------------------------------------------\n\n/**\n * Filter the specified effect with the provided function, failing with specified\n * `MicroCause` if the predicate fails.\n *\n * In addition to the filtering capabilities discussed earlier, you have the option to further\n * refine and narrow down the type of the success channel by providing a\n *\n * @since 3.4.0\n * @experimental\n * @category filtering & conditionals\n */\nexport const filterOrFailCause: {\n  // ----------------------------------------------------------------------------\n  // filtering & conditionals\n  // ----------------------------------------------------------------------------\n\n  /**\n   * Filter the specified effect with the provided function, failing with specified\n   * `MicroCause` if the predicate fails.\n   *\n   * In addition to the filtering capabilities discussed earlier, you have the option to further\n   * refine and narrow down the type of the success channel by providing a\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category filtering & conditionals\n   */\n  <A, B extends A, E2>(\n    refinement: Refinement<A, B>,\n    orFailWith: (a: NoInfer<A>) => MicroCause<E2>\n  ): <E, R>(self: Micro<A, E, R>) => Micro<B, E2 | E, R>\n  // ----------------------------------------------------------------------------\n  // filtering & conditionals\n  // ----------------------------------------------------------------------------\n\n  /**\n   * Filter the specified effect with the provided function, failing with specified\n   * `MicroCause` if the predicate fails.\n   *\n   * In addition to the filtering capabilities discussed earlier, you have the option to further\n   * refine and narrow down the type of the success channel by providing a\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category filtering & conditionals\n   */\n  <A, E2>(\n    predicate: Predicate<NoInfer<A>>,\n    orFailWith: (a: NoInfer<A>) => MicroCause<E2>\n  ): <E, R>(self: Micro<A, E, R>) => Micro<A, E2 | E, R>\n  // ----------------------------------------------------------------------------\n  // filtering & conditionals\n  // ----------------------------------------------------------------------------\n\n  /**\n   * Filter the specified effect with the provided function, failing with specified\n   * `MicroCause` if the predicate fails.\n   *\n   * In addition to the filtering capabilities discussed earlier, you have the option to further\n   * refine and narrow down the type of the success channel by providing a\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category filtering & conditionals\n   */\n  <A, E, R, B extends A, E2>(\n    self: Micro<A, E, R>,\n    refinement: Refinement<A, B>,\n    orFailWith: (a: A) => MicroCause<E2>\n  ): Micro<B, E | E2, R>\n  // ----------------------------------------------------------------------------\n  // filtering & conditionals\n  // ----------------------------------------------------------------------------\n\n  /**\n   * Filter the specified effect with the provided function, failing with specified\n   * `MicroCause` if the predicate fails.\n   *\n   * In addition to the filtering capabilities discussed earlier, you have the option to further\n   * refine and narrow down the type of the success channel by providing a\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category filtering & conditionals\n   */\n  <A, E, R, E2>(\n    self: Micro<A, E, R>,\n    predicate: Predicate<A>,\n    orFailWith: (a: A) => MicroCause<E2>\n  ): Micro<A, E | E2, R>\n} = dual((args) => isMicro(args[0]), <A, E, R, B extends A, E2>(\n  self: Micro<A, E, R>,\n  refinement: Refinement<A, B>,\n  orFailWith: (a: A) => MicroCause<E2>\n): Micro<B, E | E2, R> => flatMap(self, (a) => refinement(a) ? succeed(a) : failCause(orFailWith(a))))\n\n/**\n * Filter the specified effect with the provided function, failing with specified\n * error if the predicate fails.\n *\n * In addition to the filtering capabilities discussed earlier, you have the option to further\n * refine and narrow down the type of the success channel by providing a\n *\n * @since 3.4.0\n * @experimental\n * @category filtering & conditionals\n */\nexport const filterOrFail: {\n  /**\n   * Filter the specified effect with the provided function, failing with specified\n   * error if the predicate fails.\n   *\n   * In addition to the filtering capabilities discussed earlier, you have the option to further\n   * refine and narrow down the type of the success channel by providing a\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category filtering & conditionals\n   */\n  <A, B extends A, E2>(refinement: Refinement<A, B>, orFailWith: (a: NoInfer<A>) => E2): <E, R>(self: Micro<A, E, R>) => Micro<B, E2 | E, R>\n  /**\n   * Filter the specified effect with the provided function, failing with specified\n   * error if the predicate fails.\n   *\n   * In addition to the filtering capabilities discussed earlier, you have the option to further\n   * refine and narrow down the type of the success channel by providing a\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category filtering & conditionals\n   */\n  <A, E2>(predicate: Predicate<NoInfer<A>>, orFailWith: (a: NoInfer<A>) => E2): <E, R>(self: Micro<A, E, R>) => Micro<A, E2 | E, R>\n  /**\n   * Filter the specified effect with the provided function, failing with specified\n   * error if the predicate fails.\n   *\n   * In addition to the filtering capabilities discussed earlier, you have the option to further\n   * refine and narrow down the type of the success channel by providing a\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category filtering & conditionals\n   */\n  <A, E, R, B extends A, E2>(\n    self: Micro<A, E, R>,\n    refinement: Refinement<A, B>,\n    orFailWith: (a: A) => E2\n  ): Micro<B, E | E2, R>\n  /**\n   * Filter the specified effect with the provided function, failing with specified\n   * error if the predicate fails.\n   *\n   * In addition to the filtering capabilities discussed earlier, you have the option to further\n   * refine and narrow down the type of the success channel by providing a\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category filtering & conditionals\n   */\n  <A, E, R, E2>(self: Micro<A, E, R>, predicate: Predicate<A>, orFailWith: (a: A) => E2): Micro<A, E | E2, R>\n} = dual((args) => isMicro(args[0]), <A, E, R, B extends A, E2>(\n  self: Micro<A, E, R>,\n  refinement: Refinement<A, B>,\n  orFailWith: (a: A) => E2\n): Micro<B, E | E2, R> => flatMap(self, (a) => refinement(a) ? succeed(a) : fail(orFailWith(a))))\n\n/**\n * The moral equivalent of `if (p) exp`.\n *\n * @since 3.4.0\n * @experimental\n * @category filtering & conditionals\n */\nexport const when: {\n  /**\n   * The moral equivalent of `if (p) exp`.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category filtering & conditionals\n   */\n  <E2 = never, R2 = never>(condition: LazyArg<boolean> | Micro<boolean, E2, R2>): <A, E, R>(self: Micro<A, E, R>) => Micro<Option.Option<A>, E | E2, R | R2>\n  /**\n   * The moral equivalent of `if (p) exp`.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category filtering & conditionals\n   */\n  <A, E, R, E2 = never, R2 = never>(self: Micro<A, E, R>, condition: LazyArg<boolean> | Micro<boolean, E2, R2>): Micro<Option.Option<A>, E | E2, R | R2>\n} = dual(\n  2,\n  <A, E, R, E2 = never, R2 = never>(\n    self: Micro<A, E, R>,\n    condition: LazyArg<boolean> | Micro<boolean, E2, R2>\n  ): Micro<Option.Option<A>, E | E2, R | R2> =>\n    flatMap(isMicro(condition) ? condition : sync(condition), (pass) => pass ? asSome(self) : succeedNone)\n)\n\n// ----------------------------------------------------------------------------\n// repetition\n// ----------------------------------------------------------------------------\n\n/**\n * Repeat the given `Micro` using the provided options.\n *\n * The `while` predicate will be checked after each iteration, and can use the\n * fall `MicroExit` of the effect to determine if the repetition should continue.\n *\n * @since 3.4.6\n * @experimental\n * @category repetition\n */\nexport const repeatExit: {\n  // ----------------------------------------------------------------------------\n  // repetition\n  // ----------------------------------------------------------------------------\n\n  /**\n   * Repeat the given `Micro` using the provided options.\n   *\n   * The `while` predicate will be checked after each iteration, and can use the\n   * fall `MicroExit` of the effect to determine if the repetition should continue.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category repetition\n   */\n  <A, E>(\n    options: {\n      while: Predicate<MicroExit<A, E>>\n      times?: number | undefined\n      schedule?: MicroSchedule | undefined\n    }\n  ): <R>(self: Micro<A, E, R>) => Micro<A, E, R>\n  // ----------------------------------------------------------------------------\n  // repetition\n  // ----------------------------------------------------------------------------\n\n  /**\n   * Repeat the given `Micro` using the provided options.\n   *\n   * The `while` predicate will be checked after each iteration, and can use the\n   * fall `MicroExit` of the effect to determine if the repetition should continue.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category repetition\n   */\n  <A, E, R>(\n    self: Micro<A, E, R>,\n    options: {\n      while: Predicate<MicroExit<A, E>>\n      times?: number | undefined\n      schedule?: MicroSchedule | undefined\n    }\n  ): Micro<A, E, R>\n} = dual(2, <A, E, R>(self: Micro<A, E, R>, options: {\n  while: Predicate<MicroExit<A, E>>\n  times?: number | undefined\n  schedule?: MicroSchedule | undefined\n}): Micro<A, E, R> =>\n  suspend(() => {\n    const startedAt = options.schedule ? Date.now() : 0\n    let attempt = 0\n\n    const loop: Micro<A, E, R> = flatMap(exit(self), (exit) => {\n      if (options.while !== undefined && !options.while(exit)) {\n        return exit\n      } else if (options.times !== undefined && attempt >= options.times) {\n        return exit\n      }\n      attempt++\n      let delayEffect = yieldNow\n      if (options.schedule !== undefined) {\n        const elapsed = Date.now() - startedAt\n        const duration = options.schedule(attempt, elapsed)\n        if (Option.isNone(duration)) {\n          return exit\n        }\n        delayEffect = sleep(duration.value)\n      }\n      return flatMap(delayEffect, () => loop)\n    })\n\n    return loop\n  }))\n\n/**\n * Repeat the given `Micro` effect using the provided options. Only successful\n * results will be repeated.\n *\n * @since 3.4.0\n * @experimental\n * @category repetition\n */\nexport const repeat: {\n  /**\n   * Repeat the given `Micro` effect using the provided options. Only successful\n   * results will be repeated.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category repetition\n   */\n  <A, E>(\n    options?: {\n      while?: Predicate<A> | undefined\n      times?: number | undefined\n      schedule?: MicroSchedule | undefined\n    } | undefined\n  ): <R>(self: Micro<A, E, R>) => Micro<A, E, R>\n  /**\n   * Repeat the given `Micro` effect using the provided options. Only successful\n   * results will be repeated.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category repetition\n   */\n  <A, E, R>(\n    self: Micro<A, E, R>,\n    options?: {\n      while?: Predicate<A> | undefined\n      times?: number | undefined\n      schedule?: MicroSchedule | undefined\n    } | undefined\n  ): Micro<A, E, R>\n} = dual((args) => isMicro(args[0]), <A, E, R>(\n  self: Micro<A, E, R>,\n  options?: {\n    while?: Predicate<A> | undefined\n    times?: number | undefined\n    schedule?: MicroSchedule | undefined\n  } | undefined\n): Micro<A, E, R> =>\n  repeatExit(self, {\n    ...options,\n    while: (exit) => exit._tag === \"Success\" && (options?.while === undefined || options.while(exit.value))\n  }))\n\n/**\n * Replicates the given effect `n` times.\n *\n * @since 3.11.0\n * @experimental\n * @category repetition\n */\nexport const replicate: {\n  /**\n   * Replicates the given effect `n` times.\n   *\n   * @since 3.11.0\n   * @experimental\n   * @category repetition\n   */\n  (n: number): <A, E, R>(self: Micro<A, E, R>) => Array<Micro<A, E, R>>\n  /**\n   * Replicates the given effect `n` times.\n   *\n   * @since 3.11.0\n   * @experimental\n   * @category repetition\n   */\n  <A, E, R>(self: Micro<A, E, R>, n: number): Array<Micro<A, E, R>>\n} = dual(\n  2,\n  <A, E, R>(self: Micro<A, E, R>, n: number): Array<Micro<A, E, R>> => Array.from({ length: n }, () => self)\n)\n\n/**\n * Performs this effect the specified number of times and collects the\n * results.\n *\n * @since 3.11.0\n * @category repetition\n */\nexport const replicateEffect: {\n  /**\n   * Performs this effect the specified number of times and collects the\n   * results.\n   *\n   * @since 3.11.0\n   * @category repetition\n   */\n  (\n    n: number,\n    options?: {\n      readonly concurrency?: Concurrency | undefined\n      readonly discard?: false | undefined\n    }\n  ): <A, E, R>(self: Micro<A, E, R>) => Micro<Array<A>, E, R>\n  /**\n   * Performs this effect the specified number of times and collects the\n   * results.\n   *\n   * @since 3.11.0\n   * @category repetition\n   */\n  (\n    n: number,\n    options: {\n      readonly concurrency?: Concurrency | undefined\n      readonly discard: true\n    }\n  ): <A, E, R>(self: Micro<A, E, R>) => Micro<void, E, R>\n  /**\n   * Performs this effect the specified number of times and collects the\n   * results.\n   *\n   * @since 3.11.0\n   * @category repetition\n   */\n  <A, E, R>(\n    self: Micro<A, E, R>,\n    n: number,\n    options?: {\n      readonly concurrency?: Concurrency | undefined\n      readonly discard?: false | undefined\n    }\n  ): Micro<Array<A>, E, R>\n  /**\n   * Performs this effect the specified number of times and collects the\n   * results.\n   *\n   * @since 3.11.0\n   * @category repetition\n   */\n  <A, E, R>(\n    self: Micro<A, E, R>,\n    n: number,\n    options: {\n      readonly concurrency?: Concurrency | undefined\n      readonly discard: true\n    }\n  ): Micro<void, E, R>\n} = dual(\n  (args) => isMicro(args[0]),\n  <A, E, R>(\n    self: Micro<A, E, R>,\n    n: number,\n    options: {\n      readonly concurrency?: Concurrency | undefined\n      readonly discard: true\n    }\n  ): Micro<void, E, R> => all(replicate(self, n), options)\n)\n\n/**\n * Repeat the given `Micro` effect forever, only stopping if the effect fails.\n *\n * @since 3.4.0\n * @experimental\n * @category repetition\n */\nexport const forever = <A, E, R>(self: Micro<A, E, R>): Micro<never, E, R> => repeat(self) as any\n\n// ----------------------------------------------------------------------------\n// scheduling\n// ----------------------------------------------------------------------------\n\n/**\n * The `MicroSchedule` type represents a function that can be used to calculate\n * the delay between repeats.\n *\n * The function takes the current attempt number and the elapsed time since the\n * first attempt, and returns the delay for the next attempt. If the function\n * returns `None`, the repetition will stop.\n *\n * @since 3.4.6\n * @experimental\n * @category scheduling\n */\nexport type MicroSchedule = (attempt: number, elapsed: number) => Option.Option<number>\n\n/**\n * Create a `MicroSchedule` that will stop repeating after the specified number\n * of attempts.\n *\n * @since 3.4.6\n * @experimental\n * @category scheduling\n */\nexport const scheduleRecurs = (n: number): MicroSchedule => (attempt) => attempt <= n ? Option.some(0) : Option.none()\n\n/**\n * Create a `MicroSchedule` that will generate a constant delay.\n *\n * @since 3.4.6\n * @experimental\n * @category scheduling\n */\nexport const scheduleSpaced = (millis: number): MicroSchedule => () => Option.some(millis)\n\n/**\n * Create a `MicroSchedule` that will generate a delay with an exponential backoff.\n *\n * @since 3.4.6\n * @experimental\n * @category scheduling\n */\nexport const scheduleExponential = (baseMillis: number, factor = 2): MicroSchedule => (attempt) =>\n  Option.some(Math.pow(factor, attempt) * baseMillis)\n\n/**\n * Returns a new `MicroSchedule` with an added calculated delay to each delay\n * returned by this schedule.\n *\n * @since 3.4.6\n * @experimental\n * @category scheduling\n */\nexport const scheduleAddDelay: {\n  /**\n   * Returns a new `MicroSchedule` with an added calculated delay to each delay\n   * returned by this schedule.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category scheduling\n   */\n  (f: () => number): (self: MicroSchedule) => MicroSchedule\n  /**\n   * Returns a new `MicroSchedule` with an added calculated delay to each delay\n   * returned by this schedule.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category scheduling\n   */\n  (self: MicroSchedule, f: () => number): MicroSchedule\n} = dual(\n  2,\n  (self: MicroSchedule, f: () => number): MicroSchedule => (attempt, elapsed) =>\n    Option.map(self(attempt, elapsed), (duration) => duration + f())\n)\n\n/**\n * Transform a `MicroSchedule` to one that will have a delay that will never exceed\n * the specified maximum.\n *\n * @since 3.4.6\n * @experimental\n * @category scheduling\n */\nexport const scheduleWithMaxDelay: {\n  /**\n   * Transform a `MicroSchedule` to one that will have a delay that will never exceed\n   * the specified maximum.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category scheduling\n   */\n  (max: number): (self: MicroSchedule) => MicroSchedule\n  /**\n   * Transform a `MicroSchedule` to one that will have a delay that will never exceed\n   * the specified maximum.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category scheduling\n   */\n  (self: MicroSchedule, max: number): MicroSchedule\n} = dual(\n  2,\n  (self: MicroSchedule, max: number): MicroSchedule => (attempt, elapsed) =>\n    Option.map(self(attempt, elapsed), (duration) => Math.min(duration, max))\n)\n\n/**\n * Transform a `MicroSchedule` to one that will stop repeating after the specified\n * amount of time.\n *\n * @since 3.4.6\n * @experimental\n * @category scheduling\n */\nexport const scheduleWithMaxElapsed: {\n  /**\n   * Transform a `MicroSchedule` to one that will stop repeating after the specified\n   * amount of time.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category scheduling\n   */\n  (max: number): (self: MicroSchedule) => MicroSchedule\n  /**\n   * Transform a `MicroSchedule` to one that will stop repeating after the specified\n   * amount of time.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category scheduling\n   */\n  (self: MicroSchedule, max: number): MicroSchedule\n} = dual(\n  2,\n  (self: MicroSchedule, max: number): MicroSchedule => (attempt, elapsed) =>\n    elapsed < max ? self(attempt, elapsed) : Option.none()\n)\n\n/**\n * Combines two `MicroSchedule`s, by recurring if either schedule wants to\n * recur, using the minimum of the two durations between recurrences.\n *\n * @since 3.4.6\n * @experimental\n * @category scheduling\n */\nexport const scheduleUnion: {\n  /**\n   * Combines two `MicroSchedule`s, by recurring if either schedule wants to\n   * recur, using the minimum of the two durations between recurrences.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category scheduling\n   */\n  (that: MicroSchedule): (self: MicroSchedule) => MicroSchedule\n  /**\n   * Combines two `MicroSchedule`s, by recurring if either schedule wants to\n   * recur, using the minimum of the two durations between recurrences.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category scheduling\n   */\n  (self: MicroSchedule, that: MicroSchedule): MicroSchedule\n} = dual(\n  2,\n  (self: MicroSchedule, that: MicroSchedule): MicroSchedule => (attempt, elapsed) =>\n    Option.zipWith(self(attempt, elapsed), that(attempt, elapsed), (d1, d2) => Math.min(d1, d2))\n)\n\n/**\n * Combines two `MicroSchedule`s, by recurring only if both schedules want to\n * recur, using the maximum of the two durations between recurrences.\n *\n * @since 3.4.6\n * @experimental\n * @category scheduling\n */\nexport const scheduleIntersect: {\n  /**\n   * Combines two `MicroSchedule`s, by recurring only if both schedules want to\n   * recur, using the maximum of the two durations between recurrences.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category scheduling\n   */\n  (that: MicroSchedule): (self: MicroSchedule) => MicroSchedule\n  /**\n   * Combines two `MicroSchedule`s, by recurring only if both schedules want to\n   * recur, using the maximum of the two durations between recurrences.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category scheduling\n   */\n  (self: MicroSchedule, that: MicroSchedule): MicroSchedule\n} = dual(\n  2,\n  (self: MicroSchedule, that: MicroSchedule): MicroSchedule => (attempt, elapsed) =>\n    Option.zipWith(self(attempt, elapsed), that(attempt, elapsed), (d1, d2) => Math.max(d1, d2))\n)\n\n// ----------------------------------------------------------------------------\n// error handling\n// ----------------------------------------------------------------------------\n\n/**\n * Catch the full `MicroCause` object of the given `Micro` effect, allowing you to\n * recover from any kind of cause.\n *\n * @since 3.4.6\n * @experimental\n * @category error handling\n */\nexport const catchAllCause: {\n  // ----------------------------------------------------------------------------\n  // error handling\n  // ----------------------------------------------------------------------------\n\n  /**\n   * Catch the full `MicroCause` object of the given `Micro` effect, allowing you to\n   * recover from any kind of cause.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category error handling\n   */\n  <E, B, E2, R2>(f: (cause: NoInfer<MicroCause<E>>) => Micro<B, E2, R2>): <A, R>(self: Micro<A, E, R>) => Micro<A | B, E2, R | R2>\n  // ----------------------------------------------------------------------------\n  // error handling\n  // ----------------------------------------------------------------------------\n\n  /**\n   * Catch the full `MicroCause` object of the given `Micro` effect, allowing you to\n   * recover from any kind of cause.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category error handling\n   */\n  <A, E, R, B, E2, R2>(\n    self: Micro<A, E, R>,\n    f: (cause: NoInfer<MicroCause<E>>) => Micro<B, E2, R2>\n  ): Micro<A | B, E2, R | R2>\n} = dual(\n  2,\n  <A, E, R, B, E2, R2>(\n    self: Micro<A, E, R>,\n    f: (cause: NoInfer<MicroCause<E>>) => Micro<B, E2, R2>\n  ): Micro<A | B, E2, R | R2> => {\n    const onFailure = Object.create(OnFailureProto)\n    onFailure[args] = self\n    onFailure[failureCont] = f\n    return onFailure\n  }\n)\nconst OnFailureProto = makePrimitiveProto({\n  op: \"OnFailure\",\n  eval(this: any, fiber: MicroFiberImpl): Primitive {\n    fiber._stack.push(this as any)\n    return this[args]\n  }\n})\n\n/**\n * Selectively catch a `MicroCause` object of the given `Micro` effect,\n * using the provided predicate to determine if the failure should be caught.\n *\n * @since 3.4.6\n * @experimental\n * @category error handling\n */\nexport const catchCauseIf: {\n  /**\n   * Selectively catch a `MicroCause` object of the given `Micro` effect,\n   * using the provided predicate to determine if the failure should be caught.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category error handling\n   */\n  <E, B, E2, R2, EB extends MicroCause<E>>(\n    refinement: Refinement<MicroCause<E>, EB>,\n    f: (cause: EB) => Micro<B, E2, R2>\n  ): <A, R>(\n    self: Micro<A, E, R>\n  ) => Micro<A | B, Exclude<E, MicroCause.Error<EB>> | E2, R | R2>\n  /**\n   * Selectively catch a `MicroCause` object of the given `Micro` effect,\n   * using the provided predicate to determine if the failure should be caught.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category error handling\n   */\n  <E, B, E2, R2>(\n    predicate: Predicate<MicroCause<NoInfer<E>>>,\n    f: (cause: NoInfer<MicroCause<E>>) => Micro<B, E2, R2>\n  ): <A, R>(self: Micro<A, E, R>) => Micro<A | B, E | E2, R | R2>\n  /**\n   * Selectively catch a `MicroCause` object of the given `Micro` effect,\n   * using the provided predicate to determine if the failure should be caught.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category error handling\n   */\n  <A, E, R, B, E2, R2, EB extends MicroCause<E>>(\n    self: Micro<A, E, R>,\n    refinement: Refinement<MicroCause<E>, EB>,\n    f: (cause: EB) => Micro<B, E2, R2>\n  ): Micro<A | B, Exclude<E, MicroCause.Error<EB>> | E2, R | R2>\n  /**\n   * Selectively catch a `MicroCause` object of the given `Micro` effect,\n   * using the provided predicate to determine if the failure should be caught.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category error handling\n   */\n  <A, E, R, B, E2, R2>(\n    self: Micro<A, E, R>,\n    predicate: Predicate<MicroCause<NoInfer<E>>>,\n    f: (cause: NoInfer<MicroCause<E>>) => Micro<B, E2, R2>\n  ): Micro<A | B, E | E2, R | R2>\n} = dual(\n  3,\n  <A, E, R, B, E2, R2>(\n    self: Micro<A, E, R>,\n    predicate: Predicate<MicroCause<E>>,\n    f: (cause: MicroCause<E>) => Micro<B, E2, R2>\n  ): Micro<A | B, E | E2, R | R2> =>\n    catchAllCause(self, (cause) => predicate(cause) ? f(cause) : failCause(cause) as any)\n)\n\n/**\n * Catch the error of the given `Micro` effect, allowing you to recover from it.\n *\n * It only catches expected errors.\n *\n * @since 3.4.6\n * @experimental\n * @category error handling\n */\nexport const catchAll: {\n  /**\n   * Catch the error of the given `Micro` effect, allowing you to recover from it.\n   *\n   * It only catches expected errors.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category error handling\n   */\n  <E, B, E2, R2>(f: (e: NoInfer<E>) => Micro<B, E2, R2>): <A, R>(self: Micro<A, E, R>) => Micro<A | B, E2, R | R2>\n  /**\n   * Catch the error of the given `Micro` effect, allowing you to recover from it.\n   *\n   * It only catches expected errors.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category error handling\n   */\n  <A, E, R, B, E2, R2>(self: Micro<A, E, R>, f: (e: NoInfer<E>) => Micro<B, E2, R2>): Micro<A | B, E2, R | R2>\n} = dual(\n  2,\n  <A, E, R, B, E2, R2>(\n    self: Micro<A, E, R>,\n    f: (a: NoInfer<E>) => Micro<B, E2, R2>\n  ): Micro<A | B, E2, R | R2> => catchCauseIf(self, causeIsFail, (cause) => f(cause.error))\n)\n\n/**\n * Catch any unexpected errors of the given `Micro` effect, allowing you to recover from them.\n *\n * @since 3.4.6\n * @experimental\n * @category error handling\n */\nexport const catchAllDefect: {\n  /**\n   * Catch any unexpected errors of the given `Micro` effect, allowing you to recover from them.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category error handling\n   */\n  <E, B, E2, R2>(f: (defect: unknown) => Micro<B, E2, R2>): <A, R>(self: Micro<A, E, R>) => Micro<A | B, E | E2, R | R2>\n  /**\n   * Catch any unexpected errors of the given `Micro` effect, allowing you to recover from them.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category error handling\n   */\n  <A, E, R, B, E2, R2>(self: Micro<A, E, R>, f: (defect: unknown) => Micro<B, E2, R2>): Micro<A | B, E | E2, R | R2>\n} = dual(\n  2,\n  <A, E, R, B, E2, R2>(self: Micro<A, E, R>, f: (defect: unknown) => Micro<B, E2, R2>): Micro<A | B, E | E2, R | R2> =>\n    catchCauseIf(self, causeIsDie, (die) => f(die.defect))\n)\n\n/**\n * Perform a side effect using the full `MicroCause` object of the given `Micro`.\n *\n * @since 3.4.6\n * @experimental\n * @category error handling\n */\nexport const tapErrorCause: {\n  /**\n   * Perform a side effect using the full `MicroCause` object of the given `Micro`.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category error handling\n   */\n  <E, B, E2, R2>(f: (cause: NoInfer<MicroCause<E>>) => Micro<B, E2, R2>): <A, R>(self: Micro<A, E, R>) => Micro<A, E | E2, R | R2>\n  /**\n   * Perform a side effect using the full `MicroCause` object of the given `Micro`.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category error handling\n   */\n  <A, E, R, B, E2, R2>(\n    self: Micro<A, E, R>,\n    f: (cause: NoInfer<MicroCause<E>>) => Micro<B, E2, R2>\n  ): Micro<A, E | E2, R | R2>\n} = dual(\n  2,\n  <A, E, R, B, E2, R2>(\n    self: Micro<A, E, R>,\n    f: (cause: NoInfer<MicroCause<E>>) => Micro<B, E2, R2>\n  ): Micro<A, E | E2, R | R2> => tapErrorCauseIf(self, constTrue, f)\n)\n\n/**\n * Perform a side effect using if a `MicroCause` object matches the specified\n * predicate.\n *\n * @since 3.4.0\n * @experimental\n * @category error handling\n */\nexport const tapErrorCauseIf: {\n  /**\n   * Perform a side effect using if a `MicroCause` object matches the specified\n   * predicate.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category error handling\n   */\n  <E, B, E2, R2, EB extends MicroCause<E>>(refinement: Refinement<MicroCause<E>, EB>, f: (a: EB) => Micro<B, E2, R2>): <A, R>(self: Micro<A, E, R>) => Micro<A, E | E2, R | R2>\n  /**\n   * Perform a side effect using if a `MicroCause` object matches the specified\n   * predicate.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category error handling\n   */\n  <E, B, E2, R2>(\n    predicate: (cause: NoInfer<MicroCause<E>>) => boolean,\n    f: (a: NoInfer<MicroCause<E>>) => Micro<B, E2, R2>\n  ): <A, R>(self: Micro<A, E, R>) => Micro<A, E | E2, R | R2>\n  /**\n   * Perform a side effect using if a `MicroCause` object matches the specified\n   * predicate.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category error handling\n   */\n  <A, E, R, B, E2, R2, EB extends MicroCause<E>>(\n    self: Micro<A, E, R>,\n    refinement: Refinement<MicroCause<E>, EB>,\n    f: (a: EB) => Micro<B, E2, R2>\n  ): Micro<A, E | E2, R | R2>\n  /**\n   * Perform a side effect using if a `MicroCause` object matches the specified\n   * predicate.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category error handling\n   */\n  <A, E, R, B, E2, R2>(\n    self: Micro<A, E, R>,\n    predicate: (cause: NoInfer<MicroCause<E>>) => boolean,\n    f: (a: NoInfer<MicroCause<E>>) => Micro<B, E2, R2>\n  ): Micro<A, E | E2, R | R2>\n} = dual(\n  3,\n  <A, E, R, B, E2, R2, EB extends MicroCause<E>>(\n    self: Micro<A, E, R>,\n    refinement: Refinement<MicroCause<E>, EB>,\n    f: (a: EB) => Micro<B, E2, R2>\n  ): Micro<A, E | E2, R | R2> => catchCauseIf(self, refinement, (cause) => andThen(f(cause), failCause(cause)))\n)\n\n/**\n * Perform a side effect from expected errors of the given `Micro`.\n *\n * @since 3.4.6\n * @experimental\n * @category error handling\n */\nexport const tapError: {\n  /**\n   * Perform a side effect from expected errors of the given `Micro`.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category error handling\n   */\n  <E, B, E2, R2>(f: (e: NoInfer<E>) => Micro<B, E2, R2>): <A, R>(self: Micro<A, E, R>) => Micro<A, E | E2, R | R2>\n  /**\n   * Perform a side effect from expected errors of the given `Micro`.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category error handling\n   */\n  <A, E, R, B, E2, R2>(self: Micro<A, E, R>, f: (e: NoInfer<E>) => Micro<B, E2, R2>): Micro<A, E | E2, R | R2>\n} = dual(\n  2,\n  <A, E, R, B, E2, R2>(self: Micro<A, E, R>, f: (e: NoInfer<E>) => Micro<B, E2, R2>): Micro<A, E | E2, R | R2> =>\n    tapErrorCauseIf(self, causeIsFail, (fail) => f(fail.error))\n)\n\n/**\n * Perform a side effect from unexpected errors of the given `Micro`.\n *\n * @since 3.4.6\n * @experimental\n * @category error handling\n */\nexport const tapDefect: {\n  /**\n   * Perform a side effect from unexpected errors of the given `Micro`.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category error handling\n   */\n  <E, B, E2, R2>(f: (defect: unknown) => Micro<B, E2, R2>): <A, R>(self: Micro<A, E, R>) => Micro<A, E | E2, R | R2>\n  /**\n   * Perform a side effect from unexpected errors of the given `Micro`.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category error handling\n   */\n  <A, E, R, B, E2, R2>(self: Micro<A, E, R>, f: (defect: unknown) => Micro<B, E2, R2>): Micro<A, E | E2, R | R2>\n} = dual(\n  2,\n  <A, E, R, B, E2, R2>(self: Micro<A, E, R>, f: (defect: unknown) => Micro<B, E2, R2>): Micro<A, E | E2, R | R2> =>\n    tapErrorCauseIf(self, causeIsDie, (die) => f(die.defect))\n)\n\n/**\n * Catch any expected errors that match the specified predicate.\n *\n * @since 3.4.0\n * @experimental\n * @category error handling\n */\nexport const catchIf: {\n  /**\n   * Catch any expected errors that match the specified predicate.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category error handling\n   */\n  <E, EB extends E, A2, E2, R2>(refinement: Refinement<NoInfer<E>, EB>, f: (e: EB) => Micro<A2, E2, R2>): <A, R>(self: Micro<A, E, R>) => Micro<A2 | A, E2 | Exclude<E, EB>, R2 | R>\n  /**\n   * Catch any expected errors that match the specified predicate.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category error handling\n   */\n  <E, A2, E2, R2>(predicate: Predicate<NoInfer<E>>, f: (e: NoInfer<E>) => Micro<A2, E2, R2>): <A, R>(self: Micro<A, E, R>) => Micro<A2 | A, E | E2, R2 | R>\n  /**\n   * Catch any expected errors that match the specified predicate.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category error handling\n   */\n  <A, E, R, EB extends E, A2, E2, R2>(\n    self: Micro<A, E, R>,\n    refinement: Refinement<E, EB>,\n    f: (e: EB) => Micro<A2, E2, R2>\n  ): Micro<A | A2, E2 | Exclude<E, EB>, R | R2>\n  /**\n   * Catch any expected errors that match the specified predicate.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category error handling\n   */\n  <A, E, R, A2, E2, R2>(\n    self: Micro<A, E, R>,\n    predicate: Predicate<E>,\n    f: (e: E) => Micro<A2, E2, R2>\n  ): Micro<A | A2, E | E2, R | R2>\n} = dual(\n  3,\n  <A, E, R, A2, E2, R2>(\n    self: Micro<A, E, R>,\n    predicate: Predicate<E>,\n    f: (e: E) => Micro<A2, E2, R2>\n  ): Micro<A | A2, E | E2, R | R2> =>\n    catchCauseIf(\n      self,\n      (f): f is MicroCause.Fail<E> => causeIsFail(f) && predicate(f.error),\n      (fail) => f(fail.error)\n    )\n)\n\n/**\n * Recovers from the specified tagged error.\n *\n * @since 3.4.0\n * @experimental\n * @category error handling\n */\nexport const catchTag: {\n  /**\n   * Recovers from the specified tagged error.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category error handling\n   */\n  <K extends E extends { _tag: string } ? E[\"_tag\"] : never, E, A1, E1, R1>(k: K, f: (e: Extract<E, { _tag: K }>) => Micro<A1, E1, R1>): <A, R>(self: Micro<A, E, R>) => Micro<A1 | A, E1 | Exclude<E, { _tag: K }>, R1 | R>\n  /**\n   * Recovers from the specified tagged error.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category error handling\n   */\n  <A, E, R, K extends E extends { _tag: string } ? E[\"_tag\"] : never, R1, E1, A1>(\n    self: Micro<A, E, R>,\n    k: K,\n    f: (e: Extract<E, { _tag: K }>) => Micro<A1, E1, R1>\n  ): Micro<A | A1, E1 | Exclude<E, { _tag: K }>, R | R1>\n} = dual(3, <A, E, R, K extends E extends { _tag: string } ? E[\"_tag\"] : never, R1, E1, A1>(\n  self: Micro<A, E, R>,\n  k: K,\n  f: (e: Extract<E, { _tag: K }>) => Micro<A1, E1, R1>\n): Micro<A | A1, E1 | Exclude<E, { _tag: K }>, R | R1> =>\n  catchIf(self, isTagged(k) as Refinement<E, Extract<E, { _tag: K }>>, f) as any)\n\n/**\n * Transform the full `MicroCause` object of the given `Micro` effect.\n *\n * @since 3.4.6\n * @experimental\n * @category error handling\n */\nexport const mapErrorCause: {\n  /**\n   * Transform the full `MicroCause` object of the given `Micro` effect.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category error handling\n   */\n  <E, E2>(f: (e: MicroCause<E>) => MicroCause<E2>): <A, R>(self: Micro<A, E, R>) => Micro<A, E2, R>\n  /**\n   * Transform the full `MicroCause` object of the given `Micro` effect.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category error handling\n   */\n  <A, E, R, E2>(self: Micro<A, E, R>, f: (e: MicroCause<E>) => MicroCause<E2>): Micro<A, E2, R>\n} = dual(\n  2,\n  <A, E, R, E2>(self: Micro<A, E, R>, f: (e: MicroCause<E>) => MicroCause<E2>): Micro<A, E2, R> =>\n    catchAllCause(self, (cause) => failCause(f(cause)))\n)\n\n/**\n * Transform any expected errors of the given `Micro` effect.\n *\n * @since 3.4.0\n * @experimental\n * @category error handling\n */\nexport const mapError: {\n  /**\n   * Transform any expected errors of the given `Micro` effect.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category error handling\n   */\n  <E, E2>(f: (e: E) => E2): <A, R>(self: Micro<A, E, R>) => Micro<A, E2, R>\n  /**\n   * Transform any expected errors of the given `Micro` effect.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category error handling\n   */\n  <A, E, R, E2>(self: Micro<A, E, R>, f: (e: E) => E2): Micro<A, E2, R>\n} = dual(\n  2,\n  <A, E, R, E2>(self: Micro<A, E, R>, f: (e: E) => E2): Micro<A, E2, R> => catchAll(self, (error) => fail(f(error)))\n)\n\n/**\n * Elevate any expected errors of the given `Micro` effect to unexpected errors,\n * resulting in an error type of `never`.\n *\n * @since 3.4.0\n * @experimental\n * @category error handling\n */\nexport const orDie = <A, E, R>(self: Micro<A, E, R>): Micro<A, never, R> => catchAll(self, die)\n\n/**\n * Recover from all errors by succeeding with the given value.\n *\n * @since 3.4.0\n * @experimental\n * @category error handling\n */\nexport const orElseSucceed: {\n  /**\n   * Recover from all errors by succeeding with the given value.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category error handling\n   */\n  <B>(f: LazyArg<B>): <A, E, R>(self: Micro<A, E, R>) => Micro<A | B, never, R>\n  /**\n   * Recover from all errors by succeeding with the given value.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category error handling\n   */\n  <A, E, R, B>(self: Micro<A, E, R>, f: LazyArg<B>): Micro<A | B, never, R>\n} = dual(\n  2,\n  <A, E, R, B>(self: Micro<A, E, R>, f: LazyArg<B>): Micro<A | B, never, R> => catchAll(self, (_) => sync(f))\n)\n\n/**\n * Ignore any expected errors of the given `Micro` effect, returning `void`.\n *\n * @since 3.4.0\n * @experimental\n * @category error handling\n */\nexport const ignore = <A, E, R>(self: Micro<A, E, R>): Micro<void, never, R> =>\n  matchEffect(self, { onFailure: (_) => void_, onSuccess: (_) => void_ })\n\n/**\n * Ignore any expected errors of the given `Micro` effect, returning `void`.\n *\n * @since 3.4.0\n * @experimental\n * @category error handling\n */\nexport const ignoreLogged = <A, E, R>(self: Micro<A, E, R>): Micro<void, never, R> =>\n  matchEffect(self, {\n    // eslint-disable-next-line no-console\n    onFailure: (error) => sync(() => console.error(error)),\n    onSuccess: (_) => void_\n  })\n\n/**\n * Replace the success value of the given `Micro` effect with an `Option`,\n * wrapping the success value in `Some` and returning `None` if the effect fails\n * with an expected error.\n *\n * @since 3.4.0\n * @experimental\n * @category error handling\n */\nexport const option = <A, E, R>(self: Micro<A, E, R>): Micro<Option.Option<A>, never, R> =>\n  match(self, { onFailure: Option.none, onSuccess: Option.some })\n\n/**\n * Replace the success value of the given `Micro` effect with an `Either`,\n * wrapping the success value in `Right` and wrapping any expected errors with\n * a `Left`.\n *\n * @since 3.4.0\n * @experimental\n * @category error handling\n */\nexport const either = <A, E, R>(self: Micro<A, E, R>): Micro<Either.Either<A, E>, never, R> =>\n  match(self, { onFailure: Either.left, onSuccess: Either.right })\n\n/**\n * Retry the given `Micro` effect using the provided options.\n *\n * @since 3.4.0\n * @experimental\n * @category error handling\n */\nexport const retry: {\n  /**\n   * Retry the given `Micro` effect using the provided options.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category error handling\n   */\n  <A, E>(\n    options?: {\n      while?: Predicate<E> | undefined\n      times?: number | undefined\n      schedule?: MicroSchedule | undefined\n    } | undefined\n  ): <R>(self: Micro<A, E, R>) => Micro<A, E, R>\n  /**\n   * Retry the given `Micro` effect using the provided options.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category error handling\n   */\n  <A, E, R>(\n    self: Micro<A, E, R>,\n    options?: {\n      while?: Predicate<E> | undefined\n      times?: number | undefined\n      schedule?: MicroSchedule | undefined\n    } | undefined\n  ): Micro<A, E, R>\n} = dual((args) => isMicro(args[0]), <A, E, R>(\n  self: Micro<A, E, R>,\n  options?: {\n    while?: Predicate<E> | undefined\n    times?: number | undefined\n    schedule?: MicroSchedule | undefined\n  } | undefined\n): Micro<A, E, R> =>\n  repeatExit(self, {\n    ...options,\n    while: (exit) =>\n      exit._tag === \"Failure\" && exit.cause._tag === \"Fail\" &&\n      (options?.while === undefined || options.while(exit.cause.error))\n  }))\n\n/**\n * Add a stack trace to any failures that occur in the effect. The trace will be\n * added to the `traces` field of the `MicroCause` object.\n *\n * @since 3.4.0\n * @experimental\n * @category error handling\n */\nexport const withTrace: {\n  /**\n   * Add a stack trace to any failures that occur in the effect. The trace will be\n   * added to the `traces` field of the `MicroCause` object.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category error handling\n   */\n  (name: string): <A, E, R>(self: Micro<A, E, R>) => Micro<A, E, R>\n  /**\n   * Add a stack trace to any failures that occur in the effect. The trace will be\n   * added to the `traces` field of the `MicroCause` object.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category error handling\n   */\n  <A, E, R>(self: Micro<A, E, R>, name: string): Micro<A, E, R>\n} = function() {\n  const prevLimit = globalThis.Error.stackTraceLimit\n  globalThis.Error.stackTraceLimit = 2\n  const error = new globalThis.Error()\n  globalThis.Error.stackTraceLimit = prevLimit\n  function generate(name: string, cause: MicroCause<any>) {\n    const stack = error.stack\n    if (!stack) {\n      return cause\n    }\n    const line = stack.split(\"\\n\")[2]?.trim().replace(/^at /, \"\")\n    if (!line) {\n      return cause\n    }\n    const lineMatch = line.match(/\\((.*)\\)$/)\n    return causeWithTrace(cause, `at ${name} (${lineMatch ? lineMatch[1] : line})`)\n  }\n  const f = (name: string) => (self: Micro<any, any, any>) => onError(self, (cause) => failCause(generate(name, cause)))\n  if (arguments.length === 2) {\n    return f(arguments[1])(arguments[0])\n  }\n  return f(arguments[0])\n} as any\n\n// ----------------------------------------------------------------------------\n// pattern matching\n// ----------------------------------------------------------------------------\n\n/**\n * @since 3.4.6\n * @experimental\n * @category pattern matching\n */\nexport const matchCauseEffect: {\n  // ----------------------------------------------------------------------------\n  // pattern matching\n  // ----------------------------------------------------------------------------\n\n  /**\n   * @since 3.4.6\n   * @experimental\n   * @category pattern matching\n   */\n  <E, A2, E2, R2, A, A3, E3, R3>(\n    options: {\n      readonly onFailure: (cause: MicroCause<E>) => Micro<A2, E2, R2>\n      readonly onSuccess: (a: A) => Micro<A3, E3, R3>\n    }\n  ): <R>(self: Micro<A, E, R>) => Micro<A2 | A3, E2 | E3, R2 | R3 | R>\n  // ----------------------------------------------------------------------------\n  // pattern matching\n  // ----------------------------------------------------------------------------\n\n  /**\n   * @since 3.4.6\n   * @experimental\n   * @category pattern matching\n   */\n  <A, E, R, A2, E2, R2, A3, E3, R3>(\n    self: Micro<A, E, R>,\n    options: {\n      readonly onFailure: (cause: MicroCause<E>) => Micro<A2, E2, R2>\n      readonly onSuccess: (a: A) => Micro<A3, E3, R3>\n    }\n  ): Micro<A2 | A3, E2 | E3, R2 | R3 | R>\n} = dual(\n  2,\n  <A, E, R, A2, E2, R2, A3, E3, R3>(\n    self: Micro<A, E, R>,\n    options: {\n      readonly onFailure: (cause: MicroCause<E>) => Micro<A2, E2, R2>\n      readonly onSuccess: (a: A) => Micro<A3, E3, R3>\n    }\n  ): Micro<A2 | A3, E2 | E3, R2 | R3 | R> => {\n    const primitive = Object.create(OnSuccessAndFailureProto)\n    primitive[args] = self\n    primitive[successCont] = options.onSuccess\n    primitive[failureCont] = options.onFailure\n    return primitive\n  }\n)\nconst OnSuccessAndFailureProto = makePrimitiveProto({\n  op: \"OnSuccessAndFailure\",\n  eval(this: any, fiber: MicroFiberImpl): Primitive {\n    fiber._stack.push(this)\n    return this[args]\n  }\n})\n\n/**\n * @since 3.4.6\n * @experimental\n * @category pattern matching\n */\nexport const matchCause: {\n  /**\n   * @since 3.4.6\n   * @experimental\n   * @category pattern matching\n   */\n  <E, A2, A, A3>(\n    options: {\n      readonly onFailure: (cause: MicroCause<E>) => A2\n      readonly onSuccess: (a: A) => A3\n    }\n  ): <R>(self: Micro<A, E, R>) => Micro<A2 | A3, never, R>\n  /**\n   * @since 3.4.6\n   * @experimental\n   * @category pattern matching\n   */\n  <A, E, R, A2, A3>(\n    self: Micro<A, E, R>,\n    options: {\n      readonly onFailure: (cause: MicroCause<E>) => A2\n      readonly onSuccess: (a: A) => A3\n    }\n  ): Micro<A2 | A3, never, R>\n} = dual(\n  2,\n  <A, E, R, A2, A3>(\n    self: Micro<A, E, R>,\n    options: {\n      readonly onFailure: (cause: MicroCause<E>) => A2\n      readonly onSuccess: (a: A) => A3\n    }\n  ): Micro<A2 | A3, never, R> =>\n    matchCauseEffect(self, {\n      onFailure: (cause) => sync(() => options.onFailure(cause)),\n      onSuccess: (value) => sync(() => options.onSuccess(value))\n    })\n)\n\n/**\n * @since 3.4.6\n * @experimental\n * @category pattern matching\n */\nexport const matchEffect: {\n  /**\n   * @since 3.4.6\n   * @experimental\n   * @category pattern matching\n   */\n  <E, A2, E2, R2, A, A3, E3, R3>(\n    options: {\n      readonly onFailure: (e: E) => Micro<A2, E2, R2>\n      readonly onSuccess: (a: A) => Micro<A3, E3, R3>\n    }\n  ): <R>(self: Micro<A, E, R>) => Micro<A2 | A3, E2 | E3, R2 | R3 | R>\n  /**\n   * @since 3.4.6\n   * @experimental\n   * @category pattern matching\n   */\n  <A, E, R, A2, E2, R2, A3, E3, R3>(\n    self: Micro<A, E, R>,\n    options: {\n      readonly onFailure: (e: E) => Micro<A2, E2, R2>\n      readonly onSuccess: (a: A) => Micro<A3, E3, R3>\n    }\n  ): Micro<A2 | A3, E2 | E3, R2 | R3 | R>\n} = dual(\n  2,\n  <A, E, R, A2, E2, R2, A3, E3, R3>(\n    self: Micro<A, E, R>,\n    options: {\n      readonly onFailure: (e: E) => Micro<A2, E2, R2>\n      readonly onSuccess: (a: A) => Micro<A3, E3, R3>\n    }\n  ): Micro<A2 | A3, E2 | E3, R2 | R3 | R> =>\n    matchCauseEffect(self, {\n      onFailure: (cause) => cause._tag === \"Fail\" ? options.onFailure(cause.error) : failCause(cause),\n      onSuccess: options.onSuccess\n    })\n)\n\n/**\n * @since 3.4.0\n * @experimental\n * @category pattern matching\n */\nexport const match: {\n  /**\n   * @since 3.4.0\n   * @experimental\n   * @category pattern matching\n   */\n  <E, A2, A, A3>(\n    options: {\n      readonly onFailure: (error: E) => A2\n      readonly onSuccess: (value: A) => A3\n    }\n  ): <R>(self: Micro<A, E, R>) => Micro<A2 | A3, never, R>\n  /**\n   * @since 3.4.0\n   * @experimental\n   * @category pattern matching\n   */\n  <A, E, R, A2, A3>(\n    self: Micro<A, E, R>,\n    options: {\n      readonly onFailure: (error: E) => A2\n      readonly onSuccess: (value: A) => A3\n    }\n  ): Micro<A2 | A3, never, R>\n} = dual(\n  2,\n  <A, E, R, A2, A3>(\n    self: Micro<A, E, R>,\n    options: {\n      readonly onFailure: (error: E) => A2\n      readonly onSuccess: (value: A) => A3\n    }\n  ): Micro<A2 | A3, never, R> =>\n    matchEffect(self, {\n      onFailure: (error) => sync(() => options.onFailure(error)),\n      onSuccess: (value) => sync(() => options.onSuccess(value))\n    })\n)\n\n// ----------------------------------------------------------------------------\n// delays & timeouts\n// ----------------------------------------------------------------------------\n\n/**\n * Create a `Micro` effect that will sleep for the specified duration.\n *\n * @since 3.4.0\n * @experimental\n * @category delays & timeouts\n */\nexport const sleep = (millis: number): Micro<void> =>\n  async((resume) => {\n    const timeout = setTimeout(() => {\n      resume(void_)\n    }, millis)\n    return sync(() => {\n      clearTimeout(timeout)\n    })\n  })\n\n/**\n * Returns an effect that will delay the execution of this effect by the\n * specified duration.\n *\n * @since 3.4.0\n * @experimental\n * @category delays & timeouts\n */\nexport const delay: {\n  /**\n   * Returns an effect that will delay the execution of this effect by the\n   * specified duration.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category delays & timeouts\n   */\n  (millis: number): <A, E, R>(self: Micro<A, E, R>) => Micro<A, E, R>\n  /**\n   * Returns an effect that will delay the execution of this effect by the\n   * specified duration.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category delays & timeouts\n   */\n  <A, E, R>(self: Micro<A, E, R>, millis: number): Micro<A, E, R>\n} = dual(\n  2,\n  <A, E, R>(self: Micro<A, E, R>, millis: number): Micro<A, E, R> => andThen(sleep(millis), self)\n)\n\n/**\n * Returns an effect that will timeout this effect, that will execute the\n * fallback effect if the timeout elapses before the effect has produced a value.\n *\n * If the timeout elapses, the running effect will be safely interrupted.\n *\n * @since 3.4.0\n * @experimental\n * @category delays & timeouts\n */\nexport const timeoutOrElse: {\n  /**\n   * Returns an effect that will timeout this effect, that will execute the\n   * fallback effect if the timeout elapses before the effect has produced a value.\n   *\n   * If the timeout elapses, the running effect will be safely interrupted.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category delays & timeouts\n   */\n  <A2, E2, R2>(\n    options: {\n      readonly duration: number\n      readonly onTimeout: LazyArg<Micro<A2, E2, R2>>\n    }\n  ): <A, E, R>(self: Micro<A, E, R>) => Micro<A | A2, E | E2, R | R2>\n  /**\n   * Returns an effect that will timeout this effect, that will execute the\n   * fallback effect if the timeout elapses before the effect has produced a value.\n   *\n   * If the timeout elapses, the running effect will be safely interrupted.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category delays & timeouts\n   */\n  <A, E, R, A2, E2, R2>(\n    self: Micro<A, E, R>,\n    options: {\n      readonly duration: number\n      readonly onTimeout: LazyArg<Micro<A2, E2, R2>>\n    }\n  ): Micro<A | A2, E | E2, R | R2>\n} = dual(\n  2,\n  <A, E, R, A2, E2, R2>(self: Micro<A, E, R>, options: {\n    readonly duration: number\n    readonly onTimeout: LazyArg<Micro<A2, E2, R2>>\n  }): Micro<A | A2, E | E2, R | R2> =>\n    raceFirst(self, andThen(interruptible(sleep(options.duration)), options.onTimeout))\n)\n\n/**\n * Returns an effect that will timeout this effect, that will fail with a\n * `TimeoutException` if the timeout elapses before the effect has produced a\n * value.\n *\n * If the timeout elapses, the running effect will be safely interrupted.\n *\n * @since 3.4.0\n * @experimental\n * @category delays & timeouts\n */\nexport const timeout: {\n  /**\n   * Returns an effect that will timeout this effect, that will fail with a\n   * `TimeoutException` if the timeout elapses before the effect has produced a\n   * value.\n   *\n   * If the timeout elapses, the running effect will be safely interrupted.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category delays & timeouts\n   */\n  (millis: number): <A, E, R>(self: Micro<A, E, R>) => Micro<A, E | TimeoutException, R>\n  /**\n   * Returns an effect that will timeout this effect, that will fail with a\n   * `TimeoutException` if the timeout elapses before the effect has produced a\n   * value.\n   *\n   * If the timeout elapses, the running effect will be safely interrupted.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category delays & timeouts\n   */\n  <A, E, R>(self: Micro<A, E, R>, millis: number): Micro<A, E | TimeoutException, R>\n} = dual(\n  2,\n  <A, E, R>(self: Micro<A, E, R>, millis: number): Micro<A, E | TimeoutException, R> =>\n    timeoutOrElse(self, { duration: millis, onTimeout: () => fail(new TimeoutException()) })\n)\n\n/**\n * Returns an effect that will timeout this effect, succeeding with a `None`\n * if the timeout elapses before the effect has produced a value; and `Some` of\n * the produced value otherwise.\n *\n * If the timeout elapses, the running effect will be safely interrupted.\n *\n * @since 3.4.0\n * @experimental\n * @category delays & timeouts\n */\nexport const timeoutOption: {\n  /**\n   * Returns an effect that will timeout this effect, succeeding with a `None`\n   * if the timeout elapses before the effect has produced a value; and `Some` of\n   * the produced value otherwise.\n   *\n   * If the timeout elapses, the running effect will be safely interrupted.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category delays & timeouts\n   */\n  (millis: number): <A, E, R>(self: Micro<A, E, R>) => Micro<Option.Option<A>, E, R>\n  /**\n   * Returns an effect that will timeout this effect, succeeding with a `None`\n   * if the timeout elapses before the effect has produced a value; and `Some` of\n   * the produced value otherwise.\n   *\n   * If the timeout elapses, the running effect will be safely interrupted.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category delays & timeouts\n   */\n  <A, E, R>(self: Micro<A, E, R>, millis: number): Micro<Option.Option<A>, E, R>\n} = dual(\n  2,\n  <A, E, R>(self: Micro<A, E, R>, millis: number): Micro<Option.Option<A>, E, R> =>\n    raceFirst(\n      asSome(self),\n      as(interruptible(sleep(millis)), Option.none())\n    )\n)\n\n// ----------------------------------------------------------------------------\n// resources & finalization\n// ----------------------------------------------------------------------------\n\n/**\n * @since 3.4.0\n * @experimental\n * @category resources & finalization\n */\nexport const MicroScopeTypeId: unique symbol = Symbol.for(\"effect/Micro/MicroScope\")\n\n/**\n * @since 3.4.0\n * @experimental\n * @category resources & finalization\n */\nexport type MicroScopeTypeId = typeof MicroScopeTypeId\n\n/**\n * @since 3.4.0\n * @experimental\n * @category resources & finalization\n */\nexport interface MicroScope {\n  readonly [MicroScopeTypeId]: MicroScopeTypeId\n  readonly addFinalizer: (finalizer: (exit: MicroExit<unknown, unknown>) => Micro<void>) => Micro<void>\n  readonly fork: Micro<MicroScope.Closeable>\n}\n\n/**\n * @since 3.4.0\n * @experimental\n * @category resources & finalization\n */\nexport declare namespace MicroScope {\n  /**\n   * @since 3.4.0\n   * @experimental\n   * @category resources & finalization\n   */\n  export interface Closeable extends MicroScope {\n    readonly close: (exit: MicroExit<any, any>) => Micro<void>\n  }\n}\n\n/**\n * @since 3.4.0\n * @experimental\n * @category resources & finalization\n */\nexport const MicroScope: Context.Tag<MicroScope, MicroScope> = Context.GenericTag<MicroScope>(\"effect/Micro/MicroScope\")\n\nclass MicroScopeImpl implements MicroScope.Closeable {\n  readonly [MicroScopeTypeId]: MicroScopeTypeId\n  state: {\n    readonly _tag: \"Open\"\n    readonly finalizers: Set<(exit: MicroExit<any, any>) => Micro<void>>\n  } | {\n    readonly _tag: \"Closed\"\n    readonly exit: MicroExit<any, any>\n  } = { _tag: \"Open\", finalizers: new Set() }\n\n  constructor() {\n    this[MicroScopeTypeId] = MicroScopeTypeId\n  }\n\n  unsafeAddFinalizer(finalizer: (exit: MicroExit<any, any>) => Micro<void>): void {\n    if (this.state._tag === \"Open\") {\n      this.state.finalizers.add(finalizer)\n    }\n  }\n  addFinalizer(finalizer: (exit: MicroExit<any, any>) => Micro<void>): Micro<void> {\n    return suspend(() => {\n      if (this.state._tag === \"Open\") {\n        this.state.finalizers.add(finalizer)\n        return void_\n      }\n      return finalizer(this.state.exit)\n    })\n  }\n  unsafeRemoveFinalizer(finalizer: (exit: MicroExit<any, any>) => Micro<void>): void {\n    if (this.state._tag === \"Open\") {\n      this.state.finalizers.delete(finalizer)\n    }\n  }\n  close(microExit: MicroExit<any, any>): Micro<void> {\n    return suspend(() => {\n      if (this.state._tag === \"Open\") {\n        const finalizers = Array.from(this.state.finalizers).reverse()\n        this.state = { _tag: \"Closed\", exit: microExit }\n        return flatMap(\n          forEach(finalizers, (finalizer) => exit(finalizer(microExit))),\n          exitVoidAll\n        )\n      }\n      return void_\n    })\n  }\n  get fork() {\n    return sync(() => {\n      const newScope = new MicroScopeImpl()\n      if (this.state._tag === \"Closed\") {\n        newScope.state = this.state\n        return newScope\n      }\n      function fin(exit: MicroExit<any, any>) {\n        return newScope.close(exit)\n      }\n      this.state.finalizers.add(fin)\n      newScope.unsafeAddFinalizer((_) => sync(() => this.unsafeRemoveFinalizer(fin)))\n      return newScope\n    })\n  }\n}\n\n/**\n * @since 3.4.0\n * @experimental\n * @category resources & finalization\n */\nexport const scopeMake: Micro<MicroScope.Closeable> = sync(() => new MicroScopeImpl())\n\n/**\n * @since 3.4.0\n * @experimental\n * @category resources & finalization\n */\nexport const scopeUnsafeMake = (): MicroScope.Closeable => new MicroScopeImpl()\n\n/**\n * Access the current `MicroScope`.\n *\n * @since 3.4.0\n * @experimental\n * @category resources & finalization\n */\nexport const scope: Micro<MicroScope, never, MicroScope> = service(MicroScope)\n\n/**\n * Provide a `MicroScope` to an effect.\n *\n * @since 3.4.0\n * @experimental\n * @category resources & finalization\n */\nexport const provideScope: {\n  /**\n   * Provide a `MicroScope` to an effect.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category resources & finalization\n   */\n  (scope: MicroScope): <A, E, R>(self: Micro<A, E, R>) => Micro<A, E, Exclude<R, MicroScope>>\n  /**\n   * Provide a `MicroScope` to an effect.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category resources & finalization\n   */\n  <A, E, R>(self: Micro<A, E, R>, scope: MicroScope): Micro<A, E, Exclude<R, MicroScope>>\n} = dual(\n  2,\n  <A, E, R>(self: Micro<A, E, R>, scope: MicroScope): Micro<A, E, Exclude<R, MicroScope>> =>\n    provideService(self, MicroScope, scope)\n)\n\n/**\n * Provide a `MicroScope` to the given effect, closing it after the effect has\n * finished executing.\n *\n * @since 3.4.0\n * @experimental\n * @category resources & finalization\n */\nexport const scoped = <A, E, R>(self: Micro<A, E, R>): Micro<A, E, Exclude<R, MicroScope>> =>\n  suspend(() => {\n    const scope = new MicroScopeImpl()\n    return onExit(provideService(self, MicroScope, scope), (exit) => scope.close(exit))\n  })\n\n/**\n * Create a resource with a cleanup `Micro` effect, ensuring the cleanup is\n * executed when the `MicroScope` is closed.\n *\n * @since 3.4.0\n * @experimental\n * @category resources & finalization\n */\nexport const acquireRelease = <A, E, R>(\n  acquire: Micro<A, E, R>,\n  release: (a: A, exit: MicroExit<unknown, unknown>) => Micro<void>\n): Micro<A, E, R | MicroScope> =>\n  uninterruptible(flatMap(\n    scope,\n    (scope) => tap(acquire, (a) => scope.addFinalizer((exit) => release(a, exit)))\n  ))\n\n/**\n * Add a finalizer to the current `MicroScope`.\n *\n * @since 3.4.0\n * @experimental\n * @category resources & finalization\n */\nexport const addFinalizer = (\n  finalizer: (exit: MicroExit<unknown, unknown>) => Micro<void>\n): Micro<void, never, MicroScope> => flatMap(scope, (scope) => scope.addFinalizer(finalizer))\n\n/**\n * When the `Micro` effect is completed, run the given finalizer effect with the\n * `MicroExit` of the executed effect.\n *\n * @since 3.4.6\n * @experimental\n * @category resources & finalization\n */\nexport const onExit: {\n  /**\n   * When the `Micro` effect is completed, run the given finalizer effect with the\n   * `MicroExit` of the executed effect.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category resources & finalization\n   */\n  <A, E, XE, XR>(f: (exit: MicroExit<A, E>) => Micro<void, XE, XR>): <R>(self: Micro<A, E, R>) => Micro<A, E | XE, R | XR>\n  /**\n   * When the `Micro` effect is completed, run the given finalizer effect with the\n   * `MicroExit` of the executed effect.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category resources & finalization\n   */\n  <A, E, R, XE, XR>(self: Micro<A, E, R>, f: (exit: MicroExit<A, E>) => Micro<void, XE, XR>): Micro<A, E | XE, R | XR>\n} = dual(\n  2,\n  <A, E, R, XE, XR>(\n    self: Micro<A, E, R>,\n    f: (exit: MicroExit<A, E>) => Micro<void, XE, XR>\n  ): Micro<A, E | XE, R | XR> =>\n    uninterruptibleMask((restore) =>\n      matchCauseEffect(restore(self), {\n        onFailure: (cause) => flatMap(f(exitFailCause(cause)), () => failCause(cause)),\n        onSuccess: (a) => flatMap(f(exitSucceed(a)), () => succeed(a))\n      })\n    )\n)\n\n/**\n * Regardless of the result of the this `Micro` effect, run the finalizer effect.\n *\n * @since 3.4.0\n * @experimental\n * @category resources & finalization\n */\nexport const ensuring: {\n  /**\n   * Regardless of the result of the this `Micro` effect, run the finalizer effect.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category resources & finalization\n   */\n  <XE, XR>(finalizer: Micro<void, XE, XR>): <A, E, R>(self: Micro<A, E, R>) => Micro<A, E | XE, R | XR>\n  /**\n   * Regardless of the result of the this `Micro` effect, run the finalizer effect.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category resources & finalization\n   */\n  <A, E, R, XE, XR>(self: Micro<A, E, R>, finalizer: Micro<void, XE, XR>): Micro<A, E | XE, R | XR>\n} = dual(\n  2,\n  <A, E, R, XE, XR>(\n    self: Micro<A, E, R>,\n    finalizer: Micro<void, XE, XR>\n  ): Micro<A, E | XE, R | XR> => onExit(self, (_) => finalizer)\n)\n\n/**\n * When the `Micro` effect is completed, run the given finalizer effect if it\n * matches the specified predicate.\n *\n * @since 3.4.6\n * @experimental\n * @category resources & finalization\n */\nexport const onExitIf: {\n  /**\n   * When the `Micro` effect is completed, run the given finalizer effect if it\n   * matches the specified predicate.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category resources & finalization\n   */\n  <A, E, XE, XR, B extends MicroExit<A, E>>(\n    refinement: Refinement<MicroExit<A, E>, B>,\n    f: (exit: B) => Micro<void, XE, XR>\n  ): <R>(self: Micro<A, E, R>) => Micro<A, E | XE, R | XR>\n  /**\n   * When the `Micro` effect is completed, run the given finalizer effect if it\n   * matches the specified predicate.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category resources & finalization\n   */\n  <A, E, XE, XR>(\n    predicate: Predicate<MicroExit<NoInfer<A>, NoInfer<E>>>,\n    f: (exit: MicroExit<NoInfer<A>, NoInfer<E>>) => Micro<void, XE, XR>\n  ): <R>(self: Micro<A, E, R>) => Micro<A, E | XE, R | XR>\n  /**\n   * When the `Micro` effect is completed, run the given finalizer effect if it\n   * matches the specified predicate.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category resources & finalization\n   */\n  <A, E, R, XE, XR, B extends MicroExit<A, E>>(\n    self: Micro<A, E, R>,\n    refinement: Refinement<MicroExit<A, E>, B>,\n    f: (exit: B) => Micro<void, XE, XR>\n  ): Micro<A, E | XE, R | XR>\n  /**\n   * When the `Micro` effect is completed, run the given finalizer effect if it\n   * matches the specified predicate.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category resources & finalization\n   */\n  <A, E, R, XE, XR>(\n    self: Micro<A, E, R>,\n    predicate: Predicate<MicroExit<NoInfer<A>, NoInfer<E>>>,\n    f: (exit: MicroExit<NoInfer<A>, NoInfer<E>>) => Micro<void, XE, XR>\n  ): Micro<A, E | XE, R | XR>\n} = dual(\n  3,\n  <A, E, R, XE, XR, B extends MicroExit<A, E>>(\n    self: Micro<A, E, R>,\n    refinement: Refinement<MicroExit<A, E>, B>,\n    f: (exit: B) => Micro<void, XE, XR>\n  ): Micro<A, E | XE, R | XR> => onExit(self, (exit) => (refinement(exit) ? f(exit) : exitVoid))\n)\n\n/**\n * When the `Micro` effect fails, run the given finalizer effect with the\n * `MicroCause` of the executed effect.\n *\n * @since 3.4.6\n * @experimental\n * @category resources & finalization\n */\nexport const onError: {\n  /**\n   * When the `Micro` effect fails, run the given finalizer effect with the\n   * `MicroCause` of the executed effect.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category resources & finalization\n   */\n  <A, E, XE, XR>(f: (cause: MicroCause<NoInfer<E>>) => Micro<void, XE, XR>): <R>(self: Micro<A, E, R>) => Micro<A, E | XE, R | XR>\n  /**\n   * When the `Micro` effect fails, run the given finalizer effect with the\n   * `MicroCause` of the executed effect.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category resources & finalization\n   */\n  <A, E, R, XE, XR>(\n    self: Micro<A, E, R>,\n    f: (cause: MicroCause<NoInfer<E>>) => Micro<void, XE, XR>\n  ): Micro<A, E | XE, R | XR>\n} = dual(\n  2,\n  <A, E, R, XE, XR>(\n    self: Micro<A, E, R>,\n    f: (cause: MicroCause<NoInfer<E>>) => Micro<void, XE, XR>\n  ): Micro<A, E | XE, R | XR> => onExitIf(self, exitIsFailure, (exit) => f(exit.cause))\n)\n\n/**\n * If this `Micro` effect is aborted, run the finalizer effect.\n *\n * @since 3.4.6\n * @experimental\n * @category resources & finalization\n */\nexport const onInterrupt: {\n  /**\n   * If this `Micro` effect is aborted, run the finalizer effect.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category resources & finalization\n   */\n  <XE, XR>(finalizer: Micro<void, XE, XR>): <A, E, R>(self: Micro<A, E, R>) => Micro<A, E | XE, R | XR>\n  /**\n   * If this `Micro` effect is aborted, run the finalizer effect.\n   *\n   * @since 3.4.6\n   * @experimental\n   * @category resources & finalization\n   */\n  <A, E, R, XE, XR>(self: Micro<A, E, R>, finalizer: Micro<void, XE, XR>): Micro<A, E | XE, R | XR>\n} = dual(\n  2,\n  <A, E, R, XE, XR>(self: Micro<A, E, R>, finalizer: Micro<void, XE, XR>): Micro<A, E | XE, R | XR> =>\n    onExitIf(self, exitIsInterrupt, (_) => finalizer)\n)\n\n/**\n * Acquire a resource, use it, and then release the resource when the `use`\n * effect has completed.\n *\n * @since 3.4.0\n * @experimental\n * @category resources & finalization\n */\nexport const acquireUseRelease = <Resource, E, R, A, E2, R2, E3, R3>(\n  acquire: Micro<Resource, E, R>,\n  use: (a: Resource) => Micro<A, E2, R2>,\n  release: (a: Resource, exit: MicroExit<A, E2>) => Micro<void, E3, R3>\n): Micro<A, E | E2 | E3, R | R2 | R3> =>\n  uninterruptibleMask((restore) =>\n    flatMap(\n      acquire,\n      (a) =>\n        flatMap(\n          exit(restore(use(a))),\n          (exit) => andThen(release(a, exit), exit)\n        )\n    )\n  )\n\n// ----------------------------------------------------------------------------\n// interruption\n// ----------------------------------------------------------------------------\n\n/**\n * Abort the current `Micro` effect.\n *\n * @since 3.4.6\n * @experimental\n * @category interruption\n */\nexport const interrupt: Micro<never> = failCause(causeInterrupt())\n\n/**\n * Flag the effect as uninterruptible, which means that when the effect is\n * interrupted, it will be allowed to continue running until completion.\n *\n * @since 3.4.0\n * @experimental\n * @category flags\n */\nexport const uninterruptible = <A, E, R>(\n  self: Micro<A, E, R>\n): Micro<A, E, R> =>\n  withMicroFiber((fiber) => {\n    if (!fiber.interruptible) return self\n    fiber.interruptible = false\n    fiber._stack.push(setInterruptible(true))\n    return self\n  })\n\nconst setInterruptible: (interruptible: boolean) => Primitive = makePrimitive({\n  op: \"SetInterruptible\",\n  ensure(fiber) {\n    fiber.interruptible = this[args]\n    if (fiber._interrupted && fiber.interruptible) {\n      return () => exitInterrupt\n    }\n  }\n})\n\n/**\n * Flag the effect as interruptible, which means that when the effect is\n * interrupted, it will be interrupted immediately.\n *\n * @since 3.4.0\n * @experimental\n * @category flags\n */\nexport const interruptible = <A, E, R>(\n  self: Micro<A, E, R>\n): Micro<A, E, R> =>\n  withMicroFiber((fiber) => {\n    if (fiber.interruptible) return self\n    fiber.interruptible = true\n    fiber._stack.push(setInterruptible(false))\n    if (fiber._interrupted) return exitInterrupt\n    return self\n  })\n\n/**\n * Wrap the given `Micro` effect in an uninterruptible region, preventing the\n * effect from being aborted.\n *\n * You can use the `restore` function to restore a `Micro` effect to the\n * interruptibility state before the `uninterruptibleMask` was applied.\n *\n * @example\n * ```ts\n * import * as Micro from \"effect/Micro\"\n *\n * Micro.uninterruptibleMask((restore) =>\n *   Micro.sleep(1000).pipe( // uninterruptible\n *     Micro.andThen(restore(Micro.sleep(1000))) // interruptible\n *   )\n * )\n * ```\n *\n * @since 3.4.0\n * @experimental\n * @category interruption\n */\nexport const uninterruptibleMask = <A, E, R>(\n  f: (\n    restore: <A, E, R>(effect: Micro<A, E, R>) => Micro<A, E, R>\n  ) => Micro<A, E, R>\n): Micro<A, E, R> =>\n  withMicroFiber((fiber) => {\n    if (!fiber.interruptible) return f(identity)\n    fiber.interruptible = false\n    fiber._stack.push(setInterruptible(true))\n    return f(interruptible)\n  })\n\n// ========================================================================\n// collecting & elements\n// ========================================================================\n\n/**\n * @since 3.4.0\n * @experimental\n */\nexport declare namespace All {\n  /**\n   * @since 3.4.0\n   * @experimental\n   */\n  export type MicroAny = Micro<any, any, any>\n\n  /**\n   * @since 3.4.0\n   * @experimental\n   */\n  export type ReturnIterable<T extends Iterable<MicroAny>, Discard extends boolean> = [T] extends\n    [Iterable<Micro<infer A, infer E, infer R>>] ? Micro<\n      Discard extends true ? void : Array<A>,\n      E,\n      R\n    >\n    : never\n\n  /**\n   * @since 3.4.0\n   * @experimental\n   */\n  export type ReturnTuple<T extends ReadonlyArray<unknown>, Discard extends boolean> = Micro<\n    Discard extends true ? void\n      : T[number] extends never ? []\n      : { -readonly [K in keyof T]: T[K] extends Micro<infer _A, infer _E, infer _R> ? _A : never },\n    T[number] extends never ? never\n      : T[number] extends Micro<infer _A, infer _E, infer _R> ? _E\n      : never,\n    T[number] extends never ? never\n      : T[number] extends Micro<infer _A, infer _E, infer _R> ? _R\n      : never\n  > extends infer X ? X : never\n\n  /**\n   * @since 3.4.0\n   * @experimental\n   */\n  export type ReturnObject<T, Discard extends boolean> = [T] extends [{ [K: string]: MicroAny }] ? Micro<\n      Discard extends true ? void :\n        { -readonly [K in keyof T]: [T[K]] extends [Micro<infer _A, infer _E, infer _R>] ? _A : never },\n      keyof T extends never ? never\n        : T[keyof T] extends Micro<infer _A, infer _E, infer _R> ? _E\n        : never,\n      keyof T extends never ? never\n        : T[keyof T] extends Micro<infer _A, infer _E, infer _R> ? _R\n        : never\n    >\n    : never\n\n  /**\n   * @since 3.4.0\n   * @experimental\n   */\n  export type IsDiscard<A> = [Extract<A, { readonly discard: true }>] extends [never] ? false : true\n\n  /**\n   * @since 3.4.0\n   * @experimental\n   */\n  export type Return<\n    Arg extends Iterable<MicroAny> | Record<string, MicroAny>,\n    O extends NoExcessProperties<{\n      readonly concurrency?: Concurrency | undefined\n      readonly discard?: boolean | undefined\n    }, O>\n  > = [Arg] extends [ReadonlyArray<MicroAny>] ? ReturnTuple<Arg, IsDiscard<O>>\n    : [Arg] extends [Iterable<MicroAny>] ? ReturnIterable<Arg, IsDiscard<O>>\n    : [Arg] extends [Record<string, MicroAny>] ? ReturnObject<Arg, IsDiscard<O>>\n    : never\n}\n\n/**\n * Runs all the provided effects in sequence respecting the structure provided in input.\n *\n * Supports multiple arguments, a single argument tuple / array or record / struct.\n *\n * @since 3.4.0\n * @experimental\n * @category collecting & elements\n */\nexport const all = <\n  const Arg extends Iterable<Micro<any, any, any>> | Record<string, Micro<any, any, any>>,\n  O extends NoExcessProperties<{\n    readonly concurrency?: Concurrency | undefined\n    readonly discard?: boolean | undefined\n  }, O>\n>(arg: Arg, options?: O): All.Return<Arg, O> => {\n  if (Array.isArray(arg) || isIterable(arg)) {\n    return (forEach as any)(arg, identity, options)\n  } else if (options?.discard) {\n    return (forEach as any)(Object.values(arg), identity, options)\n  }\n  return suspend(() => {\n    const out: Record<string, unknown> = {}\n    return as(\n      forEach(Object.entries(arg), ([key, effect]) =>\n        map(effect, (value) => {\n          out[key] = value\n        }), {\n        discard: true,\n        concurrency: options?.concurrency\n      }),\n      out\n    )\n  }) as any\n}\n\n/**\n * @since 3.11.0\n * @experimental\n * @category collecting & elements\n */\nexport const whileLoop: <A, E, R>(options: {\n  readonly while: LazyArg<boolean>\n  readonly body: LazyArg<Micro<A, E, R>>\n  readonly step: (a: A) => void\n}) => Micro<void, E, R> = makePrimitive({\n  op: \"While\",\n  contA(value, fiber) {\n    this[args].step(value)\n    if (this[args].while()) {\n      fiber._stack.push(this)\n      return this[args].body()\n    }\n    return exitVoid\n  },\n  eval(fiber) {\n    if (this[args].while()) {\n      fiber._stack.push(this)\n      return this[args].body()\n    }\n    return exitVoid\n  }\n})\n\n/**\n * For each element of the provided iterable, run the effect and collect the\n * results.\n *\n * If the `discard` option is set to `true`, the results will be discarded and\n * the effect will return `void`.\n *\n * The `concurrency` option can be set to control how many effects are run\n * concurrently. By default, the effects are run sequentially.\n *\n * @since 3.4.0\n * @experimental\n * @category collecting & elements\n */\nexport const forEach: {\n  /**\n   * For each element of the provided iterable, run the effect and collect the\n   * results.\n   *\n   * If the `discard` option is set to `true`, the results will be discarded and\n   * the effect will return `void`.\n   *\n   * The `concurrency` option can be set to control how many effects are run\n   * concurrently. By default, the effects are run sequentially.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category collecting & elements\n   */\n  <A, B, E, R>(\n    iterable: Iterable<A>,\n    f: (a: A, index: number) => Micro<B, E, R>,\n    options?: {\n      readonly concurrency?: Concurrency | undefined\n      readonly discard?: false | undefined\n    }\n  ): Micro<Array<B>, E, R>\n  /**\n   * For each element of the provided iterable, run the effect and collect the\n   * results.\n   *\n   * If the `discard` option is set to `true`, the results will be discarded and\n   * the effect will return `void`.\n   *\n   * The `concurrency` option can be set to control how many effects are run\n   * concurrently. By default, the effects are run sequentially.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category collecting & elements\n   */\n  <A, B, E, R>(\n    iterable: Iterable<A>,\n    f: (a: A, index: number) => Micro<B, E, R>,\n    options: {\n      readonly concurrency?: Concurrency | undefined\n      readonly discard: true\n    }\n  ): Micro<void, E, R>\n} = <\n  A,\n  B,\n  E,\n  R\n>(iterable: Iterable<A>, f: (a: A, index: number) => Micro<B, E, R>, options?: {\n  readonly concurrency?: Concurrency | undefined\n  readonly discard?: boolean | undefined\n}): Micro<any, E, R> =>\n  withMicroFiber((parent) => {\n    const concurrencyOption = options?.concurrency === \"inherit\"\n      ? parent.getRef(CurrentConcurrency)\n      : options?.concurrency ?? 1\n    const concurrency = concurrencyOption === \"unbounded\"\n      ? Number.POSITIVE_INFINITY\n      : Math.max(1, concurrencyOption)\n\n    const items = Arr.fromIterable(iterable)\n    let length = items.length\n    if (length === 0) {\n      return options?.discard ? void_ : succeed([])\n    }\n\n    const out: Array<B> | undefined = options?.discard ? undefined : new Array(length)\n    let index = 0\n\n    if (concurrency === 1) {\n      return as(\n        whileLoop({\n          while: () => index < items.length,\n          body: () => f(items[index], index),\n          step: out ?\n            (b) => out[index++] = b :\n            (_) => index++\n        }),\n        out as any\n      )\n    }\n    return async((resume) => {\n      const fibers = new Set<MicroFiber<unknown, unknown>>()\n      let result: MicroExit<any, any> | undefined = undefined\n      let inProgress = 0\n      let doneCount = 0\n      let pumping = false\n      let interrupted = false\n      function pump() {\n        pumping = true\n        while (inProgress < concurrency && index < length) {\n          const currentIndex = index\n          const item = items[currentIndex]\n          index++\n          inProgress++\n          try {\n            const child = unsafeFork(parent, f(item, currentIndex), true, true)\n            fibers.add(child)\n            child.addObserver((exit) => {\n              fibers.delete(child)\n              if (interrupted) {\n                return\n              } else if (exit._tag === \"Failure\") {\n                if (result === undefined) {\n                  result = exit\n                  length = index\n                  fibers.forEach((fiber) => fiber.unsafeInterrupt())\n                }\n              } else if (out !== undefined) {\n                out[currentIndex] = exit.value\n              }\n              doneCount++\n              inProgress--\n              if (doneCount === length) {\n                resume(result ?? succeed(out))\n              } else if (!pumping && inProgress < concurrency) {\n                pump()\n              }\n            })\n          } catch (err) {\n            result = exitDie(err)\n            length = index\n            fibers.forEach((fiber) => fiber.unsafeInterrupt())\n          }\n        }\n        pumping = false\n      }\n      pump()\n\n      return suspend(() => {\n        interrupted = true\n        index = length\n        return fiberInterruptAll(fibers)\n      })\n    })\n  })\n\n/**\n * Effectfully filter the elements of the provided iterable.\n *\n * Use the `concurrency` option to control how many elements are processed\n * concurrently.\n *\n * @since 3.4.0\n * @experimental\n * @category collecting & elements\n */\nexport const filter = <A, E, R>(iterable: Iterable<A>, f: (a: NoInfer<A>) => Micro<boolean, E, R>, options?: {\n  readonly concurrency?: Concurrency | undefined\n  readonly negate?: boolean | undefined\n}): Micro<Array<A>, E, R> =>\n  filterMap(iterable, (a) =>\n    map(f(a), (pass) => {\n      pass = options?.negate ? !pass : pass\n      return pass ? Option.some(a) : Option.none()\n    }), options)\n\n/**\n * Effectfully filter the elements of the provided iterable.\n *\n * Use the `concurrency` option to control how many elements are processed\n * concurrently.\n *\n * @since 3.4.0\n * @experimental\n * @category collecting & elements\n */\nexport const filterMap = <A, B, E, R>(\n  iterable: Iterable<A>,\n  f: (a: NoInfer<A>) => Micro<Option.Option<B>, E, R>,\n  options?: {\n    readonly concurrency?: Concurrency | undefined\n  }\n): Micro<Array<B>, E, R> =>\n  suspend(() => {\n    const out: Array<B> = []\n    return as(\n      forEach(iterable, (a) =>\n        map(f(a), (o) => {\n          if (o._tag === \"Some\") {\n            out.push(o.value)\n          }\n        }), {\n        discard: true,\n        concurrency: options?.concurrency\n      }),\n      out\n    )\n  })\n\n// ----------------------------------------------------------------------------\n// do notation\n// ----------------------------------------------------------------------------\n\n/**\n * Start a do notation block.\n *\n * @since 3.4.0\n * @experimental\n * @category do notation\n */\nexport const Do: Micro<{}> = succeed({})\n\n/**\n * Bind the success value of this `Micro` effect to the provided name.\n *\n * @since 3.4.0\n * @experimental\n * @category do notation\n */\nexport const bindTo: {\n  /**\n   * Bind the success value of this `Micro` effect to the provided name.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category do notation\n   */\n  <N extends string>(name: N): <A, E, R>(self: Micro<A, E, R>) => Micro<{ [K in N]: A }, E, R>\n  /**\n   * Bind the success value of this `Micro` effect to the provided name.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category do notation\n   */\n  <A, E, R, N extends string>(self: Micro<A, E, R>, name: N): Micro<{ [K in N]: A }, E, R>\n} = doNotation.bindTo<MicroTypeLambda>(map)\n\n/**\n * Bind the success value of this `Micro` effect to the provided name.\n *\n * @since 3.4.0\n * @experimental\n * @category do notation\n */\nexport const bind: {\n  /**\n   * Bind the success value of this `Micro` effect to the provided name.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category do notation\n   */\n  <N extends string, A extends Record<string, any>, B, E2, R2>(name: N, f: (a: NoInfer<A>) => Micro<B, E2, R2>): <E, R>(self: Micro<A, E, R>) => Micro<Simplify<Omit<A, N> & { [K in N]: B }>, E | E2, R | R2>\n  /**\n   * Bind the success value of this `Micro` effect to the provided name.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category do notation\n   */\n  <A extends Record<string, any>, E, R, B, E2, R2, N extends string>(self: Micro<A, E, R>, name: N, f: (a: NoInfer<A>) => Micro<B, E2, R2>): Micro<Simplify<Omit<A, N> & { [K in N]: B }>, E | E2, R | R2>\n} = doNotation.bind<MicroTypeLambda>(map, flatMap)\n\nconst let_: {\n  <N extends string, A extends Record<string, any>, B>(\n    name: N,\n    f: (a: NoInfer<A>) => B\n  ): <E, R>(self: Micro<A, E, R>) => Micro<Simplify<Omit<A, N> & { [K in N]: B }>, E, R>\n  <A extends Record<string, any>, E, R, B, N extends string>(\n    self: Micro<A, E, R>,\n    name: N,\n    f: (a: NoInfer<A>) => B\n  ): Micro<Simplify<Omit<A, N> & { [K in N]: B }>, E, R>\n} = doNotation.let_<MicroTypeLambda>(map)\n\nexport {\n  /**\n   * Bind the result of a synchronous computation to the given name.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category do notation\n   */\n  let_ as let\n}\n\n// ----------------------------------------------------------------------------\n// fibers & forking\n// ----------------------------------------------------------------------------\n\n/**\n * Run the `Micro` effect in a new `MicroFiber` that can be awaited, joined, or\n * aborted.\n *\n * When the parent `Micro` finishes, this `Micro` will be aborted.\n *\n * @since 3.4.0\n * @experimental\n * @category fiber & forking\n */\nexport const fork = <A, E, R>(\n  self: Micro<A, E, R>\n): Micro<MicroFiber<A, E>, never, R> =>\n  withMicroFiber((fiber) => {\n    fiberMiddleware.interruptChildren ??= fiberInterruptChildren\n    return succeed(unsafeFork(fiber, self))\n  })\n\nconst unsafeFork = <FA, FE, A, E, R>(\n  parent: MicroFiberImpl<FA, FE>,\n  effect: Micro<A, E, R>,\n  immediate = false,\n  daemon = false\n): MicroFiber<A, E> => {\n  const child = new MicroFiberImpl<A, E>(parent.context, parent.interruptible)\n  if (!daemon) {\n    parent.children().add(child)\n    child.addObserver(() => parent.children().delete(child))\n  }\n  if (immediate) {\n    child.evaluate(effect as any)\n  } else {\n    parent.getRef(CurrentScheduler).scheduleTask(() => child.evaluate(effect as any), 0)\n  }\n  return child\n}\n\n/**\n * Run the `Micro` effect in a new `MicroFiber` that can be awaited, joined, or\n * aborted.\n *\n * It will not be aborted when the parent `Micro` finishes.\n *\n * @since 3.4.0\n * @experimental\n * @category fiber & forking\n */\nexport const forkDaemon = <A, E, R>(\n  self: Micro<A, E, R>\n): Micro<MicroFiber<A, E>, never, R> => withMicroFiber((fiber) => succeed(unsafeFork(fiber, self, false, true)))\n\n/**\n * Run the `Micro` effect in a new `MicroFiber` that can be awaited, joined, or\n * aborted.\n *\n * The lifetime of the handle will be attached to the provided `MicroScope`.\n *\n * @since 3.4.0\n * @experimental\n * @category fiber & forking\n */\nexport const forkIn: {\n  /**\n   * Run the `Micro` effect in a new `MicroFiber` that can be awaited, joined, or\n   * aborted.\n   *\n   * The lifetime of the handle will be attached to the provided `MicroScope`.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category fiber & forking\n   */\n  (scope: MicroScope): <A, E, R>(self: Micro<A, E, R>) => Micro<MicroFiber<A, E>, never, R>\n  /**\n   * Run the `Micro` effect in a new `MicroFiber` that can be awaited, joined, or\n   * aborted.\n   *\n   * The lifetime of the handle will be attached to the provided `MicroScope`.\n   *\n   * @since 3.4.0\n   * @experimental\n   * @category fiber & forking\n   */\n  <A, E, R>(self: Micro<A, E, R>, scope: MicroScope): Micro<MicroFiber<A, E>, never, R>\n} = dual(\n  2,\n  <A, E, R>(self: Micro<A, E, R>, scope: MicroScope): Micro<MicroFiber<A, E>, never, R> =>\n    uninterruptibleMask((restore) =>\n      flatMap(scope.fork, (scope) =>\n        tap(\n          restore(forkDaemon(onExit(self, (exit) => scope.close(exit)))),\n          (fiber) => scope.addFinalizer((_) => fiberInterrupt(fiber))\n        ))\n    )\n)\n\n/**\n * Run the `Micro` effect in a new `MicroFiber` that can be awaited, joined, or\n * aborted.\n *\n * The lifetime of the handle will be attached to the current `MicroScope`.\n *\n * @since 3.4.0\n * @experimental\n * @category fiber & forking\n */\nexport const forkScoped = <A, E, R>(self: Micro<A, E, R>): Micro<MicroFiber<A, E>, never, R | MicroScope> =>\n  flatMap(scope, (scope) => forkIn(self, scope))\n\n// ----------------------------------------------------------------------------\n// execution\n// ----------------------------------------------------------------------------\n\n/**\n * Execute the `Micro` effect and return a `MicroFiber` that can be awaited, joined,\n * or aborted.\n *\n * You can listen for the result by adding an observer using the handle's\n * `addObserver` method.\n *\n * @example\n * ```ts\n * import * as Micro from \"effect/Micro\"\n *\n * const handle = Micro.succeed(42).pipe(\n *   Micro.delay(1000),\n *   Micro.runFork\n * )\n *\n * handle.addObserver((exit) => {\n *   console.log(exit)\n * })\n * ```\n *\n * @since 3.4.0\n * @experimental\n * @category execution\n */\nexport const runFork = <A, E>(\n  effect: Micro<A, E>,\n  options?: {\n    readonly signal?: AbortSignal | undefined\n    readonly scheduler?: MicroScheduler | undefined\n  } | undefined\n): MicroFiberImpl<A, E> => {\n  const fiber = new MicroFiberImpl<A, E>(CurrentScheduler.context(\n    options?.scheduler ?? new MicroSchedulerDefault()\n  ))\n  fiber.evaluate(effect as any)\n  if (options?.signal) {\n    if (options.signal.aborted) {\n      fiber.unsafeInterrupt()\n    } else {\n      const abort = () => fiber.unsafeInterrupt()\n      options.signal.addEventListener(\"abort\", abort, { once: true })\n      fiber.addObserver(() => options.signal!.removeEventListener(\"abort\", abort))\n    }\n  }\n  return fiber\n}\n\n/**\n * Execute the `Micro` effect and return a `Promise` that resolves with the\n * `MicroExit` of the computation.\n *\n * @since 3.4.6\n * @experimental\n * @category execution\n */\nexport const runPromiseExit = <A, E>(\n  effect: Micro<A, E>,\n  options?: {\n    readonly signal?: AbortSignal | undefined\n    readonly scheduler?: MicroScheduler | undefined\n  } | undefined\n): Promise<MicroExit<A, E>> =>\n  new Promise((resolve, _reject) => {\n    const handle = runFork(effect, options)\n    handle.addObserver(resolve)\n  })\n\n/**\n * Execute the `Micro` effect and return a `Promise` that resolves with the\n * successful value of the computation.\n *\n * @since 3.4.0\n * @experimental\n * @category execution\n */\nexport const runPromise = <A, E>(\n  effect: Micro<A, E>,\n  options?: {\n    readonly signal?: AbortSignal | undefined\n    readonly scheduler?: MicroScheduler | undefined\n  } | undefined\n): Promise<A> =>\n  runPromiseExit(effect, options).then((exit) => {\n    if (exit._tag === \"Failure\") {\n      throw exit.cause\n    }\n    return exit.value\n  })\n\n/**\n * Attempt to execute the `Micro` effect synchronously and return the `MicroExit`.\n *\n * If any asynchronous effects are encountered, the function will return a\n * `CauseDie` containing the `MicroFiber`.\n *\n * @since 3.4.6\n * @experimental\n * @category execution\n */\nexport const runSyncExit = <A, E>(effect: Micro<A, E>): MicroExit<A, E> => {\n  const scheduler = new MicroSchedulerDefault()\n  const fiber = runFork(effect, { scheduler })\n  scheduler.flush()\n  return fiber._exit ?? exitDie(fiber)\n}\n\n/**\n * Attempt to execute the `Micro` effect synchronously and return the success\n * value.\n *\n * @since 3.4.0\n * @experimental\n * @category execution\n */\nexport const runSync = <A, E>(effect: Micro<A, E>): A => {\n  const exit = runSyncExit(effect)\n  if (exit._tag === \"Failure\") throw exit.cause\n  return exit.value\n}\n\n// ----------------------------------------------------------------------------\n// Errors\n// ----------------------------------------------------------------------------\n\n/**\n * @since 3.4.0\n * @experimental\n * @category errors\n */\nexport interface YieldableError extends Pipeable, Inspectable, Readonly<Error> {\n  readonly [Effectable.EffectTypeId]: Effect.VarianceStruct<never, this, never>\n  readonly [Effectable.StreamTypeId]: Stream.VarianceStruct<never, this, never>\n  readonly [Effectable.SinkTypeId]: Sink.VarianceStruct<never, unknown, never, this, never>\n  readonly [Effectable.ChannelTypeId]: Channel.VarianceStruct<never, unknown, this, unknown, never, unknown, never>\n  readonly [TypeId]: Micro.Variance<never, this, never>\n  [Symbol.iterator](): MicroIterator<Micro<never, this, never>>\n}\n\nconst YieldableError: new(message?: string) => YieldableError = (function() {\n  class YieldableError extends globalThis.Error {}\n  // @effect-diagnostics-next-line floatingEffect:off\n  Object.assign(YieldableError.prototype, MicroProto, StructuralPrototype, {\n    [identifier]: \"Failure\",\n    [evaluate]() {\n      return fail(this)\n    },\n    toString(this: Error) {\n      return this.message ? `${this.name}: ${this.message}` : this.name\n    },\n    toJSON() {\n      return { ...this }\n    },\n    [NodeInspectSymbol](this: Error): string {\n      const stack = this.stack\n      if (stack) {\n        return `${this.toString()}\\n${stack.split(\"\\n\").slice(1).join(\"\\n\")}`\n      }\n      return this.toString()\n    }\n  })\n  return YieldableError as any\n})()\n\n/**\n * @since 3.4.0\n * @experimental\n * @category errors\n */\nexport const Error: new<A extends Record<string, any> = {}>(\n  args: Equals<A, {}> extends true ? void\n    : { readonly [P in keyof A]: A[P] }\n) => YieldableError & Readonly<A> = (function() {\n  return class extends YieldableError {\n    constructor(args: any) {\n      super()\n      if (args) {\n        Object.assign(this, args)\n      }\n    }\n  } as any\n})()\n\n/**\n * @since 3.4.0\n * @experimental\n * @category errors\n */\nexport const TaggedError = <Tag extends string>(tag: Tag): new<A extends Record<string, any> = {}>(\n  args: Equals<A, {}> extends true ? void\n    : { readonly [P in keyof A as P extends \"_tag\" ? never : P]: A[P] }\n) => YieldableError & { readonly _tag: Tag } & Readonly<A> => {\n  class Base extends Error<{}> {\n    readonly _tag = tag\n  }\n  ;(Base.prototype as any).name = tag\n  return Base as any\n}\n\n/**\n * Represents a checked exception which occurs when an expected element was\n * unable to be found.\n *\n * @since 3.4.4\n * @experimental\n * @category errors\n */\nexport class NoSuchElementException extends TaggedError(\"NoSuchElementException\")<{ message?: string | undefined }> {}\n\n/**\n * Represents a checked exception which occurs when a timeout occurs.\n *\n * @since 3.4.4\n * @experimental\n * @category errors\n */\nexport class TimeoutException extends TaggedError(\"TimeoutException\") {}\n"],"names":["Arr","Context","Effectable","Either","Equal","constTrue","constVoid","dual","identity","globalValue","Hash","format","NodeInspectSymbol","toStringUnknown","InternalContext","doNotation","StructuralPrototype","Option","pipeArguments","hasProperty","isIterable","isTagged","SingleShotGen","YieldWrap","yieldWrapGet","TypeId","Symbol","for","MicroExitTypeId","isMicro","u","MicroCauseTypeId","isMicroCause","self","microCauseVariance","_E","MicroCauseImpl","globalThis","Error","_tag","traces","constructor","originalError","causeName","name","message","stack","messageLines","split","length","slice","join","pipe","arguments","toString","Fail","error","causeFail","Die","defect","causeDie","Interrupt","causeInterrupt","causeIsFail","causeIsDie","causeIsInterrupt","causeSquash","causeWithTrace","trace","MicroFiberTypeId","fiberVariance","_A","MicroFiberImpl","context","interruptible","_stack","_observers","_exit","_children","currentOpCount","getRef","ref","unsafeGetReference","addObserver","cb","push","index","indexOf","splice","_interrupted","unsafeInterrupt","evaluate","exitInterrupt","unsafePoll","effect","_yielded","undefined","yielded","exit","runLoop","Yield","interruptChildren","fiberMiddleware","flatMap","i","yielding","current","CurrentScheduler","shouldYield","prev","yieldNow","exitDie","String","getCont","symbol","op","pop","cont","ensureCont","yieldWith","value","children","Set","fiberInterruptChildren","fiber","size","fiberInterruptAll","fiberAwait","async","resume","sync","succeed","fiberJoin","flatten","fiberInterrupt","suspend","asVoid","fibers","iter","iterator","wait","result","next","done","_","exitVoid","identifier","args","successCont","failureCont","microVariance","_R","MicroProto","EffectPrototype","_op","toJSON","_id","defaultEvaluate","_fiber","makePrimitiveProto","options","eval","contA","contE","ensure","makePrimitive","Proto","Object","create","single","makeExit","prop","that","isMicroExit","equals","cached","combine","string","hash","failCause","fail","exitSucceed","yieldNowWith","resumed","scheduleTask","succeedSome","a","some","succeedNone","none","failCauseSync","die","failSync","fromOption","option","NoSuchElementException","fromEither","either","right","left","void_","void","try_","try","err","catch","promise","asyncOptions","signal","then","e","tryPromise","withMicroFiber","yieldFlush","flush","register","controller","AbortController","onCancel","asyncFinalizer","abort","setInterruptible","cause","never","interval","setInterval","clearInterval","gen","fromIterator","call","state","as","map","asSome","flip","matchEffect","onFailure","onSuccess","andThen","f","tap","matchCause","exitFailCause","sandbox","catchAllCause","raceAll","all","parent","effects","fromIterable","len","doneCount","causes","onExit","uninterruptible","unsafeFork","add","delete","raceAllFirst","race","raceFirst","OnSuccessProto","exitFail","exitIsSuccess","exitIsFailure","exitIsInterrupt","exitIsFail","exitIsDie","exitVoidAll","exits","setImmediate","setTimeout","MicroSchedulerDefault","tasks","running","task","_priority","afterScheduled","runTasks","MaxOpsBeforeYield","service","tag","unsafeGet","serviceOption","getOption","updateContext","updateService","getContext","provideContext","provided","merge","provideService","provideServiceEffect","acquire","Reference","defaultValue","CurrentConcurrency","withConcurrency","concurrency","zip","zipWith","a2","concurrent","filterOrFailCause","refinement","orFailWith","filterOrFail","when","condition","pass","repeatExit","startedAt","schedule","Date","now","attempt","loop","while","times","delayEffect","elapsed","duration","isNone","sleep","repeat","replicate","n","Array","from","replicateEffect","forever","scheduleRecurs","scheduleSpaced","millis","scheduleExponential","baseMillis","factor","Math","pow","scheduleAddDelay","scheduleWithMaxDelay","max","min","scheduleWithMaxElapsed","scheduleUnion","d1","d2","scheduleIntersect","OnFailureProto","catchCauseIf","predicate","catchAll","catchAllDefect","tapErrorCause","tapErrorCauseIf","tapError","tapDefect","catchIf","catchTag","k","mapErrorCause","mapError","orDie","orElseSucceed","ignore","ignoreLogged","console","match","retry","withTrace","prevLimit","stackTraceLimit","generate","line","trim","replace","lineMatch","onError","matchCauseEffect","primitive","OnSuccessAndFailureProto","timeout","clearTimeout","delay","timeoutOrElse","onTimeout","TimeoutException","timeoutOption","MicroScopeTypeId","MicroScope","GenericTag","MicroScopeImpl","finalizers","unsafeAddFinalizer","finalizer","addFinalizer","unsafeRemoveFinalizer","close","microExit","reverse","forEach","fork","newScope","fin","scopeMake","scopeUnsafeMake","scope","provideScope","scoped","acquireRelease","release","uninterruptibleMask","restore","ensuring","onExitIf","onInterrupt","acquireUseRelease","use","interrupt","arg","isArray","discard","values","out","entries","key","whileLoop","step","body","iterable","concurrencyOption","Number","POSITIVE_INFINITY","items","b","inProgress","pumping","interrupted","pump","currentIndex","item","child","filter","filterMap","negate","o","Do","bindTo","bind","let_","let","immediate","daemon","forkDaemon","forkIn","forkScoped","runFork","scheduler","aborted","addEventListener","once","removeEventListener","runPromiseExit","Promise","resolve","_reject","handle","runPromise","runSyncExit","runSync","YieldableError","assign","prototype","TaggedError","Base"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 11312, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/%40uploadthing/mime-types/application/index.js"],"sourcesContent":["const application = {\n    \"application/andrew-inset\": {\n        source: \"iana\",\n        extensions: [\n            \"ez\"\n        ]\n    },\n    \"application/applixware\": {\n        source: \"apache\",\n        extensions: [\n            \"aw\"\n        ]\n    },\n    \"application/atom+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"atom\"\n        ]\n    },\n    \"application/atomcat+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"atomcat\"\n        ]\n    },\n    \"application/atomdeleted+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"atomdeleted\"\n        ]\n    },\n    \"application/atomsvc+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"atomsvc\"\n        ]\n    },\n    \"application/atsc-dwd+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"dwd\"\n        ]\n    },\n    \"application/atsc-held+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"held\"\n        ]\n    },\n    \"application/atsc-rsat+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"rsat\"\n        ]\n    },\n    \"application/calendar+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"xcs\"\n        ]\n    },\n    \"application/ccxml+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"ccxml\"\n        ]\n    },\n    \"application/cdfx+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"cdfx\"\n        ]\n    },\n    \"application/cdmi-capability\": {\n        source: \"iana\",\n        extensions: [\n            \"cdmia\"\n        ]\n    },\n    \"application/cdmi-container\": {\n        source: \"iana\",\n        extensions: [\n            \"cdmic\"\n        ]\n    },\n    \"application/cdmi-domain\": {\n        source: \"iana\",\n        extensions: [\n            \"cdmid\"\n        ]\n    },\n    \"application/cdmi-object\": {\n        source: \"iana\",\n        extensions: [\n            \"cdmio\"\n        ]\n    },\n    \"application/cdmi-queue\": {\n        source: \"iana\",\n        extensions: [\n            \"cdmiq\"\n        ]\n    },\n    \"application/cpl+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"cpl\"\n        ]\n    },\n    \"application/cu-seeme\": {\n        source: \"apache\",\n        extensions: [\n            \"cu\"\n        ]\n    },\n    \"application/dash+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"mpd\"\n        ]\n    },\n    \"application/dash-patch+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"mpp\"\n        ]\n    },\n    \"application/davmount+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"davmount\"\n        ]\n    },\n    \"application/dicom\": {\n        source: \"iana\",\n        extensions: [\n            \"dcm\"\n        ]\n    },\n    \"application/docbook+xml\": {\n        source: \"apache\",\n        extensions: [\n            \"dbk\"\n        ]\n    },\n    \"application/dssc+der\": {\n        source: \"iana\",\n        extensions: [\n            \"dssc\"\n        ]\n    },\n    \"application/dssc+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"xdssc\"\n        ]\n    },\n    \"application/ecmascript\": {\n        source: \"iana\",\n        extensions: [\n            \"es\",\n            \"ecma\"\n        ]\n    },\n    \"application/emma+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"emma\"\n        ]\n    },\n    \"application/emotionml+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"emotionml\"\n        ]\n    },\n    \"application/epub+zip\": {\n        source: \"iana\",\n        extensions: [\n            \"epub\"\n        ]\n    },\n    \"application/exi\": {\n        source: \"iana\",\n        extensions: [\n            \"exi\"\n        ]\n    },\n    \"application/express\": {\n        source: \"iana\",\n        extensions: [\n            \"exp\"\n        ]\n    },\n    \"application/fdt+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"fdt\"\n        ]\n    },\n    \"application/font-tdpfr\": {\n        source: \"iana\",\n        extensions: [\n            \"pfr\"\n        ]\n    },\n    \"application/geo+json\": {\n        source: \"iana\",\n        extensions: [\n            \"geojson\"\n        ]\n    },\n    \"application/gml+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"gml\"\n        ]\n    },\n    \"application/gpx+xml\": {\n        source: \"apache\",\n        extensions: [\n            \"gpx\"\n        ]\n    },\n    \"application/gxf\": {\n        source: \"apache\",\n        extensions: [\n            \"gxf\"\n        ]\n    },\n    \"application/gzip\": {\n        source: \"iana\",\n        extensions: [\n            \"gz\"\n        ]\n    },\n    \"application/hyperstudio\": {\n        source: \"iana\",\n        extensions: [\n            \"stk\"\n        ]\n    },\n    \"application/inkml+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"ink\",\n            \"inkml\"\n        ]\n    },\n    \"application/ipfix\": {\n        source: \"iana\",\n        extensions: [\n            \"ipfix\"\n        ]\n    },\n    \"application/its+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"its\"\n        ]\n    },\n    \"application/java-archive\": {\n        source: \"apache\",\n        extensions: [\n            \"jar\",\n            \"war\",\n            \"ear\"\n        ]\n    },\n    \"application/java-serialized-object\": {\n        source: \"apache\",\n        extensions: [\n            \"ser\"\n        ]\n    },\n    \"application/java-vm\": {\n        source: \"apache\",\n        extensions: [\n            \"class\"\n        ]\n    },\n    \"application/javascript\": {\n        source: \"iana\",\n        charset: \"UTF-8\",\n        extensions: [\n            \"js\",\n            \"mjs\"\n        ]\n    },\n    \"application/json\": {\n        source: \"iana\",\n        charset: \"UTF-8\",\n        extensions: [\n            \"json\",\n            \"map\"\n        ]\n    },\n    \"application/jsonml+json\": {\n        source: \"apache\",\n        extensions: [\n            \"jsonml\"\n        ]\n    },\n    \"application/ld+json\": {\n        source: \"iana\",\n        extensions: [\n            \"jsonld\"\n        ]\n    },\n    \"application/lgr+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"lgr\"\n        ]\n    },\n    \"application/lost+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"lostxml\"\n        ]\n    },\n    \"application/mac-binhex40\": {\n        source: \"iana\",\n        extensions: [\n            \"hqx\"\n        ]\n    },\n    \"application/mac-compactpro\": {\n        source: \"apache\",\n        extensions: [\n            \"cpt\"\n        ]\n    },\n    \"application/mads+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"mads\"\n        ]\n    },\n    \"application/manifest+json\": {\n        source: \"iana\",\n        charset: \"UTF-8\",\n        extensions: [\n            \"webmanifest\"\n        ]\n    },\n    \"application/marc\": {\n        source: \"iana\",\n        extensions: [\n            \"mrc\"\n        ]\n    },\n    \"application/marcxml+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"mrcx\"\n        ]\n    },\n    \"application/mathematica\": {\n        source: \"iana\",\n        extensions: [\n            \"ma\",\n            \"nb\",\n            \"mb\"\n        ]\n    },\n    \"application/mathml+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"mathml\"\n        ]\n    },\n    \"application/mbox\": {\n        source: \"iana\",\n        extensions: [\n            \"mbox\"\n        ]\n    },\n    \"application/media-policy-dataset+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"mpf\"\n        ]\n    },\n    \"application/mediaservercontrol+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"mscml\"\n        ]\n    },\n    \"application/metalink+xml\": {\n        source: \"apache\",\n        extensions: [\n            \"metalink\"\n        ]\n    },\n    \"application/metalink4+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"meta4\"\n        ]\n    },\n    \"application/mets+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"mets\"\n        ]\n    },\n    \"application/mmt-aei+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"maei\"\n        ]\n    },\n    \"application/mmt-usd+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"musd\"\n        ]\n    },\n    \"application/mods+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"mods\"\n        ]\n    },\n    \"application/mp21\": {\n        source: \"iana\",\n        extensions: [\n            \"m21\",\n            \"mp21\"\n        ]\n    },\n    \"application/mp4\": {\n        source: \"iana\",\n        extensions: [\n            \"mp4s\",\n            \"m4p\"\n        ]\n    },\n    \"application/msword\": {\n        source: \"iana\",\n        extensions: [\n            \"doc\",\n            \"dot\"\n        ]\n    },\n    \"application/mxf\": {\n        source: \"iana\",\n        extensions: [\n            \"mxf\"\n        ]\n    },\n    \"application/n-quads\": {\n        source: \"iana\",\n        extensions: [\n            \"nq\"\n        ]\n    },\n    \"application/n-triples\": {\n        source: \"iana\",\n        extensions: [\n            \"nt\"\n        ]\n    },\n    \"application/node\": {\n        source: \"iana\",\n        extensions: [\n            \"cjs\"\n        ]\n    },\n    \"application/octet-stream\": {\n        source: \"iana\",\n        extensions: [\n            \"bin\",\n            \"dms\",\n            \"lrf\",\n            \"mar\",\n            \"so\",\n            \"dist\",\n            \"distz\",\n            \"pkg\",\n            \"bpk\",\n            \"dump\",\n            \"elc\",\n            \"deploy\",\n            \"exe\",\n            \"dll\",\n            \"deb\",\n            \"dmg\",\n            \"iso\",\n            \"img\",\n            \"msi\",\n            \"msp\",\n            \"msm\",\n            \"buffer\"\n        ]\n    },\n    \"application/oda\": {\n        source: \"iana\",\n        extensions: [\n            \"oda\"\n        ]\n    },\n    \"application/oebps-package+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"opf\"\n        ]\n    },\n    \"application/ogg\": {\n        source: \"iana\",\n        extensions: [\n            \"ogx\"\n        ]\n    },\n    \"application/omdoc+xml\": {\n        source: \"apache\",\n        extensions: [\n            \"omdoc\"\n        ]\n    },\n    \"application/onenote\": {\n        source: \"apache\",\n        extensions: [\n            \"onetoc\",\n            \"onetoc2\",\n            \"onetmp\",\n            \"onepkg\"\n        ]\n    },\n    \"application/oxps\": {\n        source: \"iana\",\n        extensions: [\n            \"oxps\"\n        ]\n    },\n    \"application/p2p-overlay+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"relo\"\n        ]\n    },\n    \"application/patch-ops-error+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"xer\"\n        ]\n    },\n    \"application/pdf\": {\n        source: \"iana\",\n        extensions: [\n            \"pdf\"\n        ]\n    },\n    \"application/pgp-encrypted\": {\n        source: \"iana\",\n        extensions: [\n            \"pgp\"\n        ]\n    },\n    \"application/pgp-keys\": {\n        source: \"iana\",\n        extensions: [\n            \"asc\"\n        ]\n    },\n    \"application/pgp-signature\": {\n        source: \"iana\",\n        extensions: [\n            \"asc\",\n            \"sig\"\n        ]\n    },\n    \"application/pics-rules\": {\n        source: \"apache\",\n        extensions: [\n            \"prf\"\n        ]\n    },\n    \"application/pkcs10\": {\n        source: \"iana\",\n        extensions: [\n            \"p10\"\n        ]\n    },\n    \"application/pkcs7-mime\": {\n        source: \"iana\",\n        extensions: [\n            \"p7m\",\n            \"p7c\"\n        ]\n    },\n    \"application/pkcs7-signature\": {\n        source: \"iana\",\n        extensions: [\n            \"p7s\"\n        ]\n    },\n    \"application/pkcs8\": {\n        source: \"iana\",\n        extensions: [\n            \"p8\"\n        ]\n    },\n    \"application/pkix-attr-cert\": {\n        source: \"iana\",\n        extensions: [\n            \"ac\"\n        ]\n    },\n    \"application/pkix-cert\": {\n        source: \"iana\",\n        extensions: [\n            \"cer\"\n        ]\n    },\n    \"application/pkix-crl\": {\n        source: \"iana\",\n        extensions: [\n            \"crl\"\n        ]\n    },\n    \"application/pkix-pkipath\": {\n        source: \"iana\",\n        extensions: [\n            \"pkipath\"\n        ]\n    },\n    \"application/pkixcmp\": {\n        source: \"iana\",\n        extensions: [\n            \"pki\"\n        ]\n    },\n    \"application/pls+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"pls\"\n        ]\n    },\n    \"application/postscript\": {\n        source: \"iana\",\n        extensions: [\n            \"ai\",\n            \"eps\",\n            \"ps\"\n        ]\n    },\n    \"application/provenance+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"provx\"\n        ]\n    },\n    \"application/prs.cww\": {\n        source: \"iana\",\n        extensions: [\n            \"cww\"\n        ]\n    },\n    \"application/pskc+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"pskcxml\"\n        ]\n    },\n    \"application/rdf+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"rdf\",\n            \"owl\"\n        ]\n    },\n    \"application/reginfo+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"rif\"\n        ]\n    },\n    \"application/relax-ng-compact-syntax\": {\n        source: \"iana\",\n        extensions: [\n            \"rnc\"\n        ]\n    },\n    \"application/resource-lists+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"rl\"\n        ]\n    },\n    \"application/resource-lists-diff+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"rld\"\n        ]\n    },\n    \"application/rls-services+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"rs\"\n        ]\n    },\n    \"application/route-apd+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"rapd\"\n        ]\n    },\n    \"application/route-s-tsid+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"sls\"\n        ]\n    },\n    \"application/route-usd+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"rusd\"\n        ]\n    },\n    \"application/rpki-ghostbusters\": {\n        source: \"iana\",\n        extensions: [\n            \"gbr\"\n        ]\n    },\n    \"application/rpki-manifest\": {\n        source: \"iana\",\n        extensions: [\n            \"mft\"\n        ]\n    },\n    \"application/rpki-roa\": {\n        source: \"iana\",\n        extensions: [\n            \"roa\"\n        ]\n    },\n    \"application/rsd+xml\": {\n        source: \"apache\",\n        extensions: [\n            \"rsd\"\n        ]\n    },\n    \"application/rss+xml\": {\n        source: \"apache\",\n        extensions: [\n            \"rss\"\n        ]\n    },\n    \"application/rtf\": {\n        source: \"iana\",\n        extensions: [\n            \"rtf\"\n        ]\n    },\n    \"application/sbml+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"sbml\"\n        ]\n    },\n    \"application/scvp-cv-request\": {\n        source: \"iana\",\n        extensions: [\n            \"scq\"\n        ]\n    },\n    \"application/scvp-cv-response\": {\n        source: \"iana\",\n        extensions: [\n            \"scs\"\n        ]\n    },\n    \"application/scvp-vp-request\": {\n        source: \"iana\",\n        extensions: [\n            \"spq\"\n        ]\n    },\n    \"application/scvp-vp-response\": {\n        source: \"iana\",\n        extensions: [\n            \"spp\"\n        ]\n    },\n    \"application/sdp\": {\n        source: \"iana\",\n        extensions: [\n            \"sdp\"\n        ]\n    },\n    \"application/senml+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"senmlx\"\n        ]\n    },\n    \"application/sensml+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"sensmlx\"\n        ]\n    },\n    \"application/set-payment-initiation\": {\n        source: \"iana\",\n        extensions: [\n            \"setpay\"\n        ]\n    },\n    \"application/set-registration-initiation\": {\n        source: \"iana\",\n        extensions: [\n            \"setreg\"\n        ]\n    },\n    \"application/shf+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"shf\"\n        ]\n    },\n    \"application/sieve\": {\n        source: \"iana\",\n        extensions: [\n            \"siv\",\n            \"sieve\"\n        ]\n    },\n    \"application/smil+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"smi\",\n            \"smil\"\n        ]\n    },\n    \"application/sparql-query\": {\n        source: \"iana\",\n        extensions: [\n            \"rq\"\n        ]\n    },\n    \"application/sparql-results+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"srx\"\n        ]\n    },\n    \"application/srgs\": {\n        source: \"iana\",\n        extensions: [\n            \"gram\"\n        ]\n    },\n    \"application/srgs+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"grxml\"\n        ]\n    },\n    \"application/sru+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"sru\"\n        ]\n    },\n    \"application/ssdl+xml\": {\n        source: \"apache\",\n        extensions: [\n            \"ssdl\"\n        ]\n    },\n    \"application/ssml+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"ssml\"\n        ]\n    },\n    \"application/swid+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"swidtag\"\n        ]\n    },\n    \"application/tei+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"tei\",\n            \"teicorpus\"\n        ]\n    },\n    \"application/thraud+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"tfi\"\n        ]\n    },\n    \"application/timestamped-data\": {\n        source: \"iana\",\n        extensions: [\n            \"tsd\"\n        ]\n    },\n    \"application/trig\": {\n        source: \"iana\",\n        extensions: [\n            \"trig\"\n        ]\n    },\n    \"application/ttml+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"ttml\"\n        ]\n    },\n    \"application/urc-ressheet+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"rsheet\"\n        ]\n    },\n    \"application/urc-targetdesc+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"td\"\n        ]\n    },\n    \"application/vnd.1000minds.decision-model+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"1km\"\n        ]\n    },\n    \"application/vnd.3gpp.pic-bw-large\": {\n        source: \"iana\",\n        extensions: [\n            \"plb\"\n        ]\n    },\n    \"application/vnd.3gpp.pic-bw-small\": {\n        source: \"iana\",\n        extensions: [\n            \"psb\"\n        ]\n    },\n    \"application/vnd.3gpp.pic-bw-var\": {\n        source: \"iana\",\n        extensions: [\n            \"pvb\"\n        ]\n    },\n    \"application/vnd.3gpp2.tcap\": {\n        source: \"iana\",\n        extensions: [\n            \"tcap\"\n        ]\n    },\n    \"application/vnd.3m.post-it-notes\": {\n        source: \"iana\",\n        extensions: [\n            \"pwn\"\n        ]\n    },\n    \"application/vnd.accpac.simply.aso\": {\n        source: \"iana\",\n        extensions: [\n            \"aso\"\n        ]\n    },\n    \"application/vnd.accpac.simply.imp\": {\n        source: \"iana\",\n        extensions: [\n            \"imp\"\n        ]\n    },\n    \"application/vnd.acucobol\": {\n        source: \"iana\",\n        extensions: [\n            \"acu\"\n        ]\n    },\n    \"application/vnd.acucorp\": {\n        source: \"iana\",\n        extensions: [\n            \"atc\",\n            \"acutc\"\n        ]\n    },\n    \"application/vnd.adobe.air-application-installer-package+zip\": {\n        source: \"apache\",\n        extensions: [\n            \"air\"\n        ]\n    },\n    \"application/vnd.adobe.formscentral.fcdt\": {\n        source: \"iana\",\n        extensions: [\n            \"fcdt\"\n        ]\n    },\n    \"application/vnd.adobe.fxp\": {\n        source: \"iana\",\n        extensions: [\n            \"fxp\",\n            \"fxpl\"\n        ]\n    },\n    \"application/vnd.adobe.xdp+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"xdp\"\n        ]\n    },\n    \"application/vnd.adobe.xfdf\": {\n        source: \"iana\",\n        extensions: [\n            \"xfdf\"\n        ]\n    },\n    \"application/vnd.age\": {\n        source: \"iana\",\n        extensions: [\n            \"age\"\n        ]\n    },\n    \"application/vnd.ahead.space\": {\n        source: \"iana\",\n        extensions: [\n            \"ahead\"\n        ]\n    },\n    \"application/vnd.airzip.filesecure.azf\": {\n        source: \"iana\",\n        extensions: [\n            \"azf\"\n        ]\n    },\n    \"application/vnd.airzip.filesecure.azs\": {\n        source: \"iana\",\n        extensions: [\n            \"azs\"\n        ]\n    },\n    \"application/vnd.amazon.ebook\": {\n        source: \"apache\",\n        extensions: [\n            \"azw\"\n        ]\n    },\n    \"application/vnd.americandynamics.acc\": {\n        source: \"iana\",\n        extensions: [\n            \"acc\"\n        ]\n    },\n    \"application/vnd.amiga.ami\": {\n        source: \"iana\",\n        extensions: [\n            \"ami\"\n        ]\n    },\n    \"application/vnd.android.package-archive\": {\n        source: \"apache\",\n        extensions: [\n            \"apk\"\n        ]\n    },\n    \"application/vnd.anser-web-certificate-issue-initiation\": {\n        source: \"iana\",\n        extensions: [\n            \"cii\"\n        ]\n    },\n    \"application/vnd.anser-web-funds-transfer-initiation\": {\n        source: \"apache\",\n        extensions: [\n            \"fti\"\n        ]\n    },\n    \"application/vnd.antix.game-component\": {\n        source: \"iana\",\n        extensions: [\n            \"atx\"\n        ]\n    },\n    \"application/vnd.apple.installer+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"mpkg\"\n        ]\n    },\n    \"application/vnd.apple.keynote\": {\n        source: \"iana\",\n        extensions: [\n            \"key\"\n        ]\n    },\n    \"application/vnd.apple.mpegurl\": {\n        source: \"iana\",\n        extensions: [\n            \"m3u8\"\n        ]\n    },\n    \"application/vnd.apple.numbers\": {\n        source: \"iana\",\n        extensions: [\n            \"numbers\"\n        ]\n    },\n    \"application/vnd.apple.pages\": {\n        source: \"iana\",\n        extensions: [\n            \"pages\"\n        ]\n    },\n    \"application/vnd.aristanetworks.swi\": {\n        source: \"iana\",\n        extensions: [\n            \"swi\"\n        ]\n    },\n    \"application/vnd.astraea-software.iota\": {\n        source: \"iana\",\n        extensions: [\n            \"iota\"\n        ]\n    },\n    \"application/vnd.audiograph\": {\n        source: \"iana\",\n        extensions: [\n            \"aep\"\n        ]\n    },\n    \"application/vnd.balsamiq.bmml+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"bmml\"\n        ]\n    },\n    \"application/vnd.blueice.multipass\": {\n        source: \"iana\",\n        extensions: [\n            \"mpm\"\n        ]\n    },\n    \"application/vnd.bmi\": {\n        source: \"iana\",\n        extensions: [\n            \"bmi\"\n        ]\n    },\n    \"application/vnd.businessobjects\": {\n        source: \"iana\",\n        extensions: [\n            \"rep\"\n        ]\n    },\n    \"application/vnd.chemdraw+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"cdxml\"\n        ]\n    },\n    \"application/vnd.chipnuts.karaoke-mmd\": {\n        source: \"iana\",\n        extensions: [\n            \"mmd\"\n        ]\n    },\n    \"application/vnd.cinderella\": {\n        source: \"iana\",\n        extensions: [\n            \"cdy\"\n        ]\n    },\n    \"application/vnd.citationstyles.style+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"csl\"\n        ]\n    },\n    \"application/vnd.claymore\": {\n        source: \"iana\",\n        extensions: [\n            \"cla\"\n        ]\n    },\n    \"application/vnd.cloanto.rp9\": {\n        source: \"iana\",\n        extensions: [\n            \"rp9\"\n        ]\n    },\n    \"application/vnd.clonk.c4group\": {\n        source: \"iana\",\n        extensions: [\n            \"c4g\",\n            \"c4d\",\n            \"c4f\",\n            \"c4p\",\n            \"c4u\"\n        ]\n    },\n    \"application/vnd.cluetrust.cartomobile-config\": {\n        source: \"iana\",\n        extensions: [\n            \"c11amc\"\n        ]\n    },\n    \"application/vnd.cluetrust.cartomobile-config-pkg\": {\n        source: \"iana\",\n        extensions: [\n            \"c11amz\"\n        ]\n    },\n    \"application/vnd.commonspace\": {\n        source: \"iana\",\n        extensions: [\n            \"csp\"\n        ]\n    },\n    \"application/vnd.contact.cmsg\": {\n        source: \"iana\",\n        extensions: [\n            \"cdbcmsg\"\n        ]\n    },\n    \"application/vnd.cosmocaller\": {\n        source: \"iana\",\n        extensions: [\n            \"cmc\"\n        ]\n    },\n    \"application/vnd.crick.clicker\": {\n        source: \"iana\",\n        extensions: [\n            \"clkx\"\n        ]\n    },\n    \"application/vnd.crick.clicker.keyboard\": {\n        source: \"iana\",\n        extensions: [\n            \"clkk\"\n        ]\n    },\n    \"application/vnd.crick.clicker.palette\": {\n        source: \"iana\",\n        extensions: [\n            \"clkp\"\n        ]\n    },\n    \"application/vnd.crick.clicker.template\": {\n        source: \"iana\",\n        extensions: [\n            \"clkt\"\n        ]\n    },\n    \"application/vnd.crick.clicker.wordbank\": {\n        source: \"iana\",\n        extensions: [\n            \"clkw\"\n        ]\n    },\n    \"application/vnd.criticaltools.wbs+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"wbs\"\n        ]\n    },\n    \"application/vnd.ctc-posml\": {\n        source: \"iana\",\n        extensions: [\n            \"pml\"\n        ]\n    },\n    \"application/vnd.cups-ppd\": {\n        source: \"iana\",\n        extensions: [\n            \"ppd\"\n        ]\n    },\n    \"application/vnd.curl.car\": {\n        source: \"apache\",\n        extensions: [\n            \"car\"\n        ]\n    },\n    \"application/vnd.curl.pcurl\": {\n        source: \"apache\",\n        extensions: [\n            \"pcurl\"\n        ]\n    },\n    \"application/vnd.dart\": {\n        source: \"iana\",\n        extensions: [\n            \"dart\"\n        ]\n    },\n    \"application/vnd.data-vision.rdz\": {\n        source: \"iana\",\n        extensions: [\n            \"rdz\"\n        ]\n    },\n    \"application/vnd.dbf\": {\n        source: \"iana\",\n        extensions: [\n            \"dbf\"\n        ]\n    },\n    \"application/vnd.dece.data\": {\n        source: \"iana\",\n        extensions: [\n            \"uvf\",\n            \"uvvf\",\n            \"uvd\",\n            \"uvvd\"\n        ]\n    },\n    \"application/vnd.dece.ttml+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"uvt\",\n            \"uvvt\"\n        ]\n    },\n    \"application/vnd.dece.unspecified\": {\n        source: \"iana\",\n        extensions: [\n            \"uvx\",\n            \"uvvx\"\n        ]\n    },\n    \"application/vnd.dece.zip\": {\n        source: \"iana\",\n        extensions: [\n            \"uvz\",\n            \"uvvz\"\n        ]\n    },\n    \"application/vnd.denovo.fcselayout-link\": {\n        source: \"iana\",\n        extensions: [\n            \"fe_launch\"\n        ]\n    },\n    \"application/vnd.dna\": {\n        source: \"iana\",\n        extensions: [\n            \"dna\"\n        ]\n    },\n    \"application/vnd.dolby.mlp\": {\n        source: \"apache\",\n        extensions: [\n            \"mlp\"\n        ]\n    },\n    \"application/vnd.dpgraph\": {\n        source: \"iana\",\n        extensions: [\n            \"dpg\"\n        ]\n    },\n    \"application/vnd.dreamfactory\": {\n        source: \"iana\",\n        extensions: [\n            \"dfac\"\n        ]\n    },\n    \"application/vnd.ds-keypoint\": {\n        source: \"apache\",\n        extensions: [\n            \"kpxx\"\n        ]\n    },\n    \"application/vnd.dvb.ait\": {\n        source: \"iana\",\n        extensions: [\n            \"ait\"\n        ]\n    },\n    \"application/vnd.dvb.service\": {\n        source: \"iana\",\n        extensions: [\n            \"svc\"\n        ]\n    },\n    \"application/vnd.dynageo\": {\n        source: \"iana\",\n        extensions: [\n            \"geo\"\n        ]\n    },\n    \"application/vnd.ecowin.chart\": {\n        source: \"iana\",\n        extensions: [\n            \"mag\"\n        ]\n    },\n    \"application/vnd.enliven\": {\n        source: \"iana\",\n        extensions: [\n            \"nml\"\n        ]\n    },\n    \"application/vnd.epson.esf\": {\n        source: \"iana\",\n        extensions: [\n            \"esf\"\n        ]\n    },\n    \"application/vnd.epson.msf\": {\n        source: \"iana\",\n        extensions: [\n            \"msf\"\n        ]\n    },\n    \"application/vnd.epson.quickanime\": {\n        source: \"iana\",\n        extensions: [\n            \"qam\"\n        ]\n    },\n    \"application/vnd.epson.salt\": {\n        source: \"iana\",\n        extensions: [\n            \"slt\"\n        ]\n    },\n    \"application/vnd.epson.ssf\": {\n        source: \"iana\",\n        extensions: [\n            \"ssf\"\n        ]\n    },\n    \"application/vnd.eszigno3+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"es3\",\n            \"et3\"\n        ]\n    },\n    \"application/vnd.ezpix-album\": {\n        source: \"iana\",\n        extensions: [\n            \"ez2\"\n        ]\n    },\n    \"application/vnd.ezpix-package\": {\n        source: \"iana\",\n        extensions: [\n            \"ez3\"\n        ]\n    },\n    \"application/vnd.fdf\": {\n        source: \"iana\",\n        extensions: [\n            \"fdf\"\n        ]\n    },\n    \"application/vnd.fdsn.mseed\": {\n        source: \"iana\",\n        extensions: [\n            \"mseed\"\n        ]\n    },\n    \"application/vnd.fdsn.seed\": {\n        source: \"iana\",\n        extensions: [\n            \"seed\",\n            \"dataless\"\n        ]\n    },\n    \"application/vnd.flographit\": {\n        source: \"iana\",\n        extensions: [\n            \"gph\"\n        ]\n    },\n    \"application/vnd.fluxtime.clip\": {\n        source: \"iana\",\n        extensions: [\n            \"ftc\"\n        ]\n    },\n    \"application/vnd.framemaker\": {\n        source: \"iana\",\n        extensions: [\n            \"fm\",\n            \"frame\",\n            \"maker\",\n            \"book\"\n        ]\n    },\n    \"application/vnd.frogans.fnc\": {\n        source: \"iana\",\n        extensions: [\n            \"fnc\"\n        ]\n    },\n    \"application/vnd.frogans.ltf\": {\n        source: \"iana\",\n        extensions: [\n            \"ltf\"\n        ]\n    },\n    \"application/vnd.fsc.weblaunch\": {\n        source: \"iana\",\n        extensions: [\n            \"fsc\"\n        ]\n    },\n    \"application/vnd.fujitsu.oasys\": {\n        source: \"iana\",\n        extensions: [\n            \"oas\"\n        ]\n    },\n    \"application/vnd.fujitsu.oasys2\": {\n        source: \"iana\",\n        extensions: [\n            \"oa2\"\n        ]\n    },\n    \"application/vnd.fujitsu.oasys3\": {\n        source: \"iana\",\n        extensions: [\n            \"oa3\"\n        ]\n    },\n    \"application/vnd.fujitsu.oasysgp\": {\n        source: \"iana\",\n        extensions: [\n            \"fg5\"\n        ]\n    },\n    \"application/vnd.fujitsu.oasysprs\": {\n        source: \"iana\",\n        extensions: [\n            \"bh2\"\n        ]\n    },\n    \"application/vnd.fujixerox.ddd\": {\n        source: \"iana\",\n        extensions: [\n            \"ddd\"\n        ]\n    },\n    \"application/vnd.fujixerox.docuworks\": {\n        source: \"iana\",\n        extensions: [\n            \"xdw\"\n        ]\n    },\n    \"application/vnd.fujixerox.docuworks.binder\": {\n        source: \"iana\",\n        extensions: [\n            \"xbd\"\n        ]\n    },\n    \"application/vnd.fuzzysheet\": {\n        source: \"iana\",\n        extensions: [\n            \"fzs\"\n        ]\n    },\n    \"application/vnd.genomatix.tuxedo\": {\n        source: \"iana\",\n        extensions: [\n            \"txd\"\n        ]\n    },\n    \"application/vnd.geogebra.file\": {\n        source: \"iana\",\n        extensions: [\n            \"ggb\"\n        ]\n    },\n    \"application/vnd.geogebra.tool\": {\n        source: \"iana\",\n        extensions: [\n            \"ggt\"\n        ]\n    },\n    \"application/vnd.geometry-explorer\": {\n        source: \"iana\",\n        extensions: [\n            \"gex\",\n            \"gre\"\n        ]\n    },\n    \"application/vnd.geonext\": {\n        source: \"iana\",\n        extensions: [\n            \"gxt\"\n        ]\n    },\n    \"application/vnd.geoplan\": {\n        source: \"iana\",\n        extensions: [\n            \"g2w\"\n        ]\n    },\n    \"application/vnd.geospace\": {\n        source: \"iana\",\n        extensions: [\n            \"g3w\"\n        ]\n    },\n    \"application/vnd.gmx\": {\n        source: \"iana\",\n        extensions: [\n            \"gmx\"\n        ]\n    },\n    \"application/vnd.google-earth.kml+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"kml\"\n        ]\n    },\n    \"application/vnd.google-earth.kmz\": {\n        source: \"iana\",\n        extensions: [\n            \"kmz\"\n        ]\n    },\n    \"application/vnd.grafeq\": {\n        source: \"iana\",\n        extensions: [\n            \"gqf\",\n            \"gqs\"\n        ]\n    },\n    \"application/vnd.groove-account\": {\n        source: \"iana\",\n        extensions: [\n            \"gac\"\n        ]\n    },\n    \"application/vnd.groove-help\": {\n        source: \"iana\",\n        extensions: [\n            \"ghf\"\n        ]\n    },\n    \"application/vnd.groove-identity-message\": {\n        source: \"iana\",\n        extensions: [\n            \"gim\"\n        ]\n    },\n    \"application/vnd.groove-injector\": {\n        source: \"iana\",\n        extensions: [\n            \"grv\"\n        ]\n    },\n    \"application/vnd.groove-tool-message\": {\n        source: \"iana\",\n        extensions: [\n            \"gtm\"\n        ]\n    },\n    \"application/vnd.groove-tool-template\": {\n        source: \"iana\",\n        extensions: [\n            \"tpl\"\n        ]\n    },\n    \"application/vnd.groove-vcard\": {\n        source: \"iana\",\n        extensions: [\n            \"vcg\"\n        ]\n    },\n    \"application/vnd.hal+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"hal\"\n        ]\n    },\n    \"application/vnd.handheld-entertainment+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"zmm\"\n        ]\n    },\n    \"application/vnd.hbci\": {\n        source: \"iana\",\n        extensions: [\n            \"hbci\"\n        ]\n    },\n    \"application/vnd.hhe.lesson-player\": {\n        source: \"iana\",\n        extensions: [\n            \"les\"\n        ]\n    },\n    \"application/vnd.hp-hpgl\": {\n        source: \"iana\",\n        extensions: [\n            \"hpgl\"\n        ]\n    },\n    \"application/vnd.hp-hpid\": {\n        source: \"iana\",\n        extensions: [\n            \"hpid\"\n        ]\n    },\n    \"application/vnd.hp-hps\": {\n        source: \"iana\",\n        extensions: [\n            \"hps\"\n        ]\n    },\n    \"application/vnd.hp-jlyt\": {\n        source: \"iana\",\n        extensions: [\n            \"jlt\"\n        ]\n    },\n    \"application/vnd.hp-pcl\": {\n        source: \"iana\",\n        extensions: [\n            \"pcl\"\n        ]\n    },\n    \"application/vnd.hp-pclxl\": {\n        source: \"iana\",\n        extensions: [\n            \"pclxl\"\n        ]\n    },\n    \"application/vnd.hydrostatix.sof-data\": {\n        source: \"iana\",\n        extensions: [\n            \"sfd-hdstx\"\n        ]\n    },\n    \"application/vnd.ibm.minipay\": {\n        source: \"iana\",\n        extensions: [\n            \"mpy\"\n        ]\n    },\n    \"application/vnd.ibm.modcap\": {\n        source: \"iana\",\n        extensions: [\n            \"afp\",\n            \"listafp\",\n            \"list3820\"\n        ]\n    },\n    \"application/vnd.ibm.rights-management\": {\n        source: \"iana\",\n        extensions: [\n            \"irm\"\n        ]\n    },\n    \"application/vnd.ibm.secure-container\": {\n        source: \"iana\",\n        extensions: [\n            \"sc\"\n        ]\n    },\n    \"application/vnd.iccprofile\": {\n        source: \"iana\",\n        extensions: [\n            \"icc\",\n            \"icm\"\n        ]\n    },\n    \"application/vnd.igloader\": {\n        source: \"iana\",\n        extensions: [\n            \"igl\"\n        ]\n    },\n    \"application/vnd.immervision-ivp\": {\n        source: \"iana\",\n        extensions: [\n            \"ivp\"\n        ]\n    },\n    \"application/vnd.immervision-ivu\": {\n        source: \"iana\",\n        extensions: [\n            \"ivu\"\n        ]\n    },\n    \"application/vnd.insors.igm\": {\n        source: \"iana\",\n        extensions: [\n            \"igm\"\n        ]\n    },\n    \"application/vnd.intercon.formnet\": {\n        source: \"iana\",\n        extensions: [\n            \"xpw\",\n            \"xpx\"\n        ]\n    },\n    \"application/vnd.intergeo\": {\n        source: \"iana\",\n        extensions: [\n            \"i2g\"\n        ]\n    },\n    \"application/vnd.intu.qbo\": {\n        source: \"iana\",\n        extensions: [\n            \"qbo\"\n        ]\n    },\n    \"application/vnd.intu.qfx\": {\n        source: \"iana\",\n        extensions: [\n            \"qfx\"\n        ]\n    },\n    \"application/vnd.ipunplugged.rcprofile\": {\n        source: \"iana\",\n        extensions: [\n            \"rcprofile\"\n        ]\n    },\n    \"application/vnd.irepository.package+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"irp\"\n        ]\n    },\n    \"application/vnd.is-xpr\": {\n        source: \"iana\",\n        extensions: [\n            \"xpr\"\n        ]\n    },\n    \"application/vnd.isac.fcs\": {\n        source: \"iana\",\n        extensions: [\n            \"fcs\"\n        ]\n    },\n    \"application/vnd.jam\": {\n        source: \"iana\",\n        extensions: [\n            \"jam\"\n        ]\n    },\n    \"application/vnd.jcp.javame.midlet-rms\": {\n        source: \"iana\",\n        extensions: [\n            \"rms\"\n        ]\n    },\n    \"application/vnd.jisp\": {\n        source: \"iana\",\n        extensions: [\n            \"jisp\"\n        ]\n    },\n    \"application/vnd.joost.joda-archive\": {\n        source: \"iana\",\n        extensions: [\n            \"joda\"\n        ]\n    },\n    \"application/vnd.kahootz\": {\n        source: \"iana\",\n        extensions: [\n            \"ktz\",\n            \"ktr\"\n        ]\n    },\n    \"application/vnd.kde.karbon\": {\n        source: \"iana\",\n        extensions: [\n            \"karbon\"\n        ]\n    },\n    \"application/vnd.kde.kchart\": {\n        source: \"iana\",\n        extensions: [\n            \"chrt\"\n        ]\n    },\n    \"application/vnd.kde.kformula\": {\n        source: \"iana\",\n        extensions: [\n            \"kfo\"\n        ]\n    },\n    \"application/vnd.kde.kivio\": {\n        source: \"iana\",\n        extensions: [\n            \"flw\"\n        ]\n    },\n    \"application/vnd.kde.kontour\": {\n        source: \"iana\",\n        extensions: [\n            \"kon\"\n        ]\n    },\n    \"application/vnd.kde.kpresenter\": {\n        source: \"iana\",\n        extensions: [\n            \"kpr\",\n            \"kpt\"\n        ]\n    },\n    \"application/vnd.kde.kspread\": {\n        source: \"iana\",\n        extensions: [\n            \"ksp\"\n        ]\n    },\n    \"application/vnd.kde.kword\": {\n        source: \"iana\",\n        extensions: [\n            \"kwd\",\n            \"kwt\"\n        ]\n    },\n    \"application/vnd.kenameaapp\": {\n        source: \"iana\",\n        extensions: [\n            \"htke\"\n        ]\n    },\n    \"application/vnd.kidspiration\": {\n        source: \"iana\",\n        extensions: [\n            \"kia\"\n        ]\n    },\n    \"application/vnd.kinar\": {\n        source: \"iana\",\n        extensions: [\n            \"kne\",\n            \"knp\"\n        ]\n    },\n    \"application/vnd.koan\": {\n        source: \"iana\",\n        extensions: [\n            \"skp\",\n            \"skd\",\n            \"skt\",\n            \"skm\"\n        ]\n    },\n    \"application/vnd.kodak-descriptor\": {\n        source: \"iana\",\n        extensions: [\n            \"sse\"\n        ]\n    },\n    \"application/vnd.las.las+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"lasxml\"\n        ]\n    },\n    \"application/vnd.llamagraphics.life-balance.desktop\": {\n        source: \"iana\",\n        extensions: [\n            \"lbd\"\n        ]\n    },\n    \"application/vnd.llamagraphics.life-balance.exchange+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"lbe\"\n        ]\n    },\n    \"application/vnd.lotus-1-2-3\": {\n        source: \"iana\",\n        extensions: [\n            \"123\"\n        ]\n    },\n    \"application/vnd.lotus-approach\": {\n        source: \"iana\",\n        extensions: [\n            \"apr\"\n        ]\n    },\n    \"application/vnd.lotus-freelance\": {\n        source: \"iana\",\n        extensions: [\n            \"pre\"\n        ]\n    },\n    \"application/vnd.lotus-notes\": {\n        source: \"iana\",\n        extensions: [\n            \"nsf\"\n        ]\n    },\n    \"application/vnd.lotus-organizer\": {\n        source: \"iana\",\n        extensions: [\n            \"org\"\n        ]\n    },\n    \"application/vnd.lotus-screencam\": {\n        source: \"iana\",\n        extensions: [\n            \"scm\"\n        ]\n    },\n    \"application/vnd.lotus-wordpro\": {\n        source: \"iana\",\n        extensions: [\n            \"lwp\"\n        ]\n    },\n    \"application/vnd.macports.portpkg\": {\n        source: \"iana\",\n        extensions: [\n            \"portpkg\"\n        ]\n    },\n    \"application/vnd.mapbox-vector-tile\": {\n        source: \"iana\",\n        extensions: [\n            \"mvt\"\n        ]\n    },\n    \"application/vnd.mcd\": {\n        source: \"iana\",\n        extensions: [\n            \"mcd\"\n        ]\n    },\n    \"application/vnd.medcalcdata\": {\n        source: \"iana\",\n        extensions: [\n            \"mc1\"\n        ]\n    },\n    \"application/vnd.mediastation.cdkey\": {\n        source: \"iana\",\n        extensions: [\n            \"cdkey\"\n        ]\n    },\n    \"application/vnd.mfer\": {\n        source: \"iana\",\n        extensions: [\n            \"mwf\"\n        ]\n    },\n    \"application/vnd.mfmp\": {\n        source: \"iana\",\n        extensions: [\n            \"mfm\"\n        ]\n    },\n    \"application/vnd.micrografx.flo\": {\n        source: \"iana\",\n        extensions: [\n            \"flo\"\n        ]\n    },\n    \"application/vnd.micrografx.igx\": {\n        source: \"iana\",\n        extensions: [\n            \"igx\"\n        ]\n    },\n    \"application/vnd.mif\": {\n        source: \"iana\",\n        extensions: [\n            \"mif\"\n        ]\n    },\n    \"application/vnd.mobius.daf\": {\n        source: \"iana\",\n        extensions: [\n            \"daf\"\n        ]\n    },\n    \"application/vnd.mobius.dis\": {\n        source: \"iana\",\n        extensions: [\n            \"dis\"\n        ]\n    },\n    \"application/vnd.mobius.mbk\": {\n        source: \"iana\",\n        extensions: [\n            \"mbk\"\n        ]\n    },\n    \"application/vnd.mobius.mqy\": {\n        source: \"iana\",\n        extensions: [\n            \"mqy\"\n        ]\n    },\n    \"application/vnd.mobius.msl\": {\n        source: \"iana\",\n        extensions: [\n            \"msl\"\n        ]\n    },\n    \"application/vnd.mobius.plc\": {\n        source: \"iana\",\n        extensions: [\n            \"plc\"\n        ]\n    },\n    \"application/vnd.mobius.txf\": {\n        source: \"iana\",\n        extensions: [\n            \"txf\"\n        ]\n    },\n    \"application/vnd.mophun.application\": {\n        source: \"iana\",\n        extensions: [\n            \"mpn\"\n        ]\n    },\n    \"application/vnd.mophun.certificate\": {\n        source: \"iana\",\n        extensions: [\n            \"mpc\"\n        ]\n    },\n    \"application/vnd.mozilla.xul+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"xul\"\n        ]\n    },\n    \"application/vnd.ms-artgalry\": {\n        source: \"iana\",\n        extensions: [\n            \"cil\"\n        ]\n    },\n    \"application/vnd.ms-cab-compressed\": {\n        source: \"iana\",\n        extensions: [\n            \"cab\"\n        ]\n    },\n    \"application/vnd.ms-excel\": {\n        source: \"iana\",\n        extensions: [\n            \"xls\",\n            \"xlm\",\n            \"xla\",\n            \"xlc\",\n            \"xlt\",\n            \"xlw\"\n        ]\n    },\n    \"application/vnd.ms-excel.addin.macroenabled.12\": {\n        source: \"iana\",\n        extensions: [\n            \"xlam\"\n        ]\n    },\n    \"application/vnd.ms-excel.sheet.binary.macroenabled.12\": {\n        source: \"iana\",\n        extensions: [\n            \"xlsb\"\n        ]\n    },\n    \"application/vnd.ms-excel.sheet.macroenabled.12\": {\n        source: \"iana\",\n        extensions: [\n            \"xlsm\"\n        ]\n    },\n    \"application/vnd.ms-excel.template.macroenabled.12\": {\n        source: \"iana\",\n        extensions: [\n            \"xltm\"\n        ]\n    },\n    \"application/vnd.ms-fontobject\": {\n        source: \"iana\",\n        extensions: [\n            \"eot\"\n        ]\n    },\n    \"application/vnd.ms-htmlhelp\": {\n        source: \"iana\",\n        extensions: [\n            \"chm\"\n        ]\n    },\n    \"application/vnd.ms-ims\": {\n        source: \"iana\",\n        extensions: [\n            \"ims\"\n        ]\n    },\n    \"application/vnd.ms-lrm\": {\n        source: \"iana\",\n        extensions: [\n            \"lrm\"\n        ]\n    },\n    \"application/vnd.ms-officetheme\": {\n        source: \"iana\",\n        extensions: [\n            \"thmx\"\n        ]\n    },\n    \"application/vnd.ms-pki.seccat\": {\n        source: \"apache\",\n        extensions: [\n            \"cat\"\n        ]\n    },\n    \"application/vnd.ms-pki.stl\": {\n        source: \"apache\",\n        extensions: [\n            \"stl\"\n        ]\n    },\n    \"application/vnd.ms-powerpoint\": {\n        source: \"iana\",\n        extensions: [\n            \"ppt\",\n            \"pps\",\n            \"pot\"\n        ]\n    },\n    \"application/vnd.ms-powerpoint.addin.macroenabled.12\": {\n        source: \"iana\",\n        extensions: [\n            \"ppam\"\n        ]\n    },\n    \"application/vnd.ms-powerpoint.presentation.macroenabled.12\": {\n        source: \"iana\",\n        extensions: [\n            \"pptm\"\n        ]\n    },\n    \"application/vnd.ms-powerpoint.slide.macroenabled.12\": {\n        source: \"iana\",\n        extensions: [\n            \"sldm\"\n        ]\n    },\n    \"application/vnd.ms-powerpoint.slideshow.macroenabled.12\": {\n        source: \"iana\",\n        extensions: [\n            \"ppsm\"\n        ]\n    },\n    \"application/vnd.ms-powerpoint.template.macroenabled.12\": {\n        source: \"iana\",\n        extensions: [\n            \"potm\"\n        ]\n    },\n    \"application/vnd.ms-project\": {\n        source: \"iana\",\n        extensions: [\n            \"mpp\",\n            \"mpt\"\n        ]\n    },\n    \"application/vnd.ms-word.document.macroenabled.12\": {\n        source: \"iana\",\n        extensions: [\n            \"docm\"\n        ]\n    },\n    \"application/vnd.ms-word.template.macroenabled.12\": {\n        source: \"iana\",\n        extensions: [\n            \"dotm\"\n        ]\n    },\n    \"application/vnd.ms-works\": {\n        source: \"iana\",\n        extensions: [\n            \"wps\",\n            \"wks\",\n            \"wcm\",\n            \"wdb\"\n        ]\n    },\n    \"application/vnd.ms-wpl\": {\n        source: \"iana\",\n        extensions: [\n            \"wpl\"\n        ]\n    },\n    \"application/vnd.ms-xpsdocument\": {\n        source: \"iana\",\n        extensions: [\n            \"xps\"\n        ]\n    },\n    \"application/vnd.mseq\": {\n        source: \"iana\",\n        extensions: [\n            \"mseq\"\n        ]\n    },\n    \"application/vnd.musician\": {\n        source: \"iana\",\n        extensions: [\n            \"mus\"\n        ]\n    },\n    \"application/vnd.muvee.style\": {\n        source: \"iana\",\n        extensions: [\n            \"msty\"\n        ]\n    },\n    \"application/vnd.mynfc\": {\n        source: \"iana\",\n        extensions: [\n            \"taglet\"\n        ]\n    },\n    \"application/vnd.neurolanguage.nlu\": {\n        source: \"iana\",\n        extensions: [\n            \"nlu\"\n        ]\n    },\n    \"application/vnd.nitf\": {\n        source: \"iana\",\n        extensions: [\n            \"ntf\",\n            \"nitf\"\n        ]\n    },\n    \"application/vnd.noblenet-directory\": {\n        source: \"iana\",\n        extensions: [\n            \"nnd\"\n        ]\n    },\n    \"application/vnd.noblenet-sealer\": {\n        source: \"iana\",\n        extensions: [\n            \"nns\"\n        ]\n    },\n    \"application/vnd.noblenet-web\": {\n        source: \"iana\",\n        extensions: [\n            \"nnw\"\n        ]\n    },\n    \"application/vnd.nokia.n-gage.ac+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"ac\"\n        ]\n    },\n    \"application/vnd.nokia.n-gage.data\": {\n        source: \"iana\",\n        extensions: [\n            \"ngdat\"\n        ]\n    },\n    \"application/vnd.nokia.n-gage.symbian.install\": {\n        source: \"iana\",\n        extensions: [\n            \"n-gage\"\n        ]\n    },\n    \"application/vnd.nokia.radio-preset\": {\n        source: \"iana\",\n        extensions: [\n            \"rpst\"\n        ]\n    },\n    \"application/vnd.nokia.radio-presets\": {\n        source: \"iana\",\n        extensions: [\n            \"rpss\"\n        ]\n    },\n    \"application/vnd.novadigm.edm\": {\n        source: \"iana\",\n        extensions: [\n            \"edm\"\n        ]\n    },\n    \"application/vnd.novadigm.edx\": {\n        source: \"iana\",\n        extensions: [\n            \"edx\"\n        ]\n    },\n    \"application/vnd.novadigm.ext\": {\n        source: \"iana\",\n        extensions: [\n            \"ext\"\n        ]\n    },\n    \"application/vnd.oasis.opendocument.chart\": {\n        source: \"iana\",\n        extensions: [\n            \"odc\"\n        ]\n    },\n    \"application/vnd.oasis.opendocument.chart-template\": {\n        source: \"iana\",\n        extensions: [\n            \"otc\"\n        ]\n    },\n    \"application/vnd.oasis.opendocument.database\": {\n        source: \"iana\",\n        extensions: [\n            \"odb\"\n        ]\n    },\n    \"application/vnd.oasis.opendocument.formula\": {\n        source: \"iana\",\n        extensions: [\n            \"odf\"\n        ]\n    },\n    \"application/vnd.oasis.opendocument.formula-template\": {\n        source: \"iana\",\n        extensions: [\n            \"odft\"\n        ]\n    },\n    \"application/vnd.oasis.opendocument.graphics\": {\n        source: \"iana\",\n        extensions: [\n            \"odg\"\n        ]\n    },\n    \"application/vnd.oasis.opendocument.graphics-template\": {\n        source: \"iana\",\n        extensions: [\n            \"otg\"\n        ]\n    },\n    \"application/vnd.oasis.opendocument.image\": {\n        source: \"iana\",\n        extensions: [\n            \"odi\"\n        ]\n    },\n    \"application/vnd.oasis.opendocument.image-template\": {\n        source: \"iana\",\n        extensions: [\n            \"oti\"\n        ]\n    },\n    \"application/vnd.oasis.opendocument.presentation\": {\n        source: \"iana\",\n        extensions: [\n            \"odp\"\n        ]\n    },\n    \"application/vnd.oasis.opendocument.presentation-template\": {\n        source: \"iana\",\n        extensions: [\n            \"otp\"\n        ]\n    },\n    \"application/vnd.oasis.opendocument.spreadsheet\": {\n        source: \"iana\",\n        extensions: [\n            \"ods\"\n        ]\n    },\n    \"application/vnd.oasis.opendocument.spreadsheet-template\": {\n        source: \"iana\",\n        extensions: [\n            \"ots\"\n        ]\n    },\n    \"application/vnd.oasis.opendocument.text\": {\n        source: \"iana\",\n        extensions: [\n            \"odt\"\n        ]\n    },\n    \"application/vnd.oasis.opendocument.text-master\": {\n        source: \"iana\",\n        extensions: [\n            \"odm\"\n        ]\n    },\n    \"application/vnd.oasis.opendocument.text-template\": {\n        source: \"iana\",\n        extensions: [\n            \"ott\"\n        ]\n    },\n    \"application/vnd.oasis.opendocument.text-web\": {\n        source: \"iana\",\n        extensions: [\n            \"oth\"\n        ]\n    },\n    \"application/vnd.olpc-sugar\": {\n        source: \"iana\",\n        extensions: [\n            \"xo\"\n        ]\n    },\n    \"application/vnd.oma.dd2+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"dd2\"\n        ]\n    },\n    \"application/vnd.openblox.game+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"obgx\"\n        ]\n    },\n    \"application/vnd.openofficeorg.extension\": {\n        source: \"apache\",\n        extensions: [\n            \"oxt\"\n        ]\n    },\n    \"application/vnd.openstreetmap.data+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"osm\"\n        ]\n    },\n    \"application/vnd.openxmlformats-officedocument.presentationml.presentation\": {\n        source: \"iana\",\n        extensions: [\n            \"pptx\"\n        ]\n    },\n    \"application/vnd.openxmlformats-officedocument.presentationml.slide\": {\n        source: \"iana\",\n        extensions: [\n            \"sldx\"\n        ]\n    },\n    \"application/vnd.openxmlformats-officedocument.presentationml.slideshow\": {\n        source: \"iana\",\n        extensions: [\n            \"ppsx\"\n        ]\n    },\n    \"application/vnd.openxmlformats-officedocument.presentationml.template\": {\n        source: \"iana\",\n        extensions: [\n            \"potx\"\n        ]\n    },\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\": {\n        source: \"iana\",\n        extensions: [\n            \"xlsx\"\n        ]\n    },\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.template\": {\n        source: \"iana\",\n        extensions: [\n            \"xltx\"\n        ]\n    },\n    \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\": {\n        source: \"iana\",\n        extensions: [\n            \"docx\"\n        ]\n    },\n    \"application/vnd.openxmlformats-officedocument.wordprocessingml.template\": {\n        source: \"iana\",\n        extensions: [\n            \"dotx\"\n        ]\n    },\n    \"application/vnd.osgeo.mapguide.package\": {\n        source: \"iana\",\n        extensions: [\n            \"mgp\"\n        ]\n    },\n    \"application/vnd.osgi.dp\": {\n        source: \"iana\",\n        extensions: [\n            \"dp\"\n        ]\n    },\n    \"application/vnd.osgi.subsystem\": {\n        source: \"iana\",\n        extensions: [\n            \"esa\"\n        ]\n    },\n    \"application/vnd.palm\": {\n        source: \"iana\",\n        extensions: [\n            \"pdb\",\n            \"pqa\",\n            \"oprc\"\n        ]\n    },\n    \"application/vnd.pawaafile\": {\n        source: \"iana\",\n        extensions: [\n            \"paw\"\n        ]\n    },\n    \"application/vnd.pg.format\": {\n        source: \"iana\",\n        extensions: [\n            \"str\"\n        ]\n    },\n    \"application/vnd.pg.osasli\": {\n        source: \"iana\",\n        extensions: [\n            \"ei6\"\n        ]\n    },\n    \"application/vnd.picsel\": {\n        source: \"iana\",\n        extensions: [\n            \"efif\"\n        ]\n    },\n    \"application/vnd.pmi.widget\": {\n        source: \"iana\",\n        extensions: [\n            \"wg\"\n        ]\n    },\n    \"application/vnd.pocketlearn\": {\n        source: \"iana\",\n        extensions: [\n            \"plf\"\n        ]\n    },\n    \"application/vnd.powerbuilder6\": {\n        source: \"iana\",\n        extensions: [\n            \"pbd\"\n        ]\n    },\n    \"application/vnd.previewsystems.box\": {\n        source: \"iana\",\n        extensions: [\n            \"box\"\n        ]\n    },\n    \"application/vnd.proteus.magazine\": {\n        source: \"iana\",\n        extensions: [\n            \"mgz\"\n        ]\n    },\n    \"application/vnd.publishare-delta-tree\": {\n        source: \"iana\",\n        extensions: [\n            \"qps\"\n        ]\n    },\n    \"application/vnd.pvi.ptid1\": {\n        source: \"iana\",\n        extensions: [\n            \"ptid\"\n        ]\n    },\n    \"application/vnd.quark.quarkxpress\": {\n        source: \"iana\",\n        extensions: [\n            \"qxd\",\n            \"qxt\",\n            \"qwd\",\n            \"qwt\",\n            \"qxl\",\n            \"qxb\"\n        ]\n    },\n    \"application/vnd.rar\": {\n        source: \"iana\",\n        extensions: [\n            \"rar\"\n        ]\n    },\n    \"application/vnd.realvnc.bed\": {\n        source: \"iana\",\n        extensions: [\n            \"bed\"\n        ]\n    },\n    \"application/vnd.recordare.musicxml\": {\n        source: \"iana\",\n        extensions: [\n            \"mxl\"\n        ]\n    },\n    \"application/vnd.recordare.musicxml+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"musicxml\"\n        ]\n    },\n    \"application/vnd.rig.cryptonote\": {\n        source: \"iana\",\n        extensions: [\n            \"cryptonote\"\n        ]\n    },\n    \"application/vnd.rim.cod\": {\n        source: \"apache\",\n        extensions: [\n            \"cod\"\n        ]\n    },\n    \"application/vnd.rn-realmedia\": {\n        source: \"apache\",\n        extensions: [\n            \"rm\"\n        ]\n    },\n    \"application/vnd.rn-realmedia-vbr\": {\n        source: \"apache\",\n        extensions: [\n            \"rmvb\"\n        ]\n    },\n    \"application/vnd.route66.link66+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"link66\"\n        ]\n    },\n    \"application/vnd.sailingtracker.track\": {\n        source: \"iana\",\n        extensions: [\n            \"st\"\n        ]\n    },\n    \"application/vnd.seemail\": {\n        source: \"iana\",\n        extensions: [\n            \"see\"\n        ]\n    },\n    \"application/vnd.sema\": {\n        source: \"iana\",\n        extensions: [\n            \"sema\"\n        ]\n    },\n    \"application/vnd.semd\": {\n        source: \"iana\",\n        extensions: [\n            \"semd\"\n        ]\n    },\n    \"application/vnd.semf\": {\n        source: \"iana\",\n        extensions: [\n            \"semf\"\n        ]\n    },\n    \"application/vnd.shana.informed.formdata\": {\n        source: \"iana\",\n        extensions: [\n            \"ifm\"\n        ]\n    },\n    \"application/vnd.shana.informed.formtemplate\": {\n        source: \"iana\",\n        extensions: [\n            \"itp\"\n        ]\n    },\n    \"application/vnd.shana.informed.interchange\": {\n        source: \"iana\",\n        extensions: [\n            \"iif\"\n        ]\n    },\n    \"application/vnd.shana.informed.package\": {\n        source: \"iana\",\n        extensions: [\n            \"ipk\"\n        ]\n    },\n    \"application/vnd.simtech-mindmapper\": {\n        source: \"iana\",\n        extensions: [\n            \"twd\",\n            \"twds\"\n        ]\n    },\n    \"application/vnd.smaf\": {\n        source: \"iana\",\n        extensions: [\n            \"mmf\"\n        ]\n    },\n    \"application/vnd.smart.teacher\": {\n        source: \"iana\",\n        extensions: [\n            \"teacher\"\n        ]\n    },\n    \"application/vnd.software602.filler.form+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"fo\"\n        ]\n    },\n    \"application/vnd.solent.sdkm+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"sdkm\",\n            \"sdkd\"\n        ]\n    },\n    \"application/vnd.spotfire.dxp\": {\n        source: \"iana\",\n        extensions: [\n            \"dxp\"\n        ]\n    },\n    \"application/vnd.spotfire.sfs\": {\n        source: \"iana\",\n        extensions: [\n            \"sfs\"\n        ]\n    },\n    \"application/vnd.stardivision.calc\": {\n        source: \"apache\",\n        extensions: [\n            \"sdc\"\n        ]\n    },\n    \"application/vnd.stardivision.draw\": {\n        source: \"apache\",\n        extensions: [\n            \"sda\"\n        ]\n    },\n    \"application/vnd.stardivision.impress\": {\n        source: \"apache\",\n        extensions: [\n            \"sdd\"\n        ]\n    },\n    \"application/vnd.stardivision.math\": {\n        source: \"apache\",\n        extensions: [\n            \"smf\"\n        ]\n    },\n    \"application/vnd.stardivision.writer\": {\n        source: \"apache\",\n        extensions: [\n            \"sdw\",\n            \"vor\"\n        ]\n    },\n    \"application/vnd.stardivision.writer-global\": {\n        source: \"apache\",\n        extensions: [\n            \"sgl\"\n        ]\n    },\n    \"application/vnd.stepmania.package\": {\n        source: \"iana\",\n        extensions: [\n            \"smzip\"\n        ]\n    },\n    \"application/vnd.stepmania.stepchart\": {\n        source: \"iana\",\n        extensions: [\n            \"sm\"\n        ]\n    },\n    \"application/vnd.sun.wadl+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"wadl\"\n        ]\n    },\n    \"application/vnd.sun.xml.calc\": {\n        source: \"apache\",\n        extensions: [\n            \"sxc\"\n        ]\n    },\n    \"application/vnd.sun.xml.calc.template\": {\n        source: \"apache\",\n        extensions: [\n            \"stc\"\n        ]\n    },\n    \"application/vnd.sun.xml.draw\": {\n        source: \"apache\",\n        extensions: [\n            \"sxd\"\n        ]\n    },\n    \"application/vnd.sun.xml.draw.template\": {\n        source: \"apache\",\n        extensions: [\n            \"std\"\n        ]\n    },\n    \"application/vnd.sun.xml.impress\": {\n        source: \"apache\",\n        extensions: [\n            \"sxi\"\n        ]\n    },\n    \"application/vnd.sun.xml.impress.template\": {\n        source: \"apache\",\n        extensions: [\n            \"sti\"\n        ]\n    },\n    \"application/vnd.sun.xml.math\": {\n        source: \"apache\",\n        extensions: [\n            \"sxm\"\n        ]\n    },\n    \"application/vnd.sun.xml.writer\": {\n        source: \"apache\",\n        extensions: [\n            \"sxw\"\n        ]\n    },\n    \"application/vnd.sun.xml.writer.global\": {\n        source: \"apache\",\n        extensions: [\n            \"sxg\"\n        ]\n    },\n    \"application/vnd.sun.xml.writer.template\": {\n        source: \"apache\",\n        extensions: [\n            \"stw\"\n        ]\n    },\n    \"application/vnd.sus-calendar\": {\n        source: \"iana\",\n        extensions: [\n            \"sus\",\n            \"susp\"\n        ]\n    },\n    \"application/vnd.svd\": {\n        source: \"iana\",\n        extensions: [\n            \"svd\"\n        ]\n    },\n    \"application/vnd.symbian.install\": {\n        source: \"apache\",\n        extensions: [\n            \"sis\",\n            \"sisx\"\n        ]\n    },\n    \"application/vnd.syncml+xml\": {\n        source: \"iana\",\n        charset: \"UTF-8\",\n        extensions: [\n            \"xsm\"\n        ]\n    },\n    \"application/vnd.syncml.dm+wbxml\": {\n        source: \"iana\",\n        charset: \"UTF-8\",\n        extensions: [\n            \"bdm\"\n        ]\n    },\n    \"application/vnd.syncml.dm+xml\": {\n        source: \"iana\",\n        charset: \"UTF-8\",\n        extensions: [\n            \"xdm\"\n        ]\n    },\n    \"application/vnd.syncml.dmddf+xml\": {\n        source: \"iana\",\n        charset: \"UTF-8\",\n        extensions: [\n            \"ddf\"\n        ]\n    },\n    \"application/vnd.tao.intent-module-archive\": {\n        source: \"iana\",\n        extensions: [\n            \"tao\"\n        ]\n    },\n    \"application/vnd.tcpdump.pcap\": {\n        source: \"iana\",\n        extensions: [\n            \"pcap\",\n            \"cap\",\n            \"dmp\"\n        ]\n    },\n    \"application/vnd.tmobile-livetv\": {\n        source: \"iana\",\n        extensions: [\n            \"tmo\"\n        ]\n    },\n    \"application/vnd.trid.tpt\": {\n        source: \"iana\",\n        extensions: [\n            \"tpt\"\n        ]\n    },\n    \"application/vnd.triscape.mxs\": {\n        source: \"iana\",\n        extensions: [\n            \"mxs\"\n        ]\n    },\n    \"application/vnd.trueapp\": {\n        source: \"iana\",\n        extensions: [\n            \"tra\"\n        ]\n    },\n    \"application/vnd.ufdl\": {\n        source: \"iana\",\n        extensions: [\n            \"ufd\",\n            \"ufdl\"\n        ]\n    },\n    \"application/vnd.uiq.theme\": {\n        source: \"iana\",\n        extensions: [\n            \"utz\"\n        ]\n    },\n    \"application/vnd.umajin\": {\n        source: \"iana\",\n        extensions: [\n            \"umj\"\n        ]\n    },\n    \"application/vnd.unity\": {\n        source: \"iana\",\n        extensions: [\n            \"unityweb\"\n        ]\n    },\n    \"application/vnd.uoml+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"uoml\"\n        ]\n    },\n    \"application/vnd.vcx\": {\n        source: \"iana\",\n        extensions: [\n            \"vcx\"\n        ]\n    },\n    \"application/vnd.visio\": {\n        source: \"iana\",\n        extensions: [\n            \"vsd\",\n            \"vst\",\n            \"vss\",\n            \"vsw\"\n        ]\n    },\n    \"application/vnd.visionary\": {\n        source: \"iana\",\n        extensions: [\n            \"vis\"\n        ]\n    },\n    \"application/vnd.vsf\": {\n        source: \"iana\",\n        extensions: [\n            \"vsf\"\n        ]\n    },\n    \"application/vnd.wap.wbxml\": {\n        source: \"iana\",\n        charset: \"UTF-8\",\n        extensions: [\n            \"wbxml\"\n        ]\n    },\n    \"application/vnd.wap.wmlc\": {\n        source: \"iana\",\n        extensions: [\n            \"wmlc\"\n        ]\n    },\n    \"application/vnd.wap.wmlscriptc\": {\n        source: \"iana\",\n        extensions: [\n            \"wmlsc\"\n        ]\n    },\n    \"application/vnd.webturbo\": {\n        source: \"iana\",\n        extensions: [\n            \"wtb\"\n        ]\n    },\n    \"application/vnd.wolfram.player\": {\n        source: \"iana\",\n        extensions: [\n            \"nbp\"\n        ]\n    },\n    \"application/vnd.wordperfect\": {\n        source: \"iana\",\n        extensions: [\n            \"wpd\"\n        ]\n    },\n    \"application/vnd.wqd\": {\n        source: \"iana\",\n        extensions: [\n            \"wqd\"\n        ]\n    },\n    \"application/vnd.wt.stf\": {\n        source: \"iana\",\n        extensions: [\n            \"stf\"\n        ]\n    },\n    \"application/vnd.xara\": {\n        source: \"iana\",\n        extensions: [\n            \"xar\"\n        ]\n    },\n    \"application/vnd.xfdl\": {\n        source: \"iana\",\n        extensions: [\n            \"xfdl\"\n        ]\n    },\n    \"application/vnd.yamaha.hv-dic\": {\n        source: \"iana\",\n        extensions: [\n            \"hvd\"\n        ]\n    },\n    \"application/vnd.yamaha.hv-script\": {\n        source: \"iana\",\n        extensions: [\n            \"hvs\"\n        ]\n    },\n    \"application/vnd.yamaha.hv-voice\": {\n        source: \"iana\",\n        extensions: [\n            \"hvp\"\n        ]\n    },\n    \"application/vnd.yamaha.openscoreformat\": {\n        source: \"iana\",\n        extensions: [\n            \"osf\"\n        ]\n    },\n    \"application/vnd.yamaha.openscoreformat.osfpvg+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"osfpvg\"\n        ]\n    },\n    \"application/vnd.yamaha.smaf-audio\": {\n        source: \"iana\",\n        extensions: [\n            \"saf\"\n        ]\n    },\n    \"application/vnd.yamaha.smaf-phrase\": {\n        source: \"iana\",\n        extensions: [\n            \"spf\"\n        ]\n    },\n    \"application/vnd.yellowriver-custom-menu\": {\n        source: \"iana\",\n        extensions: [\n            \"cmp\"\n        ]\n    },\n    \"application/vnd.zul\": {\n        source: \"iana\",\n        extensions: [\n            \"zir\",\n            \"zirz\"\n        ]\n    },\n    \"application/vnd.zzazz.deck+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"zaz\"\n        ]\n    },\n    \"application/voicexml+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"vxml\"\n        ]\n    },\n    \"application/wasm\": {\n        source: \"iana\",\n        extensions: [\n            \"wasm\"\n        ]\n    },\n    \"application/watcherinfo+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"wif\"\n        ]\n    },\n    \"application/widget\": {\n        source: \"iana\",\n        extensions: [\n            \"wgt\"\n        ]\n    },\n    \"application/winhlp\": {\n        source: \"apache\",\n        extensions: [\n            \"hlp\"\n        ]\n    },\n    \"application/wsdl+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"wsdl\"\n        ]\n    },\n    \"application/wspolicy+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"wspolicy\"\n        ]\n    },\n    \"application/x-7z-compressed\": {\n        source: \"apache\",\n        extensions: [\n            \"7z\"\n        ]\n    },\n    \"application/x-abiword\": {\n        source: \"apache\",\n        extensions: [\n            \"abw\"\n        ]\n    },\n    \"application/x-ace-compressed\": {\n        source: \"apache\",\n        extensions: [\n            \"ace\"\n        ]\n    },\n    \"application/x-apple-diskimage\": {\n        source: \"apache\",\n        extensions: [\n            \"dmg\"\n        ]\n    },\n    \"application/x-authorware-bin\": {\n        source: \"apache\",\n        extensions: [\n            \"aab\",\n            \"x32\",\n            \"u32\",\n            \"vox\"\n        ]\n    },\n    \"application/x-authorware-map\": {\n        source: \"apache\",\n        extensions: [\n            \"aam\"\n        ]\n    },\n    \"application/x-authorware-seg\": {\n        source: \"apache\",\n        extensions: [\n            \"aas\"\n        ]\n    },\n    \"application/x-bcpio\": {\n        source: \"apache\",\n        extensions: [\n            \"bcpio\"\n        ]\n    },\n    \"application/x-bittorrent\": {\n        source: \"apache\",\n        extensions: [\n            \"torrent\"\n        ]\n    },\n    \"application/x-blorb\": {\n        source: \"apache\",\n        extensions: [\n            \"blb\",\n            \"blorb\"\n        ]\n    },\n    \"application/x-bzip\": {\n        source: \"apache\",\n        extensions: [\n            \"bz\"\n        ]\n    },\n    \"application/x-bzip2\": {\n        source: \"apache\",\n        extensions: [\n            \"bz2\",\n            \"boz\"\n        ]\n    },\n    \"application/x-cbr\": {\n        source: \"apache\",\n        extensions: [\n            \"cbr\",\n            \"cba\",\n            \"cbt\",\n            \"cbz\",\n            \"cb7\"\n        ]\n    },\n    \"application/x-cdlink\": {\n        source: \"apache\",\n        extensions: [\n            \"vcd\"\n        ]\n    },\n    \"application/x-cfs-compressed\": {\n        source: \"apache\",\n        extensions: [\n            \"cfs\"\n        ]\n    },\n    \"application/x-chat\": {\n        source: \"apache\",\n        extensions: [\n            \"chat\"\n        ]\n    },\n    \"application/x-chess-pgn\": {\n        source: \"apache\",\n        extensions: [\n            \"pgn\"\n        ]\n    },\n    \"application/x-cocoa\": {\n        source: \"nginx\",\n        extensions: [\n            \"cco\"\n        ]\n    },\n    \"application/x-conference\": {\n        source: \"apache\",\n        extensions: [\n            \"nsc\"\n        ]\n    },\n    \"application/x-cpio\": {\n        source: \"apache\",\n        extensions: [\n            \"cpio\"\n        ]\n    },\n    \"application/x-csh\": {\n        source: \"apache\",\n        extensions: [\n            \"csh\"\n        ]\n    },\n    \"application/x-debian-package\": {\n        source: \"apache\",\n        extensions: [\n            \"deb\",\n            \"udeb\"\n        ]\n    },\n    \"application/x-dgc-compressed\": {\n        source: \"apache\",\n        extensions: [\n            \"dgc\"\n        ]\n    },\n    \"application/x-director\": {\n        source: \"apache\",\n        extensions: [\n            \"dir\",\n            \"dcr\",\n            \"dxr\",\n            \"cst\",\n            \"cct\",\n            \"cxt\",\n            \"w3d\",\n            \"fgd\",\n            \"swa\"\n        ]\n    },\n    \"application/x-doom\": {\n        source: \"apache\",\n        extensions: [\n            \"wad\"\n        ]\n    },\n    \"application/x-dtbncx+xml\": {\n        source: \"apache\",\n        extensions: [\n            \"ncx\"\n        ]\n    },\n    \"application/x-dtbook+xml\": {\n        source: \"apache\",\n        extensions: [\n            \"dtb\"\n        ]\n    },\n    \"application/x-dtbresource+xml\": {\n        source: \"apache\",\n        extensions: [\n            \"res\"\n        ]\n    },\n    \"application/x-dvi\": {\n        source: \"apache\",\n        extensions: [\n            \"dvi\"\n        ]\n    },\n    \"application/x-envoy\": {\n        source: \"apache\",\n        extensions: [\n            \"evy\"\n        ]\n    },\n    \"application/x-eva\": {\n        source: \"apache\",\n        extensions: [\n            \"eva\"\n        ]\n    },\n    \"application/x-font-bdf\": {\n        source: \"apache\",\n        extensions: [\n            \"bdf\"\n        ]\n    },\n    \"application/x-font-ghostscript\": {\n        source: \"apache\",\n        extensions: [\n            \"gsf\"\n        ]\n    },\n    \"application/x-font-linux-psf\": {\n        source: \"apache\",\n        extensions: [\n            \"psf\"\n        ]\n    },\n    \"application/x-font-pcf\": {\n        source: \"apache\",\n        extensions: [\n            \"pcf\"\n        ]\n    },\n    \"application/x-font-snf\": {\n        source: \"apache\",\n        extensions: [\n            \"snf\"\n        ]\n    },\n    \"application/x-font-type1\": {\n        source: \"apache\",\n        extensions: [\n            \"pfa\",\n            \"pfb\",\n            \"pfm\",\n            \"afm\"\n        ]\n    },\n    \"application/x-freearc\": {\n        source: \"apache\",\n        extensions: [\n            \"arc\"\n        ]\n    },\n    \"application/x-futuresplash\": {\n        source: \"apache\",\n        extensions: [\n            \"spl\"\n        ]\n    },\n    \"application/x-gca-compressed\": {\n        source: \"apache\",\n        extensions: [\n            \"gca\"\n        ]\n    },\n    \"application/x-glulx\": {\n        source: \"apache\",\n        extensions: [\n            \"ulx\"\n        ]\n    },\n    \"application/x-gnumeric\": {\n        source: \"apache\",\n        extensions: [\n            \"gnumeric\"\n        ]\n    },\n    \"application/x-gramps-xml\": {\n        source: \"apache\",\n        extensions: [\n            \"gramps\"\n        ]\n    },\n    \"application/x-gtar\": {\n        source: \"apache\",\n        extensions: [\n            \"gtar\"\n        ]\n    },\n    \"application/x-hdf\": {\n        source: \"apache\",\n        extensions: [\n            \"hdf\"\n        ]\n    },\n    \"application/x-install-instructions\": {\n        source: \"apache\",\n        extensions: [\n            \"install\"\n        ]\n    },\n    \"application/x-iso9660-image\": {\n        source: \"apache\",\n        extensions: [\n            \"iso\"\n        ]\n    },\n    \"application/x-java-archive-diff\": {\n        source: \"nginx\",\n        extensions: [\n            \"jardiff\"\n        ]\n    },\n    \"application/x-java-jnlp-file\": {\n        source: \"apache\",\n        extensions: [\n            \"jnlp\"\n        ]\n    },\n    \"application/x-latex\": {\n        source: \"apache\",\n        extensions: [\n            \"latex\"\n        ]\n    },\n    \"application/x-lzh-compressed\": {\n        source: \"apache\",\n        extensions: [\n            \"lzh\",\n            \"lha\"\n        ]\n    },\n    \"application/x-makeself\": {\n        source: \"nginx\",\n        extensions: [\n            \"run\"\n        ]\n    },\n    \"application/x-mie\": {\n        source: \"apache\",\n        extensions: [\n            \"mie\"\n        ]\n    },\n    \"application/x-mobipocket-ebook\": {\n        source: \"apache\",\n        extensions: [\n            \"prc\",\n            \"mobi\"\n        ]\n    },\n    \"application/x-ms-application\": {\n        source: \"apache\",\n        extensions: [\n            \"application\"\n        ]\n    },\n    \"application/x-ms-shortcut\": {\n        source: \"apache\",\n        extensions: [\n            \"lnk\"\n        ]\n    },\n    \"application/x-ms-wmd\": {\n        source: \"apache\",\n        extensions: [\n            \"wmd\"\n        ]\n    },\n    \"application/x-ms-wmz\": {\n        source: \"apache\",\n        extensions: [\n            \"wmz\"\n        ]\n    },\n    \"application/x-ms-xbap\": {\n        source: \"apache\",\n        extensions: [\n            \"xbap\"\n        ]\n    },\n    \"application/x-msaccess\": {\n        source: \"apache\",\n        extensions: [\n            \"mdb\"\n        ]\n    },\n    \"application/x-msbinder\": {\n        source: \"apache\",\n        extensions: [\n            \"obd\"\n        ]\n    },\n    \"application/x-mscardfile\": {\n        source: \"apache\",\n        extensions: [\n            \"crd\"\n        ]\n    },\n    \"application/x-msclip\": {\n        source: \"apache\",\n        extensions: [\n            \"clp\"\n        ]\n    },\n    \"application/x-msdownload\": {\n        source: \"apache\",\n        extensions: [\n            \"exe\",\n            \"dll\",\n            \"com\",\n            \"bat\",\n            \"msi\"\n        ]\n    },\n    \"application/x-msmediaview\": {\n        source: \"apache\",\n        extensions: [\n            \"mvb\",\n            \"m13\",\n            \"m14\"\n        ]\n    },\n    \"application/x-msmetafile\": {\n        source: \"apache\",\n        extensions: [\n            \"wmf\",\n            \"wmz\",\n            \"emf\",\n            \"emz\"\n        ]\n    },\n    \"application/x-msmoney\": {\n        source: \"apache\",\n        extensions: [\n            \"mny\"\n        ]\n    },\n    \"application/x-mspublisher\": {\n        source: \"apache\",\n        extensions: [\n            \"pub\"\n        ]\n    },\n    \"application/x-msschedule\": {\n        source: \"apache\",\n        extensions: [\n            \"scd\"\n        ]\n    },\n    \"application/x-msterminal\": {\n        source: \"apache\",\n        extensions: [\n            \"trm\"\n        ]\n    },\n    \"application/x-mswrite\": {\n        source: \"apache\",\n        extensions: [\n            \"wri\"\n        ]\n    },\n    \"application/x-netcdf\": {\n        source: \"apache\",\n        extensions: [\n            \"nc\",\n            \"cdf\"\n        ]\n    },\n    \"application/x-nzb\": {\n        source: \"apache\",\n        extensions: [\n            \"nzb\"\n        ]\n    },\n    \"application/x-perl\": {\n        source: \"nginx\",\n        extensions: [\n            \"pl\",\n            \"pm\"\n        ]\n    },\n    \"application/x-pilot\": {\n        source: \"nginx\",\n        extensions: [\n            \"prc\",\n            \"pdb\"\n        ]\n    },\n    \"application/x-pkcs12\": {\n        source: \"apache\",\n        extensions: [\n            \"p12\",\n            \"pfx\"\n        ]\n    },\n    \"application/x-pkcs7-certificates\": {\n        source: \"apache\",\n        extensions: [\n            \"p7b\",\n            \"spc\"\n        ]\n    },\n    \"application/x-pkcs7-certreqresp\": {\n        source: \"apache\",\n        extensions: [\n            \"p7r\"\n        ]\n    },\n    \"application/x-rar-compressed\": {\n        source: \"apache\",\n        extensions: [\n            \"rar\"\n        ]\n    },\n    \"application/x-redhat-package-manager\": {\n        source: \"nginx\",\n        extensions: [\n            \"rpm\"\n        ]\n    },\n    \"application/x-research-info-systems\": {\n        source: \"apache\",\n        extensions: [\n            \"ris\"\n        ]\n    },\n    \"application/x-sea\": {\n        source: \"nginx\",\n        extensions: [\n            \"sea\"\n        ]\n    },\n    \"application/x-sh\": {\n        source: \"apache\",\n        extensions: [\n            \"sh\"\n        ]\n    },\n    \"application/x-shar\": {\n        source: \"apache\",\n        extensions: [\n            \"shar\"\n        ]\n    },\n    \"application/x-shockwave-flash\": {\n        source: \"apache\",\n        extensions: [\n            \"swf\"\n        ]\n    },\n    \"application/x-silverlight-app\": {\n        source: \"apache\",\n        extensions: [\n            \"xap\"\n        ]\n    },\n    \"application/x-sql\": {\n        source: \"apache\",\n        extensions: [\n            \"sql\"\n        ]\n    },\n    \"application/x-stuffit\": {\n        source: \"apache\",\n        extensions: [\n            \"sit\"\n        ]\n    },\n    \"application/x-stuffitx\": {\n        source: \"apache\",\n        extensions: [\n            \"sitx\"\n        ]\n    },\n    \"application/x-subrip\": {\n        source: \"apache\",\n        extensions: [\n            \"srt\"\n        ]\n    },\n    \"application/x-sv4cpio\": {\n        source: \"apache\",\n        extensions: [\n            \"sv4cpio\"\n        ]\n    },\n    \"application/x-sv4crc\": {\n        source: \"apache\",\n        extensions: [\n            \"sv4crc\"\n        ]\n    },\n    \"application/x-t3vm-image\": {\n        source: \"apache\",\n        extensions: [\n            \"t3\"\n        ]\n    },\n    \"application/x-tads\": {\n        source: \"apache\",\n        extensions: [\n            \"gam\"\n        ]\n    },\n    \"application/x-tar\": {\n        source: \"apache\",\n        extensions: [\n            \"tar\"\n        ]\n    },\n    \"application/x-tcl\": {\n        source: \"apache\",\n        extensions: [\n            \"tcl\",\n            \"tk\"\n        ]\n    },\n    \"application/x-tex\": {\n        source: \"apache\",\n        extensions: [\n            \"tex\"\n        ]\n    },\n    \"application/x-tex-tfm\": {\n        source: \"apache\",\n        extensions: [\n            \"tfm\"\n        ]\n    },\n    \"application/x-texinfo\": {\n        source: \"apache\",\n        extensions: [\n            \"texinfo\",\n            \"texi\"\n        ]\n    },\n    \"application/x-tgif\": {\n        source: \"apache\",\n        extensions: [\n            \"obj\"\n        ]\n    },\n    \"application/x-ustar\": {\n        source: \"apache\",\n        extensions: [\n            \"ustar\"\n        ]\n    },\n    \"application/x-wais-source\": {\n        source: \"apache\",\n        extensions: [\n            \"src\"\n        ]\n    },\n    \"application/x-x509-ca-cert\": {\n        source: \"iana\",\n        extensions: [\n            \"der\",\n            \"crt\",\n            \"pem\"\n        ]\n    },\n    \"application/x-xfig\": {\n        source: \"apache\",\n        extensions: [\n            \"fig\"\n        ]\n    },\n    \"application/x-xliff+xml\": {\n        source: \"apache\",\n        extensions: [\n            \"xlf\"\n        ]\n    },\n    \"application/x-xpinstall\": {\n        source: \"apache\",\n        extensions: [\n            \"xpi\"\n        ]\n    },\n    \"application/x-xz\": {\n        source: \"apache\",\n        extensions: [\n            \"xz\"\n        ]\n    },\n    \"application/x-zmachine\": {\n        source: \"apache\",\n        extensions: [\n            \"z1\",\n            \"z2\",\n            \"z3\",\n            \"z4\",\n            \"z5\",\n            \"z6\",\n            \"z7\",\n            \"z8\"\n        ]\n    },\n    \"application/xaml+xml\": {\n        source: \"apache\",\n        extensions: [\n            \"xaml\"\n        ]\n    },\n    \"application/xcap-att+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"xav\"\n        ]\n    },\n    \"application/xcap-caps+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"xca\"\n        ]\n    },\n    \"application/xcap-diff+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"xdf\"\n        ]\n    },\n    \"application/xcap-el+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"xel\"\n        ]\n    },\n    \"application/xcap-ns+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"xns\"\n        ]\n    },\n    \"application/xenc+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"xenc\"\n        ]\n    },\n    \"application/xhtml+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"xhtml\",\n            \"xht\"\n        ]\n    },\n    \"application/xliff+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"xlf\"\n        ]\n    },\n    \"application/xml\": {\n        source: \"iana\",\n        extensions: [\n            \"xml\",\n            \"xsl\",\n            \"xsd\",\n            \"rng\"\n        ]\n    },\n    \"application/xml-dtd\": {\n        source: \"iana\",\n        extensions: [\n            \"dtd\"\n        ]\n    },\n    \"application/xop+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"xop\"\n        ]\n    },\n    \"application/xproc+xml\": {\n        source: \"apache\",\n        extensions: [\n            \"xpl\"\n        ]\n    },\n    \"application/xslt+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"xsl\",\n            \"xslt\"\n        ]\n    },\n    \"application/xspf+xml\": {\n        source: \"apache\",\n        extensions: [\n            \"xspf\"\n        ]\n    },\n    \"application/xv+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"mxml\",\n            \"xhvml\",\n            \"xvml\",\n            \"xvm\"\n        ]\n    },\n    \"application/yaml\": {\n        source: \"iana\",\n        extensions: [\n            \"yaml\",\n            \"yml\"\n        ]\n    },\n    \"application/yang\": {\n        source: \"iana\",\n        extensions: [\n            \"yang\"\n        ]\n    },\n    \"application/yin+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"yin\"\n        ]\n    },\n    \"application/zip\": {\n        source: \"iana\",\n        extensions: [\n            \"zip\"\n        ]\n    }\n};\n\nexport { application };\n"],"names":[],"mappings":";;;AAAA,MAAM,cAAc;IAChB,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0BAA0B;QACtB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2BAA2B;QACvB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,+BAA+B;QAC3B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2BAA2B;QACvB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,6BAA6B;QACzB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,6BAA6B;QACzB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,yBAAyB;QACrB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,+BAA+B;QAC3B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,8BAA8B;QAC1B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2BAA2B;QACvB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2BAA2B;QACvB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0BAA0B;QACtB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,8BAA8B;QAC1B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qBAAqB;QACjB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2BAA2B;QACvB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0BAA0B;QACtB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,6BAA6B;QACzB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,mBAAmB;QACf,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0BAA0B;QACtB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,mBAAmB;QACf,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,oBAAoB;QAChB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2BAA2B;QACvB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,yBAAyB;QACrB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,qBAAqB;QACjB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;YACA;YACA;SACH;IACL;IACA,sCAAsC;QAClC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0BAA0B;QACtB,QAAQ;QACR,SAAS;QACT,YAAY;YACR;YACA;SACH;IACL;IACA,oBAAoB;QAChB,QAAQ;QACR,SAAS;QACT,YAAY;YACR;YACA;SACH;IACL;IACA,2BAA2B;QACvB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,8BAA8B;QAC1B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,6BAA6B;QACzB,QAAQ;QACR,SAAS;QACT,YAAY;YACR;SACH;IACL;IACA,oBAAoB;QAChB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2BAA2B;QACvB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2BAA2B;QACvB,QAAQ;QACR,YAAY;YACR;YACA;YACA;SACH;IACL;IACA,0BAA0B;QACtB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,oBAAoB;QAChB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wCAAwC;QACpC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,sCAAsC;QAClC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,6BAA6B;QACzB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2BAA2B;QACvB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2BAA2B;QACvB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,oBAAoB;QAChB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,mBAAmB;QACf,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,sBAAsB;QAClB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,mBAAmB;QACf,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,yBAAyB;QACrB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,oBAAoB;QAChB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACH;IACL;IACA,mBAAmB;QACf,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iCAAiC;QAC7B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,mBAAmB;QACf,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,yBAAyB;QACrB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;YACA;YACA;YACA;SACH;IACL;IACA,oBAAoB;QAChB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,+BAA+B;QAC3B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,mCAAmC;QAC/B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,mBAAmB;QACf,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,6BAA6B;QACzB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,6BAA6B;QACzB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,0BAA0B;QACtB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,sBAAsB;QAClB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0BAA0B;QACtB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,+BAA+B;QAC3B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qBAAqB;QACjB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,8BAA8B;QAC1B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,yBAAyB;QACrB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0BAA0B;QACtB,QAAQ;QACR,YAAY;YACR;YACA;YACA;SACH;IACL;IACA,8BAA8B;QAC1B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,2BAA2B;QACvB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uCAAuC;QACnC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kCAAkC;QAC9B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uCAAuC;QACnC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,6BAA6B;QACzB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,6BAA6B;QACzB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iCAAiC;QAC7B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,6BAA6B;QACzB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,mBAAmB;QACf,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,+BAA+B;QAC3B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,+BAA+B;QAC3B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,mBAAmB;QACf,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,yBAAyB;QACrB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0BAA0B;QACtB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,sCAAsC;QAClC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2CAA2C;QACvC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qBAAqB;QACjB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kCAAkC;QAC9B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,oBAAoB;QAChB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,0BAA0B;QACtB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,oBAAoB;QAChB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kCAAkC;QAC9B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gDAAgD;QAC5C,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qCAAqC;QACjC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qCAAqC;QACjC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,mCAAmC;QAC/B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,8BAA8B;QAC1B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,oCAAoC;QAChC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qCAAqC;QACjC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qCAAqC;QACjC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2BAA2B;QACvB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,+DAA+D;QAC3D,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2CAA2C;QACvC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,6BAA6B;QACzB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,iCAAiC;QAC7B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,8BAA8B;QAC1B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,+BAA+B;QAC3B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,yCAAyC;QACrC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,yCAAyC;QACrC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wCAAwC;QACpC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,6BAA6B;QACzB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2CAA2C;QACvC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0DAA0D;QACtD,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uDAAuD;QACnD,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wCAAwC;QACpC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uCAAuC;QACnC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iCAAiC;QAC7B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iCAAiC;QAC7B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iCAAiC;QAC7B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,+BAA+B;QAC3B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,sCAAsC;QAClC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,yCAAyC;QACrC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,8BAA8B;QAC1B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qCAAqC;QACjC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qCAAqC;QACjC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,mCAAmC;QAC/B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wCAAwC;QACpC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,8BAA8B;QAC1B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4CAA4C;QACxC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,+BAA+B;QAC3B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iCAAiC;QAC7B,QAAQ;QACR,YAAY;YACR;YACA;YACA;YACA;YACA;SACH;IACL;IACA,gDAAgD;QAC5C,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,oDAAoD;QAChD,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,+BAA+B;QAC3B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,+BAA+B;QAC3B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iCAAiC;QAC7B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0CAA0C;QACtC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,yCAAyC;QACrC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0CAA0C;QACtC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0CAA0C;QACtC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,yCAAyC;QACrC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,6BAA6B;QACzB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,8BAA8B;QAC1B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,mCAAmC;QAC/B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,6BAA6B;QACzB,QAAQ;QACR,YAAY;YACR;YACA;YACA;YACA;SACH;IACL;IACA,iCAAiC;QAC7B,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,oCAAoC;QAChC,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,0CAA0C;QACtC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,6BAA6B;QACzB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2BAA2B;QACvB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,+BAA+B;QAC3B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2BAA2B;QACvB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,+BAA+B;QAC3B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2BAA2B;QACvB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2BAA2B;QACvB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,6BAA6B;QACzB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,6BAA6B;QACzB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,oCAAoC;QAChC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,8BAA8B;QAC1B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,6BAA6B;QACzB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,+BAA+B;QAC3B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iCAAiC;QAC7B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,8BAA8B;QAC1B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,6BAA6B;QACzB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,8BAA8B;QAC1B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iCAAiC;QAC7B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,8BAA8B;QAC1B,QAAQ;QACR,YAAY;YACR;YACA;YACA;YACA;SACH;IACL;IACA,+BAA+B;QAC3B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,+BAA+B;QAC3B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iCAAiC;QAC7B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iCAAiC;QAC7B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kCAAkC;QAC9B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kCAAkC;QAC9B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,mCAAmC;QAC/B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,oCAAoC;QAChC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iCAAiC;QAC7B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uCAAuC;QACnC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,8CAA8C;QAC1C,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,8BAA8B;QAC1B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,oCAAoC;QAChC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iCAAiC;QAC7B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iCAAiC;QAC7B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qCAAqC;QACjC,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,2BAA2B;QACvB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2BAA2B;QACvB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wCAAwC;QACpC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,oCAAoC;QAChC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0BAA0B;QACtB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,kCAAkC;QAC9B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,+BAA+B;QAC3B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2CAA2C;QACvC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,mCAAmC;QAC/B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uCAAuC;QACnC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wCAAwC;QACpC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2BAA2B;QACvB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,8CAA8C;QAC1C,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qCAAqC;QACjC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2BAA2B;QACvB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2BAA2B;QACvB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0BAA0B;QACtB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2BAA2B;QACvB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0BAA0B;QACtB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wCAAwC;QACpC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,+BAA+B;QAC3B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,8BAA8B;QAC1B,QAAQ;QACR,YAAY;YACR;YACA;YACA;SACH;IACL;IACA,yCAAyC;QACrC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wCAAwC;QACpC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,8BAA8B;QAC1B,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,mCAAmC;QAC/B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,mCAAmC;QAC/B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,8BAA8B;QAC1B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,oCAAoC;QAChC,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,yCAAyC;QACrC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2CAA2C;QACvC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0BAA0B;QACtB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,yCAAyC;QACrC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,sCAAsC;QAClC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2BAA2B;QACvB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,8BAA8B;QAC1B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,8BAA8B;QAC1B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,6BAA6B;QACzB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,+BAA+B;QAC3B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kCAAkC;QAC9B,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,+BAA+B;QAC3B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,6BAA6B;QACzB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,8BAA8B;QAC1B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,yBAAyB;QACrB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;YACA;YACA;YACA;SACH;IACL;IACA,oCAAoC;QAChC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,+BAA+B;QAC3B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,sDAAsD;QAClD,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2DAA2D;QACvD,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,+BAA+B;QAC3B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kCAAkC;QAC9B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,mCAAmC;QAC/B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,+BAA+B;QAC3B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,mCAAmC;QAC/B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,mCAAmC;QAC/B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iCAAiC;QAC7B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,oCAAoC;QAChC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,sCAAsC;QAClC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,+BAA+B;QAC3B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,sCAAsC;QAClC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kCAAkC;QAC9B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kCAAkC;QAC9B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,8BAA8B;QAC1B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,8BAA8B;QAC1B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,8BAA8B;QAC1B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,8BAA8B;QAC1B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,8BAA8B;QAC1B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,8BAA8B;QAC1B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,8BAA8B;QAC1B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,sCAAsC;QAClC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,sCAAsC;QAClC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,mCAAmC;QAC/B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,+BAA+B;QAC3B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qCAAqC;QACjC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;YACA;YACA;YACA;YACA;YACA;SACH;IACL;IACA,kDAAkD;QAC9C,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,yDAAyD;QACrD,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kDAAkD;QAC9C,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qDAAqD;QACjD,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iCAAiC;QAC7B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,+BAA+B;QAC3B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0BAA0B;QACtB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0BAA0B;QACtB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kCAAkC;QAC9B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iCAAiC;QAC7B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,8BAA8B;QAC1B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iCAAiC;QAC7B,QAAQ;QACR,YAAY;YACR;YACA;YACA;SACH;IACL;IACA,uDAAuD;QACnD,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,8DAA8D;QAC1D,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uDAAuD;QACnD,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2DAA2D;QACvD,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0DAA0D;QACtD,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,8BAA8B;QAC1B,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,oDAAoD;QAChD,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,oDAAoD;QAChD,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;YACA;YACA;YACA;SACH;IACL;IACA,0BAA0B;QACtB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kCAAkC;QAC9B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,+BAA+B;QAC3B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,yBAAyB;QACrB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qCAAqC;QACjC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,sCAAsC;QAClC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,mCAAmC;QAC/B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uCAAuC;QACnC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qCAAqC;QACjC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gDAAgD;QAC5C,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,sCAAsC;QAClC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uCAAuC;QACnC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4CAA4C;QACxC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qDAAqD;QACjD,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,+CAA+C;QAC3C,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,8CAA8C;QAC1C,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uDAAuD;QACnD,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,+CAA+C;QAC3C,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wDAAwD;QACpD,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4CAA4C;QACxC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qDAAqD;QACjD,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,mDAAmD;QAC/C,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4DAA4D;QACxD,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kDAAkD;QAC9C,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2DAA2D;QACvD,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2CAA2C;QACvC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kDAAkD;QAC9C,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,oDAAoD;QAChD,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,+CAA+C;QAC3C,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,8BAA8B;QAC1B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,+BAA+B;QAC3B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qCAAqC;QACjC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2CAA2C;QACvC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0CAA0C;QACtC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,6EAA6E;QACzE,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,sEAAsE;QAClE,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0EAA0E;QACtE,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,yEAAyE;QACrE,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qEAAqE;QACjE,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wEAAwE;QACpE,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2EAA2E;QACvE,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2EAA2E;QACvE,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0CAA0C;QACtC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2BAA2B;QACvB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kCAAkC;QAC9B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;YACA;YACA;SACH;IACL;IACA,6BAA6B;QACzB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,6BAA6B;QACzB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,6BAA6B;QACzB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0BAA0B;QACtB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,8BAA8B;QAC1B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,+BAA+B;QAC3B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iCAAiC;QAC7B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,sCAAsC;QAClC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,oCAAoC;QAChC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,yCAAyC;QACrC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,6BAA6B;QACzB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qCAAqC;QACjC,QAAQ;QACR,YAAY;YACR;YACA;YACA;YACA;YACA;YACA;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,+BAA+B;QAC3B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,sCAAsC;QAClC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0CAA0C;QACtC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kCAAkC;QAC9B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2BAA2B;QACvB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,oCAAoC;QAChC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,sCAAsC;QAClC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wCAAwC;QACpC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2BAA2B;QACvB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2CAA2C;QACvC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,+CAA+C;QAC3C,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,8CAA8C;QAC1C,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0CAA0C;QACtC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,sCAAsC;QAClC,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iCAAiC;QAC7B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,+CAA+C;QAC3C,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,mCAAmC;QAC/B,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qCAAqC;QACjC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qCAAqC;QACjC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wCAAwC;QACpC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qCAAqC;QACjC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uCAAuC;QACnC,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,8CAA8C;QAC1C,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qCAAqC;QACjC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uCAAuC;QACnC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,yCAAyC;QACrC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,yCAAyC;QACrC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,mCAAmC;QAC/B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4CAA4C;QACxC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kCAAkC;QAC9B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,yCAAyC;QACrC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2CAA2C;QACvC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,mCAAmC;QAC/B,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,8BAA8B;QAC1B,QAAQ;QACR,SAAS;QACT,YAAY;YACR;SACH;IACL;IACA,mCAAmC;QAC/B,QAAQ;QACR,SAAS;QACT,YAAY;YACR;SACH;IACL;IACA,iCAAiC;QAC7B,QAAQ;QACR,SAAS;QACT,YAAY;YACR;SACH;IACL;IACA,oCAAoC;QAChC,QAAQ;QACR,SAAS;QACT,YAAY;YACR;SACH;IACL;IACA,6CAA6C;QACzC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;YACA;YACA;SACH;IACL;IACA,kCAAkC;QAC9B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2BAA2B;QACvB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,6BAA6B;QACzB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0BAA0B;QACtB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,yBAAyB;QACrB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,yBAAyB;QACrB,QAAQ;QACR,YAAY;YACR;YACA;YACA;YACA;SACH;IACL;IACA,6BAA6B;QACzB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,6BAA6B;QACzB,QAAQ;QACR,SAAS;QACT,YAAY;YACR;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kCAAkC;QAC9B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kCAAkC;QAC9B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,+BAA+B;QAC3B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0BAA0B;QACtB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iCAAiC;QAC7B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,oCAAoC;QAChC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,mCAAmC;QAC/B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0CAA0C;QACtC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qDAAqD;QACjD,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qCAAqC;QACjC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,sCAAsC;QAClC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2CAA2C;QACvC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,kCAAkC;QAC9B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,oBAAoB;QAChB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,+BAA+B;QAC3B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,sBAAsB;QAClB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,sBAAsB;QAClB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,+BAA+B;QAC3B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,yBAAyB;QACrB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iCAAiC;QAC7B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;YACA;YACA;YACA;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,sBAAsB;QAClB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,qBAAqB;QACjB,QAAQ;QACR,YAAY;YACR;YACA;YACA;YACA;YACA;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,sBAAsB;QAClB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2BAA2B;QACvB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,sBAAsB;QAClB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qBAAqB;QACjB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0BAA0B;QACtB,QAAQ;QACR,YAAY;YACR;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACH;IACL;IACA,sBAAsB;QAClB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iCAAiC;QAC7B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qBAAqB;QACjB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qBAAqB;QACjB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0BAA0B;QACtB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kCAAkC;QAC9B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0BAA0B;QACtB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0BAA0B;QACtB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;YACA;YACA;YACA;SACH;IACL;IACA,yBAAyB;QACrB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,8BAA8B;QAC1B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0BAA0B;QACtB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,sBAAsB;QAClB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qBAAqB;QACjB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,sCAAsC;QAClC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,+BAA+B;QAC3B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,mCAAmC;QAC/B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,0BAA0B;QACtB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qBAAqB;QACjB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kCAAkC;QAC9B,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,6BAA6B;QACzB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,yBAAyB;QACrB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0BAA0B;QACtB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0BAA0B;QACtB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;YACA;YACA;YACA;YACA;SACH;IACL;IACA,6BAA6B;QACzB,QAAQ;QACR,YAAY;YACR;YACA;YACA;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;YACA;YACA;YACA;SACH;IACL;IACA,yBAAyB;QACrB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,6BAA6B;QACzB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,yBAAyB;QACrB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,qBAAqB;QACjB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,sBAAsB;QAClB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,oCAAoC;QAChC,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,mCAAmC;QAC/B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wCAAwC;QACpC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uCAAuC;QACnC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qBAAqB;QACjB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,oBAAoB;QAChB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,sBAAsB;QAClB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iCAAiC;QAC7B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iCAAiC;QAC7B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qBAAqB;QACjB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,yBAAyB;QACrB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0BAA0B;QACtB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,yBAAyB;QACrB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,sBAAsB;QAClB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qBAAqB;QACjB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qBAAqB;QACjB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,qBAAqB;QACjB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,yBAAyB;QACrB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,yBAAyB;QACrB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,sBAAsB;QAClB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,6BAA6B;QACzB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,8BAA8B;QAC1B,QAAQ;QACR,YAAY;YACR;YACA;YACA;SACH;IACL;IACA,sBAAsB;QAClB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2BAA2B;QACvB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2BAA2B;QACvB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,oBAAoB;QAChB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0BAA0B;QACtB,QAAQ;QACR,YAAY;YACR;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,6BAA6B;QACzB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,6BAA6B;QACzB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2BAA2B;QACvB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2BAA2B;QACvB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,yBAAyB;QACrB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,yBAAyB;QACrB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,mBAAmB;QACf,QAAQ;QACR,YAAY;YACR;YACA;YACA;YACA;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,yBAAyB;QACrB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,sBAAsB;QAClB,QAAQ;QACR,YAAY;YACR;YACA;YACA;YACA;SACH;IACL;IACA,oBAAoB;QAChB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,oBAAoB;QAChB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,mBAAmB;QACf,QAAQ;QACR,YAAY;YACR;SACH;IACL;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15423, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/%40uploadthing/mime-types/audio/index.js"],"sourcesContent":["const audio = {\n    \"audio/3gpp\": {\n        source: \"iana\",\n        extensions: [\n            \"3gpp\"\n        ]\n    },\n    \"audio/adpcm\": {\n        source: \"apache\",\n        extensions: [\n            \"adp\"\n        ]\n    },\n    \"audio/amr\": {\n        source: \"iana\",\n        extensions: [\n            \"amr\"\n        ]\n    },\n    \"audio/basic\": {\n        source: \"iana\",\n        extensions: [\n            \"au\",\n            \"snd\"\n        ]\n    },\n    \"audio/midi\": {\n        source: \"apache\",\n        extensions: [\n            \"mid\",\n            \"midi\",\n            \"kar\",\n            \"rmi\"\n        ]\n    },\n    \"audio/mobile-xmf\": {\n        source: \"iana\",\n        extensions: [\n            \"mxmf\"\n        ]\n    },\n    \"audio/mp4\": {\n        source: \"iana\",\n        extensions: [\n            \"m4a\",\n            \"mp4a\"\n        ]\n    },\n    \"audio/mpeg\": {\n        source: \"iana\",\n        extensions: [\n            \"mpga\",\n            \"mp2\",\n            \"mp2a\",\n            \"mp3\",\n            \"m2a\",\n            \"m3a\"\n        ]\n    },\n    \"audio/ogg\": {\n        source: \"iana\",\n        extensions: [\n            \"oga\",\n            \"ogg\",\n            \"spx\",\n            \"opus\"\n        ]\n    },\n    \"audio/s3m\": {\n        source: \"apache\",\n        extensions: [\n            \"s3m\"\n        ]\n    },\n    \"audio/silk\": {\n        source: \"apache\",\n        extensions: [\n            \"sil\"\n        ]\n    },\n    \"audio/vnd.dece.audio\": {\n        source: \"iana\",\n        extensions: [\n            \"uva\",\n            \"uvva\"\n        ]\n    },\n    \"audio/vnd.digital-winds\": {\n        source: \"iana\",\n        extensions: [\n            \"eol\"\n        ]\n    },\n    \"audio/vnd.dra\": {\n        source: \"iana\",\n        extensions: [\n            \"dra\"\n        ]\n    },\n    \"audio/vnd.dts\": {\n        source: \"iana\",\n        extensions: [\n            \"dts\"\n        ]\n    },\n    \"audio/vnd.dts.hd\": {\n        source: \"iana\",\n        extensions: [\n            \"dtshd\"\n        ]\n    },\n    \"audio/vnd.lucent.voice\": {\n        source: \"iana\",\n        extensions: [\n            \"lvp\"\n        ]\n    },\n    \"audio/vnd.ms-playready.media.pya\": {\n        source: \"iana\",\n        extensions: [\n            \"pya\"\n        ]\n    },\n    \"audio/vnd.nuera.ecelp4800\": {\n        source: \"iana\",\n        extensions: [\n            \"ecelp4800\"\n        ]\n    },\n    \"audio/vnd.nuera.ecelp7470\": {\n        source: \"iana\",\n        extensions: [\n            \"ecelp7470\"\n        ]\n    },\n    \"audio/vnd.nuera.ecelp9600\": {\n        source: \"iana\",\n        extensions: [\n            \"ecelp9600\"\n        ]\n    },\n    \"audio/vnd.rip\": {\n        source: \"iana\",\n        extensions: [\n            \"rip\"\n        ]\n    },\n    \"audio/webm\": {\n        source: \"apache\",\n        extensions: [\n            \"weba\"\n        ]\n    },\n    \"audio/x-aac\": {\n        source: \"apache\",\n        extensions: [\n            \"aac\"\n        ]\n    },\n    \"audio/x-aiff\": {\n        source: \"apache\",\n        extensions: [\n            \"aif\",\n            \"aiff\",\n            \"aifc\"\n        ]\n    },\n    \"audio/x-caf\": {\n        source: \"apache\",\n        extensions: [\n            \"caf\"\n        ]\n    },\n    \"audio/x-flac\": {\n        source: \"apache\",\n        extensions: [\n            \"flac\"\n        ]\n    },\n    \"audio/x-m4a\": {\n        source: \"nginx\",\n        extensions: [\n            \"m4a\"\n        ]\n    },\n    \"audio/x-matroska\": {\n        source: \"apache\",\n        extensions: [\n            \"mka\"\n        ]\n    },\n    \"audio/x-mpegurl\": {\n        source: \"apache\",\n        extensions: [\n            \"m3u\"\n        ]\n    },\n    \"audio/x-ms-wax\": {\n        source: \"apache\",\n        extensions: [\n            \"wax\"\n        ]\n    },\n    \"audio/x-ms-wma\": {\n        source: \"apache\",\n        extensions: [\n            \"wma\"\n        ]\n    },\n    \"audio/x-pn-realaudio\": {\n        source: \"apache\",\n        extensions: [\n            \"ram\",\n            \"ra\"\n        ]\n    },\n    \"audio/x-pn-realaudio-plugin\": {\n        source: \"apache\",\n        extensions: [\n            \"rmp\"\n        ]\n    },\n    \"audio/x-realaudio\": {\n        source: \"nginx\",\n        extensions: [\n            \"ra\"\n        ]\n    },\n    \"audio/x-wav\": {\n        source: \"apache\",\n        extensions: [\n            \"wav\"\n        ]\n    },\n    \"audio/x-gsm\": {\n        source: \"apache\",\n        extensions: [\n            \"gsm\"\n        ]\n    },\n    \"audio/xm\": {\n        source: \"apache\",\n        extensions: [\n            \"xm\"\n        ]\n    }\n};\n\nexport { audio };\n"],"names":[],"mappings":";;;AAAA,MAAM,QAAQ;IACV,cAAc;QACV,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,eAAe;QACX,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,aAAa;QACT,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,eAAe;QACX,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,cAAc;QACV,QAAQ;QACR,YAAY;YACR;YACA;YACA;YACA;SACH;IACL;IACA,oBAAoB;QAChB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,aAAa;QACT,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,cAAc;QACV,QAAQ;QACR,YAAY;YACR;YACA;YACA;YACA;YACA;YACA;SACH;IACL;IACA,aAAa;QACT,QAAQ;QACR,YAAY;YACR;YACA;YACA;YACA;SACH;IACL;IACA,aAAa;QACT,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,cAAc;QACV,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,2BAA2B;QACvB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iBAAiB;QACb,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iBAAiB;QACb,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,oBAAoB;QAChB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0BAA0B;QACtB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,oCAAoC;QAChC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,6BAA6B;QACzB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,6BAA6B;QACzB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,6BAA6B;QACzB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iBAAiB;QACb,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,cAAc;QACV,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,eAAe;QACX,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gBAAgB;QACZ,QAAQ;QACR,YAAY;YACR;YACA;YACA;SACH;IACL;IACA,eAAe;QACX,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gBAAgB;QACZ,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,eAAe;QACX,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,oBAAoB;QAChB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,mBAAmB;QACf,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kBAAkB;QACd,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kBAAkB;QACd,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,+BAA+B;QAC3B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qBAAqB;QACjB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,eAAe;QACX,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,eAAe;QACX,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,YAAY;QACR,QAAQ;QACR,YAAY;YACR;SACH;IACL;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15680, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/%40uploadthing/mime-types/image/index.js"],"sourcesContent":["const image = {\n    \"image/aces\": {\n        source: \"iana\",\n        extensions: [\n            \"exr\"\n        ]\n    },\n    \"image/avci\": {\n        source: \"iana\",\n        extensions: [\n            \"avci\"\n        ]\n    },\n    \"image/avcs\": {\n        source: \"iana\",\n        extensions: [\n            \"avcs\"\n        ]\n    },\n    \"image/avif\": {\n        source: \"iana\",\n        extensions: [\n            \"avif\"\n        ]\n    },\n    \"image/bmp\": {\n        source: \"iana\",\n        extensions: [\n            \"bmp\"\n        ]\n    },\n    \"image/cgm\": {\n        source: \"iana\",\n        extensions: [\n            \"cgm\"\n        ]\n    },\n    \"image/dicom-rle\": {\n        source: \"iana\",\n        extensions: [\n            \"drle\"\n        ]\n    },\n    \"image/emf\": {\n        source: \"iana\",\n        extensions: [\n            \"emf\"\n        ]\n    },\n    \"image/fits\": {\n        source: \"iana\",\n        extensions: [\n            \"fits\"\n        ]\n    },\n    \"image/g3fax\": {\n        source: \"iana\",\n        extensions: [\n            \"g3\"\n        ]\n    },\n    \"image/gif\": {\n        source: \"iana\",\n        extensions: [\n            \"gif\"\n        ]\n    },\n    \"image/heic\": {\n        source: \"iana\",\n        extensions: [\n            \"heic\"\n        ]\n    },\n    \"image/heic-sequence\": {\n        source: \"iana\",\n        extensions: [\n            \"heics\"\n        ]\n    },\n    \"image/heif\": {\n        source: \"iana\",\n        extensions: [\n            \"heif\"\n        ]\n    },\n    \"image/heif-sequence\": {\n        source: \"iana\",\n        extensions: [\n            \"heifs\"\n        ]\n    },\n    \"image/hej2k\": {\n        source: \"iana\",\n        extensions: [\n            \"hej2\"\n        ]\n    },\n    \"image/hsj2\": {\n        source: \"iana\",\n        extensions: [\n            \"hsj2\"\n        ]\n    },\n    \"image/ief\": {\n        source: \"iana\",\n        extensions: [\n            \"ief\"\n        ]\n    },\n    \"image/jls\": {\n        source: \"iana\",\n        extensions: [\n            \"jls\"\n        ]\n    },\n    \"image/jp2\": {\n        source: \"iana\",\n        extensions: [\n            \"jp2\",\n            \"jpg2\"\n        ]\n    },\n    \"image/jpeg\": {\n        source: \"iana\",\n        extensions: [\n            \"jpeg\",\n            \"jpg\",\n            \"jpe\",\n            \"jfif\",\n            \"pjpeg\",\n            \"pjp\"\n        ]\n    },\n    \"image/jph\": {\n        source: \"iana\",\n        extensions: [\n            \"jph\"\n        ]\n    },\n    \"image/jphc\": {\n        source: \"iana\",\n        extensions: [\n            \"jhc\"\n        ]\n    },\n    \"image/jpm\": {\n        source: \"iana\",\n        extensions: [\n            \"jpm\"\n        ]\n    },\n    \"image/jpx\": {\n        source: \"iana\",\n        extensions: [\n            \"jpx\",\n            \"jpf\"\n        ]\n    },\n    \"image/jxr\": {\n        source: \"iana\",\n        extensions: [\n            \"jxr\"\n        ]\n    },\n    \"image/jxra\": {\n        source: \"iana\",\n        extensions: [\n            \"jxra\"\n        ]\n    },\n    \"image/jxrs\": {\n        source: \"iana\",\n        extensions: [\n            \"jxrs\"\n        ]\n    },\n    \"image/jxs\": {\n        source: \"iana\",\n        extensions: [\n            \"jxs\"\n        ]\n    },\n    \"image/jxsc\": {\n        source: \"iana\",\n        extensions: [\n            \"jxsc\"\n        ]\n    },\n    \"image/jxsi\": {\n        source: \"iana\",\n        extensions: [\n            \"jxsi\"\n        ]\n    },\n    \"image/jxss\": {\n        source: \"iana\",\n        extensions: [\n            \"jxss\"\n        ]\n    },\n    \"image/ktx\": {\n        source: \"iana\",\n        extensions: [\n            \"ktx\"\n        ]\n    },\n    \"image/ktx2\": {\n        source: \"iana\",\n        extensions: [\n            \"ktx2\"\n        ]\n    },\n    \"image/png\": {\n        source: \"iana\",\n        extensions: [\n            \"png\"\n        ]\n    },\n    \"image/prs.btif\": {\n        source: \"iana\",\n        extensions: [\n            \"btif\"\n        ]\n    },\n    \"image/prs.pti\": {\n        source: \"iana\",\n        extensions: [\n            \"pti\"\n        ]\n    },\n    \"image/sgi\": {\n        source: \"apache\",\n        extensions: [\n            \"sgi\"\n        ]\n    },\n    \"image/svg+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"svg\",\n            \"svgz\"\n        ]\n    },\n    \"image/t38\": {\n        source: \"iana\",\n        extensions: [\n            \"t38\"\n        ]\n    },\n    \"image/tiff\": {\n        source: \"iana\",\n        extensions: [\n            \"tif\",\n            \"tiff\"\n        ]\n    },\n    \"image/tiff-fx\": {\n        source: \"iana\",\n        extensions: [\n            \"tfx\"\n        ]\n    },\n    \"image/vnd.adobe.photoshop\": {\n        source: \"iana\",\n        extensions: [\n            \"psd\"\n        ]\n    },\n    \"image/vnd.airzip.accelerator.azv\": {\n        source: \"iana\",\n        extensions: [\n            \"azv\"\n        ]\n    },\n    \"image/vnd.dece.graphic\": {\n        source: \"iana\",\n        extensions: [\n            \"uvi\",\n            \"uvvi\",\n            \"uvg\",\n            \"uvvg\"\n        ]\n    },\n    \"image/vnd.djvu\": {\n        source: \"iana\",\n        extensions: [\n            \"djvu\",\n            \"djv\"\n        ]\n    },\n    \"image/vnd.dvb.subtitle\": {\n        source: \"iana\",\n        extensions: [\n            \"sub\"\n        ]\n    },\n    \"image/vnd.dwg\": {\n        source: \"iana\",\n        extensions: [\n            \"dwg\"\n        ]\n    },\n    \"image/vnd.dxf\": {\n        source: \"iana\",\n        extensions: [\n            \"dxf\"\n        ]\n    },\n    \"image/vnd.fastbidsheet\": {\n        source: \"iana\",\n        extensions: [\n            \"fbs\"\n        ]\n    },\n    \"image/vnd.fpx\": {\n        source: \"iana\",\n        extensions: [\n            \"fpx\"\n        ]\n    },\n    \"image/vnd.fst\": {\n        source: \"iana\",\n        extensions: [\n            \"fst\"\n        ]\n    },\n    \"image/vnd.fujixerox.edmics-mmr\": {\n        source: \"iana\",\n        extensions: [\n            \"mmr\"\n        ]\n    },\n    \"image/vnd.fujixerox.edmics-rlc\": {\n        source: \"iana\",\n        extensions: [\n            \"rlc\"\n        ]\n    },\n    \"image/vnd.microsoft.icon\": {\n        source: \"iana\",\n        extensions: [\n            \"ico\"\n        ]\n    },\n    \"image/vnd.ms-modi\": {\n        source: \"iana\",\n        extensions: [\n            \"mdi\"\n        ]\n    },\n    \"image/vnd.ms-photo\": {\n        source: \"apache\",\n        extensions: [\n            \"wdp\"\n        ]\n    },\n    \"image/vnd.net-fpx\": {\n        source: \"iana\",\n        extensions: [\n            \"npx\"\n        ]\n    },\n    \"image/vnd.pco.b16\": {\n        source: \"iana\",\n        extensions: [\n            \"b16\"\n        ]\n    },\n    \"image/vnd.tencent.tap\": {\n        source: \"iana\",\n        extensions: [\n            \"tap\"\n        ]\n    },\n    \"image/vnd.valve.source.texture\": {\n        source: \"iana\",\n        extensions: [\n            \"vtf\"\n        ]\n    },\n    \"image/vnd.wap.wbmp\": {\n        source: \"iana\",\n        extensions: [\n            \"wbmp\"\n        ]\n    },\n    \"image/vnd.xiff\": {\n        source: \"iana\",\n        extensions: [\n            \"xif\"\n        ]\n    },\n    \"image/vnd.zbrush.pcx\": {\n        source: \"iana\",\n        extensions: [\n            \"pcx\"\n        ]\n    },\n    \"image/webp\": {\n        source: \"apache\",\n        extensions: [\n            \"webp\"\n        ]\n    },\n    \"image/wmf\": {\n        source: \"iana\",\n        extensions: [\n            \"wmf\"\n        ]\n    },\n    \"image/x-3ds\": {\n        source: \"apache\",\n        extensions: [\n            \"3ds\"\n        ]\n    },\n    \"image/x-cmu-raster\": {\n        source: \"apache\",\n        extensions: [\n            \"ras\"\n        ]\n    },\n    \"image/x-cmx\": {\n        source: \"apache\",\n        extensions: [\n            \"cmx\"\n        ]\n    },\n    \"image/x-freehand\": {\n        source: \"apache\",\n        extensions: [\n            \"fh\",\n            \"fhc\",\n            \"fh4\",\n            \"fh5\",\n            \"fh7\"\n        ]\n    },\n    \"image/x-icon\": {\n        source: \"apache\",\n        extensions: [\n            \"ico\"\n        ]\n    },\n    \"image/x-jng\": {\n        source: \"nginx\",\n        extensions: [\n            \"jng\"\n        ]\n    },\n    \"image/x-mrsid-image\": {\n        source: \"apache\",\n        extensions: [\n            \"sid\"\n        ]\n    },\n    \"image/x-ms-bmp\": {\n        source: \"nginx\",\n        extensions: [\n            \"bmp\"\n        ]\n    },\n    \"image/x-pcx\": {\n        source: \"apache\",\n        extensions: [\n            \"pcx\"\n        ]\n    },\n    \"image/x-pict\": {\n        source: \"apache\",\n        extensions: [\n            \"pic\",\n            \"pct\"\n        ]\n    },\n    \"image/x-portable-anymap\": {\n        source: \"apache\",\n        extensions: [\n            \"pnm\"\n        ]\n    },\n    \"image/x-portable-bitmap\": {\n        source: \"apache\",\n        extensions: [\n            \"pbm\"\n        ]\n    },\n    \"image/x-portable-graymap\": {\n        source: \"apache\",\n        extensions: [\n            \"pgm\"\n        ]\n    },\n    \"image/x-portable-pixmap\": {\n        source: \"apache\",\n        extensions: [\n            \"ppm\"\n        ]\n    },\n    \"image/x-rgb\": {\n        source: \"apache\",\n        extensions: [\n            \"rgb\"\n        ]\n    },\n    \"image/x-tga\": {\n        source: \"apache\",\n        extensions: [\n            \"tga\"\n        ]\n    },\n    \"image/x-xbitmap\": {\n        source: \"apache\",\n        extensions: [\n            \"xbm\"\n        ]\n    },\n    \"image/x-xpixmap\": {\n        source: \"apache\",\n        extensions: [\n            \"xpm\"\n        ]\n    },\n    \"image/x-xwindowdump\": {\n        source: \"apache\",\n        extensions: [\n            \"xwd\"\n        ]\n    }\n};\n\nexport { image };\n"],"names":[],"mappings":";;;AAAA,MAAM,QAAQ;IACV,cAAc;QACV,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,cAAc;QACV,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,cAAc;QACV,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,cAAc;QACV,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,aAAa;QACT,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,aAAa;QACT,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,mBAAmB;QACf,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,aAAa;QACT,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,cAAc;QACV,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,eAAe;QACX,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,aAAa;QACT,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,cAAc;QACV,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,cAAc;QACV,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,eAAe;QACX,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,cAAc;QACV,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,aAAa;QACT,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,aAAa;QACT,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,aAAa;QACT,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,cAAc;QACV,QAAQ;QACR,YAAY;YACR;YACA;YACA;YACA;YACA;YACA;SACH;IACL;IACA,aAAa;QACT,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,cAAc;QACV,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,aAAa;QACT,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,aAAa;QACT,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,aAAa;QACT,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,cAAc;QACV,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,cAAc;QACV,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,aAAa;QACT,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,cAAc;QACV,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,cAAc;QACV,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,cAAc;QACV,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,aAAa;QACT,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,cAAc;QACV,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,aAAa;QACT,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kBAAkB;QACd,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iBAAiB;QACb,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,aAAa;QACT,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iBAAiB;QACb,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,aAAa;QACT,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,cAAc;QACV,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,iBAAiB;QACb,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,6BAA6B;QACzB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,oCAAoC;QAChC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0BAA0B;QACtB,QAAQ;QACR,YAAY;YACR;YACA;YACA;YACA;SACH;IACL;IACA,kBAAkB;QACd,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,0BAA0B;QACtB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iBAAiB;QACb,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iBAAiB;QACb,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0BAA0B;QACtB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iBAAiB;QACb,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iBAAiB;QACb,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kCAAkC;QAC9B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kCAAkC;QAC9B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qBAAqB;QACjB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,sBAAsB;QAClB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qBAAqB;QACjB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qBAAqB;QACjB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,yBAAyB;QACrB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kCAAkC;QAC9B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,sBAAsB;QAClB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kBAAkB;QACd,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,cAAc;QACV,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,aAAa;QACT,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,eAAe;QACX,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,sBAAsB;QAClB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,eAAe;QACX,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,oBAAoB;QAChB,QAAQ;QACR,YAAY;YACR;YACA;YACA;YACA;YACA;SACH;IACL;IACA,gBAAgB;QACZ,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,eAAe;QACX,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kBAAkB;QACd,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,eAAe;QACX,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gBAAgB;QACZ,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,2BAA2B;QACvB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2BAA2B;QACvB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,4BAA4B;QACxB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2BAA2B;QACvB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,eAAe;QACX,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,eAAe;QACX,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,mBAAmB;QACf,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,mBAAmB;QACf,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16220, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/%40uploadthing/mime-types/text/index.js"],"sourcesContent":["const text = {\n    \"text/cache-manifest\": {\n        source: \"iana\",\n        extensions: [\n            \"appcache\",\n            \"manifest\"\n        ]\n    },\n    \"text/calendar\": {\n        source: \"iana\",\n        extensions: [\n            \"ics\",\n            \"ifb\"\n        ]\n    },\n    \"text/css\": {\n        source: \"iana\",\n        charset: \"UTF-8\",\n        extensions: [\n            \"css\"\n        ]\n    },\n    \"text/csv\": {\n        source: \"iana\",\n        extensions: [\n            \"csv\"\n        ]\n    },\n    \"text/html\": {\n        source: \"iana\",\n        extensions: [\n            \"html\",\n            \"htm\",\n            \"shtml\"\n        ]\n    },\n    \"text/markdown\": {\n        source: \"iana\",\n        extensions: [\n            \"markdown\",\n            \"md\"\n        ]\n    },\n    \"text/mathml\": {\n        source: \"nginx\",\n        extensions: [\n            \"mml\"\n        ]\n    },\n    \"text/n3\": {\n        source: \"iana\",\n        charset: \"UTF-8\",\n        extensions: [\n            \"n3\"\n        ]\n    },\n    \"text/plain\": {\n        source: \"iana\",\n        extensions: [\n            \"txt\",\n            \"text\",\n            \"conf\",\n            \"def\",\n            \"list\",\n            \"log\",\n            \"in\",\n            \"ini\"\n        ]\n    },\n    \"text/prs.lines.tag\": {\n        source: \"iana\",\n        extensions: [\n            \"dsc\"\n        ]\n    },\n    \"text/richtext\": {\n        source: \"iana\",\n        extensions: [\n            \"rtx\"\n        ]\n    },\n    \"text/rtf\": {\n        source: \"iana\",\n        extensions: [\n            \"rtf\"\n        ]\n    },\n    \"text/sgml\": {\n        source: \"iana\",\n        extensions: [\n            \"sgml\",\n            \"sgm\"\n        ]\n    },\n    \"text/shex\": {\n        source: \"iana\",\n        extensions: [\n            \"shex\"\n        ]\n    },\n    \"text/spdx\": {\n        source: \"iana\",\n        extensions: [\n            \"spdx\"\n        ]\n    },\n    \"text/tab-separated-values\": {\n        source: \"iana\",\n        extensions: [\n            \"tsv\"\n        ]\n    },\n    \"text/troff\": {\n        source: \"iana\",\n        extensions: [\n            \"t\",\n            \"tr\",\n            \"roff\",\n            \"man\",\n            \"me\",\n            \"ms\"\n        ]\n    },\n    \"text/turtle\": {\n        source: \"iana\",\n        charset: \"UTF-8\",\n        extensions: [\n            \"ttl\"\n        ]\n    },\n    \"text/uri-list\": {\n        source: \"iana\",\n        extensions: [\n            \"uri\",\n            \"uris\",\n            \"urls\"\n        ]\n    },\n    \"text/vcard\": {\n        source: \"iana\",\n        extensions: [\n            \"vcard\"\n        ]\n    },\n    \"text/vnd.curl\": {\n        source: \"iana\",\n        extensions: [\n            \"curl\"\n        ]\n    },\n    \"text/vnd.curl.dcurl\": {\n        source: \"apache\",\n        extensions: [\n            \"dcurl\"\n        ]\n    },\n    \"text/vnd.curl.mcurl\": {\n        source: \"apache\",\n        extensions: [\n            \"mcurl\"\n        ]\n    },\n    \"text/vnd.curl.scurl\": {\n        source: \"apache\",\n        extensions: [\n            \"scurl\"\n        ]\n    },\n    \"text/vnd.dvb.subtitle\": {\n        source: \"iana\",\n        extensions: [\n            \"sub\"\n        ]\n    },\n    \"text/vnd.familysearch.gedcom\": {\n        source: \"iana\",\n        extensions: [\n            \"ged\"\n        ]\n    },\n    \"text/vnd.fly\": {\n        source: \"iana\",\n        extensions: [\n            \"fly\"\n        ]\n    },\n    \"text/vnd.fmi.flexstor\": {\n        source: \"iana\",\n        extensions: [\n            \"flx\"\n        ]\n    },\n    \"text/vnd.graphviz\": {\n        source: \"iana\",\n        extensions: [\n            \"gv\"\n        ]\n    },\n    \"text/vnd.in3d.3dml\": {\n        source: \"iana\",\n        extensions: [\n            \"3dml\"\n        ]\n    },\n    \"text/vnd.in3d.spot\": {\n        source: \"iana\",\n        extensions: [\n            \"spot\"\n        ]\n    },\n    \"text/vnd.sun.j2me.app-descriptor\": {\n        source: \"iana\",\n        charset: \"UTF-8\",\n        extensions: [\n            \"jad\"\n        ]\n    },\n    \"text/vnd.wap.wml\": {\n        source: \"iana\",\n        extensions: [\n            \"wml\"\n        ]\n    },\n    \"text/vnd.wap.wmlscript\": {\n        source: \"iana\",\n        extensions: [\n            \"wmls\"\n        ]\n    },\n    \"text/vtt\": {\n        source: \"iana\",\n        charset: \"UTF-8\",\n        extensions: [\n            \"vtt\"\n        ]\n    },\n    \"text/x-asm\": {\n        source: \"apache\",\n        extensions: [\n            \"s\",\n            \"asm\"\n        ]\n    },\n    \"text/x-c\": {\n        source: \"apache\",\n        extensions: [\n            \"c\",\n            \"cc\",\n            \"cxx\",\n            \"cpp\",\n            \"h\",\n            \"hh\",\n            \"dic\"\n        ]\n    },\n    \"text/x-component\": {\n        source: \"nginx\",\n        extensions: [\n            \"htc\"\n        ]\n    },\n    \"text/x-fortran\": {\n        source: \"apache\",\n        extensions: [\n            \"f\",\n            \"for\",\n            \"f77\",\n            \"f90\"\n        ]\n    },\n    \"text/x-java-source\": {\n        source: \"apache\",\n        extensions: [\n            \"java\"\n        ]\n    },\n    \"text/x-nfo\": {\n        source: \"apache\",\n        extensions: [\n            \"nfo\"\n        ]\n    },\n    \"text/x-opml\": {\n        source: \"apache\",\n        extensions: [\n            \"opml\"\n        ]\n    },\n    \"text/x-pascal\": {\n        source: \"apache\",\n        extensions: [\n            \"p\",\n            \"pas\"\n        ]\n    },\n    \"text/x-setext\": {\n        source: \"apache\",\n        extensions: [\n            \"etx\"\n        ]\n    },\n    \"text/x-sfv\": {\n        source: \"apache\",\n        extensions: [\n            \"sfv\"\n        ]\n    },\n    \"text/x-uuencode\": {\n        source: \"apache\",\n        extensions: [\n            \"uu\"\n        ]\n    },\n    \"text/x-vcalendar\": {\n        source: \"apache\",\n        extensions: [\n            \"vcs\"\n        ]\n    },\n    \"text/x-vcard\": {\n        source: \"apache\",\n        extensions: [\n            \"vcf\"\n        ]\n    },\n    \"text/xml\": {\n        source: \"iana\",\n        extensions: [\n            \"xml\"\n        ]\n    }\n};\n\nexport { text };\n"],"names":[],"mappings":";;;AAAA,MAAM,OAAO;IACT,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,iBAAiB;QACb,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,YAAY;QACR,QAAQ;QACR,SAAS;QACT,YAAY;YACR;SACH;IACL;IACA,YAAY;QACR,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,aAAa;QACT,QAAQ;QACR,YAAY;YACR;YACA;YACA;SACH;IACL;IACA,iBAAiB;QACb,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,eAAe;QACX,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,WAAW;QACP,QAAQ;QACR,SAAS;QACT,YAAY;YACR;SACH;IACL;IACA,cAAc;QACV,QAAQ;QACR,YAAY;YACR;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACH;IACL;IACA,sBAAsB;QAClB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iBAAiB;QACb,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,YAAY;QACR,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,aAAa;QACT,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,aAAa;QACT,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,aAAa;QACT,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,6BAA6B;QACzB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,cAAc;QACV,QAAQ;QACR,YAAY;YACR;YACA;YACA;YACA;YACA;YACA;SACH;IACL;IACA,eAAe;QACX,QAAQ;QACR,SAAS;QACT,YAAY;YACR;SACH;IACL;IACA,iBAAiB;QACb,QAAQ;QACR,YAAY;YACR;YACA;YACA;SACH;IACL;IACA,cAAc;QACV,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iBAAiB;QACb,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,yBAAyB;QACrB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gCAAgC;QAC5B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gBAAgB;QACZ,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,yBAAyB;QACrB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qBAAqB;QACjB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,sBAAsB;QAClB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,sBAAsB;QAClB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,oCAAoC;QAChC,QAAQ;QACR,SAAS;QACT,YAAY;YACR;SACH;IACL;IACA,oBAAoB;QAChB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0BAA0B;QACtB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,YAAY;QACR,QAAQ;QACR,SAAS;QACT,YAAY;YACR;SACH;IACL;IACA,cAAc;QACV,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,YAAY;QACR,QAAQ;QACR,YAAY;YACR;YACA;YACA;YACA;YACA;YACA;YACA;SACH;IACL;IACA,oBAAoB;QAChB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kBAAkB;QACd,QAAQ;QACR,YAAY;YACR;YACA;YACA;YACA;SACH;IACL;IACA,sBAAsB;QAClB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,cAAc;QACV,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,eAAe;QACX,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iBAAiB;QACb,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,iBAAiB;QACb,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,cAAc;QACV,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,mBAAmB;QACf,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,oBAAoB;QAChB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,gBAAgB;QACZ,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,YAAY;QACR,QAAQ;QACR,YAAY;YACR;SACH;IACL;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16562, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/%40uploadthing/mime-types/video/index.js"],"sourcesContent":["const video = {\n    \"video/3gpp\": {\n        source: \"iana\",\n        extensions: [\n            \"3gp\",\n            \"3gpp\"\n        ]\n    },\n    \"video/3gpp2\": {\n        source: \"iana\",\n        extensions: [\n            \"3g2\"\n        ]\n    },\n    \"video/h261\": {\n        source: \"iana\",\n        extensions: [\n            \"h261\"\n        ]\n    },\n    \"video/h263\": {\n        source: \"iana\",\n        extensions: [\n            \"h263\"\n        ]\n    },\n    \"video/h264\": {\n        source: \"iana\",\n        extensions: [\n            \"h264\"\n        ]\n    },\n    \"video/iso.segment\": {\n        source: \"iana\",\n        extensions: [\n            \"m4s\"\n        ]\n    },\n    \"video/jpeg\": {\n        source: \"iana\",\n        extensions: [\n            \"jpgv\"\n        ]\n    },\n    \"video/jpm\": {\n        source: \"apache\",\n        extensions: [\n            \"jpm\",\n            \"jpgm\"\n        ]\n    },\n    \"video/mj2\": {\n        source: \"iana\",\n        extensions: [\n            \"mj2\",\n            \"mjp2\"\n        ]\n    },\n    \"video/mp2t\": {\n        source: \"iana\",\n        extensions: [\n            \"ts\"\n        ]\n    },\n    \"video/mp4\": {\n        source: \"iana\",\n        extensions: [\n            \"mp4\",\n            \"mp4v\",\n            \"mpg4\"\n        ]\n    },\n    \"video/mpeg\": {\n        source: \"iana\",\n        extensions: [\n            \"mpeg\",\n            \"mpg\",\n            \"mpe\",\n            \"m1v\",\n            \"m2v\"\n        ]\n    },\n    \"video/ogg\": {\n        source: \"iana\",\n        extensions: [\n            \"ogv\"\n        ]\n    },\n    \"video/quicktime\": {\n        source: \"iana\",\n        extensions: [\n            \"qt\",\n            \"mov\"\n        ]\n    },\n    \"video/vnd.dece.hd\": {\n        source: \"iana\",\n        extensions: [\n            \"uvh\",\n            \"uvvh\"\n        ]\n    },\n    \"video/vnd.dece.mobile\": {\n        source: \"iana\",\n        extensions: [\n            \"uvm\",\n            \"uvvm\"\n        ]\n    },\n    \"video/vnd.dece.pd\": {\n        source: \"iana\",\n        extensions: [\n            \"uvp\",\n            \"uvvp\"\n        ]\n    },\n    \"video/vnd.dece.sd\": {\n        source: \"iana\",\n        extensions: [\n            \"uvs\",\n            \"uvvs\"\n        ]\n    },\n    \"video/vnd.dece.video\": {\n        source: \"iana\",\n        extensions: [\n            \"uvv\",\n            \"uvvv\"\n        ]\n    },\n    \"video/vnd.dvb.file\": {\n        source: \"iana\",\n        extensions: [\n            \"dvb\"\n        ]\n    },\n    \"video/vnd.fvt\": {\n        source: \"iana\",\n        extensions: [\n            \"fvt\"\n        ]\n    },\n    \"video/vnd.mpegurl\": {\n        source: \"iana\",\n        extensions: [\n            \"mxu\",\n            \"m4u\"\n        ]\n    },\n    \"video/vnd.ms-playready.media.pyv\": {\n        source: \"iana\",\n        extensions: [\n            \"pyv\"\n        ]\n    },\n    \"video/vnd.uvvu.mp4\": {\n        source: \"iana\",\n        extensions: [\n            \"uvu\",\n            \"uvvu\"\n        ]\n    },\n    \"video/vnd.vivo\": {\n        source: \"iana\",\n        extensions: [\n            \"viv\"\n        ]\n    },\n    \"video/webm\": {\n        source: \"apache\",\n        extensions: [\n            \"webm\"\n        ]\n    },\n    \"video/x-f4v\": {\n        source: \"apache\",\n        extensions: [\n            \"f4v\"\n        ]\n    },\n    \"video/x-fli\": {\n        source: \"apache\",\n        extensions: [\n            \"fli\"\n        ]\n    },\n    \"video/x-flv\": {\n        source: \"apache\",\n        extensions: [\n            \"flv\"\n        ]\n    },\n    \"video/x-m4v\": {\n        source: \"apache\",\n        extensions: [\n            \"m4v\"\n        ]\n    },\n    \"video/x-matroska\": {\n        source: \"apache\",\n        extensions: [\n            \"mkv\",\n            \"mk3d\",\n            \"mks\"\n        ]\n    },\n    \"video/x-mng\": {\n        source: \"apache\",\n        extensions: [\n            \"mng\"\n        ]\n    },\n    \"video/x-ms-asf\": {\n        source: \"apache\",\n        extensions: [\n            \"asf\",\n            \"asx\"\n        ]\n    },\n    \"video/x-ms-vob\": {\n        source: \"apache\",\n        extensions: [\n            \"vob\"\n        ]\n    },\n    \"video/x-ms-wm\": {\n        source: \"apache\",\n        extensions: [\n            \"wm\"\n        ]\n    },\n    \"video/x-ms-wmv\": {\n        source: \"apache\",\n        extensions: [\n            \"wmv\"\n        ]\n    },\n    \"video/x-ms-wmx\": {\n        source: \"apache\",\n        extensions: [\n            \"wmx\"\n        ]\n    },\n    \"video/x-ms-wvx\": {\n        source: \"apache\",\n        extensions: [\n            \"wvx\"\n        ]\n    },\n    \"video/x-msvideo\": {\n        source: \"apache\",\n        extensions: [\n            \"avi\"\n        ]\n    },\n    \"video/x-sgi-movie\": {\n        source: \"apache\",\n        extensions: [\n            \"movie\"\n        ]\n    },\n    \"video/x-smv\": {\n        source: \"apache\",\n        extensions: [\n            \"smv\"\n        ]\n    }\n};\n\nexport { video };\n"],"names":[],"mappings":";;;AAAA,MAAM,QAAQ;IACV,cAAc;QACV,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,eAAe;QACX,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,cAAc;QACV,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,cAAc;QACV,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,cAAc;QACV,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qBAAqB;QACjB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,cAAc;QACV,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,aAAa;QACT,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,aAAa;QACT,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,cAAc;QACV,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,aAAa;QACT,QAAQ;QACR,YAAY;YACR;YACA;YACA;SACH;IACL;IACA,cAAc;QACV,QAAQ;QACR,YAAY;YACR;YACA;YACA;YACA;YACA;SACH;IACL;IACA,aAAa;QACT,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,mBAAmB;QACf,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,qBAAqB;QACjB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,yBAAyB;QACrB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,qBAAqB;QACjB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,qBAAqB;QACjB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,wBAAwB;QACpB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,sBAAsB;QAClB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iBAAiB;QACb,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qBAAqB;QACjB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,oCAAoC;QAChC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,sBAAsB;QAClB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,kBAAkB;QACd,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,cAAc;QACV,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,eAAe;QACX,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,eAAe;QACX,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,eAAe;QACX,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,eAAe;QACX,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,oBAAoB;QAChB,QAAQ;QACR,YAAY;YACR;YACA;YACA;SACH;IACL;IACA,eAAe;QACX,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kBAAkB;QACd,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,kBAAkB;QACd,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iBAAiB;QACb,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kBAAkB;QACd,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kBAAkB;QACd,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kBAAkB;QACd,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,mBAAmB;QACf,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qBAAqB;QACjB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,eAAe;QACX,QAAQ;QACR,YAAY;YACR;SACH;IACL;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16840, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/%40uploadthing/mime-types/dist/index.js"],"sourcesContent":["import { application } from '../application/index.js';\nimport { audio } from '../audio/index.js';\nimport { image } from '../image/index.js';\nimport { text } from '../text/index.js';\nimport { video } from '../video/index.js';\n\n/**\n * Random types not worthy of their own file\n */ const misc = {\n    \"chemical/x-cdx\": {\n        source: \"apache\",\n        extensions: [\n            \"cdx\"\n        ]\n    },\n    \"chemical/x-cif\": {\n        source: \"apache\",\n        extensions: [\n            \"cif\"\n        ]\n    },\n    \"chemical/x-cmdf\": {\n        source: \"apache\",\n        extensions: [\n            \"cmdf\"\n        ]\n    },\n    \"chemical/x-cml\": {\n        source: \"apache\",\n        extensions: [\n            \"cml\"\n        ]\n    },\n    \"chemical/x-csml\": {\n        source: \"apache\",\n        extensions: [\n            \"csml\"\n        ]\n    },\n    \"chemical/x-xyz\": {\n        source: \"apache\",\n        extensions: [\n            \"xyz\"\n        ]\n    },\n    \"font/collection\": {\n        source: \"iana\",\n        extensions: [\n            \"ttc\"\n        ]\n    },\n    \"font/otf\": {\n        source: \"iana\",\n        extensions: [\n            \"otf\"\n        ]\n    },\n    \"font/ttf\": {\n        source: \"iana\",\n        extensions: [\n            \"ttf\"\n        ]\n    },\n    \"font/woff\": {\n        source: \"iana\",\n        extensions: [\n            \"woff\"\n        ]\n    },\n    \"font/woff2\": {\n        source: \"iana\",\n        extensions: [\n            \"woff2\"\n        ]\n    },\n    \"message/disposition-notification\": {\n        source: \"iana\",\n        extensions: [\n            \"disposition-notification\"\n        ]\n    },\n    \"message/global\": {\n        source: \"iana\",\n        extensions: [\n            \"u8msg\"\n        ]\n    },\n    \"message/global-delivery-status\": {\n        source: \"iana\",\n        extensions: [\n            \"u8dsn\"\n        ]\n    },\n    \"message/global-disposition-notification\": {\n        source: \"iana\",\n        extensions: [\n            \"u8mdn\"\n        ]\n    },\n    \"message/global-headers\": {\n        source: \"iana\",\n        extensions: [\n            \"u8hdr\"\n        ]\n    },\n    \"message/rfc822\": {\n        source: \"iana\",\n        extensions: [\n            \"eml\",\n            \"mime\"\n        ]\n    },\n    \"message/vnd.wfa.wsc\": {\n        source: \"iana\",\n        extensions: [\n            \"wsc\"\n        ]\n    },\n    \"model/3mf\": {\n        source: \"iana\",\n        extensions: [\n            \"3mf\"\n        ]\n    },\n    \"model/gltf+json\": {\n        source: \"iana\",\n        extensions: [\n            \"gltf\"\n        ]\n    },\n    \"model/gltf-binary\": {\n        source: \"iana\",\n        extensions: [\n            \"glb\"\n        ]\n    },\n    \"model/iges\": {\n        source: \"iana\",\n        extensions: [\n            \"igs\",\n            \"iges\"\n        ]\n    },\n    \"model/mesh\": {\n        source: \"iana\",\n        extensions: [\n            \"msh\",\n            \"mesh\",\n            \"silo\"\n        ]\n    },\n    \"model/mtl\": {\n        source: \"iana\",\n        extensions: [\n            \"mtl\"\n        ]\n    },\n    \"model/obj\": {\n        source: \"iana\",\n        extensions: [\n            \"obj\"\n        ]\n    },\n    \"model/step\": {\n        source: \"iana\",\n        extensions: [\n            \".p21\",\n            \".stp\",\n            \".step\",\n            \".stpnc\",\n            \".210\"\n        ]\n    },\n    \"model/step+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"stpx\"\n        ]\n    },\n    \"model/step+zip\": {\n        source: \"iana\",\n        extensions: [\n            \"stpz\"\n        ]\n    },\n    \"model/step-xml+zip\": {\n        source: \"iana\",\n        extensions: [\n            \"stpxz\"\n        ]\n    },\n    \"model/stl\": {\n        source: \"iana\",\n        extensions: [\n            \"stl\"\n        ]\n    },\n    \"model/vnd.collada+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"dae\"\n        ]\n    },\n    \"model/vnd.dwf\": {\n        source: \"iana\",\n        extensions: [\n            \"dwf\"\n        ]\n    },\n    \"model/vnd.gdl\": {\n        source: \"iana\",\n        extensions: [\n            \"gdl\"\n        ]\n    },\n    \"model/vnd.gtw\": {\n        source: \"iana\",\n        extensions: [\n            \"gtw\"\n        ]\n    },\n    \"model/vnd.mts\": {\n        source: \"iana\",\n        extensions: [\n            \"mts\"\n        ]\n    },\n    \"model/vnd.opengex\": {\n        source: \"iana\",\n        extensions: [\n            \"ogex\"\n        ]\n    },\n    \"model/vnd.parasolid.transmit.binary\": {\n        source: \"iana\",\n        extensions: [\n            \"x_b\"\n        ]\n    },\n    \"model/vnd.parasolid.transmit.text\": {\n        source: \"iana\",\n        extensions: [\n            \"x_t\"\n        ]\n    },\n    \"model/vnd.sap.vds\": {\n        source: \"iana\",\n        extensions: [\n            \"vds\"\n        ]\n    },\n    \"model/vnd.usdz+zip\": {\n        source: \"iana\",\n        extensions: [\n            \"usdz\"\n        ]\n    },\n    \"model/vnd.valve.source.compiled-map\": {\n        source: \"iana\",\n        extensions: [\n            \"bsp\"\n        ]\n    },\n    \"model/vnd.vtu\": {\n        source: \"iana\",\n        extensions: [\n            \"vtu\"\n        ]\n    },\n    \"model/vrml\": {\n        source: \"iana\",\n        extensions: [\n            \"wrl\",\n            \"vrml\"\n        ]\n    },\n    \"model/x3d+binary\": {\n        source: \"apache\",\n        extensions: [\n            \"x3db\",\n            \"x3dbz\"\n        ]\n    },\n    \"model/x3d+fastinfoset\": {\n        source: \"iana\",\n        extensions: [\n            \"x3db\"\n        ]\n    },\n    \"model/x3d+vrml\": {\n        source: \"apache\",\n        extensions: [\n            \"x3dv\",\n            \"x3dvz\"\n        ]\n    },\n    \"model/x3d+xml\": {\n        source: \"iana\",\n        extensions: [\n            \"x3d\",\n            \"x3dz\"\n        ]\n    },\n    \"model/x3d-vrml\": {\n        source: \"iana\",\n        extensions: [\n            \"x3dv\"\n        ]\n    },\n    \"x-conference/x-cooltalk\": {\n        source: \"apache\",\n        extensions: [\n            \"ice\"\n        ]\n    }\n};\n\nconst mimes = {\n    ...application,\n    ...audio,\n    ...image,\n    ...text,\n    ...video,\n    ...misc\n};\nconst mimeTypes = mimes;\nfunction extname(path) {\n    const index = path.lastIndexOf(\".\");\n    return index < 0 ? \"\" : path.substring(index);\n}\nconst extensions = {};\nconst types = {};\n// Introduce getters to improve tree-shakeability\nfunction getTypes() {\n    populateMaps(extensions, types);\n    return types;\n}\nfunction getExtensions() {\n    populateMaps(extensions, types);\n    return extensions;\n}\n/**\n * Lookup the MIME type for a file path/extension.\n */ function lookup(path) {\n    if (!path || typeof path !== \"string\") {\n        return false;\n    }\n    // get the extension (\"ext\" or \".ext\" or full path)\n    const extension = extname(\"x.\" + path).toLowerCase().substring(1);\n    if (!extension) {\n        return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    return getTypes()[extension] || false;\n}\nlet inittedMaps = false;\n/**\n * Populate the extensions and types maps.\n * @private\n */ function populateMaps(extensions, types) {\n    if (inittedMaps) return;\n    inittedMaps = true;\n    // source preference (least -> most)\n    const preference = [\n        \"nginx\",\n        \"apache\",\n        undefined,\n        \"iana\"\n    ];\n    Object.keys(mimeTypes).forEach((type)=>{\n        const mime = mimeTypes[type];\n        const exts = mime.extensions;\n        if (!exts.length) {\n            return;\n        }\n        // mime -> extensions\n        extensions[type] = exts;\n        // extension -> mime\n        for (const extension of exts){\n            if (extension in types) {\n                const from = preference.indexOf(mimeTypes[types[extension]].source);\n                const to = preference.indexOf(mime.source);\n                if (types[extension] !== \"application/octet-stream\" && (from > to || from === to && types[extension].startsWith(\"application/\"))) {\n                    continue;\n                }\n            }\n            // set the extension -> mime\n            types[extension] = type;\n        }\n    });\n}\n\nexport { getExtensions, getTypes, lookup, mimeTypes };\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;;AAEA;;CAEC,GAAG,MAAM,OAAO;IACb,kBAAkB;QACd,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kBAAkB;QACd,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,mBAAmB;QACf,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kBAAkB;QACd,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,mBAAmB;QACf,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kBAAkB;QACd,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,mBAAmB;QACf,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,YAAY;QACR,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,YAAY;QACR,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,aAAa;QACT,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,cAAc;QACV,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,oCAAoC;QAChC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kBAAkB;QACd,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kCAAkC;QAC9B,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2CAA2C;QACvC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,0BAA0B;QACtB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kBAAkB;QACd,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,uBAAuB;QACnB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,aAAa;QACT,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,mBAAmB;QACf,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qBAAqB;QACjB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,cAAc;QACV,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,cAAc;QACV,QAAQ;QACR,YAAY;YACR;YACA;YACA;SACH;IACL;IACA,aAAa;QACT,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,aAAa;QACT,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,cAAc;QACV,QAAQ;QACR,YAAY;YACR;YACA;YACA;YACA;YACA;SACH;IACL;IACA,kBAAkB;QACd,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kBAAkB;QACd,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,sBAAsB;QAClB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,aAAa;QACT,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,yBAAyB;QACrB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iBAAiB;QACb,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iBAAiB;QACb,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iBAAiB;QACb,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iBAAiB;QACb,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qBAAqB;QACjB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uCAAuC;QACnC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qCAAqC;QACjC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,qBAAqB;QACjB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,sBAAsB;QAClB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,uCAAuC;QACnC,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,iBAAiB;QACb,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,cAAc;QACV,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,oBAAoB;QAChB,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,yBAAyB;QACrB,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,kBAAkB;QACd,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,iBAAiB;QACb,QAAQ;QACR,YAAY;YACR;YACA;SACH;IACL;IACA,kBAAkB;QACd,QAAQ;QACR,YAAY;YACR;SACH;IACL;IACA,2BAA2B;QACvB,QAAQ;QACR,YAAY;YACR;SACH;IACL;AACJ;AAEA,MAAM,QAAQ;IACV,GAAG,sKAAA,CAAA,cAAW;IACd,GAAG,gKAAA,CAAA,QAAK;IACR,GAAG,gKAAA,CAAA,QAAK;IACR,GAAG,+JAAA,CAAA,OAAI;IACP,GAAG,gKAAA,CAAA,QAAK;IACR,GAAG,IAAI;AACX;AACA,MAAM,YAAY;AAClB,SAAS,QAAQ,IAAI;IACjB,MAAM,QAAQ,KAAK,WAAW,CAAC;IAC/B,OAAO,QAAQ,IAAI,KAAK,KAAK,SAAS,CAAC;AAC3C;AACA,MAAM,aAAa,CAAC;AACpB,MAAM,QAAQ,CAAC;AACf,iDAAiD;AACjD,SAAS;IACL,aAAa,YAAY;IACzB,OAAO;AACX;AACA,SAAS;IACL,aAAa,YAAY;IACzB,OAAO;AACX;AACA;;CAEC,GAAG,SAAS,OAAO,IAAI;IACpB,IAAI,CAAC,QAAQ,OAAO,SAAS,UAAU;QACnC,OAAO;IACX;IACA,mDAAmD;IACnD,MAAM,YAAY,QAAQ,OAAO,MAAM,WAAW,GAAG,SAAS,CAAC;IAC/D,IAAI,CAAC,WAAW;QACZ,OAAO;IACX;IACA,uEAAuE;IACvE,OAAO,UAAU,CAAC,UAAU,IAAI;AACpC;AACA,IAAI,cAAc;AAClB;;;CAGC,GAAG,SAAS,aAAa,UAAU,EAAE,KAAK;IACvC,IAAI,aAAa;IACjB,cAAc;IACd,oCAAoC;IACpC,MAAM,aAAa;QACf;QACA;QACA;QACA;KACH;IACD,OAAO,IAAI,CAAC,WAAW,OAAO,CAAC,CAAC;QAC5B,MAAM,OAAO,SAAS,CAAC,KAAK;QAC5B,MAAM,OAAO,KAAK,UAAU;QAC5B,IAAI,CAAC,KAAK,MAAM,EAAE;YACd;QACJ;QACA,qBAAqB;QACrB,UAAU,CAAC,KAAK,GAAG;QACnB,oBAAoB;QACpB,KAAK,MAAM,aAAa,KAAK;YACzB,IAAI,aAAa,OAAO;gBACpB,MAAM,OAAO,WAAW,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,MAAM;gBAClE,MAAM,KAAK,WAAW,OAAO,CAAC,KAAK,MAAM;gBACzC,IAAI,KAAK,CAAC,UAAU,KAAK,8BAA8B,CAAC,OAAO,MAAM,SAAS,MAAM,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,eAAe,GAAG;oBAC9H;gBACJ;YACJ;YACA,4BAA4B;YAC5B,KAAK,CAAC,UAAU,GAAG;QACvB;IACJ;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 17247, "column": 0}, "map": {"version":3,"file":"common.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/effect/src/internal/encoding/common.ts"],"sourcesContent":["import type * as Encoding from \"../../Encoding.js\"\nimport { hasProperty, isString } from \"../../Predicate.js\"\nimport type { Mutable } from \"../../Types.js\"\n\n/** @internal */\nexport const DecodeExceptionTypeId: Encoding.DecodeExceptionTypeId = Symbol.for(\n  \"effect/Encoding/errors/Decode\"\n) as Encoding.DecodeExceptionTypeId\n\n/** @internal */\nexport const DecodeException = (input: string, message?: string): Encoding.DecodeException => {\n  const out: Mutable<Encoding.DecodeException> = {\n    _tag: \"DecodeException\",\n    [DecodeExceptionTypeId]: DecodeExceptionTypeId,\n    input\n  }\n  if (isString(message)) {\n    out.message = message\n  }\n  return out\n}\n\n/** @internal */\nexport const isDecodeException = (u: unknown): u is Encoding.DecodeException => hasProperty(u, DecodeExceptionTypeId)\n\n/** @internal */\nexport const EncodeExceptionTypeId: Encoding.EncodeExceptionTypeId = Symbol.for(\n  \"effect/Encoding/errors/Encode\"\n) as Encoding.EncodeExceptionTypeId\n\n/** @internal */\nexport const EncodeException = (input: string, message?: string): Encoding.EncodeException => {\n  const out: Mutable<Encoding.EncodeException> = {\n    _tag: \"EncodeException\",\n    [EncodeExceptionTypeId]: EncodeExceptionTypeId,\n    input\n  }\n  if (isString(message)) {\n    out.message = message\n  }\n  return out\n}\n\n/** @internal */\nexport const isEncodeException = (u: unknown): u is Encoding.EncodeException => hasProperty(u, EncodeExceptionTypeId)\n\n/** @interal */\nexport const encoder = new TextEncoder()\n\n/** @interal */\nexport const decoder = new TextDecoder()\n"],"names":["hasProperty","isString","DecodeExceptionTypeId","Symbol","for","DecodeException","input","message","out","_tag","isDecodeException","u","EncodeExceptionTypeId","EncodeException","isEncodeException","encoder","TextEncoder","decoder","TextDecoder"],"mappings":";;;;;;;;;;AACA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,oBAAoB;;AAInD,MAAMC,qBAAqB,GAAA,WAAA,GAAmCC,MAAM,CAACC,GAAG,CAC7E,+BAA+B,CACE;AAG5B,MAAMC,eAAe,GAAGA,CAACC,KAAa,EAAEC,OAAgB,KAA8B;IAC3F,MAAMC,GAAG,GAAsC;QAC7CC,IAAI,EAAE,iBAAiB;QACvB,CAACP,qBAAqB,CAAA,EAAGA,qBAAqB;QAC9CI;KACD;IACD,2JAAIL,WAAAA,AAAQ,EAACM,OAAO,CAAC,EAAE;QACrBC,GAAG,CAACD,OAAO,GAAGA,OAAO;IACvB;IACA,OAAOC,GAAG;AACZ,CAAC;AAGM,MAAME,iBAAiB,IAAIC,CAAU,0JAAoCX,cAAAA,AAAW,EAACW,CAAC,EAAET,qBAAqB,CAAC;AAG9G,MAAMU,qBAAqB,GAAA,WAAA,GAAmCT,MAAM,CAACC,GAAG,CAC7E,+BAA+B,CACE;AAG5B,MAAMS,eAAe,GAAGA,CAACP,KAAa,EAAEC,OAAgB,KAA8B;IAC3F,MAAMC,GAAG,GAAsC;QAC7CC,IAAI,EAAE,iBAAiB;QACvB,CAACG,qBAAqB,CAAA,EAAGA,qBAAqB;QAC9CN;KACD;IACD,2JAAIL,WAAAA,AAAQ,EAACM,OAAO,CAAC,EAAE;QACrBC,GAAG,CAACD,OAAO,GAAGA,OAAO;IACvB;IACA,OAAOC,GAAG;AACZ,CAAC;AAGM,MAAMM,iBAAiB,IAAIH,CAAU,0JAAoCX,cAAAA,AAAW,EAACW,CAAC,EAAEC,qBAAqB,CAAC;AAG9G,MAAMG,OAAO,GAAA,WAAA,GAAG,IAAIC,WAAW,EAAE;AAGjC,MAAMC,OAAO,GAAA,WAAA,GAAG,IAAIC,WAAW,EAAE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 17293, "column": 0}, "map": {"version":3,"file":"base64.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/effect/src/internal/encoding/base64.ts"],"sourcesContent":["import * as Either from \"../../Either.js\"\nimport type * as Encoding from \"../../Encoding.js\"\nimport { DecodeException } from \"./common.js\"\n\n/** @internal */\nexport const encode = (bytes: Uint8Array) => {\n  const length = bytes.length\n\n  let result = \"\"\n  let i: number\n\n  for (i = 2; i < length; i += 3) {\n    result += base64abc[bytes[i - 2] >> 2]\n    result += base64abc[((bytes[i - 2] & 0x03) << 4) | (bytes[i - 1] >> 4)]\n    result += base64abc[((bytes[i - 1] & 0x0f) << 2) | (bytes[i] >> 6)]\n    result += base64abc[bytes[i] & 0x3f]\n  }\n\n  if (i === length + 1) {\n    // 1 octet yet to write\n    result += base64abc[bytes[i - 2] >> 2]\n    result += base64abc[(bytes[i - 2] & 0x03) << 4]\n    result += \"==\"\n  }\n\n  if (i === length) {\n    // 2 octets yet to write\n    result += base64abc[bytes[i - 2] >> 2]\n    result += base64abc[((bytes[i - 2] & 0x03) << 4) | (bytes[i - 1] >> 4)]\n    result += base64abc[(bytes[i - 1] & 0x0f) << 2]\n    result += \"=\"\n  }\n\n  return result\n}\n\n/** @internal */\nexport const decode = (str: string): Either.Either<Uint8Array, Encoding.DecodeException> => {\n  const stripped = stripCrlf(str)\n  const length = stripped.length\n  if (length % 4 !== 0) {\n    return Either.left(\n      DecodeException(stripped, `Length must be a multiple of 4, but is ${length}`)\n    )\n  }\n\n  const index = stripped.indexOf(\"=\")\n  if (index !== -1 && ((index < length - 2) || (index === length - 2 && stripped[length - 1] !== \"=\"))) {\n    return Either.left(\n      DecodeException(stripped, \"Found a '=' character, but it is not at the end\")\n    )\n  }\n\n  try {\n    const missingOctets = stripped.endsWith(\"==\") ? 2 : stripped.endsWith(\"=\") ? 1 : 0\n    const result = new Uint8Array(3 * (length / 4) - missingOctets)\n    for (let i = 0, j = 0; i < length; i += 4, j += 3) {\n      const buffer = getBase64Code(stripped.charCodeAt(i)) << 18 |\n        getBase64Code(stripped.charCodeAt(i + 1)) << 12 |\n        getBase64Code(stripped.charCodeAt(i + 2)) << 6 |\n        getBase64Code(stripped.charCodeAt(i + 3))\n\n      result[j] = buffer >> 16\n      result[j + 1] = (buffer >> 8) & 0xff\n      result[j + 2] = buffer & 0xff\n    }\n\n    return Either.right(result)\n  } catch (e) {\n    return Either.left(\n      DecodeException(stripped, e instanceof Error ? e.message : \"Invalid input\")\n    )\n  }\n}\n\n/** @internal */\nexport const stripCrlf = (str: string) => str.replace(/[\\n\\r]/g, \"\")\n\n/** @internal */\nfunction getBase64Code(charCode: number) {\n  if (charCode >= base64codes.length) {\n    throw new TypeError(`Invalid character ${String.fromCharCode(charCode)}`)\n  }\n\n  const code = base64codes[charCode]\n  if (code === 255) {\n    throw new TypeError(`Invalid character ${String.fromCharCode(charCode)}`)\n  }\n\n  return code\n}\n\n/** @internal */\nconst base64abc = [\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n  \"G\",\n  \"H\",\n  \"I\",\n  \"J\",\n  \"K\",\n  \"L\",\n  \"M\",\n  \"N\",\n  \"O\",\n  \"P\",\n  \"Q\",\n  \"R\",\n  \"S\",\n  \"T\",\n  \"U\",\n  \"V\",\n  \"W\",\n  \"X\",\n  \"Y\",\n  \"Z\",\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\",\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"+\",\n  \"/\"\n]\n\n/** @internal */\nconst base64codes = [\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  62,\n  255,\n  255,\n  255,\n  63,\n  52,\n  53,\n  54,\n  55,\n  56,\n  57,\n  58,\n  59,\n  60,\n  61,\n  255,\n  255,\n  255,\n  0,\n  255,\n  255,\n  255,\n  0,\n  1,\n  2,\n  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9,\n  10,\n  11,\n  12,\n  13,\n  14,\n  15,\n  16,\n  17,\n  18,\n  19,\n  20,\n  21,\n  22,\n  23,\n  24,\n  25,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  26,\n  27,\n  28,\n  29,\n  30,\n  31,\n  32,\n  33,\n  34,\n  35,\n  36,\n  37,\n  38,\n  39,\n  40,\n  41,\n  42,\n  43,\n  44,\n  45,\n  46,\n  47,\n  48,\n  49,\n  50,\n  51\n]\n"],"names":["Either","DecodeException","encode","bytes","length","result","i","base64abc","decode","str","stripped","stripCrlf","left","index","indexOf","missingOctets","endsWith","Uint8Array","j","buffer","getBase64Code","charCodeAt","right","e","Error","message","replace","charCode","base64codes","TypeError","String","fromCharCode","code"],"mappings":";;;;;AAAA,OAAO,KAAKA,MAAM,MAAM,iBAAiB;AAEzC,SAASC,eAAe,QAAQ,aAAa;;;AAGtC,MAAMC,MAAM,GAAIC,KAAiB,IAAI;IAC1C,MAAMC,MAAM,GAAGD,KAAK,CAACC,MAAM;IAE3B,IAAIC,MAAM,GAAG,EAAE;IACf,IAAIC,CAAS;IAEb,IAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,MAAM,EAAEE,CAAC,IAAI,CAAC,CAAE;QAC9BD,MAAM,IAAIE,SAAS,CAACJ,KAAK,CAACG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;QACtCD,MAAM,IAAIE,SAAS,CAAE,CAACJ,KAAK,CAACG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,GAAKH,KAAK,CAACG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAE,CAAC;QACvED,MAAM,IAAIE,SAAS,CAAE,CAACJ,KAAK,CAACG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,GAAKH,KAAK,CAACG,CAAC,CAAC,IAAI,CAAE,CAAC;QACnED,MAAM,IAAIE,SAAS,CAACJ,KAAK,CAACG,CAAC,CAAC,GAAG,IAAI,CAAC;IACtC;IAEA,IAAIA,CAAC,KAAKF,MAAM,GAAG,CAAC,EAAE;QACpB,uBAAA;QACAC,MAAM,IAAIE,SAAS,CAACJ,KAAK,CAACG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;QACtCD,MAAM,IAAIE,SAAS,CAAC,CAACJ,KAAK,CAACG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC;QAC/CD,MAAM,IAAI,IAAI;IAChB;IAEA,IAAIC,CAAC,KAAKF,MAAM,EAAE;QAChB,wBAAA;QACAC,MAAM,IAAIE,SAAS,CAACJ,KAAK,CAACG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;QACtCD,MAAM,IAAIE,SAAS,CAAE,CAACJ,KAAK,CAACG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,GAAKH,KAAK,CAACG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAE,CAAC;QACvED,MAAM,IAAIE,SAAS,CAAC,CAACJ,KAAK,CAACG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC;QAC/CD,MAAM,IAAI,GAAG;IACf;IAEA,OAAOA,MAAM;AACf,CAAC;AAGM,MAAMG,MAAM,IAAIC,GAAW,IAAyD;IACzF,MAAMC,QAAQ,GAAGC,SAAS,CAACF,GAAG,CAAC;IAC/B,MAAML,MAAM,GAAGM,QAAQ,CAACN,MAAM;IAC9B,IAAIA,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;QACpB,2JAAOJ,MAAM,CAACY,AAAI,GAChBX,6LAAAA,AAAe,EAACS,QAAQ,EAAE,CAAA,uCAAA,EAA0CN,MAAM,EAAE,CAAC,CAC9E;IACH;IAEA,MAAMS,KAAK,GAAGH,QAAQ,CAACI,OAAO,CAAC,GAAG,CAAC;IACnC,IAAID,KAAK,KAAK,CAAC,CAAC,IAAA,CAAMA,KAAK,GAAGT,MAAM,GAAG,CAAC,IAAMS,KAAK,KAAKT,MAAM,GAAG,CAAC,IAAIM,QAAQ,CAACN,MAAM,GAAG,CAAC,CAAC,KAAK,GAAI,CAAC,EAAE;QACpG,2JAAOJ,MAAM,CAACY,AAAI,MAChBX,0LAAAA,AAAe,EAACS,QAAQ,EAAE,iDAAiD,CAAC,CAC7E;IACH;IAEA,IAAI;QACF,MAAMK,aAAa,GAAGL,QAAQ,CAACM,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAGN,QAAQ,CAACM,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;QAClF,MAAMX,MAAM,GAAG,IAAIY,UAAU,CAAC,CAAC,GAAA,CAAIb,MAAM,GAAG,CAAC,CAAC,GAAGW,aAAa,CAAC;QAC/D,IAAK,IAAIT,CAAC,GAAG,CAAC,EAAEY,CAAC,GAAG,CAAC,EAAEZ,CAAC,GAAGF,MAAM,EAAEE,CAAC,IAAI,CAAC,EAAEY,CAAC,IAAI,CAAC,CAAE;YACjD,MAAMC,MAAM,GAAGC,aAAa,CAACV,QAAQ,CAACW,UAAU,CAACf,CAAC,CAAC,CAAC,IAAI,EAAE,GACxDc,aAAa,CAACV,QAAQ,CAACW,UAAU,CAACf,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,GAC/Cc,aAAa,CAACV,QAAQ,CAACW,UAAU,CAACf,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAC9Cc,aAAa,CAACV,QAAQ,CAACW,UAAU,CAACf,CAAC,GAAG,CAAC,CAAC,CAAC;YAE3CD,MAAM,CAACa,CAAC,CAAC,GAAGC,MAAM,IAAI,EAAE;YACxBd,MAAM,CAACa,CAAC,GAAG,CAAC,CAAC,GAAIC,MAAM,IAAI,CAAC,GAAI,IAAI;YACpCd,MAAM,CAACa,CAAC,GAAG,CAAC,CAAC,GAAGC,MAAM,GAAG,IAAI;QAC/B;QAEA,2JAAOnB,MAAM,CAACsB,CAAAA,AAAK,EAACjB,MAAM,CAAC;IAC7B,CAAC,CAAC,OAAOkB,CAAC,EAAE;QACV,QAAOvB,MAAM,CAACY,mJAAAA,AAAI,8KAChBX,kBAAAA,AAAe,EAACS,QAAQ,EAAEa,CAAC,YAAYC,KAAK,GAAGD,CAAC,CAACE,OAAO,GAAG,eAAe,CAAC,CAC5E;IACH;AACF,CAAC;AAGM,MAAMd,SAAS,IAAIF,GAAW,GAAKA,GAAG,CAACiB,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC;AAEpE,cAAA,GACA,SAASN,aAAaA,CAACO,QAAgB;IACrC,IAAIA,QAAQ,IAAIC,WAAW,CAACxB,MAAM,EAAE;QAClC,MAAM,IAAIyB,SAAS,CAAC,CAAA,kBAAA,EAAqBC,MAAM,CAACC,YAAY,CAACJ,QAAQ,CAAC,EAAE,CAAC;IAC3E;IAEA,MAAMK,IAAI,GAAGJ,WAAW,CAACD,QAAQ,CAAC;IAClC,IAAIK,IAAI,KAAK,GAAG,EAAE;QAChB,MAAM,IAAIH,SAAS,CAAC,CAAA,kBAAA,EAAqBC,MAAM,CAACC,YAAY,CAACJ,QAAQ,CAAC,EAAE,CAAC;IAC3E;IAEA,OAAOK,IAAI;AACb;AAEA,cAAA,GACA,MAAMzB,SAAS,GAAG;IAChcAAA,GACA,MAAMqB,WAAW,GAAG;IAClB,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,EAAE;IACF,GAAG;IACH,GAAG;IACH,GAAG;IACH,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,GAAG;IACH,GAAG;IACH,GAAG;IACH,CAAC;IACD,GAAG;IACH,GAAG;IACH,GAAG;IACH,CAAC;IACD,CAAC;IACD,CAAC;IACD,CAAC;IACD,CAAC;IACD,CAAC;IACD,CAAC;IACD,CAAC;IACD,CAAC;IACD,CAAC;IACD,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;IACF,EAAE;CACH","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 17559, "column": 0}, "map": {"version":3,"file":"base64Url.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/effect/src/internal/encoding/base64Url.ts"],"sourcesContent":["import * as Either from \"../../Either.js\"\nimport type * as Encoding from \"../../Encoding.js\"\nimport * as Base64 from \"./base64.js\"\nimport { DecodeException } from \"./common.js\"\n\n/** @internal */\nexport const encode = (data: Uint8Array) =>\n  Base64.encode(data).replace(/=/g, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\")\n\n/** @internal */\nexport const decode = (str: string): Either.Either<Uint8Array, Encoding.DecodeException> => {\n  const stripped = Base64.stripCrlf(str)\n  const length = stripped.length\n  if (length % 4 === 1) {\n    return Either.left(\n      DecodeException(stripped, `Length should be a multiple of 4, but is ${length}`)\n    )\n  }\n\n  if (!/^[-_A-Z0-9]*?={0,2}$/i.test(stripped)) {\n    return Either.left(DecodeException(stripped, \"Invalid input\"))\n  }\n\n  // Some variants allow or require omitting the padding '=' signs\n  let sanitized = length % 4 === 2 ? `${stripped}==` : length % 4 === 3 ? `${stripped}=` : stripped\n  sanitized = sanitized.replace(/-/g, \"+\").replace(/_/g, \"/\")\n\n  return Base64.decode(sanitized)\n}\n"],"names":["Either","Base64","DecodeException","encode","data","replace","decode","str","stripped","stripCrlf","length","left","test","sanitized"],"mappings":";;;;AAAA,OAAO,KAAKA,MAAM,MAAM,iBAAiB;AAEzC,OAAO,KAAKC,MAAM,MAAM,aAAa;AACrC,SAASC,eAAe,QAAQ,aAAa;;;;AAGtC,MAAMC,MAAM,IAAIC,IAAgB,+KACrCH,MAAM,CAACE,EAAAA,AAAM,EAACC,IAAI,CAAC,CAACC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAACA,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;AAGxE,MAAMC,MAAM,IAAIC,GAAW,IAAyD;IACzF,MAAMC,QAAQ,+KAAGP,MAAM,CAACQ,KAAAA,AAAS,EAACF,GAAG,CAAC;IACtC,MAAMG,MAAM,GAAGF,QAAQ,CAACE,MAAM;IAC9B,IAAIA,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;QACpB,2JAAOV,MAAM,CAACW,AAAI,GAChBT,6LAAAA,AAAe,EAACM,QAAQ,EAAE,CAAA,yCAAA,EAA4CE,MAAM,EAAE,CAAC,CAChF;IACH;IAEA,IAAI,CAAC,uBAAuB,CAACE,IAAI,CAACJ,QAAQ,CAAC,EAAE;QAC3C,2JAAOR,MAAM,CAACW,AAAI,8KAACT,kBAAAA,AAAe,EAACM,QAAQ,EAAE,eAAe,CAAC,CAAC;IAChE;IAEA,gEAAA;IACA,IAAIK,SAAS,GAAGH,MAAM,GAAG,CAAC,KAAK,CAAC,GAAG,GAAGF,QAAQ,CAAA,EAAA,CAAI,GAAGE,MAAM,GAAG,CAAC,KAAK,CAAC,GAAG,GAAGF,QAAQ,CAAA,CAAA,CAAG,GAAGA,QAAQ;IACjGK,SAAS,GAAGA,SAAS,CAACR,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;IAE3D,mLAAOJ,MAAM,CAACK,EAAAA,AAAM,EAACO,SAAS,CAAC;AACjC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 17590, "column": 0}, "map": {"version":3,"file":"hex.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/effect/src/internal/encoding/hex.ts"],"sourcesContent":["import * as Either from \"../../Either.js\"\nimport type * as Encoding from \"../../Encoding.js\"\nimport { DecodeException } from \"./common.js\"\n\n/** @internal */\nexport const encode = (bytes: Uint8Array) => {\n  let result = \"\"\n  for (let i = 0; i < bytes.length; ++i) {\n    result += bytesToHex[bytes[i]]\n  }\n\n  return result\n}\n\n/** @internal */\nexport const decode = (str: string): Either.Either<Uint8Array, Encoding.DecodeException> => {\n  const bytes = new TextEncoder().encode(str)\n  if (bytes.length % 2 !== 0) {\n    return Either.left(DecodeException(str, `Length must be a multiple of 2, but is ${bytes.length}`))\n  }\n\n  try {\n    const length = bytes.length / 2\n    const result = new Uint8Array(length)\n    for (let i = 0; i < length; i++) {\n      const a = fromHexChar(bytes[i * 2])\n      const b = fromHexChar(bytes[i * 2 + 1])\n      result[i] = (a << 4) | b\n    }\n\n    return Either.right(result)\n  } catch (e) {\n    return Either.left(DecodeException(str, e instanceof Error ? e.message : \"Invalid input\"))\n  }\n}\n\n/** @internal */\nconst bytesToHex = [\n  \"00\",\n  \"01\",\n  \"02\",\n  \"03\",\n  \"04\",\n  \"05\",\n  \"06\",\n  \"07\",\n  \"08\",\n  \"09\",\n  \"0a\",\n  \"0b\",\n  \"0c\",\n  \"0d\",\n  \"0e\",\n  \"0f\",\n  \"10\",\n  \"11\",\n  \"12\",\n  \"13\",\n  \"14\",\n  \"15\",\n  \"16\",\n  \"17\",\n  \"18\",\n  \"19\",\n  \"1a\",\n  \"1b\",\n  \"1c\",\n  \"1d\",\n  \"1e\",\n  \"1f\",\n  \"20\",\n  \"21\",\n  \"22\",\n  \"23\",\n  \"24\",\n  \"25\",\n  \"26\",\n  \"27\",\n  \"28\",\n  \"29\",\n  \"2a\",\n  \"2b\",\n  \"2c\",\n  \"2d\",\n  \"2e\",\n  \"2f\",\n  \"30\",\n  \"31\",\n  \"32\",\n  \"33\",\n  \"34\",\n  \"35\",\n  \"36\",\n  \"37\",\n  \"38\",\n  \"39\",\n  \"3a\",\n  \"3b\",\n  \"3c\",\n  \"3d\",\n  \"3e\",\n  \"3f\",\n  \"40\",\n  \"41\",\n  \"42\",\n  \"43\",\n  \"44\",\n  \"45\",\n  \"46\",\n  \"47\",\n  \"48\",\n  \"49\",\n  \"4a\",\n  \"4b\",\n  \"4c\",\n  \"4d\",\n  \"4e\",\n  \"4f\",\n  \"50\",\n  \"51\",\n  \"52\",\n  \"53\",\n  \"54\",\n  \"55\",\n  \"56\",\n  \"57\",\n  \"58\",\n  \"59\",\n  \"5a\",\n  \"5b\",\n  \"5c\",\n  \"5d\",\n  \"5e\",\n  \"5f\",\n  \"60\",\n  \"61\",\n  \"62\",\n  \"63\",\n  \"64\",\n  \"65\",\n  \"66\",\n  \"67\",\n  \"68\",\n  \"69\",\n  \"6a\",\n  \"6b\",\n  \"6c\",\n  \"6d\",\n  \"6e\",\n  \"6f\",\n  \"70\",\n  \"71\",\n  \"72\",\n  \"73\",\n  \"74\",\n  \"75\",\n  \"76\",\n  \"77\",\n  \"78\",\n  \"79\",\n  \"7a\",\n  \"7b\",\n  \"7c\",\n  \"7d\",\n  \"7e\",\n  \"7f\",\n  \"80\",\n  \"81\",\n  \"82\",\n  \"83\",\n  \"84\",\n  \"85\",\n  \"86\",\n  \"87\",\n  \"88\",\n  \"89\",\n  \"8a\",\n  \"8b\",\n  \"8c\",\n  \"8d\",\n  \"8e\",\n  \"8f\",\n  \"90\",\n  \"91\",\n  \"92\",\n  \"93\",\n  \"94\",\n  \"95\",\n  \"96\",\n  \"97\",\n  \"98\",\n  \"99\",\n  \"9a\",\n  \"9b\",\n  \"9c\",\n  \"9d\",\n  \"9e\",\n  \"9f\",\n  \"a0\",\n  \"a1\",\n  \"a2\",\n  \"a3\",\n  \"a4\",\n  \"a5\",\n  \"a6\",\n  \"a7\",\n  \"a8\",\n  \"a9\",\n  \"aa\",\n  \"ab\",\n  \"ac\",\n  \"ad\",\n  \"ae\",\n  \"af\",\n  \"b0\",\n  \"b1\",\n  \"b2\",\n  \"b3\",\n  \"b4\",\n  \"b5\",\n  \"b6\",\n  \"b7\",\n  \"b8\",\n  \"b9\",\n  \"ba\",\n  \"bb\",\n  \"bc\",\n  \"bd\",\n  \"be\",\n  \"bf\",\n  \"c0\",\n  \"c1\",\n  \"c2\",\n  \"c3\",\n  \"c4\",\n  \"c5\",\n  \"c6\",\n  \"c7\",\n  \"c8\",\n  \"c9\",\n  \"ca\",\n  \"cb\",\n  \"cc\",\n  \"cd\",\n  \"ce\",\n  \"cf\",\n  \"d0\",\n  \"d1\",\n  \"d2\",\n  \"d3\",\n  \"d4\",\n  \"d5\",\n  \"d6\",\n  \"d7\",\n  \"d8\",\n  \"d9\",\n  \"da\",\n  \"db\",\n  \"dc\",\n  \"dd\",\n  \"de\",\n  \"df\",\n  \"e0\",\n  \"e1\",\n  \"e2\",\n  \"e3\",\n  \"e4\",\n  \"e5\",\n  \"e6\",\n  \"e7\",\n  \"e8\",\n  \"e9\",\n  \"ea\",\n  \"eb\",\n  \"ec\",\n  \"ed\",\n  \"ee\",\n  \"ef\",\n  \"f0\",\n  \"f1\",\n  \"f2\",\n  \"f3\",\n  \"f4\",\n  \"f5\",\n  \"f6\",\n  \"f7\",\n  \"f8\",\n  \"f9\",\n  \"fa\",\n  \"fb\",\n  \"fc\",\n  \"fd\",\n  \"fe\",\n  \"ff\"\n]\n\n/** @internal */\nconst fromHexChar = (byte: number) => {\n  // '0' <= byte && byte <= '9'\n  if (48 <= byte && byte <= 57) {\n    return byte - 48\n  }\n\n  // 'a' <= byte && byte <= 'f'\n  if (97 <= byte && byte <= 102) {\n    return byte - 97 + 10\n  }\n\n  // 'A' <= byte && byte <= 'F'\n  if (65 <= byte && byte <= 70) {\n    return byte - 65 + 10\n  }\n\n  throw new TypeError(\"Invalid input\")\n}\n"],"names":["Either","DecodeException","encode","bytes","result","i","length","bytesToHex","decode","str","TextEncoder","left","Uint8Array","a","fromHexChar","b","right","e","Error","message","byte","TypeError"],"mappings":";;;;AAAA,OAAO,KAAKA,MAAM,MAAM,iBAAiB;AAEzC,SAASC,eAAe,QAAQ,aAAa;;;AAGtC,MAAMC,MAAM,GAAIC,KAAiB,IAAI;IAC1C,IAAIC,MAAM,GAAG,EAAE;IACf,IAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,KAAK,CAACG,MAAM,EAAE,EAAED,CAAC,CAAE;QACrCD,MAAM,IAAIG,UAAU,CAACJ,KAAK,CAACE,CAAC,CAAC,CAAC;IAChC;IAEA,OAAOD,MAAM;AACf,CAAC;AAGM,MAAMI,MAAM,IAAIC,GAAW,IAAyD;IACzF,MAAMN,KAAK,GAAG,IAAIO,WAAW,EAAE,CAACR,MAAM,CAACO,GAAG,CAAC;IAC3C,IAAIN,KAAK,CAACG,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;QAC1B,2JAAON,MAAM,CAACW,AAAI,8KAACV,kBAAAA,AAAe,EAACQ,GAAG,EAAE,CAAA,uCAAA,EAA0CN,KAAK,CAACG,MAAM,EAAE,CAAC,CAAC;IACpG;IAEA,IAAI;QACF,MAAMA,MAAM,GAAGH,KAAK,CAACG,MAAM,GAAG,CAAC;QAC/B,MAAMF,MAAM,GAAG,IAAIQ,UAAU,CAACN,MAAM,CAAC;QACrC,IAAK,IAAID,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,MAAM,EAAED,CAAC,EAAE,CAAE;YAC/B,MAAMQ,CAAC,GAAGC,WAAW,CAACX,KAAK,CAACE,CAAC,GAAG,CAAC,CAAC,CAAC;YACnC,MAAMU,CAAC,GAAGD,WAAW,CAACX,KAAK,CAACE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YACvCD,MAAM,CAACC,CAAC,CAAC,GAAIQ,CAAC,IAAI,CAAC,GAAIE,CAAC;QAC1B;QAEA,2JAAOf,MAAM,CAACgB,CAAAA,AAAK,EAACZ,MAAM,CAAC;IAC7B,CAAC,CAAC,OAAOa,CAAC,EAAE;QACV,2JAAOjB,MAAM,CAACW,AAAI,GAACV,6LAAAA,AAAe,EAACQ,GAAG,EAAEQ,CAAC,YAAYC,KAAK,GAAGD,CAAC,CAACE,OAAO,GAAG,eAAe,CAAC,CAAC;IAC5F;AACF,CAAC;AAED,cAAA,GACA,MAAMZ,UAAU,GAAG;IACjcAAA,GACA,MAAMO,WAAW,IAAIM,IAAY,IAAI;IACnC,6BAAA;IACA,IAAI,EAAE,IAAIA,IAAI,IAAIA,IAAI,IAAI,EAAE,EAAE;QAC5B,OAAOA,IAAI,GAAG,EAAE;IAClB;IAEA,6BAAA;IACA,IAAI,EAAE,IAAIA,IAAI,IAAIA,IAAI,IAAI,GAAG,EAAE;QAC7B,OAAOA,IAAI,GAAG,EAAE,GAAG,EAAE;IACvB;IAEA,6BAAA;IACA,IAAI,EAAE,IAAIA,IAAI,IAAIA,IAAI,IAAI,EAAE,EAAE;QAC5B,OAAOA,IAAI,GAAG,EAAE,GAAG,EAAE;IACvB;IAEA,MAAM,IAAIC,SAAS,CAAC,eAAe,CAAC;AACtC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 17902, "column": 0}, "map": {"version":3,"file":"Encoding.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/effect/src/Encoding.ts"],"sourcesContent":["/**\n * This module provides encoding & decoding functionality for:\n *\n * - base64 (RFC4648)\n * - base64 (URL)\n * - hex\n *\n * @since 2.0.0\n */\nimport * as Either from \"./Either.js\"\nimport * as Base64 from \"./internal/encoding/base64.js\"\nimport * as Base64Url from \"./internal/encoding/base64Url.js\"\nimport * as Common from \"./internal/encoding/common.js\"\nimport * as Hex from \"./internal/encoding/hex.js\"\n\n/**\n * Encodes the given value into a base64 (RFC4648) `string`.\n *\n * @category encoding\n * @since 2.0.0\n */\nexport const encodeBase64: (input: Uint8Array | string) => string = (input) =>\n  typeof input === \"string\" ? Base64.encode(Common.encoder.encode(input)) : Base64.encode(input)\n\n/**\n * Decodes a base64 (RFC4648) encoded `string` into a `Uint8Array`.\n *\n * @category decoding\n * @since 2.0.0\n */\nexport const decodeBase64 = (str: string): Either.Either<Uint8Array, DecodeException> => Base64.decode(str)\n\n/**\n * Decodes a base64 (RFC4648) encoded `string` into a UTF-8 `string`.\n *\n * @category decoding\n * @since 2.0.0\n */\nexport const decodeBase64String = (str: string) => Either.map(decodeBase64(str), (_) => Common.decoder.decode(_))\n\n/**\n * Encodes the given value into a base64 (URL) `string`.\n *\n * @category encoding\n * @since 2.0.0\n */\nexport const encodeBase64Url: (input: Uint8Array | string) => string = (input) =>\n  typeof input === \"string\" ? Base64Url.encode(Common.encoder.encode(input)) : Base64Url.encode(input)\n\n/**\n * Decodes a base64 (URL) encoded `string` into a `Uint8Array`.\n *\n * @category decoding\n * @since 2.0.0\n */\nexport const decodeBase64Url = (str: string): Either.Either<Uint8Array, DecodeException> => Base64Url.decode(str)\n\n/**\n * Decodes a base64 (URL) encoded `string` into a UTF-8 `string`.\n *\n * @category decoding\n * @since 2.0.0\n */\nexport const decodeBase64UrlString = (str: string) => Either.map(decodeBase64Url(str), (_) => Common.decoder.decode(_))\n\n/**\n * Encodes the given value into a hex `string`.\n *\n * @category encoding\n * @since 2.0.0\n */\nexport const encodeHex: (input: Uint8Array | string) => string = (input) =>\n  typeof input === \"string\" ? Hex.encode(Common.encoder.encode(input)) : Hex.encode(input)\n\n/**\n * Decodes a hex encoded `string` into a `Uint8Array`.\n *\n * @category decoding\n * @since 2.0.0\n */\nexport const decodeHex = (str: string): Either.Either<Uint8Array, DecodeException> => Hex.decode(str)\n\n/**\n * Decodes a hex encoded `string` into a UTF-8 `string`.\n *\n * @category decoding\n * @since 2.0.0\n */\nexport const decodeHexString = (str: string) => Either.map(decodeHex(str), (_) => Common.decoder.decode(_))\n\n/**\n * Encodes a UTF-8 `string` into a URI component `string`.\n *\n * @category encoding\n * @since 3.12.0\n */\nexport const encodeUriComponent = (str: string): Either.Either<string, EncodeException> =>\n  Either.try({\n    try: () => encodeURIComponent(str),\n    catch: (e) => EncodeException(str, e instanceof Error ? e.message : \"Invalid input\")\n  })\n\n/**\n * Decodes a URI component `string` into a UTF-8 `string`.\n *\n * @category decoding\n * @since 3.12.0\n */\nexport const decodeUriComponent = (str: string): Either.Either<string, DecodeException> =>\n  Either.try({\n    try: () => decodeURIComponent(str),\n    catch: (e) => DecodeException(str, e instanceof Error ? e.message : \"Invalid input\")\n  })\n\n/**\n * @since 2.0.0\n * @category symbols\n */\nexport const DecodeExceptionTypeId: unique symbol = Common.DecodeExceptionTypeId\n\n/**\n * @since 2.0.0\n * @category symbols\n */\nexport type DecodeExceptionTypeId = typeof DecodeExceptionTypeId\n\n/**\n * Represents a checked exception which occurs when decoding fails.\n *\n * @since 2.0.0\n * @category models\n */\nexport interface DecodeException {\n  readonly _tag: \"DecodeException\"\n  readonly [DecodeExceptionTypeId]: DecodeExceptionTypeId\n  readonly input: string\n  readonly message?: string\n}\n\n/**\n * Creates a checked exception which occurs when decoding fails.\n *\n * @since 2.0.0\n * @category errors\n */\nexport const DecodeException: (input: string, message?: string) => DecodeException = Common.DecodeException\n\n/**\n * Returns `true` if the specified value is an `DecodeException`, `false` otherwise.\n *\n * @since 2.0.0\n * @category refinements\n */\nexport const isDecodeException: (u: unknown) => u is DecodeException = Common.isDecodeException\n\n/**\n * @since 3.12.0\n * @category symbols\n */\nexport const EncodeExceptionTypeId: unique symbol = Common.EncodeExceptionTypeId\n\n/**\n * @since 3.12.0\n * @category symbols\n */\nexport type EncodeExceptionTypeId = typeof EncodeExceptionTypeId\n\n/**\n * Represents a checked exception which occurs when encoding fails.\n *\n * @since 3.12.0\n * @category models\n */\nexport interface EncodeException {\n  readonly _tag: \"EncodeException\"\n  readonly [EncodeExceptionTypeId]: EncodeExceptionTypeId\n  readonly input: string\n  readonly message?: string\n}\n\n/**\n * Creates a checked exception which occurs when encoding fails.\n *\n * @since 3.12.0\n * @category errors\n */\nexport const EncodeException: (input: string, message?: string) => EncodeException = Common.EncodeException\n\n/**\n * Returns `true` if the specified value is an `EncodeException`, `false` otherwise.\n *\n * @since 3.12.0\n * @category refinements\n */\nexport const isEncodeException: (u: unknown) => u is EncodeException = Common.isEncodeException\n"],"names":["Either","Base64","Base64Url","Common","Hex","encodeBase64","input","encode","encoder","decodeBase64","str","decode","decodeBase64String","map","_","decoder","encodeBase64Url","decodeBase64Url","decodeBase64UrlString","encodeHex","decodeHex","decodeHexString","encodeUriComponent","try","encodeURIComponent","catch","e","EncodeException","Error","message","decodeUriComponent","decodeURIComponent","DecodeException","DecodeExceptionTypeId","isDecodeException","EncodeExceptionTypeId","isEncodeException"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA,OAAO,KAAKA,MAAM,MAAM,aAAa;AACrC,OAAO,KAAKC,MAAM,MAAM,+BAA+B;AACvD,OAAO,KAAKC,SAAS,MAAM,kCAAkC;AAC7D,OAAO,KAAKC,MAAM,MAAM,+BAA+B;AACvD,OAAO,KAAKC,GAAG,MAAM,4BAA4B;;;;;;AAQ1C,MAAMC,YAAY,IAA4CC,KAAK,GACxE,OAAOA,KAAK,KAAK,QAAQ,+KAAGL,MAAM,CAACM,EAAAA,AAAM,EAACJ,MAAM,CAACK,2KAAO,CAACD,MAAM,CAACD,KAAK,CAAC,CAAC,+KAAGL,MAAM,CAACM,EAAAA,AAAM,EAACD,KAAK,CAAC;AAQzF,MAAMG,YAAY,IAAIC,GAAW,+KAAiDT,MAAM,CAACU,EAAAA,AAAM,EAACD,GAAG,CAAC;AAQpG,MAAME,kBAAkB,IAAIF,GAAW,uJAAKV,MAAM,AAACa,AAAG,CAAHA,CAAIJ,YAAY,CAACC,GAAG,CAAC,GAAGI,CAAC,2KAAKX,MAAM,CAACY,GAAO,CAACJ,MAAM,CAACG,CAAC,CAAC,CAAC;AAQ1G,MAAME,eAAe,IAA4CV,KAAK,GAC3E,OAAOA,KAAK,KAAK,QAAQ,kLAAGJ,SAAUK,AAAM,AAAP,CAACA,CAAOJ,MAAM,CAACK,2KAAO,CAACD,MAAM,CAACD,KAAK,CAAC,CAAC,kLAAGJ,SAAS,AAACK,AAAM,CAANA,CAAOD,KAAK,CAAC;AAQ/F,MAAMW,eAAe,IAAIP,GAAW,OAAiDR,SAAS,CAACS,0KAAAA,AAAM,EAACD,GAAG,CAAC;AAQ1G,MAAMQ,qBAAqB,IAAIR,GAAW,uJAAKV,MAAM,AAACa,AAAG,CAAHA,CAAII,eAAe,CAACP,GAAG,CAAC,GAAGI,CAAC,0KAAKX,MAAM,CAACY,IAAO,CAACJ,MAAM,CAACG,CAAC,CAAC,CAAC;AAQhH,MAAMK,SAAS,IAA4Cb,KAAK,GACrE,OAAOA,KAAK,KAAK,QAAQ,4KAAGF,GAAG,CAACG,KAAAA,AAAM,0KAACJ,MAAM,CAACK,GAAO,CAACD,MAAM,CAACD,KAAK,CAAC,CAAC,4KAAGF,GAAG,CAACG,KAAM,AAANA,EAAOD,KAAK,CAAC;AAQnF,MAAMc,SAAS,IAAIV,GAAW,4KAAiDN,GAAG,CAACO,KAAAA,AAAM,EAACD,GAAG,CAAC;AAQ9F,MAAMW,eAAe,IAAIX,GAAW,OAAKV,MAAM,CAACa,+IAAAA,AAAG,EAACO,SAAS,CAACV,GAAG,CAAC,GAAGI,CAAC,2KAAKX,MAAM,CAACY,GAAO,CAACJ,MAAM,CAACG,CAAC,CAAC,CAAC;AAQpG,MAAMQ,kBAAkB,GAAIZ,GAAW,wJAC5CV,MAAOuB,AAAG,AAAJ,CAACA,CAAI;QACTA,GAAG,EAAEA,CAAA,GAAMC,kBAAkB,CAACd,GAAG,CAAC;QAClCe,KAAK,GAAGC,CAAC,GAAKC,eAAe,CAACjB,GAAG,EAAEgB,CAAC,YAAYE,KAAK,GAAGF,CAAC,CAACG,OAAO,GAAG,eAAe;KACpF,CAAC;AAQG,MAAMC,kBAAkB,IAAIpB,GAAW,IAC5CV,MAAM,CAACuB,kJAAAA,AAAG,EAAC;QACTA,GAAG,EAAEA,CAAA,GAAMQ,kBAAkB,CAACrB,GAAG,CAAC;QAClCe,KAAK,GAAGC,CAAC,GAAKM,eAAe,CAACtB,GAAG,EAAEgB,CAAC,YAAYE,KAAK,GAAGF,CAAC,CAACG,OAAO,GAAG,eAAe;KACpF,CAAC;AAMG,MAAMI,qBAAqB,2KAAkB9B,MAAM,CAAC8B,iBAAqB;AA2BzE,MAAMD,eAAe,2KAAyD7B,MAAM,CAAC6B,WAAe;AAQpG,MAAME,iBAAiB,2KAAyC/B,MAAM,CAAC+B,aAAiB;AAMxF,MAAMC,qBAAqB,2KAAkBhC,MAAM,CAACgC,iBAAqB;AA2BzE,MAAMR,eAAe,2KAAyDxB,MAAM,CAACwB,WAAe;AAQpG,MAAMS,iBAAiB,2KAAyCjC,MAAM,CAACiC,aAAiB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 17968, "column": 0}, "map": {"version":3,"file":"redacted.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/effect/src/internal/redacted.ts"],"sourcesContent":["import * as Equal from \"../Equal.js\"\nimport { pipe } from \"../Function.js\"\nimport { globalValue } from \"../GlobalValue.js\"\nimport * as Hash from \"../Hash.js\"\nimport { NodeInspectSymbol } from \"../Inspectable.js\"\nimport { pipeArguments } from \"../Pipeable.js\"\nimport { hasProperty } from \"../Predicate.js\"\nimport type * as Redacted from \"../Redacted.js\"\n\n/** @internal */\nconst RedactedSymbolKey = \"effect/Redacted\"\n\n/** @internal */\nexport const redactedRegistry = globalValue(\n  \"effect/Redacted/redactedRegistry\",\n  () => new WeakMap<Redacted.Redacted<any>, any>()\n)\n\n/** @internal */\nexport const RedactedTypeId: Redacted.RedactedTypeId = Symbol.for(\n  RedactedSymbolKey\n) as Redacted.RedactedTypeId\n\n/** @internal */\nexport const proto = {\n  [RedactedTypeId]: {\n    _A: (_: never) => _\n  },\n  pipe() {\n    return pipeArguments(this, arguments)\n  },\n  toString() {\n    return \"<redacted>\"\n  },\n  toJSON() {\n    return \"<redacted>\"\n  },\n  [NodeInspectSymbol]() {\n    return \"<redacted>\"\n  },\n  [Hash.symbol]<T>(this: Redacted.Redacted<T>): number {\n    return pipe(\n      Hash.hash(RedactedSymbolKey),\n      Hash.combine(Hash.hash(redactedRegistry.get(this))),\n      Hash.cached(this)\n    )\n  },\n  [Equal.symbol]<T>(this: Redacted.Redacted<T>, that: unknown): boolean {\n    return isRedacted(that) && Equal.equals(redactedRegistry.get(this), redactedRegistry.get(that))\n  }\n}\n\n/** @internal */\nexport const isRedacted = (u: unknown): u is Redacted.Redacted<unknown> => hasProperty(u, RedactedTypeId)\n\n/** @internal */\nexport const make = <T>(value: T): Redacted.Redacted<T> => {\n  const redacted = Object.create(proto)\n  redactedRegistry.set(redacted, value)\n  return redacted\n}\n\n/** @internal */\nexport const value = <T>(self: Redacted.Redacted<T>): T => {\n  if (redactedRegistry.has(self)) {\n    return redactedRegistry.get(self)\n  } else {\n    throw new Error(\"Unable to get redacted value\")\n  }\n}\n\n/** @internal */\nexport const unsafeWipe = <T>(self: Redacted.Redacted<T>): boolean => redactedRegistry.delete(self)\n"],"names":["Equal","pipe","globalValue","Hash","NodeInspectSymbol","pipeArguments","hasProperty","RedactedSymbolKey","redactedRegistry","WeakMap","RedactedTypeId","Symbol","for","proto","_A","_","arguments","toString","toJSON","symbol","hash","combine","get","cached","that","isRedacted","equals","u","make","value","redacted","Object","create","set","self","has","Error","unsafeWipe","delete"],"mappings":";;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,aAAa;AACpC,SAASC,IAAI,QAAQ,gBAAgB;AACrC,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,OAAO,KAAKC,IAAI,MAAM,YAAY;AAClC,SAASC,iBAAiB,QAAQ,mBAAmB;AACrD,SAASC,aAAa,QAAQ,gBAAgB;AAC9C,SAASC,WAAW,QAAQ,iBAAiB;;;;;;;;AAG7C,cAAA,GACA,MAAMC,iBAAiB,GAAG,iBAAiB;AAGpC,MAAMC,gBAAgB,GAAA,WAAA,4JAAGN,cAAAA,AAAW,EACzC,kCAAkC,EAClC,IAAM,IAAIO,OAAO,EAA+B,CACjD;AAGM,MAAMC,cAAc,GAAA,WAAA,GAA4BC,MAAM,CAACC,GAAG,CAC/DL,iBAAiB,CACS;AAGrB,MAAMM,KAAK,GAAG;IACnB,CAACH,cAAc,CAAA,EAAG;QAChBI,EAAE,GAAGC,CAAQ,GAAKA;KACnB;IACDd,IAAIA,CAAA;QACF,6JAAOI,gBAAAA,AAAa,EAAC,IAAI,EAAEW,SAAS,CAAC;IACvC,CAAC;IACDC,QAAQA,CAAA;QACN,OAAO,YAAY;IACrB,CAAC;IACDC,MAAMA,CAAA;QACJ,OAAO,YAAY;IACrB,CAAC;IACD,sJAACd,oBAAiB,CAAA,GAAC;QACjB,OAAO,YAAY;IACrB,CAAC;IACD,+IAACD,IAAI,CAACgB,IAAM,CAAA,GAAC;QACX,6JAAOlB,OAAAA,AAAI,GACTE,IAAI,CAACiB,mJAAAA,AAAI,EAACb,iBAAiB,CAAC,oJAC5BJ,IAAI,CAACkB,KAAAA,AAAO,oJAAClB,IAAI,CAACiB,EAAAA,AAAI,EAACZ,gBAAgB,CAACc,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GACnDnB,IAAI,CAACoB,qJAAAA,AAAM,EAAC,IAAI,CAAC,CAClB;IACH,CAAC;IACD,gJAACvB,KAAK,CAACmB,GAAM,CAAA,EAAiCK,IAAa;QACzD,OAAOC,UAAU,CAACD,IAAI,CAAC,uJAAIxB,KAAK,CAAC0B,GAAAA,AAAM,EAAClB,gBAAgB,CAACc,GAAG,CAAC,IAAI,CAAC,EAAEd,gBAAgB,CAACc,GAAG,CAACE,IAAI,CAAC,CAAC;IACjG;CACD;AAGM,MAAMC,UAAU,IAAIE,CAAU,0JAAsCrB,cAAAA,AAAW,EAACqB,CAAC,EAAEjB,cAAc,CAAC;AAGlG,MAAMkB,IAAI,GAAOC,KAAQ,IAA0B;IACxD,MAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAM,CAACnB,KAAK,CAAC;IACrCL,gBAAgB,CAACyB,GAAG,CAACH,QAAQ,EAAED,KAAK,CAAC;IACrC,OAAOC,QAAQ;AACjB,CAAC;AAGM,MAAMD,KAAK,IAAOK,IAA0B,IAAO;IACxD,IAAI1B,gBAAgB,CAAC2B,GAAG,CAACD,IAAI,CAAC,EAAE;QAC9B,OAAO1B,gBAAgB,CAACc,GAAG,CAACY,IAAI,CAAC;IACnC,CAAC,MAAM;QACL,MAAM,IAAIE,KAAK,CAAC,8BAA8B,CAAC;IACjD;AACF,CAAC;AAGM,MAAMC,UAAU,IAAOH,IAA0B,GAAc1B,gBAAgB,CAAC8B,MAAM,CAACJ,IAAI,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 18037, "column": 0}, "map": {"version":3,"file":"Redacted.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/effect/src/Redacted.ts"],"sourcesContent":["/**\n * The Redacted module provides functionality for handling sensitive information\n * securely within your application. By using the `Redacted` data type, you can\n * ensure that sensitive values are not accidentally exposed in logs or error\n * messages.\n *\n * @since 3.3.0\n */\nimport type * as Equal from \"./Equal.js\"\nimport * as Equivalence from \"./Equivalence.js\"\nimport * as redacted_ from \"./internal/redacted.js\"\nimport type { Pipeable } from \"./Pipeable.js\"\nimport type { Covariant } from \"./Types.js\"\n\n/**\n * @since 3.3.0\n * @category symbols\n */\nexport const RedactedTypeId: unique symbol = redacted_.RedactedTypeId\n\n/**\n * @since 3.3.0\n * @category symbols\n */\nexport type RedactedTypeId = typeof RedactedTypeId\n\n/**\n * @since 3.3.0\n * @category models\n */\nexport interface Redacted<out A = string> extends Redacted.Variance<A>, Equal.Equal, Pipeable {\n}\n\n/**\n * @since 3.3.0\n */\nexport declare namespace Redacted {\n  /**\n   * @since 3.3.0\n   * @category models\n   */\n  export interface Variance<out A> {\n    readonly [RedactedTypeId]: {\n      readonly _A: Covariant<A>\n    }\n  }\n\n  /**\n   * @since 3.3.0\n   * @category type-level\n   */\n  export type Value<T extends Redacted<any>> = [T] extends [Redacted<infer _A>] ? _A : never\n}\n\n/**\n * @since 3.3.0\n * @category refinements\n */\nexport const isRedacted: (u: unknown) => u is Redacted<unknown> = redacted_.isRedacted\n\n/**\n * This function creates a `Redacted<A>` instance from a given value `A`,\n * securely hiding its content.\n *\n * @example\n * ```ts\n * import { Redacted } from \"effect\"\n *\n * const API_KEY = Redacted.make(\"1234567890\")\n * ```\n *\n * @since 3.3.0\n * @category constructors\n */\nexport const make: <A>(value: A) => Redacted<A> = redacted_.make\n\n/**\n * Retrieves the original value from a `Redacted` instance. Use this function\n * with caution, as it exposes the sensitive data.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Redacted } from \"effect\"\n *\n * const API_KEY = Redacted.make(\"1234567890\")\n *\n * assert.equal(Redacted.value(API_KEY), \"1234567890\")\n * ```\n *\n * @since 3.3.0\n * @category getters\n */\nexport const value: <A>(self: Redacted<A>) => A = redacted_.value\n\n/**\n * Erases the underlying value of a `Redacted` instance, rendering it unusable.\n * This function is intended to ensure that sensitive data does not remain in\n * memory longer than necessary.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Redacted } from \"effect\"\n *\n * const API_KEY = Redacted.make(\"1234567890\")\n *\n * assert.equal(Redacted.value(API_KEY), \"1234567890\")\n *\n * Redacted.unsafeWipe(API_KEY)\n *\n * assert.throws(() => Redacted.value(API_KEY), new Error(\"Unable to get redacted value\"))\n * ```\n *\n * @since 3.3.0\n * @category unsafe\n */\nexport const unsafeWipe: <A>(self: Redacted<A>) => boolean = redacted_.unsafeWipe\n\n/**\n * Generates an equivalence relation for `Redacted<A>` values based on an\n * equivalence relation for the underlying values `A`. This function is useful\n * for comparing `Redacted` instances without exposing their contents.\n *\n * @example\n * ```ts\n * import * as assert from \"node:assert\"\n * import { Redacted, Equivalence } from \"effect\"\n *\n * const API_KEY1 = Redacted.make(\"1234567890\")\n * const API_KEY2 = Redacted.make(\"1-34567890\")\n * const API_KEY3 = Redacted.make(\"1234567890\")\n *\n * const equivalence = Redacted.getEquivalence(Equivalence.string)\n *\n * assert.equal(equivalence(API_KEY1, API_KEY2), false)\n * assert.equal(equivalence(API_KEY1, API_KEY3), true)\n * ```\n *\n * @category equivalence\n * @since 3.3.0\n */\nexport const getEquivalence = <A>(isEquivalent: Equivalence.Equivalence<A>): Equivalence.Equivalence<Redacted<A>> =>\n  Equivalence.make((x, y) => isEquivalent(value(x), value(y)))\n"],"names":["Equivalence","redacted_","RedactedTypeId","isRedacted","make","value","unsafeWipe","getEquivalence","isEquivalent","x","y"],"mappings":";;;;;;;;AASA,OAAO,KAAKA,WAAW,MAAM,kBAAkB;AAC/C,OAAO,KAAKC,SAAS,MAAM,wBAAwB;;;AAQ5C,MAAMC,cAAc,iKAAkBD,SAAS,CAACC,OAAc;AAwC9D,MAAMC,UAAU,iKAA2CF,SAAS,CAACE,GAAU;AAgB/E,MAAMC,IAAI,iKAAiCH,OAAc,EAAL,CAACG;AAmBrD,MAAMC,KAAK,GAAgCJ,SAAS,CAACI,4JAAK;AAwB1D,MAAMC,UAAU,iKAAsCL,SAAS,CAACK,GAAU;AAyB1E,MAAMC,cAAc,IAAOC,YAAwC,4JACxER,OAAYI,AAAI,EAAC,CAACK,CAAP,AAAQ,CAAPL,CAASM,CAAC,GAAKF,YAAY,CAACH,KAAK,CAACI,CAAC,CAAC,EAAEJ,KAAK,CAACK,CAAC,CAAC,CAAC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 18061, "column": 0}, "map": {"version":3,"file":"sqids.js","sourceRoot":"","sources":["../src/sqids.ts"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 18798, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/%40uploadthing/shared/src/types.ts","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/%40uploadthing/shared/src/tagged-errors.ts","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/%40uploadthing/shared/src/utils.ts","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/%40uploadthing/shared/src/file-types.ts","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/%40uploadthing/shared/src/error.ts","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/%40uploadthing/shared/src/effect.ts","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/%40uploadthing/shared/src/component-utils.ts","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/%40uploadthing/shared/src/crypto.ts","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/%40uploadthing/shared/src/dropzone-utils.ts"],"sourcesContent":["import type { MimeType } from \"@uploadthing/mime-types\";\n\nimport type { AllowedFileType } from \"./file-types\";\n\nexport type JsonValue = string | number | boolean | null | undefined;\nexport type JsonObject = { [key: string]: JsonValue | JsonObject | JsonArray };\nexport type JsonArray = (JsonValue | JsonObject)[];\nexport type Json = JsonValue | JsonObject | JsonArray;\n\nexport type Overwrite<T, U> = Omit<T, keyof U> & U;\nexport type WithRequired<T, K extends keyof T> = T & Required<Pick<T, K>>;\nexport type ErrorMessage<TError extends string> = TError;\nexport type Simplify<TType> = { [TKey in keyof TType]: TType[TKey] } & {};\nexport type MaybePromise<TType> = TType | Promise<TType>;\nexport type Either<TData, TError> =\n  | { data: TData; error: null }\n  | { data: null; error: TError };\nexport type ExtendObjectIf<Predicate, ToAdd> = undefined extends Predicate\n  ? {}\n  : ToAdd;\nexport type DeepPartial<T> = T extends object\n  ? {\n      [P in keyof T]?: DeepPartial<T[P]>;\n    }\n  : T;\n\nexport interface FileProperties {\n  name: string;\n  size: number;\n  type: string;\n  lastModified?: number | undefined;\n}\n\nexport type ExtractHashPartsFn = (\n  file: FileProperties,\n) => (string | number | undefined | null | boolean)[];\n\n/**\n * A subset of the standard RequestInit properties needed by UploadThing internally.\n * @see RequestInit from lib.dom.d.ts\n */\nexport interface RequestInitEsque {\n  /**\n   * Sets the request's body.\n   */\n  body?: FormData | ReadableStream | string | null;\n\n  /**\n   * Sets the request's associated headers.\n   */\n  headers?: [string, string][] | Record<string, string>;\n\n  /**\n   * The request's HTTP-style method.\n   */\n  method?: string;\n}\n\n/**\n * A subset of the standard Response properties needed by UploadThing internally.\n * @see Response from lib.dom.d.ts\n */\nexport interface ResponseEsque {\n  status: number;\n  statusText: string;\n  ok: boolean;\n  /**\n   * @remarks\n   * The built-in Response::json() method returns Promise<any>, but\n   * that's not as type-safe as unknown. We use unknown because we're\n   * more type-safe. You do want more type safety, right? 😉\n   */\n  json: <T = unknown>() => Promise<T>;\n  text: () => Promise<string>;\n  blob: () => Promise<Blob>;\n  body: ReadableStream | null;\n\n  headers: Headers;\n\n  clone: () => ResponseEsque;\n}\n\nexport type MaybeUrl = string | URL;\n\n/**\n * A subset of the standard fetch function type needed by UploadThing internally.\n * @see fetch from lib.dom.d.ts\n */\nexport type FetchEsque = (\n  input: RequestInfo | MaybeUrl,\n  init?: RequestInit | RequestInitEsque,\n) => Promise<ResponseEsque>;\n\ntype PowOf2 = 1 | 2 | 4 | 8 | 16 | 32 | 64 | 128 | 256 | 512 | 1024;\nexport type SizeUnit = \"B\" | \"KB\" | \"MB\" | \"GB\";\nexport type FileSize = `${PowOf2}${SizeUnit}`;\n\nexport type TimeShort = \"s\" | \"m\" | \"h\" | \"d\";\nexport type TimeLong = \"second\" | \"minute\" | \"hour\" | \"day\";\ntype SuggestedNumbers = 2 | 3 | 4 | 5 | 6 | 7 | 10 | 15 | 30 | 60;\ntype AutoCompleteableNumber = SuggestedNumbers | (number & {});\nexport type Time =\n  | number\n  | `1${TimeShort}`\n  | `${AutoCompleteableNumber}${TimeShort}`\n  | `1 ${TimeLong}`\n  | `${AutoCompleteableNumber} ${TimeLong}s`;\n\nexport const ValidContentDispositions = [\"inline\", \"attachment\"] as const;\nexport type ContentDisposition = (typeof ValidContentDispositions)[number];\n\nexport const ValidACLs = [\"public-read\", \"private\"] as const;\nexport type ACL = (typeof ValidACLs)[number];\n\ntype ImageProperties = {\n  /** Specify the width of the image. */\n  width?: number;\n  /** Specify the height of the image. */\n  height?: number;\n  /**\n   * Specify the aspect ratio of the image.\n   * @remarks If both width and height are specified, this will be ignored.\n   */\n  aspectRatio?: number;\n};\n\ntype AdditionalProperties<T> = Record<string, unknown> & T;\n\nexport type RouteConfig<TAdditionalProperties extends Record<string, unknown>> =\n  {\n    /**\n     * Human-readable file size limit\n     * @example \"1MB\"\n     * @default https://docs.uploadthing.com/api-reference/server#defaults\n     */\n    maxFileSize: FileSize;\n    /**\n     * Maximum number of files allowed to be uploaded of this type\n     * @example 10\n     * @default https://docs.uploadthing.com/api-reference/server#defaults\n     */\n    maxFileCount: number;\n    /**\n     * Minimum number of files allowed to be uploaded of this type\n     * @remarks Must be <= maxFileCount\n     * @example 2\n     * @default 1\n     */\n    minFileCount: number;\n    /**\n     * Specify the [content disposition](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Disposition) of the uploaded file\n     * @example \"attachment\"\n     * @default \"inline\"\n     */\n    contentDisposition: ContentDisposition;\n    /**\n     * Specify the [access control list](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin) of the uploaded file\n     * @remarks This must be enabled for your app. See https://docs.uploadthing.com/regions-and-acl#access-controls.\n     * @example \"private\"\n     * @default \"public-read\"\n     */\n    acl?: ACL;\n    /**\n     * Additional properties to be passed to the client-side `useRouteConfig` hook\n     * @remarks These properties are not validated on the server on upload\n     */\n    additionalProperties?: AdditionalProperties<TAdditionalProperties>;\n  };\n\n/**\n * Shared config options for an entire route not bound to any specific file type\n * @example\n * ```ts\n * f(\n *   { image: {} },\n *   { awaitServerData: true },\n * )\n * ```\n */\nexport type RouteOptions = {\n  /**\n   * Set this to `false` to run the client-side `onClientUploadComplete`\n   * immediately after file has been uploaded without waiting for the\n   * server to return the `onUploadComplete` data.\n   * @default true\n   */\n  awaitServerData?: boolean;\n  /**\n   * TTL for the presigned URLs generated for the upload\n   * @default `1h`\n   */\n  presignedURLTTL?: Time;\n  /**\n   * Function that pulls out the properties of the uploaded file\n   * that you want to be included as part of the presigned URL generation.\n   * By default, we include all properties as well as a timestamp to make\n   * each URL unique. You can for example override this to always return\n   * the same hash for the same file, no matter when it was uploaded.\n   * @default (file) => [file.name, file.size, file.type, file.lastModified,  Date.now()]\n   */\n  getFileHashParts?: ExtractHashPartsFn;\n};\n\nexport type FileRouterInputKey = AllowedFileType | MimeType;\n\nexport type ExpandedRouteConfig = {\n  [key in FileRouterInputKey]?: key extends `image${string}`\n    ? RouteConfig<ImageProperties>\n    : RouteConfig<Record<string, unknown>>;\n};\n\nexport type EndpointMetadata = {\n  slug: string;\n  config: ExpandedRouteConfig;\n}[];\n\nexport type FileRouterInputConfig =\n  | FileRouterInputKey[]\n  | DeepPartial<ExpandedRouteConfig>;\n","import * as Micro from \"effect/Micro\";\nimport * as Predicate from \"effect/Predicate\";\n\nexport class InvalidRouteConfigError\n  extends /** #__PURE__ */ Micro.TaggedError(\"InvalidRouteConfig\")<{\n    reason: string;\n  }>\n{\n  constructor(type: string, field?: string) {\n    const reason = field\n      ? `Expected route config to have a ${field} for key ${type} but none was found.`\n      : `Encountered an invalid route config during backfilling. ${type} was not found.`;\n    super({ reason });\n  }\n}\n\nexport class UnknownFileTypeError\n  extends /** #__PURE__ */ Micro.TaggedError(\"UnknownFileType\")<{\n    reason: string;\n  }>\n{\n  constructor(fileName: string) {\n    const reason = `Could not determine type for ${fileName}`;\n    super({ reason });\n  }\n}\n\nexport class InvalidFileTypeError\n  extends /** #__PURE__ */ Micro.TaggedError(\"InvalidFileType\")<{\n    reason: string;\n  }>\n{\n  constructor(fileType: string, fileName: string) {\n    const reason = `File type ${fileType} not allowed for ${fileName}`;\n    super({ reason });\n  }\n}\n\nexport class InvalidFileSizeError\n  extends /** #__PURE__ */ Micro.TaggedError(\"InvalidFileSize\")<{\n    reason: string;\n  }>\n{\n  constructor(fileSize: string) {\n    const reason = `Invalid file size: ${fileSize}`;\n    super({ reason });\n  }\n}\n\nexport class InvalidURLError\n  extends /** #__PURE__ */ Micro.TaggedError(\"InvalidURL\")<{\n    reason: string;\n  }>\n{\n  constructor(attemptedUrl: string) {\n    super({ reason: `Failed to parse '${attemptedUrl}' as a URL.` });\n  }\n}\n\nexport class RetryError\n  extends /** #__PURE__ */ Micro.TaggedError(\"RetryError\") {}\n\nexport class FetchError\n  extends /** #__PURE__ */ Micro.TaggedError(\"FetchError\")<{\n    readonly input: {\n      url: string;\n      method: string | undefined;\n      body: unknown;\n      headers: Record<string, string>;\n    };\n    readonly error: unknown;\n  }> {}\n\nexport class InvalidJsonError\n  extends /** #__PURE__ */ Micro.TaggedError(\"InvalidJson\")<{\n    readonly input: unknown;\n    readonly error: unknown;\n  }> {}\n\nexport class BadRequestError<T = unknown>\n  extends /** #__PURE__ */ Micro.TaggedError(\"BadRequestError\")<{\n    readonly message: string;\n    readonly status: number;\n    readonly json: T;\n  }>\n{\n  getMessage() {\n    if (Predicate.isRecord(this.json)) {\n      if (typeof this.json.message === \"string\") return this.json.message;\n    }\n    return this.message;\n  }\n}\n\nexport class UploadPausedError\n  extends /** #__PURE__ */ Micro.TaggedError(\"UploadAborted\") {}\n\nexport class UploadAbortedError\n  extends /** #__PURE__ */ Micro.TaggedError(\"UploadAborted\") {}\n","import * as Micro from \"effect/Micro\";\n\nimport { lookup } from \"@uploadthing/mime-types\";\n\nimport type { AllowedFileType } from \"./file-types\";\nimport {\n  InvalidFileSizeError,\n  InvalidFileTypeError,\n  InvalidRouteConfigError,\n  InvalidURLError,\n  UnknownFileTypeError,\n} from \"./tagged-errors\";\nimport type {\n  ExpandedRouteConfig,\n  FileProperties,\n  FileRouterInputConfig,\n  FileRouterInputKey,\n  FileSize,\n  Json,\n  ResponseEsque,\n  RouteConfig,\n  Time,\n  TimeShort,\n} from \"./types\";\n\nexport function isRouteArray(\n  routeConfig: FileRouterInputConfig,\n): routeConfig is FileRouterInputKey[] {\n  return Array.isArray(routeConfig);\n}\n\nexport function getDefaultSizeForType(fileType: FileRouterInputKey): FileSize {\n  if (fileType === \"image\") return \"4MB\";\n  if (fileType === \"video\") return \"16MB\";\n  if (fileType === \"audio\") return \"8MB\";\n  if (fileType === \"blob\") return \"8MB\";\n  if (fileType === \"pdf\") return \"4MB\";\n  if (fileType === \"text\") return \"64KB\";\n\n  return \"4MB\";\n}\n\nexport function getDefaultRouteConfigValues(\n  type: FileRouterInputKey,\n): RouteConfig<Record<string, never>> {\n  return {\n    maxFileSize: getDefaultSizeForType(type),\n    maxFileCount: 1,\n    minFileCount: 1,\n    contentDisposition: \"inline\" as const,\n  };\n}\n\n/**\n * This function takes in the user's input and \"upscales\" it to a full config\n * Additionally, it replaces numbers with \"safe\" equivalents\n *\n * Example:\n * ```ts\n * [\"image\"] => { image: { maxFileSize: \"4MB\", limit: 1 } }\n * ```\n */\n\nexport const fillInputRouteConfig = (\n  routeConfig: FileRouterInputConfig,\n): Micro.Micro<ExpandedRouteConfig, InvalidRouteConfigError> => {\n  // If array, apply defaults\n  if (isRouteArray(routeConfig)) {\n    return Micro.succeed(\n      routeConfig.reduce<ExpandedRouteConfig>((acc, fileType) => {\n        acc[fileType] = getDefaultRouteConfigValues(fileType);\n        return acc;\n      }, {}),\n    );\n  }\n\n  // Backfill defaults onto config\n  const newConfig: ExpandedRouteConfig = {};\n  for (const key of objectKeys(routeConfig)) {\n    const value = routeConfig[key];\n    if (!value) return Micro.fail(new InvalidRouteConfigError(key));\n    newConfig[key] = { ...getDefaultRouteConfigValues(key), ...value };\n  }\n\n  // we know that the config is valid, so we can stringify it and parse it back\n  // this allows us to replace numbers with \"safe\" equivalents\n  return Micro.succeed(\n    JSON.parse(\n      JSON.stringify(newConfig, safeNumberReplacer),\n    ) as ExpandedRouteConfig,\n  );\n};\n\n/**\n * Match the file's type for a given allow list e.g. `image/png => image`\n * Prefers the file's type, then falls back to a extension-based lookup\n */\nexport const matchFileType = (\n  file: FileProperties,\n  allowedTypes: FileRouterInputKey[],\n): Micro.Micro<\n  FileRouterInputKey,\n  UnknownFileTypeError | InvalidFileTypeError\n> => {\n  // Type might be \"\" if the browser doesn't recognize the mime type\n  const mimeType = file.type || lookup(file.name);\n  if (!mimeType) {\n    if (allowedTypes.includes(\"blob\")) return Micro.succeed(\"blob\");\n    return Micro.fail(new UnknownFileTypeError(file.name));\n  }\n\n  // If the user has specified a specific mime type, use that\n  if (allowedTypes.some((type) => type.includes(\"/\"))) {\n    if (allowedTypes.includes(mimeType as FileRouterInputKey)) {\n      return Micro.succeed(mimeType as FileRouterInputKey);\n    }\n  }\n\n  // Otherwise, we have a \"magic\" type eg. \"image\" or \"video\"\n  const type = (\n    mimeType.toLowerCase() === \"application/pdf\"\n      ? \"pdf\"\n      : mimeType.split(\"/\")[0]\n  ) as AllowedFileType;\n\n  if (!allowedTypes.includes(type)) {\n    // Blob is a catch-all for any file type not explicitly supported\n    if (allowedTypes.includes(\"blob\")) {\n      return Micro.succeed(\"blob\");\n    } else {\n      return Micro.fail(new InvalidFileTypeError(type, file.name));\n    }\n  }\n\n  return Micro.succeed(type);\n};\n\nexport const FILESIZE_UNITS = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\"] as const;\nexport type FileSizeUnit = (typeof FILESIZE_UNITS)[number];\nexport const fileSizeToBytes = (\n  fileSize: FileSize,\n): Micro.Micro<number, InvalidFileSizeError> => {\n  const regex = new RegExp(\n    `^(\\\\d+)(\\\\.\\\\d+)?\\\\s*(${FILESIZE_UNITS.join(\"|\")})$`,\n    \"i\",\n  );\n\n  // make sure the string is in the format of 123KB\n  const match = fileSize.match(regex);\n  if (!match?.[1] || !match[3]) {\n    return Micro.fail(new InvalidFileSizeError(fileSize));\n  }\n\n  const sizeValue = parseFloat(match[1]);\n  const sizeUnit = match[3].toUpperCase() as FileSizeUnit;\n  const bytes = sizeValue * Math.pow(1024, FILESIZE_UNITS.indexOf(sizeUnit));\n  return Micro.succeed(Math.floor(bytes));\n};\n\nexport const bytesToFileSize = (bytes: number) => {\n  if (bytes === 0 || bytes === -1) {\n    return \"0B\";\n  }\n\n  const i = Math.floor(Math.log(bytes) / Math.log(1024));\n  return `${(bytes / Math.pow(1024, i)).toFixed(2)}${FILESIZE_UNITS[i]}`;\n};\n\nexport async function safeParseJSON<T>(\n  input: ResponseEsque,\n): Promise<T | Error> {\n  const text = await input.text();\n  try {\n    return JSON.parse(text) as T;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(`Error parsing JSON, got '${text}'`, err);\n    return new Error(`Error parsing JSON, got '${text}'`);\n  }\n}\n\n/** typesafe Object.keys */\nexport function objectKeys<T extends Record<string, unknown>>(\n  obj: T,\n): (keyof T)[] {\n  return Object.keys(obj) as (keyof T)[];\n}\n\nexport function filterDefinedObjectValues<T>(\n  obj: Record<string, T | null | undefined>,\n): Record<string, T> {\n  return Object.fromEntries(\n    Object.entries(obj).filter((pair): pair is [string, T] => pair[1] != null),\n  );\n}\n\nexport function semverLite(required: string, toCheck: string) {\n  // Pull out numbers from strings like `6.0.0`, `^6.4`, `~6.4.0`\n  const semverRegex = /(\\d+)\\.?(\\d+)?\\.?(\\d+)?/;\n  const requiredMatch = semverRegex.exec(required);\n  if (!requiredMatch?.[0]) {\n    throw new Error(`Invalid semver requirement: ${required}`);\n  }\n  const toCheckMatch = semverRegex.exec(toCheck);\n  if (!toCheckMatch?.[0]) {\n    throw new Error(`Invalid semver to check: ${toCheck}`);\n  }\n\n  const [_1, rMajor, rMinor, rPatch] = requiredMatch;\n  const [_2, cMajor, cMinor, cPatch] = toCheckMatch;\n\n  if (required.startsWith(\"^\")) {\n    // Major must be equal, minor must be greater or equal\n    if (rMajor !== cMajor) return false;\n    if (rMinor && cMinor && rMinor > cMinor) return false;\n    return true;\n  }\n\n  if (required.startsWith(\"~\")) {\n    // Major must be equal, minor must be equal\n    if (rMajor !== cMajor) return false;\n    if (rMinor !== cMinor) return false;\n    return true;\n  }\n\n  // Exact match\n  return rMajor === cMajor && rMinor === cMinor && rPatch === cPatch;\n}\n\nexport function warnIfInvalidPeerDependency(\n  pkg: string,\n  required: string,\n  toCheck: string,\n) {\n  if (!semverLite(required, toCheck)) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `!!!WARNING::: ${pkg} requires \"uploadthing@${required}\", but version \"${toCheck}\" is installed`,\n    );\n  }\n}\n\nexport const getRequestUrl = (req: Request) =>\n  Micro.gen(function* () {\n    const host = req.headers.get(\"x-forwarded-host\") ?? req.headers.get(\"host\");\n    const proto = req.headers.get(\"x-forwarded-proto\") ?? \"https\";\n    const protocol = proto.endsWith(\":\") ? proto : `${proto}:`;\n    const url = yield* Micro.try({\n      try: () => new URL(req.url, `${protocol}//${host}`),\n      catch: () => new InvalidURLError(req.url),\n    });\n    url.search = \"\";\n    return url;\n  });\n\nexport const getFullApiUrl = (\n  maybeUrl?: string,\n): Micro.Micro<URL, InvalidURLError> =>\n  Micro.gen(function* () {\n    const base = (() => {\n      if (typeof window !== \"undefined\") return window.location.origin;\n      if (process.env.VERCEL_URL) return `https://${process.env.VERCEL_URL}`;\n      return \"http://localhost:3000\";\n    })();\n\n    const url = yield* Micro.try({\n      try: () => new URL(maybeUrl ?? \"/api/uploadthing\", base),\n      catch: () => new InvalidURLError(maybeUrl ?? \"/api/uploadthing\"),\n    });\n\n    if (url.pathname === \"/\") {\n      url.pathname = \"/api/uploadthing\";\n    }\n    return url;\n  });\n\n/*\n * Returns a full URL to the dev's uploadthing endpoint\n * Can take either an origin, or a pathname, or a full URL\n * and will return the \"closest\" url matching the default\n * `<VERCEL_URL || localhost>/api/uploadthing`\n */\nexport const resolveMaybeUrlArg = (maybeUrl: string | URL | undefined): URL => {\n  return maybeUrl instanceof URL\n    ? maybeUrl\n    : Micro.runSync(getFullApiUrl(maybeUrl));\n};\n\nexport function parseTimeToSeconds(time: Time) {\n  if (typeof time === \"number\") return time;\n\n  const match = time.split(/(\\d+)/).filter(Boolean);\n  const num = Number(match[0]);\n  const unit = (match[1] ?? \"s\").trim().slice(0, 1) as TimeShort;\n\n  const multiplier = {\n    s: 1,\n    m: 60,\n    h: 3600,\n    d: 86400,\n  }[unit];\n\n  return num * multiplier;\n}\n\n/**\n * Replacer for JSON.stringify that will replace numbers that cannot be\n * serialized to JSON with \"reasonable equivalents\".\n *\n * Infinity and -Infinity are replaced by MAX_SAFE_INTEGER and MIN_SAFE_INTEGER\n * NaN is replaced by 0\n *\n */\nexport const safeNumberReplacer = (_: string, value: unknown) => {\n  if (typeof value !== \"number\") return value;\n  if (\n    Number.isSafeInteger(value) ||\n    (value <= Number.MAX_SAFE_INTEGER && value >= Number.MIN_SAFE_INTEGER)\n  ) {\n    return value;\n  }\n  if (value === Infinity) return Number.MAX_SAFE_INTEGER;\n  if (value === -Infinity) return Number.MIN_SAFE_INTEGER;\n  if (Number.isNaN(value)) return 0;\n};\n\nexport function noop() {\n  // noop\n}\n\nexport function createIdentityProxy<TObj extends Record<string, unknown>>() {\n  return new Proxy(noop, {\n    get: (_, prop) => prop,\n  }) as unknown as TObj;\n}\n\nexport function unwrap<T extends Json | PropertyKey, Param extends unknown[]>(\n  x: T | ((...args: Param) => T),\n  ...args: Param\n) {\n  return typeof x === \"function\" ? x(...args) : x;\n}\n","export const ALLOWED_FILE_TYPES = [\n  \"image\",\n  \"video\",\n  \"audio\",\n  \"pdf\",\n  \"text\",\n  \"blob\",\n] as const;\n\nexport type AllowedFileType = (typeof ALLOWED_FILE_TYPES)[number];\n","import * as Micro from \"effect/Micro\";\nimport * as Predicate from \"effect/Predicate\";\n\nimport type { Json } from \"./types\";\n\nconst ERROR_CODES = {\n  // Generic\n  BAD_REQUEST: 400,\n  NOT_FOUND: 404,\n  FORBIDDEN: 403,\n  INTERNAL_SERVER_ERROR: 500,\n  INTERNAL_CLIENT_ERROR: 500,\n\n  // S3 specific\n  TOO_LARGE: 413,\n  TOO_SMALL: 400,\n  TOO_MANY_FILES: 400,\n  KEY_TOO_LONG: 400,\n\n  // UploadThing specific\n  URL_GENERATION_FAILED: 500,\n  UPLOAD_FAILED: 500,\n  MISSING_ENV: 500,\n  INVALID_SERVER_CONFIG: 500,\n  FILE_LIMIT_EXCEEDED: 500,\n} as const;\n\ntype ErrorCode = keyof typeof ERROR_CODES;\ntype UploadThingErrorOptions<T> = {\n  code: keyof typeof ERROR_CODES;\n  message?: string | undefined;\n  cause?: unknown;\n  data?: T;\n};\n\nfunction messageFromUnknown(cause: unknown, fallback?: string) {\n  if (typeof cause === \"string\") {\n    return cause;\n  }\n  if (cause instanceof Error) {\n    return cause.message;\n  }\n  if (\n    cause &&\n    typeof cause === \"object\" &&\n    \"message\" in cause &&\n    typeof cause.message === \"string\"\n  ) {\n    return cause.message;\n  }\n  return fallback ?? \"An unknown error occurred\";\n}\n\nexport interface SerializedUploadThingError {\n  code: ErrorCode;\n  message: string;\n  data?: Json;\n}\n\nexport class UploadThingError<\n  TShape extends Json = { message: string },\n> extends Micro.Error<{ message: string }> {\n  readonly _tag = \"UploadThingError\";\n  readonly name = \"UploadThingError\";\n\n  public readonly cause?: unknown;\n  public readonly code: ErrorCode;\n  public readonly data: TShape | undefined;\n\n  constructor(initOpts: UploadThingErrorOptions<TShape> | string) {\n    const opts: UploadThingErrorOptions<TShape> =\n      typeof initOpts === \"string\"\n        ? { code: \"INTERNAL_SERVER_ERROR\", message: initOpts }\n        : initOpts;\n    const message = opts.message ?? messageFromUnknown(opts.cause, opts.code);\n\n    super({ message });\n    this.code = opts.code;\n    this.data = opts.data;\n\n    if (opts.cause instanceof Error) {\n      this.cause = opts.cause;\n    } else if (\n      Predicate.isRecord(opts.cause) &&\n      Predicate.isNumber(opts.cause.status) &&\n      Predicate.isString(opts.cause.statusText)\n    ) {\n      this.cause = new Error(\n        `Response ${opts.cause.status} ${opts.cause.statusText}`,\n      );\n    } else if (Predicate.isString(opts.cause)) {\n      this.cause = new Error(opts.cause);\n    } else {\n      this.cause = opts.cause;\n    }\n  }\n\n  public static toObject(error: UploadThingError): SerializedUploadThingError {\n    return {\n      code: error.code,\n      message: error.message,\n      data: error.data,\n    };\n  }\n\n  public static serialize(error: UploadThingError) {\n    return JSON.stringify(UploadThingError.toObject(error));\n  }\n}\n\nexport function getErrorTypeFromStatusCode(statusCode: number): ErrorCode {\n  for (const [code, status] of Object.entries(ERROR_CODES)) {\n    if (status === statusCode) {\n      return code as ErrorCode;\n    }\n  }\n  return \"INTERNAL_SERVER_ERROR\";\n}\n\nexport function getStatusCodeFromError(error: UploadThingError<any>) {\n  return ERROR_CODES[error.code];\n}\n\nexport const INTERNAL_DO_NOT_USE__fatalClientError = (e: Error) =>\n  new UploadThingError({\n    code: \"INTERNAL_CLIENT_ERROR\",\n    message: \"Something went wrong. Please report this to UploadThing.\",\n    cause: e,\n  });\n","import * as Context from \"effect/Context\";\nimport * as Micro from \"effect/Micro\";\n\nimport { BadRequestError, FetchError, InvalidJsonError } from \"./tagged-errors\";\nimport type { FetchEsque, ResponseEsque } from \"./types\";\n\nexport class FetchContext\n  extends /** #__PURE__ */ Context.Tag(\"uploadthing/Fetch\")<\n    FetchContext,\n    FetchEsque\n  >() {}\n\ninterface ResponseWithURL extends ResponseEsque {\n  requestUrl: string;\n}\n\n// Temporary Effect wrappers below.\n// Only for use in the browser.\n// On the server, use `@effect/platform.HttpClient` instead.\nexport const fetchEff = (\n  input: string | URL,\n  init?: RequestInit,\n): Micro.Micro<ResponseWithURL, FetchError, FetchContext> =>\n  Micro.flatMap(Micro.service(FetchContext), (fetch) => {\n    const headers = new Headers(init?.headers ?? []);\n\n    const reqInfo = {\n      url: input.toString(),\n      method: init?.method,\n      body: init?.body,\n      headers: Object.fromEntries(headers),\n    };\n\n    return Micro.tryPromise({\n      try: (signal) => fetch(input, { ...init, headers, signal }),\n      catch: (error) =>\n        new FetchError({\n          error:\n            error instanceof Error\n              ? {\n                  ...error,\n                  name: error.name,\n                  message: error.message,\n                  stack: error.stack,\n                }\n              : error,\n          input: reqInfo,\n        }),\n    }).pipe(\n      // eslint-disable-next-line no-console\n      Micro.tapError((e) => Micro.sync(() => console.error(e.input))),\n      Micro.map((res) => Object.assign(res, { requestUrl: reqInfo.url })),\n      Micro.withTrace(\"fetch\"),\n    );\n  });\n\nexport const parseResponseJson = (\n  res: ResponseWithURL,\n): Micro.Micro<unknown, InvalidJsonError | BadRequestError> =>\n  Micro.tryPromise({\n    try: async () => {\n      const json = await res.json();\n      return { json, ok: res.ok, status: res.status };\n    },\n    catch: (error) => new InvalidJsonError({ error, input: res.requestUrl }),\n  }).pipe(\n    Micro.filterOrFail(\n      ({ ok }) => ok,\n      ({ json, status }) =>\n        new BadRequestError({\n          status,\n          message: `Request to ${res.requestUrl} failed with status ${status}`,\n          json,\n        }),\n    ),\n    Micro.map(({ json }) => json),\n    Micro.withTrace(\"parseJson\"),\n  );\n","import type { CSSProperties, ReactNode } from \"react\";\nimport type { JSX } from \"solid-js/jsx-runtime\";\nimport type { RenderFunction, StyleValue } from \"vue\";\n\n/**\n * Use granular imports to better tree-shake\n * We don't need all the types, and `/application`\n * entrypoint is ~7k gzip which we can shave off\n */\nimport { audio } from \"@uploadthing/mime-types/audio\";\nimport { image } from \"@uploadthing/mime-types/image\";\nimport { text } from \"@uploadthing/mime-types/text\";\nimport { video } from \"@uploadthing/mime-types/video\";\n\nimport type { ExpandedRouteConfig } from \"./types\";\nimport { objectKeys } from \"./utils\";\n\nexport type ProgressGranularity = \"all\" | \"fine\" | \"coarse\";\nexport const roundProgress = (\n  progress: number,\n  granularity: ProgressGranularity,\n) => {\n  if (granularity === \"all\") return progress;\n  if (granularity === \"fine\") return Math.round(progress);\n  return Math.floor(progress / 10) * 10;\n};\n\nexport const generateMimeTypes = (\n  typesOrRouteConfig: string[] | ExpandedRouteConfig,\n) => {\n  const fileTypes = Array.isArray(typesOrRouteConfig)\n    ? typesOrRouteConfig\n    : objectKeys(typesOrRouteConfig);\n  if (fileTypes.includes(\"blob\")) return [];\n\n  return fileTypes.map((type) => {\n    if (type === \"pdf\") return \"application/pdf\";\n    if (type.includes(\"/\")) return type;\n\n    // Add wildcard to support all subtypes, e.g. image => \"image/*\"\n    // But some browsers/OSes don't support it, so we'll also dump all the mime types\n    // we know that starts with the type, e.g. image => \"image/png, image/jpeg, ...\"\n    if (type === \"audio\") return [\"audio/*\", ...objectKeys(audio)].join(\", \");\n    if (type === \"image\") return [\"image/*\", ...objectKeys(image)].join(\", \");\n    if (type === \"text\") return [\"text/*\", ...objectKeys(text)].join(\", \");\n    if (type === \"video\") return [\"video/*\", ...objectKeys(video)].join(\", \");\n\n    return `${type}/*`;\n  });\n};\n\nexport const generateClientDropzoneAccept = (fileTypes: string[]) => {\n  const mimeTypes = generateMimeTypes(fileTypes);\n  return Object.fromEntries(mimeTypes.map((type) => [type, []]));\n};\n\nexport function getFilesFromClipboardEvent(event: ClipboardEvent) {\n  const dataTransferItems = event.clipboardData?.items;\n  if (!dataTransferItems) return;\n\n  const files = Array.from(dataTransferItems).reduce<File[]>((acc, curr) => {\n    const f = curr.getAsFile();\n    return f ? [...acc, f] : acc;\n  }, []);\n\n  return files;\n}\n\n/**\n * Shared helpers for our premade components that's reusable by multiple frameworks\n */\n\nexport const generatePermittedFileTypes = (config?: ExpandedRouteConfig) => {\n  const fileTypes = config ? objectKeys(config) : [];\n\n  const maxFileCount = config\n    ? Object.values(config).map((v) => v.maxFileCount)\n    : [];\n\n  return { fileTypes, multiple: maxFileCount.some((v) => v && v > 1) };\n};\n\nexport const capitalizeStart = (str: string) => {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\n\nexport const INTERNAL_doFormatting = (config?: ExpandedRouteConfig): string => {\n  if (!config) return \"\";\n\n  const allowedTypes = objectKeys(config);\n\n  const formattedTypes = allowedTypes.map((f) => (f === \"blob\" ? \"file\" : f));\n\n  // Format multi-type uploader label as \"Supports videos, images and files\";\n  if (formattedTypes.length > 1) {\n    const lastType = formattedTypes.pop();\n    return `${formattedTypes.join(\"s, \")} and ${lastType}s`;\n  }\n\n  // Single type uploader label\n  const key = allowedTypes[0];\n  const formattedKey = formattedTypes[0];\n  if (!key || !formattedKey) return \"\";\n\n  const { maxFileSize, maxFileCount, minFileCount } = config[key]!;\n\n  if (maxFileCount && maxFileCount > 1) {\n    if (minFileCount > 1) {\n      return `${minFileCount} - ${maxFileCount} ${formattedKey}s up to ${maxFileSize}`;\n    } else {\n      return `${formattedKey}s up to ${maxFileSize}, max ${maxFileCount}`;\n    }\n  } else {\n    return `${formattedKey} (${maxFileSize})`;\n  }\n};\n\nexport const allowedContentTextLabelGenerator = (\n  config?: ExpandedRouteConfig,\n): string => {\n  return capitalizeStart(INTERNAL_doFormatting(config));\n};\n\ntype AnyRuntime = \"react\" | \"solid\" | \"svelte\" | \"vue\";\ntype MinCallbackArg = { __runtime: AnyRuntime };\ntype inferRuntime<T extends MinCallbackArg> = T[\"__runtime\"] extends \"react\"\n  ? \"react\"\n  : T[\"__runtime\"] extends \"solid\"\n    ? \"solid\"\n    : T[\"__runtime\"] extends \"svelte\"\n      ? \"svelte\"\n      : T[\"__runtime\"] extends \"vue\"\n        ? \"vue\"\n        : never;\n\ntype ElementEsque<TRuntime extends AnyRuntime> = TRuntime extends \"react\"\n  ? ReactNode\n  : TRuntime extends \"solid\"\n    ? JSX.Element\n    : ReturnType<RenderFunction>;\ntype CSSPropertiesEsque<TRuntime extends AnyRuntime> = TRuntime extends \"react\"\n  ? CSSProperties\n  : TRuntime extends \"solid\"\n    ? JSX.CSSProperties\n    : TRuntime extends \"svelte\"\n      ? string\n      : TRuntime extends \"vue\"\n        ? StyleValue\n        : never;\n\nexport type StyleField<\n  CallbackArg extends MinCallbackArg,\n  TRuntime extends AnyRuntime = inferRuntime<CallbackArg>,\n> =\n  | string\n  | CSSPropertiesEsque<TRuntime>\n  | ((\n      arg: Omit<CallbackArg, \"__runtime\">,\n    ) => string | CSSPropertiesEsque<TRuntime>);\n\nexport type ContentField<\n  CallbackArg extends MinCallbackArg,\n  TRuntime extends AnyRuntime = inferRuntime<CallbackArg>,\n> =\n  | ElementEsque<TRuntime>\n  | ((arg: Omit<CallbackArg, \"__runtime\">) => ElementEsque<TRuntime>);\n\nexport const styleFieldToClassName = <T extends MinCallbackArg>(\n  styleField: StyleField<T> | undefined,\n  args: T,\n) => {\n  if (typeof styleField === \"string\") return styleField;\n  if (typeof styleField === \"function\") {\n    const result = styleField(args);\n\n    if (typeof result === \"string\") return result;\n  }\n\n  return \"\";\n};\n\nexport const styleFieldToCssObject = <T extends MinCallbackArg>(\n  styleField: StyleField<T> | undefined,\n  args: T,\n) => {\n  if (typeof styleField === \"object\") return styleField;\n  if (typeof styleField === \"function\") {\n    const result = styleField(args);\n\n    if (typeof result === \"object\") return result;\n  }\n\n  return {};\n};\n\nexport const contentFieldToContent = <T extends MinCallbackArg>(\n  contentField: ContentField<T> | undefined,\n  arg: T,\n) => {\n  if (!contentField) return null;\n  if (typeof contentField !== \"function\") return contentField;\n  if (typeof contentField === \"function\") {\n    const result = contentField(arg);\n\n    return result;\n  }\n};\n\nexport type ClassListMerger = (\n  ...classes: (string | null | undefined | false)[]\n) => string;\nexport const defaultClassListMerger: ClassListMerger = (...classes) => {\n  return classes.filter(Boolean).join(\" \");\n};\n","import * as Encoding from \"effect/Encoding\";\nimport * as Hash from \"effect/Hash\";\nimport * as Micro from \"effect/Micro\";\nimport * as Redacted from \"effect/Redacted\";\nimport SQIds, { defaultOptions } from \"sqids\";\n\nimport { UploadThingError } from \"./error\";\nimport type { ExtractHashPartsFn, FileProperties, Time } from \"./types\";\nimport { parseTimeToSeconds } from \"./utils\";\n\nconst signaturePrefix = \"hmac-sha256=\";\nconst algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\nconst encoder = new TextEncoder();\n\nfunction shuffle(str: string, seed: string) {\n  const chars = str.split(\"\");\n  const seedNum = Hash.string(seed);\n\n  let temp: string;\n  let j: number;\n  for (let i = 0; i < chars.length; i++) {\n    j = ((seedNum % (i + 1)) + i) % chars.length;\n    temp = chars[i]!;\n    chars[i] = chars[j]!;\n    chars[j] = temp;\n  }\n\n  return chars.join(\"\");\n}\n\nexport const signPayload = (\n  payload: string,\n  secret: Redacted.Redacted<string>,\n) =>\n  Micro.gen(function* () {\n    const signingKey = yield* Micro.tryPromise({\n      try: () =>\n        crypto.subtle.importKey(\n          \"raw\",\n          encoder.encode(Redacted.value(secret)),\n          algorithm,\n          false,\n          [\"sign\"],\n        ),\n      catch: (e) =>\n        new UploadThingError({\n          code: \"BAD_REQUEST\",\n          message: \"Invalid signing secret\",\n          cause: e,\n        }),\n    });\n\n    const signature = yield* Micro.map(\n      Micro.tryPromise({\n        try: () =>\n          crypto.subtle.sign(algorithm, signingKey, encoder.encode(payload)),\n        catch: (e) => new UploadThingError({ code: \"BAD_REQUEST\", cause: e }),\n      }),\n      (arrayBuffer) => Encoding.encodeHex(new Uint8Array(arrayBuffer)),\n    );\n\n    return `${signaturePrefix}${signature}`;\n  }).pipe(Micro.withTrace(\"signPayload\"));\n\nexport const verifySignature = (\n  payload: string,\n  signature: string | null,\n  secret: Redacted.Redacted<string>,\n) =>\n  Micro.gen(function* () {\n    const sig = signature?.slice(signaturePrefix.length);\n    if (!sig) return false;\n\n    const secretBytes = encoder.encode(Redacted.value(secret));\n    const signingKey = yield* Micro.promise(() =>\n      crypto.subtle.importKey(\"raw\", secretBytes, algorithm, false, [\"verify\"]),\n    );\n\n    const sigBytes = yield* Micro.fromEither(Encoding.decodeHex(sig));\n    const payloadBytes = encoder.encode(payload);\n    return yield* Micro.promise(() =>\n      crypto.subtle.verify(algorithm, signingKey, sigBytes, payloadBytes),\n    );\n  }).pipe(\n    Micro.withTrace(\"verifySignature\"),\n    Micro.orElseSucceed(() => false),\n  );\n\nexport const generateKey = (\n  file: FileProperties,\n  appId: string,\n  getHashParts?: ExtractHashPartsFn,\n) =>\n  Micro.sync(() => {\n    // Get the parts of which we should hash to constuct the key\n    // This allows the user to customize the hashing algorithm\n    // If they for example want to generate the same key for the\n    // same file whenever it was uploaded\n    const hashParts = JSON.stringify(\n      getHashParts?.(file) ?? [\n        file.name,\n        file.size,\n        file.type,\n        file.lastModified,\n        Date.now(),\n      ],\n    );\n\n    // Hash and Encode the parts and appId as sqids\n    const alphabet = shuffle(defaultOptions.alphabet, appId);\n    const encodedFileSeed = new SQIds({ alphabet, minLength: 36 }).encode([\n      Math.abs(Hash.string(hashParts)),\n    ]);\n    const encodedAppId = new SQIds({ alphabet, minLength: 12 }).encode([\n      Math.abs(Hash.string(appId)),\n    ]);\n\n    // Concatenate them\n    return encodedAppId + encodedFileSeed;\n  }).pipe(Micro.withTrace(\"generateKey\"));\n\n// Verify that the key was generated with the same appId\nexport const verifyKey = (key: string, appId: string) =>\n  Micro.sync(() => {\n    const alphabet = shuffle(defaultOptions.alphabet, appId);\n    const expectedPrefix = new SQIds({ alphabet, minLength: 12 }).encode([\n      Math.abs(Hash.string(appId)),\n    ]);\n\n    return key.startsWith(expectedPrefix);\n  }).pipe(\n    Micro.withTrace(\"verifyKey\"),\n    Micro.orElseSucceed(() => false),\n  );\n\nexport const generateSignedURL = (\n  url: string | URL,\n  secretKey: Redacted.Redacted<string>,\n  opts: {\n    ttlInSeconds?: Time | undefined;\n    data?: Record<string, string | number | boolean | null | undefined>;\n  },\n) =>\n  Micro.gen(function* () {\n    const parsedURL = new URL(url);\n\n    const ttl = opts.ttlInSeconds\n      ? parseTimeToSeconds(opts.ttlInSeconds)\n      : 60 * 60;\n\n    const expirationTime = Date.now() + ttl * 1000;\n    parsedURL.searchParams.append(\"expires\", expirationTime.toString());\n\n    if (opts.data) {\n      Object.entries(opts.data).forEach(([key, value]) => {\n        if (value == null) return;\n        const encoded = encodeURIComponent(value);\n        parsedURL.searchParams.append(key, encoded);\n      });\n    }\n\n    const signature = yield* signPayload(parsedURL.toString(), secretKey);\n    parsedURL.searchParams.append(\"signature\", signature);\n\n    return parsedURL.href;\n  }).pipe(Micro.withTrace(\"generateSignedURL\"));\n","export type AcceptProp = Record<string, string[]>;\n\nexport type DropzoneOptions = {\n  multiple?: boolean;\n  accept?: AcceptProp | undefined;\n  minSize?: number;\n  maxSize?: number;\n  maxFiles?: number;\n  disabled?: boolean | undefined;\n  onDrop: <T extends File>(acceptedFiles: T[]) => void;\n};\n\nexport type DropzoneState = {\n  isFocused: boolean;\n  isDragActive: boolean;\n  isDragAccept: boolean;\n  isDragReject: boolean;\n  isFileDialogActive: boolean;\n  acceptedFiles: File[];\n};\n\n/**\n * Copyright (c) (MIT License) 2015 Andrey Okonetchnikov\n * https://github.com/react-dropzone/attr-accept/blob/master/src/index.js\n */\nfunction accepts(file: File, acceptedFiles: string | string[]): boolean {\n  if (acceptedFiles) {\n    const acceptedFilesArray = Array.isArray(acceptedFiles)\n      ? acceptedFiles\n      : acceptedFiles.split(\",\");\n    const fileName = file.name;\n    const mimeType = file.type.toLowerCase();\n    const baseMimeType = mimeType.replace(/\\/.*$/, \"\");\n\n    return acceptedFilesArray.some((type) => {\n      const validType = type.trim().toLowerCase();\n      if (validType.startsWith(\".\")) {\n        return fileName.toLowerCase().endsWith(validType);\n      } else if (validType.endsWith(\"/*\")) {\n        // This is something like a image/* mime type\n        return baseMimeType === validType.replace(/\\/.*$/, \"\");\n      }\n      return mimeType === validType;\n    });\n  }\n  return true;\n}\n\nexport const isPropagationStopped = (\n  event: Event & { isPropagationStopped?: () => boolean },\n) => {\n  if (typeof event.isPropagationStopped === \"function\") {\n    return event.isPropagationStopped();\n  }\n  if (typeof event.cancelBubble !== \"undefined\") {\n    return event.cancelBubble;\n  }\n  return false;\n};\n\n// Firefox versions prior to 53 return a bogus MIME type for every file drag, so dragovers with\n// that MIME type will always be accepted\nexport function isFileAccepted(file: File, accept: string | string[]) {\n  return file.type === \"application/x-moz-file\" || accepts(file, accept);\n}\n\nexport function isEnterOrSpace(event: { key?: string; keyCode?: number }) {\n  return (\n    (\"key\" in event && (event.key === \" \" || event.key === \"Enter\")) ||\n    (\"keyCode\" in event && (event.keyCode === 32 || event.keyCode === 13))\n  );\n}\n\nconst isDefined = <T>(v: T | null | undefined): v is T => v != null;\nexport function isValidSize(file: File, minSize: number, maxSize: number) {\n  if (!isDefined(file.size)) return true;\n  if (isDefined(minSize) && isDefined(maxSize)) {\n    return file.size >= minSize && file.size <= maxSize;\n  }\n  if (isDefined(minSize) && file.size < minSize) return false;\n  if (isDefined(maxSize) && file.size > maxSize) return false;\n  return true;\n}\n\nexport function isValidQuantity(\n  files: File[],\n  multiple: boolean,\n  maxFiles: number,\n) {\n  if (!multiple && files.length > 1) return false;\n  if (multiple && maxFiles >= 1 && files.length > maxFiles) return false;\n  return true;\n}\n\nexport function allFilesAccepted({\n  files,\n  accept,\n  minSize,\n  maxSize,\n  multiple,\n  maxFiles,\n}: {\n  files: File[];\n  accept: string | string[];\n  minSize: number;\n  maxSize: number;\n  multiple: boolean;\n  maxFiles: number;\n}) {\n  if (!isValidQuantity(files, multiple, maxFiles)) return false;\n\n  return files.every(\n    (file) =>\n      isFileAccepted(file, accept) && isValidSize(file, minSize, maxSize),\n  );\n}\n\nexport function isEventWithFiles(event: Partial<Event>) {\n  if (!(\"dataTransfer\" in event && event.dataTransfer !== null)) {\n    return !!event.target && \"files\" in event.target && !!event.target.files;\n  }\n  // https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/types\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types#file\n  return Array.prototype.some.call(\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    (event.dataTransfer as any)?.types,\n    (type) => type === \"Files\" || type === \"application/x-moz-file\",\n  );\n}\n\nexport function isIeOrEdge(ua = window.navigator.userAgent) {\n  return (\n    ua.includes(\"MSIE \") || ua.includes(\"Trident/\") || ua.includes(\"Edge/\")\n  );\n}\n\nfunction isMIMEType(v: string) {\n  return (\n    v === \"audio/*\" ||\n    v === \"video/*\" ||\n    v === \"image/*\" ||\n    v === \"text/*\" ||\n    /\\w+\\/[-+.\\w]+/g.test(v)\n  );\n}\n\nfunction isExt(v: string) {\n  return /^.*\\.[\\w]+$/.test(v);\n}\n\n/**\n * Convert the `{accept}` dropzone prop to an array of MIME types/extensions.\n */\nexport function acceptPropAsAcceptAttr(accept?: AcceptProp) {\n  if (isDefined(accept)) {\n    return (\n      Object.entries(accept)\n        .reduce<string[]>((a, [mimeType, ext]) => [...a, mimeType, ...ext], [])\n        // Silently discard invalid entries as pickerOptionsFromAccept warns about these\n        .filter((v) => isMIMEType(v) || isExt(v))\n        .join(\",\")\n    );\n  }\n\n  return undefined;\n}\n\n/**\n * ================================================\n *                    Reducer\n * ================================================\n */\ntype Payload<T extends keyof DropzoneState> = Pick<DropzoneState, T>;\n\ntype Focus = { type: \"focus\" };\ntype Blur = { type: \"blur\" };\ntype OpenDialog = { type: \"openDialog\" };\ntype CloseDialog = { type: \"closeDialog\" };\ntype SetDraggedFiles = {\n  type: \"setDraggedFiles\";\n  payload: Payload<\"isDragActive\" | \"isDragAccept\" | \"isDragReject\">;\n};\ntype SetFiles = { type: \"setFiles\"; payload: Payload<\"acceptedFiles\"> };\ntype Reset = { type: \"reset\" };\ntype DropzoneActions =\n  | Focus\n  | Blur\n  | OpenDialog\n  | CloseDialog\n  | SetDraggedFiles\n  | SetFiles\n  | Reset;\n\nexport const initialState = {\n  isFocused: false,\n  isFileDialogActive: false,\n  isDragActive: false,\n  isDragAccept: false,\n  isDragReject: false,\n  acceptedFiles: [] as File[],\n};\n\nexport function reducer(\n  state: DropzoneState,\n  action: DropzoneActions,\n): DropzoneState {\n  switch (action.type) {\n    case \"focus\":\n      return {\n        ...state,\n        isFocused: true,\n      };\n    case \"blur\":\n      return {\n        ...state,\n        isFocused: false,\n      };\n    case \"openDialog\":\n      return {\n        ...initialState,\n        isFileDialogActive: true,\n      };\n    case \"closeDialog\":\n      return {\n        ...state,\n        isFileDialogActive: false,\n      };\n    case \"setDraggedFiles\":\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case \"setFiles\":\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case \"reset\":\n      return initialState;\n    default:\n      return state;\n  }\n}\n"],"names":["type: string","field?: string","fileName: string","fileType: string","fileSize: string","attemptedUrl: string","routeConfig: FileRouterInputConfig","fileType: FileRouterInputKey","type: FileRouterInputKey","newConfig: ExpandedRouteConfig","file: FileProperties","allowedTypes: FileRouterInputKey[]","type","fileSize: FileSize","bytes: number","input: ResponseEsque","text","obj: T","obj: Record<string, T | null | undefined>","required: string","toCheck: string","pkg: string","req: Request","maybeUrl?: string","maybeUrl: string | URL | undefined","time: Time","_: string","value: unknown","x: T | ((...args: Param) => T)","cause: unknown","fallback?: string","Micro","initOpts: UploadThingErrorOptions<TShape> | string","opts: UploadThingErrorOptions<TShape>","error: UploadThingError","statusCode: number","error: UploadThingError<any>","e: Error","input: string | URL","init?: RequestInit","res: ResponseWithURL","progress: number","granularity: ProgressGranularity","typesOrRouteConfig: string[] | ExpandedRouteConfig","fileTypes: string[]","event: ClipboardEvent","config?: ExpandedRouteConfig","str: string","styleField: StyleField<T> | undefined","args: T","contentField: ContentField<T> | undefined","arg: T","defaultClassListMerger: ClassListMerger","str: string","seed: string","temp: string","j: number","payload: string","secret: Redacted.Redacted<string>","signature: string | null","file: FileProperties","appId: string","getHashParts?: ExtractHashPartsFn","key: string","url: string | URL","secretKey: Redacted.Redacted<string>","opts: {\n    ttlInSeconds?: Time | undefined;\n    data?: Record<string, string | number | boolean | null | undefined>;\n  }","file: File","acceptedFiles: string | string[]","event: Event & { isPropagationStopped?: () => boolean }","accept: string | string[]","event: { key?: string; keyCode?: number }","v: T | null | undefined","minSize: number","maxSize: number","files: File[]","multiple: boolean","maxFiles: number","event: Partial<Event>","v: string","accept?: AcceptProp","state: DropzoneState","action: DropzoneActions"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8],"debugId":null}},
    {"offset": {"line": 19614, "column": 0}, "map": {"version":3,"file":"package-Beb-iarE.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/uploadthing/package.json"],"sourcesContent":["{\n  \"name\": \"uploadthing\",\n  \"version\": \"7.7.3\",\n  \"type\": \"module\",\n  \"sideEffects\": false,\n  \"engines\": {\n    \"node\": \">=18.13.0\"\n  },\n  \"license\": \"MIT\",\n  \"exports\": {\n    \"./package.json\": \"./package.json\",\n    \"./client\": {\n      \"import\": {\n        \"types\": \"./client/index.d.ts\",\n        \"default\": \"./client/index.js\"\n      },\n      \"require\": {\n        \"types\": \"./client/index.d.cts\",\n        \"default\": \"./client/index.cjs\"\n      }\n    },\n    \"./client-future\": {\n      \"import\": {\n        \"types\": \"./client-future/index.d.ts\",\n        \"default\": \"./client-future/index.js\"\n      },\n      \"require\": {\n        \"types\": \"./client-future/index.d.cts\",\n        \"default\": \"./client-future/index.cjs\"\n      }\n    },\n    \"./server\": {\n      \"import\": {\n        \"types\": \"./server/index.d.ts\",\n        \"default\": \"./server/index.js\"\n      },\n      \"require\": {\n        \"types\": \"./server/index.d.cts\",\n        \"default\": \"./server/index.cjs\"\n      }\n    },\n    \"./next\": {\n      \"import\": {\n        \"types\": \"./next/index.d.ts\",\n        \"default\": \"./next/index.js\"\n      },\n      \"require\": {\n        \"types\": \"./next/index.d.cts\",\n        \"default\": \"./next/index.cjs\"\n      }\n    },\n    \"./next-legacy\": {\n      \"import\": {\n        \"types\": \"./next-legacy/index.d.ts\",\n        \"default\": \"./next-legacy/index.js\"\n      },\n      \"require\": {\n        \"types\": \"./next-legacy/index.d.cts\",\n        \"default\": \"./next-legacy/index.cjs\"\n      }\n    },\n    \"./effect-platform\": {\n      \"import\": {\n        \"types\": \"./effect-platform/index.d.ts\",\n        \"default\": \"./effect-platform/index.js\"\n      },\n      \"require\": {\n        \"types\": \"./effect-platform/index.d.cts\",\n        \"default\": \"./effect-platform/index.cjs\"\n      }\n    },\n    \"./tw\": {\n      \"browser\": \"./tw/index.browser.js\",\n      \"import\": {\n        \"types\": \"./tw/index.d.ts\",\n        \"default\": \"./tw/index.js\"\n      },\n      \"require\": {\n        \"types\": \"./tw/index.d.cts\",\n        \"default\": \"./tw/index.cjs\"\n      }\n    },\n    \"./tw/v4\": \"./tw/v4.css\",\n    \"./fastify\": {\n      \"import\": {\n        \"types\": \"./fastify/index.d.ts\",\n        \"default\": \"./fastify/index.js\"\n      },\n      \"require\": {\n        \"types\": \"./fastify/index.d.cts\",\n        \"default\": \"./fastify/index.cjs\"\n      }\n    },\n    \"./express\": {\n      \"import\": {\n        \"types\": \"./express/index.d.ts\",\n        \"default\": \"./express/index.js\"\n      },\n      \"require\": {\n        \"types\": \"./express/index.d.cts\",\n        \"default\": \"./express/index.cjs\"\n      }\n    },\n    \"./h3\": {\n      \"import\": {\n        \"types\": \"./h3/index.d.ts\",\n        \"default\": \"./h3/index.js\"\n      },\n      \"require\": {\n        \"types\": \"./h3/index.d.cts\",\n        \"default\": \"./h3/index.cjs\"\n      }\n    },\n    \"./remix\": {\n      \"import\": {\n        \"types\": \"./remix/index.d.ts\",\n        \"default\": \"./remix/index.js\"\n      },\n      \"require\": {\n        \"types\": \"./remix/index.d.cts\",\n        \"default\": \"./remix/index.cjs\"\n      }\n    },\n    \"./types\": {\n      \"types\": \"./types/index.d.ts\",\n      \"default\": \"./types/index.js\"\n    }\n  },\n  \"files\": [\n    \"client\",\n    \"client-future\",\n    \"dist\",\n    \"effect-platform\",\n    \"express\",\n    \"fastify\",\n    \"h3\",\n    \"next\",\n    \"next-legacy\",\n    \"remix\",\n    \"server\",\n    \"types\",\n    \"tw\"\n  ],\n  \"publishConfig\": {\n    \"access\": \"public\"\n  },\n  \"scripts\": {\n    \"lint\": \"eslint src test --max-warnings 0\",\n    \"build\": \"tsdown\",\n    \"clean\": \"git clean -xdf client express fastify h3 internal next next-legacy server tw node_modules\",\n    \"dev\": \"tsdown --no-clean\",\n    \"prepack\": \"bun ../../.github/replace-workspace-protocol.ts\",\n    \"test\": \"vitest run\",\n    \"typecheck\": \"tsc --noEmit\"\n  },\n  \"dependencies\": {\n    \"@effect/platform\": \"0.85.2\",\n    \"@standard-schema/spec\": \"1.0.0-beta.4\",\n    \"@uploadthing/mime-types\": \"workspace:*\",\n    \"@uploadthing/shared\": \"workspace:*\",\n    \"effect\": \"3.16.8\"\n  },\n  \"devDependencies\": {\n    \"@effect/vitest\": \"0.23.8\",\n    \"@remix-run/server-runtime\": \"^2.12.0\",\n    \"@types/body-parser\": \"^1.19.5\",\n    \"@types/express\": \"^5.0.0\",\n    \"@types/express-serve-static-core\": \"^5.0.3\",\n    \"@types/react\": \"19.1.2\",\n    \"@uploadthing/eslint-config\": \"workspace:*\",\n    \"@uploadthing/tsconfig\": \"workspace:*\",\n    \"@uploadthing/vitest-config\": \"workspace:*\",\n    \"@vitest/coverage-istanbul\": \"3.2.4\",\n    \"body-parser\": \"^1.20.2\",\n    \"eslint\": \"9.25.1\",\n    \"express\": \"^5.0.1\",\n    \"fastify\": \"^5.2.0\",\n    \"h3\": \"^1.13.0\",\n    \"msw\": \"2.7.5\",\n    \"next\": \"15.3.1\",\n    \"solid-js\": \"^1.9.3\",\n    \"tailwindcss\": \"^3.4.16\",\n    \"tsdown\": \"0.12.1\",\n    \"typescript\": \"5.8.3\",\n    \"valibot\": \"1.0.0-beta.9\",\n    \"vitest\": \"3.2.4\",\n    \"vue\": \"^3.4.21\",\n    \"wait-on\": \"^8.0.1\",\n    \"zod\": \"^3.24.1\"\n  },\n  \"peerDependencies\": {\n    \"express\": \"*\",\n    \"h3\": \"*\",\n    \"tailwindcss\": \"^3.0.0 || ^4.0.0-beta.0\"\n  },\n  \"peerDependenciesMeta\": {\n    \"next\": {\n      \"optional\": true\n    },\n    \"express\": {\n      \"optional\": true\n    },\n    \"fastify\": {\n      \"optional\": true\n    },\n    \"h3\": {\n      \"optional\": true\n    },\n    \"tailwindcss\": {\n      \"optional\": true\n    }\n  }\n}\n"],"names":[],"mappings":";;;;cAEa","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 19627, "column": 0}, "map": {"version":3,"file":"ut-reporter-C8446w-v.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/uploadthing/src/_internal/deferred.ts","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/uploadthing/src/_internal/random-hex.ts","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/uploadthing/src/_internal/ut-reporter.ts"],"sourcesContent":["export type Deferred<T> = {\n  resolve: (value: T) => void;\n  reject: (reason?: any) => void;\n  ac: AbortController;\n  promise: Promise<T>;\n};\n\nexport const createDeferred = <T>(): Deferred<T> => {\n  let resolve!: (value: T) => void;\n  let reject!: (reason?: any) => void;\n  const ac = new AbortController();\n  const promise = new Promise<T>((res, rej) => {\n    resolve = res;\n    reject = rej;\n  });\n  return { promise, ac, resolve, reject };\n};\n","export const randomHexString = (function () {\n  const characters = \"abcdef0123456789\";\n  const charactersLength = characters.length;\n  return function (length: number) {\n    let result = \"\";\n    for (let i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  };\n})();\n\nexport type TraceHeaders = {\n  b3: string;\n  traceparent: string;\n};\n\nexport const generateTraceHeaders = (): TraceHeaders => {\n  const traceId = randomHexString(32);\n  const spanId = randomHexString(16);\n  const sampled = \"01\";\n\n  return {\n    b3: `${traceId}-${spanId}-${sampled}`,\n    traceparent: `00-${traceId}-${spanId}-${sampled}`,\n  };\n};\n","import { unsafeCoerce } from \"effect/Function\";\nimport * as Micro from \"effect/Micro\";\n\nimport type { FetchContext, MaybePromise } from \"@uploadthing/shared\";\nimport {\n  fetchEff,\n  getErrorTypeFromStatusCode,\n  parseResponseJson,\n  UploadThingError,\n} from \"@uploadthing/shared\";\n\nimport * as pkgJson from \"../../package.json\";\nimport type { TraceHeaders } from \"./random-hex\";\nimport type { ActionType } from \"./shared-schemas\";\nimport type { UTEvents } from \"./types\";\n\nconst createAPIRequestUrl = (config: {\n  /**\n   * URL to the UploadThing API endpoint\n   * @example URL { /api/uploadthing }\n   * @example URL { https://www.example.com/api/uploadthing }\n   */\n  url: URL;\n  slug: string;\n  actionType: typeof ActionType.Type;\n}) => {\n  const url = new URL(config.url);\n\n  const queryParams = new URLSearchParams(url.search);\n  queryParams.set(\"actionType\", config.actionType);\n  queryParams.set(\"slug\", config.slug);\n\n  url.search = queryParams.toString();\n  return url;\n};\n\nexport type UTReporter = <TEvent extends keyof UTEvents>(\n  type: TEvent,\n  payload: UTEvents[TEvent][\"in\"],\n) => Micro.Micro<UTEvents[TEvent][\"out\"], UploadThingError, FetchContext>;\n\n/**\n * Creates a \"client\" for reporting events to the UploadThing server via the user's API endpoint.\n * Events are handled in \"./handler.ts starting at L112\"\n */\nexport const createUTReporter =\n  (cfg: {\n    url: URL;\n    endpoint: string;\n    package?: string | undefined;\n    headers: HeadersInit | (() => MaybePromise<HeadersInit>) | undefined;\n    traceHeaders: TraceHeaders;\n  }): UTReporter =>\n  (type, payload) =>\n    Micro.gen(function* () {\n      const url = createAPIRequestUrl({\n        url: cfg.url,\n        slug: cfg.endpoint,\n        actionType: type,\n      });\n      const headers = new Headers(\n        yield* Micro.promise(async () =>\n          typeof cfg.headers === \"function\" ? await cfg.headers() : cfg.headers,\n        ),\n      );\n      if (cfg.package) {\n        headers.set(\"x-uploadthing-package\", cfg.package);\n      }\n      headers.set(\"x-uploadthing-version\", pkgJson.version);\n      headers.set(\"Content-Type\", \"application/json\");\n      headers.set(\"b3\", cfg.traceHeaders.b3);\n      headers.set(\"traceparent\", cfg.traceHeaders.traceparent);\n\n      const response = yield* fetchEff(url, {\n        method: \"POST\",\n        body: JSON.stringify(payload),\n        headers,\n      }).pipe(\n        Micro.andThen(parseResponseJson),\n        /**\n         * We don't _need_ to validate the response here, just cast it for now.\n         * As of now, @effect/schema includes quite a few bytes we cut out by this...\n         * We have \"strong typing\" on the backend that ensures the shape should match.\n         */\n        Micro.map(unsafeCoerce<unknown, UTEvents[typeof type][\"out\"]>),\n        Micro.catchTag(\"FetchError\", (e) =>\n          Micro.fail(\n            new UploadThingError({\n              code: \"INTERNAL_CLIENT_ERROR\",\n              message: `Failed to report event \"${type}\" to UploadThing server`,\n              cause: e,\n            }),\n          ),\n        ),\n        Micro.catchTag(\"BadRequestError\", (e) =>\n          Micro.fail(\n            new UploadThingError({\n              code: getErrorTypeFromStatusCode(e.status),\n              message: e.getMessage(),\n              cause: e.json,\n            }),\n          ),\n        ),\n        Micro.catchTag(\"InvalidJson\", (e) =>\n          Micro.fail(\n            new UploadThingError({\n              code: \"INTERNAL_CLIENT_ERROR\",\n              message: \"Failed to parse response from UploadThing server\",\n              cause: e,\n            }),\n          ),\n        ),\n      );\n\n      return response;\n    });\n"],"names":["resolve!: (value: T) => void","reject!: (reason?: any) => void","length: number","config: {\n  /**\n   * URL to the UploadThing API endpoint\n   * @example URL { /api/uploadthing }\n   * @example URL { https://www.example.com/api/uploadthing }\n   */\n  url: URL;\n  slug: string;\n  actionType: typeof ActionType.Type;\n}","cfg: {\n    url: URL;\n    endpoint: string;\n    package?: string | undefined;\n    headers: HeadersInit | (() => MaybePromise<HeadersInit>) | undefined;\n    traceHeaders: TraceHeaders;\n  }"],"mappings":"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","ignoreList":[0,1,2],"debugId":null}},
    {"offset": {"line": 19732, "column": 0}, "map": {"version":3,"file":"deprecations-pLmw6Ytd.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/uploadthing/src/_internal/deprecations.ts"],"sourcesContent":["export const logDeprecationWarning = (message: string) => {\n  // eslint-disable-next-line no-console\n  console.warn(`⚠️ [uploadthing][deprecated] ${message}`);\n};\n"],"names":["message: string"],"mappings":";;;;AAAA,MAAa,wBAAwB,CAACA,YAAoB;IAExD,QAAQ,IAAA,CAAA,CAAM,6BAAA,EAA+B,QAAQ,CAAA,CAAE;AACxD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 19747, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/uploadthing/src/_internal/upload-browser.ts","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/uploadthing/src/client.ts"],"sourcesContent":["import { unsafeCoerce } from \"effect/Function\";\nimport * as Micro from \"effect/Micro\";\nimport { hasProperty, isRecord } from \"effect/Predicate\";\n\nimport type { FetchContext, FetchError } from \"@uploadthing/shared\";\nimport { fetchEff, UploadThingError } from \"@uploadthing/shared\";\n\nimport { version } from \"../../package.json\";\nimport type {\n  ClientUploadedFileData,\n  FileRouter,\n  inferEndpointOutput,\n  NewPresignedUrl,\n  UploadFilesOptions,\n} from \"../types\";\nimport { logDeprecationWarning } from \"./deprecations\";\nimport type { TraceHeaders } from \"./random-hex\";\nimport { generateTraceHeaders } from \"./random-hex\";\nimport type { UploadPutResult } from \"./types\";\nimport { createUTReporter } from \"./ut-reporter\";\n\nconst uploadWithProgress = (\n  file: File,\n  rangeStart: number,\n  presigned: NewPresignedUrl,\n  opts: {\n    traceHeaders: TraceHeaders;\n    onUploadProgress?:\n      | ((opts: { loaded: number; delta: number }) => void)\n      | undefined;\n  },\n) =>\n  Micro.async<unknown, UploadThingError, FetchContext>((resume) => {\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"PUT\", presigned.url, true);\n    xhr.setRequestHeader(\"Range\", `bytes=${rangeStart}-`);\n    xhr.setRequestHeader(\"x-uploadthing-version\", version);\n    xhr.setRequestHeader(\"b3\", opts.traceHeaders.b3);\n    xhr.setRequestHeader(\"traceparent\", opts.traceHeaders.traceparent);\n\n    xhr.responseType = \"json\";\n\n    let previousLoaded = 0;\n    xhr.upload.addEventListener(\"progress\", ({ loaded }) => {\n      const delta = loaded - previousLoaded;\n      opts.onUploadProgress?.({ loaded, delta });\n      previousLoaded = loaded;\n    });\n    xhr.addEventListener(\"load\", () => {\n      if (xhr.status >= 200 && xhr.status < 300 && isRecord(xhr.response)) {\n        if (hasProperty(xhr.response, \"error\")) {\n          resume(\n            new UploadThingError({\n              code: \"UPLOAD_FAILED\",\n              message: String(xhr.response.error),\n              data: xhr.response as never,\n            }),\n          );\n        } else {\n          resume(Micro.succeed(xhr.response));\n        }\n      } else {\n        resume(\n          new UploadThingError({\n            code: \"UPLOAD_FAILED\",\n            message: `XHR failed ${xhr.status} ${xhr.statusText}`,\n            data: xhr.response as never,\n          }),\n        );\n      }\n    });\n\n    // Is there a case when the client would throw and\n    // ingest server not knowing about it? idts?\n    xhr.addEventListener(\"error\", () => {\n      resume(\n        new UploadThingError({\n          code: \"UPLOAD_FAILED\",\n        }),\n      );\n    });\n\n    const formData = new FormData();\n    /**\n     * iOS/React Native FormData handling requires special attention:\n     *\n     * Issue: In React Native, iOS crashes with \"attempt to insert nil object\" when appending File directly\n     * to FormData. This happens because iOS tries to create NSDictionary from the file object and expects\n     * specific structure {uri, type, name}.\n     *\n     *\n     * Note: Don't try to use Blob or modify File object - iOS specifically needs plain object\n     * with these properties to create valid NSDictionary.\n     */\n    if (\"uri\" in file) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      formData.append(\"file\", {\n        uri: file.uri as string,\n        type: file.type,\n        name: file.name,\n        ...(rangeStart > 0 && { range: rangeStart }),\n      } as any);\n    } else {\n      formData.append(\"file\", rangeStart > 0 ? file.slice(rangeStart) : file);\n    }\n    xhr.send(formData);\n\n    return Micro.sync(() => xhr.abort());\n  });\n\nexport const uploadFile = <\n  TRouter extends FileRouter,\n  TEndpoint extends keyof TRouter,\n  TServerOutput = inferEndpointOutput<TRouter[TEndpoint]>,\n>(\n  file: File,\n  presigned: NewPresignedUrl,\n  opts: {\n    traceHeaders: TraceHeaders;\n    onUploadProgress?: (progressEvent: {\n      loaded: number;\n      delta: number;\n    }) => void;\n  },\n) =>\n  fetchEff(presigned.url, {\n    method: \"HEAD\",\n    headers: opts.traceHeaders,\n  }).pipe(\n    Micro.map(({ headers }) =>\n      parseInt(headers.get(\"x-ut-range-start\") ?? \"0\", 10),\n    ),\n    Micro.tap((start) =>\n      opts.onUploadProgress?.({\n        delta: start,\n        loaded: start,\n      }),\n    ),\n    Micro.flatMap((start) =>\n      uploadWithProgress(file, start, presigned, {\n        traceHeaders: opts.traceHeaders,\n        onUploadProgress: (progressEvent) =>\n          opts.onUploadProgress?.({\n            delta: progressEvent.delta,\n            loaded: progressEvent.loaded + start,\n          }),\n      }),\n    ),\n    Micro.map(unsafeCoerce<unknown, UploadPutResult<TServerOutput>>),\n    Micro.map((uploadResponse) => ({\n      name: file.name,\n      size: file.size,\n      key: presigned.key,\n      lastModified: file.lastModified,\n      serverData: uploadResponse.serverData,\n      get url() {\n        logDeprecationWarning(\n          \"`file.url` is deprecated and will be removed in uploadthing v9. Use `file.ufsUrl` instead.\",\n        );\n        return uploadResponse.url;\n      },\n      get appUrl() {\n        logDeprecationWarning(\n          \"`file.appUrl` is deprecated and will be removed in uploadthing v9. Use `file.ufsUrl` instead.\",\n        );\n        return uploadResponse.appUrl;\n      },\n      ufsUrl: uploadResponse.ufsUrl,\n      customId: presigned.customId,\n      type: file.type,\n      fileHash: uploadResponse.fileHash,\n    })),\n  );\n\nexport const uploadFilesInternal = <\n  TRouter extends FileRouter,\n  TEndpoint extends keyof TRouter,\n  TServerOutput = inferEndpointOutput<TRouter[TEndpoint]>,\n>(\n  endpoint: TEndpoint,\n  opts: UploadFilesOptions<TRouter[TEndpoint]>,\n): Micro.Micro<\n  ClientUploadedFileData<TServerOutput>[],\n  UploadThingError | FetchError,\n  FetchContext\n> => {\n  // classic service right here\n  const traceHeaders = generateTraceHeaders();\n  const reportEventToUT = createUTReporter({\n    endpoint: String(endpoint),\n    package: opts.package,\n    url: opts.url,\n    headers: opts.headers,\n    traceHeaders,\n  });\n\n  const totalSize = opts.files.reduce((acc, f) => acc + f.size, 0);\n  let totalLoaded = 0;\n\n  return Micro.flatMap(\n    reportEventToUT(\"upload\", {\n      input: \"input\" in opts ? opts.input : null,\n      files: opts.files.map((f) => ({\n        name: f.name,\n        size: f.size,\n        type: f.type,\n        lastModified: f.lastModified,\n      })),\n    }),\n    (presigneds) =>\n      Micro.forEach(\n        presigneds,\n        (presigned, i) =>\n          Micro.flatMap(\n            Micro.sync(() =>\n              opts.onUploadBegin?.({ file: opts.files[i]!.name }),\n            ),\n            () =>\n              uploadFile<TRouter, TEndpoint, TServerOutput>(\n                opts.files[i]!,\n                presigned,\n                {\n                  traceHeaders,\n                  onUploadProgress: (ev) => {\n                    totalLoaded += ev.delta;\n                    opts.onUploadProgress?.({\n                      file: opts.files[i]!,\n                      progress: (ev.loaded / opts.files[i]!.size) * 100,\n                      loaded: ev.loaded,\n                      delta: ev.delta,\n                      totalLoaded,\n                      totalProgress: totalLoaded / totalSize,\n                    });\n                  },\n                },\n              ),\n          ),\n        { concurrency: 6 },\n      ),\n  );\n};\n","import * as Arr from \"effect/Array\";\nimport * as Micro from \"effect/Micro\";\n\nimport type { ExpandedRouteConfig, FetchEsque } from \"@uploadthing/shared\";\nimport {\n  createIdentityProxy,\n  FetchContext,\n  fileSizeToBytes,\n  matchFileType,\n  objectKeys,\n  resolveMaybeUrlArg,\n  UploadAbortedError,\n  UploadPausedError,\n} from \"@uploadthing/shared\";\n\nimport * as pkgJson from \"../package.json\";\nimport type { Deferred } from \"./_internal/deferred\";\nimport { createDeferred } from \"./_internal/deferred\";\nimport { generateTraceHeaders } from \"./_internal/random-hex\";\nimport { uploadFile, uploadFilesInternal } from \"./_internal/upload-browser\";\nimport { createUTReporter } from \"./_internal/ut-reporter\";\nimport type {\n  ClientUploadedFileData,\n  CreateUploadOptions,\n  EndpointArg,\n  FileRouter,\n  GenerateUploaderOptions,\n  inferEndpointInput,\n  inferEndpointOutput,\n  NewPresignedUrl,\n  RouteRegistry,\n  UploadFilesOptions,\n} from \"./types\";\n\nexport const version = pkgJson.version;\n\nexport {\n  /** @public */\n  generateClientDropzoneAccept,\n  /** @public */\n  generateMimeTypes,\n  /** @public */\n  generatePermittedFileTypes,\n  /** @public */\n  bytesToFileSize,\n  /** @public */\n  allowedContentTextLabelGenerator,\n  /** @public */\n  UploadAbortedError,\n  /** @public */\n  UploadPausedError,\n} from \"@uploadthing/shared\";\n\n/**\n * Validate that a file is of a valid type given a route config\n * @public\n */\nexport const isValidFileType = (\n  file: File,\n  routeConfig: ExpandedRouteConfig,\n): boolean =>\n  Micro.runSync(\n    matchFileType(file, objectKeys(routeConfig)).pipe(\n      Micro.map((type) => file.type.includes(type)),\n      Micro.orElseSucceed(() => false),\n    ),\n  );\n\n/**\n * Validate that a file is of a valid size given a route config\n * @public\n */\nexport const isValidFileSize = (\n  file: File,\n  routeConfig: ExpandedRouteConfig,\n): boolean =>\n  Micro.runSync(\n    matchFileType(file, objectKeys(routeConfig)).pipe(\n      Micro.flatMap((type) => fileSizeToBytes(routeConfig[type]!.maxFileSize)),\n      Micro.map((maxFileSize) => file.size <= maxFileSize),\n      Micro.orElseSucceed(() => false),\n    ),\n  );\n\n/**\n * Generate a typed uploader for a given FileRouter\n * @public\n */\nexport const genUploader = <TRouter extends FileRouter>(\n  initOpts?: GenerateUploaderOptions,\n) => {\n  const routeRegistry = createIdentityProxy<RouteRegistry<TRouter>>();\n\n  const controllableUpload = async <\n    TEndpoint extends keyof TRouter,\n    TServerOutput = inferEndpointOutput<TRouter[TEndpoint]>,\n  >(\n    slug: EndpointArg<TRouter, TEndpoint>,\n    opts: Omit<\n      CreateUploadOptions<TRouter[TEndpoint]>,\n      keyof GenerateUploaderOptions\n    >,\n  ) => {\n    const uploads = new Map<\n      File,\n      {\n        presigned: NewPresignedUrl;\n        deferred: Deferred<ClientUploadedFileData<TServerOutput>>;\n      }\n    >();\n\n    const endpoint = typeof slug === \"function\" ? slug(routeRegistry) : slug;\n\n    const traceHeaders = generateTraceHeaders();\n    const utReporter = createUTReporter({\n      endpoint: String(endpoint),\n      package: initOpts?.package ?? \"uploadthing/client\",\n      url: resolveMaybeUrlArg(initOpts?.url),\n      headers: opts.headers,\n      traceHeaders,\n    });\n    const fetchFn: FetchEsque = initOpts?.fetch ?? window.fetch;\n\n    const presigneds = await Micro.runPromise(\n      utReporter(\"upload\", {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        input: \"input\" in opts ? (opts.input as any) : null,\n        files: opts.files.map((f) => ({\n          name: f.name,\n          size: f.size,\n          type: f.type,\n          lastModified: f.lastModified,\n        })),\n      }).pipe(Micro.provideService(FetchContext, fetchFn)),\n    );\n\n    const totalSize = opts.files.reduce((acc, f) => acc + f.size, 0);\n    let totalLoaded = 0;\n\n    const uploadEffect = (file: File, presigned: NewPresignedUrl) =>\n      uploadFile(file, presigned, {\n        traceHeaders,\n        onUploadProgress: (progressEvent) => {\n          totalLoaded += progressEvent.delta;\n          opts.onUploadProgress?.({\n            ...progressEvent,\n            file,\n            progress: Math.round((progressEvent.loaded / file.size) * 100),\n            totalLoaded,\n            totalProgress: Math.round((totalLoaded / totalSize) * 100),\n          });\n        },\n      }).pipe(Micro.provideService(FetchContext, fetchFn));\n\n    for (const [i, p] of presigneds.entries()) {\n      const file = opts.files[i];\n      if (!file) continue;\n\n      const deferred = createDeferred<ClientUploadedFileData<TServerOutput>>();\n      uploads.set(file, { deferred, presigned: p });\n\n      void Micro.runPromiseExit(uploadEffect(file, p), {\n        signal: deferred.ac.signal,\n      })\n        .then((result) => {\n          if (result._tag === \"Success\") {\n            return deferred.resolve(result.value);\n          } else if (result.cause._tag === \"Interrupt\") {\n            throw new UploadPausedError();\n          }\n          throw Micro.causeSquash(result.cause);\n        })\n        .catch((err) => {\n          if (err instanceof UploadPausedError) return;\n          deferred.reject(err);\n        });\n    }\n\n    /**\n     * Pause an ongoing upload\n     * @param file The file upload you want to pause. Can be omitted to pause all files\n     */\n    const pauseUpload = (file?: File) => {\n      const files = Arr.ensure(file ?? opts.files);\n      for (const file of files) {\n        const upload = uploads.get(file);\n        if (!upload) return;\n\n        if (upload.deferred.ac.signal.aborted) {\n          // Cancel the upload if it's already been paused\n          throw new UploadAbortedError();\n        }\n\n        upload.deferred.ac.abort();\n      }\n    };\n\n    /**\n     * Resume a paused upload\n     * @param file The file upload you want to resume. Can be omitted to resume all files\n     */\n    const resumeUpload = (file?: File) => {\n      const files = Arr.ensure(file ?? opts.files);\n      for (const file of files) {\n        const upload = uploads.get(file);\n        if (!upload) throw \"No upload found\";\n\n        upload.deferred.ac = new AbortController();\n        void Micro.runPromiseExit(uploadEffect(file, upload.presigned), {\n          signal: upload.deferred.ac.signal,\n        })\n          .then((result) => {\n            if (result._tag === \"Success\") {\n              return upload.deferred.resolve(result.value);\n            } else if (result.cause._tag === \"Interrupt\") {\n              throw new UploadPausedError();\n            }\n            throw Micro.causeSquash(result.cause);\n          })\n          .catch((err) => {\n            if (err instanceof UploadPausedError) return;\n            upload.deferred.reject(err);\n          });\n      }\n    };\n\n    /**\n     * Wait for an upload to complete\n     * @param file The file upload you want to wait for. Can be omitted to wait for all files\n     */\n    const done = async <T extends File | void = void>(\n      file?: T,\n    ): Promise<\n      T extends File\n        ? ClientUploadedFileData<TServerOutput>\n        : ClientUploadedFileData<TServerOutput>[]\n    > => {\n      const promises = [];\n\n      const files = Arr.ensure(file ?? opts.files);\n      for (const file of files) {\n        const upload = uploads.get(file);\n        if (!upload) throw \"No upload found\";\n\n        promises.push(upload.deferred.promise);\n      }\n\n      const results = await Promise.all(promises);\n      return (file ? results[0] : results) as never;\n    };\n\n    return { pauseUpload, resumeUpload, done };\n  };\n\n  /**\n   * One step upload function that both requests presigned URLs\n   * and then uploads the files to UploadThing\n   */\n  const typedUploadFiles = <TEndpoint extends keyof TRouter>(\n    slug: EndpointArg<TRouter, TEndpoint>,\n    opts: Omit<\n      UploadFilesOptions<TRouter[TEndpoint]>,\n      keyof GenerateUploaderOptions\n    >,\n  ) => {\n    const endpoint = typeof slug === \"function\" ? slug(routeRegistry) : slug;\n    const fetchFn: FetchEsque = initOpts?.fetch ?? window.fetch;\n\n    return uploadFilesInternal<TRouter, TEndpoint>(endpoint, {\n      ...opts,\n      skipPolling: {} as never, // Remove in a future version, it's type right not is an ErrorMessage<T> to help migrations.\n      url: resolveMaybeUrlArg(initOpts?.url),\n      package: initOpts?.package ?? \"uploadthing/client\",\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      input: (opts as any).input as inferEndpointInput<TRouter[TEndpoint]>,\n    })\n      .pipe(Micro.provideService(FetchContext, fetchFn), (effect) =>\n        Micro.runPromiseExit(effect, opts.signal && { signal: opts.signal }),\n      )\n      .then((exit) => {\n        if (exit._tag === \"Success\") {\n          return exit.value;\n        } else if (exit.cause._tag === \"Interrupt\") {\n          throw new UploadAbortedError();\n        }\n        throw Micro.causeSquash(exit.cause);\n      });\n  };\n\n  return {\n    uploadFiles: typedUploadFiles,\n    createUpload: controllableUpload,\n    /**\n     * Identity object that can be used instead of raw strings\n     * that allows \"Go to definition\" in your IDE to bring you\n     * to the backend definition of a route.\n     */\n    routeRegistry,\n  };\n};\n"],"names":["file: File","rangeStart: number","presigned: NewPresignedUrl","opts: {\n    traceHeaders: TraceHeaders;\n    onUploadProgress?:\n      | ((opts: { loaded: number; delta: number }) => void)\n      | undefined;\n  }","opts: {\n    traceHeaders: TraceHeaders;\n    onUploadProgress?: (progressEvent: {\n      loaded: number;\n      delta: number;\n    }) => void;\n  }","endpoint: TEndpoint","opts: UploadFilesOptions<TRouter[TEndpoint]>","version","file: File","routeConfig: ExpandedRouteConfig","initOpts?: GenerateUploaderOptions","slug: EndpointArg<TRouter, TEndpoint>","opts: Omit<\n      CreateUploadOptions<TRouter[TEndpoint]>,\n      keyof GenerateUploaderOptions\n    >","fetchFn: FetchEsque","presigned: NewPresignedUrl","UploadPausedError","file?: File","file","UploadAbortedError","file?: T","opts: Omit<\n      UploadFilesOptions<TRouter[TEndpoint]>,\n      keyof GenerateUploaderOptions\n    >"],"mappings":"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","ignoreList":[0,1],"debugId":null}},
    {"offset": {"line": 20056, "column": 0}, "map": {"version":3,"file":"use-uploadthing-be6B2S--.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/%40uploadthing/react/package.json","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/%40uploadthing/react/src/utils/useEvent.ts","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/%40uploadthing/react/src/utils/useFetch.ts","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/%40uploadthing/react/src/use-uploadthing.ts"],"sourcesContent":["{\n  \"name\": \"@uploadthing/react\",\n  \"version\": \"7.3.2\",\n  \"type\": \"module\",\n  \"sideEffects\": false,\n  \"license\": \"MIT\",\n  \"main\": \"./dist/index.cjs\",\n  \"module\": \"./dist/index.js\",\n  \"types\": \"./dist/index.d.ts\",\n  \"exports\": {\n    \"./package.json\": \"./package.json\",\n    \"./styles.css\": \"./dist/index.css\",\n    \".\": {\n      \"import\": {\n        \"types\": \"./dist/index.d.ts\",\n        \"default\": \"./dist/index.js\"\n      },\n      \"require\": {\n        \"types\": \"./dist/index.d.cts\",\n        \"default\": \"./dist/index.cjs\"\n      }\n    },\n    \"./native\": {\n      \"import\": {\n        \"types\": \"./native/index.d.ts\",\n        \"default\": \"./native/index.js\"\n      },\n      \"require\": {\n        \"types\": \"./native/index.d.cts\",\n        \"default\": \"./native/index.cjs\"\n      }\n    },\n    \"./next-ssr-plugin\": {\n      \"import\": {\n        \"types\": \"./next-ssr-plugin/index.d.ts\",\n        \"default\": \"./next-ssr-plugin/index.js\"\n      },\n      \"require\": {\n        \"types\": \"./next-ssr-plugin/index.d.cts\",\n        \"default\": \"./next-ssr-plugin/index.cjs\"\n      }\n    }\n  },\n  \"files\": [\n    \"dist\",\n    \"native\",\n    \"next-ssr-plugin\"\n  ],\n  \"publishConfig\": {\n    \"access\": \"public\"\n  },\n  \"scripts\": {\n    \"build\": \"tsdown\",\n    \"dev\": \"tsdown --no-clean\",\n    \"clean\": \"git clean -xdf dist hooks native next-ssr-plugin node_modules\",\n    \"lint\": \"eslint src test --max-warnings 0\",\n    \"prepack\": \"bun ../../.github/replace-workspace-protocol.ts\",\n    \"test\": \"vitest run\",\n    \"typecheck\": \"tsc --noEmit\"\n  },\n  \"dependencies\": {\n    \"@uploadthing/shared\": \"workspace:*\",\n    \"file-selector\": \"0.6.0\"\n  },\n  \"peerDependencies\": {\n    \"next\": \"*\",\n    \"react\": \"^17.0.2 || ^18.0.0 || ^19.0.0\",\n    \"uploadthing\": \"^7.2.0\"\n  },\n  \"peerDependenciesMeta\": {\n    \"next\": {\n      \"optional\": true\n    }\n  },\n  \"devDependencies\": {\n    \"@types/node\": \"^22.10.0\",\n    \"@types/react\": \"19.1.2\",\n    \"@types/react-dom\": \"19.1.2\",\n    \"@uploadthing/eslint-config\": \"workspace:*\",\n    \"@uploadthing/tsconfig\": \"workspace:*\",\n    \"@uploadthing/vitest-config\": \"workspace:*\",\n    \"@vitest/browser\": \"3.2.4\",\n    \"@vitest/coverage-istanbul\": \"3.2.4\",\n    \"concurrently\": \"^9.1.2\",\n    \"eslint\": \"9.25.1\",\n    \"msw\": \"2.7.5\",\n    \"next\": \"15.3.1\",\n    \"react\": \"19.1.0\",\n    \"react-dom\": \"19.1.0\",\n    \"tailwindcss\": \"^3.4.16\",\n    \"tsdown\": \"0.12.1\",\n    \"typescript\": \"5.8.3\",\n    \"uploadthing\": \"workspace:*\",\n    \"vitest\": \"3.2.4\",\n    \"vitest-browser-react\": \"0.3.0\",\n    \"wait-on\": \"^8.0.1\",\n    \"zod\": \"^3.24.1\"\n  }\n}\n","// Ripped from https://github.com/scottrippey/react-use-event-hook\nimport React from \"react\";\n\ntype AnyFunction = (...args: any[]) => any;\nconst noop = () => void 0;\n\n/**\n * Suppress the warning when using useLayoutEffect with SSR. (https://reactjs.org/link/uselayouteffect-ssr)\n * Make use of useInsertionEffect if available.\n */\nconst useInsertionEffect =\n  typeof window !== \"undefined\" ? React.useInsertionEffect : noop;\n\n/**\n * Similar to useCallback, with a few subtle differences:\n * - The returned function is a stable reference, and will always be the same between renders\n * - No dependency lists required\n * - Properties or state accessed within the callback will always be \"current\"\n */\nexport function useEvent<TCallback extends AnyFunction>(\n  callback: TCallback,\n): TCallback {\n  // Keep track of the latest callback:\n  const latestRef = React.useRef<TCallback>(\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    useEvent_shouldNotBeInvokedBeforeMount as any,\n  );\n  useInsertionEffect(() => {\n    latestRef.current = callback;\n  }, [callback]);\n\n  // Create a stable callback that always calls the latest callback:\n  // using useRef instead of useCallback avoids creating and empty array on every render\n  const stableRef = React.useRef<TCallback>(null);\n\n  stableRef.current ??= function (this: any) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return, prefer-rest-params, @typescript-eslint/no-unsafe-argument\n    return latestRef.current.apply(this, arguments as any);\n  } as TCallback;\n\n  return stableRef.current;\n}\n\n/**\n * Render methods should be pure, especially when concurrency is used,\n * so we will throw this error if the callback is called while rendering.\n */\nfunction useEvent_shouldNotBeInvokedBeforeMount() {\n  throw new Error(\n    \"INVALID_USEEVENT_INVOCATION: the callback from useEvent cannot be invoked before the component has mounted.\",\n  );\n}\n","// Ripped from https://usehooks-ts.com/react-hook/use-fetch\nimport { useEffect, useReducer, useRef } from \"react\";\n\nimport type { FetchEsque } from \"@uploadthing/shared\";\nimport { safeParseJSON } from \"@uploadthing/shared\";\n\ninterface State<T> {\n  data?: T | undefined;\n  error?: Error | undefined;\n}\n\ntype Cache<T> = Record<string, T>;\n\n// discriminated union type\ntype Action<T> =\n  | { type: \"loading\" }\n  | { type: \"fetched\"; payload: T }\n  | { type: \"error\"; payload: Error };\n\nfunction useFetch<T = unknown>(\n  fetch: FetchEsque,\n  url?: string,\n  options?: RequestInit,\n): State<T> {\n  const cache = useRef<Cache<T>>({});\n\n  // Used to prevent state update if the component is unmounted\n  const cancelRequest = useRef<boolean>(false);\n\n  const initialState: State<T> = {\n    error: undefined,\n    data: undefined,\n  };\n\n  // Keep state logic separated\n  const fetchReducer = (state: State<T>, action: Action<T>): State<T> => {\n    switch (action.type) {\n      case \"loading\":\n        return { ...initialState };\n      case \"fetched\":\n        return { ...initialState, data: action.payload };\n      case \"error\":\n        return { ...initialState, error: action.payload };\n      default:\n        return state;\n    }\n  };\n\n  const [state, dispatch] = useReducer(fetchReducer, initialState);\n\n  useEffect(() => {\n    // Do nothing if the url is not given\n    if (!url) return;\n\n    cancelRequest.current = false;\n\n    const fetchData = async () => {\n      dispatch({ type: \"loading\" });\n\n      // If a cache exists for this url, return it\n      if (cache.current[url]) {\n        dispatch({ type: \"fetched\", payload: cache.current[url] });\n        return;\n      }\n\n      try {\n        const response = await fetch(url, options);\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n\n        const dataOrError = await safeParseJSON<T>(response);\n        if (dataOrError instanceof Error) {\n          throw dataOrError;\n        }\n\n        cache.current[url] = dataOrError;\n        if (cancelRequest.current) return;\n\n        dispatch({ type: \"fetched\", payload: dataOrError });\n      } catch (error) {\n        if (cancelRequest.current) return;\n\n        dispatch({ type: \"error\", payload: error as Error });\n      }\n    };\n\n    void fetchData();\n\n    // Use the cleanup function for avoiding a possibly...\n    // ...state update after the component was unmounted\n    return () => {\n      cancelRequest.current = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [url]);\n\n  return state;\n}\n\nexport default useFetch;\n","import { useRef, useState } from \"react\";\n\nimport type {\n  EndpointMetadata,\n  ExpandedRouteConfig,\n  FetchEsque,\n} from \"@uploadthing/shared\";\nimport {\n  INTERNAL_DO_NOT_USE__fatalClientError,\n  resolveMaybeUrlArg,\n  roundProgress,\n  unwrap,\n  UploadAbortedError,\n  UploadThingError,\n  warnIfInvalidPeerDependency,\n} from \"@uploadthing/shared\";\nimport {\n  genUploader,\n  version as uploadthingClientVersion,\n} from \"uploadthing/client\";\nimport type {\n  EndpointArg,\n  FileRouter,\n  inferEndpointInput,\n  inferErrorShape,\n} from \"uploadthing/types\";\n\nimport { peerDependencies } from \"../package.json\";\nimport type { GenerateTypedHelpersOptions, UseUploadthingProps } from \"./types\";\nimport { useEvent } from \"./utils/useEvent\";\nimport useFetch from \"./utils/useFetch\";\n\ndeclare const globalThis: {\n  __UPLOADTHING?: EndpointMetadata;\n  fetch: FetchEsque;\n};\n\nconst useRouteConfig = (\n  fetch: FetchEsque,\n  url: URL,\n  endpoint: string,\n): ExpandedRouteConfig | undefined => {\n  const maybeServerData = globalThis.__UPLOADTHING;\n  const { data } = useFetch<EndpointMetadata>(\n    fetch,\n    // Don't fetch if we already have the data\n    maybeServerData ? undefined : url.href,\n  );\n  return (maybeServerData ?? data)?.find((x) => x.slug === endpoint)?.config;\n};\n\n/**\n * @internal - This is an internal function. Use `generateReactHelpers` instead.\n * The actual hook we export for public usage is generated from `generateReactHelpers`\n * which has the URL and FileRouter generic pre-bound.\n */\nfunction useUploadThingInternal<\n  TRouter extends FileRouter,\n  TEndpoint extends keyof TRouter,\n>(\n  url: URL,\n  endpoint: EndpointArg<TRouter, TEndpoint>,\n  fetch: FetchEsque,\n  opts?: UseUploadthingProps<TRouter[TEndpoint]>,\n) {\n  const progressGranularity = opts?.uploadProgressGranularity ?? \"coarse\";\n  const { uploadFiles, routeRegistry } = genUploader<TRouter>({\n    fetch,\n    url,\n    package: \"@uploadthing/react\",\n  });\n\n  const [isUploading, setUploading] = useState(false);\n  const uploadProgress = useRef(0);\n  const fileProgress = useRef<Map<File, number>>(new Map());\n\n  type InferredInput = inferEndpointInput<TRouter[TEndpoint]>;\n  type FuncInput = undefined extends InferredInput\n    ? [files: File[], input?: undefined]\n    : [files: File[], input: InferredInput];\n\n  const startUpload = useEvent(async (...args: FuncInput) => {\n    const files = (await opts?.onBeforeUploadBegin?.(args[0])) ?? args[0];\n    const input = args[1];\n\n    setUploading(true);\n    files.forEach((f) => fileProgress.current.set(f, 0));\n    opts?.onUploadProgress?.(0);\n    try {\n      const res = await uploadFiles<TEndpoint>(endpoint, {\n        signal: opts?.signal,\n        headers: opts?.headers,\n        files,\n        onUploadProgress: (progress) => {\n          if (!opts?.onUploadProgress) return;\n          fileProgress.current.set(progress.file, progress.progress);\n          let sum = 0;\n          fileProgress.current.forEach((p) => {\n            sum += p;\n          });\n          const averageProgress = roundProgress(\n            Math.min(100, sum / fileProgress.current.size),\n            progressGranularity,\n          );\n          if (averageProgress !== uploadProgress.current) {\n            opts.onUploadProgress(averageProgress);\n            uploadProgress.current = averageProgress;\n          }\n        },\n        onUploadBegin({ file }) {\n          if (!opts?.onUploadBegin) return;\n\n          opts.onUploadBegin(file);\n        },\n        // @ts-expect-error - input may not be defined on the type\n        input,\n      });\n\n      await opts?.onClientUploadComplete?.(res);\n      return res;\n    } catch (e) {\n      /**\n       * This is the only way to introduce this as a non-breaking change\n       * TODO: Consider refactoring API in the next major version\n       */\n      if (e instanceof UploadAbortedError) throw e;\n\n      let error: UploadThingError<inferErrorShape<TRouter[TEndpoint]>>;\n      if (e instanceof UploadThingError) {\n        error = e as UploadThingError<inferErrorShape<TRouter[TEndpoint]>>;\n      } else {\n        error = INTERNAL_DO_NOT_USE__fatalClientError(e as Error);\n        // eslint-disable-next-line no-console\n        console.error(\n          \"Something went wrong. Please contact UploadThing and provide the following cause:\",\n          error.cause instanceof Error ? error.cause.toString() : error.cause,\n        );\n      }\n      await opts?.onUploadError?.(error);\n    } finally {\n      setUploading(false);\n      fileProgress.current = new Map();\n      uploadProgress.current = 0;\n    }\n  });\n\n  const _endpoint = unwrap(endpoint, routeRegistry);\n  const routeConfig = useRouteConfig(fetch, url, _endpoint as string);\n\n  return {\n    startUpload,\n    isUploading,\n    routeConfig,\n  } as const;\n}\n\n/** @internal - This is an internal function. Use `generateReactHelpers` instead. */\nexport const __useUploadThingInternal = useUploadThingInternal;\n\nexport const generateReactHelpers = <TRouter extends FileRouter>(\n  initOpts?: GenerateTypedHelpersOptions,\n) => {\n  warnIfInvalidPeerDependency(\n    \"@uploadthing/react\",\n    peerDependencies.uploadthing,\n    uploadthingClientVersion,\n  );\n\n  const fetch = initOpts?.fetch ?? globalThis.fetch;\n  const url = resolveMaybeUrlArg(initOpts?.url);\n\n  const clientHelpers = genUploader<TRouter>({\n    fetch,\n    url,\n    package: \"@uploadthing/react\",\n  });\n\n  function useUploadThing<TEndpoint extends keyof TRouter>(\n    endpoint: EndpointArg<TRouter, TEndpoint>,\n    opts?: UseUploadthingProps<TRouter[TEndpoint]>,\n  ) {\n    return __useUploadThingInternal(url, endpoint, fetch, opts);\n  }\n\n  function getRouteConfig(slug: EndpointArg<TRouter, keyof TRouter>) {\n    const maybeServerData = globalThis.__UPLOADTHING;\n    const endpoint = unwrap(slug, clientHelpers.routeRegistry);\n    const config = maybeServerData?.find((x) => x.slug === endpoint)?.config;\n    if (!config) {\n      throw new Error(\n        `No config found for endpoint \"${endpoint.toString()}\". Please make sure to use the NextSSRPlugin in your Next.js app.`,\n      );\n    }\n    return config;\n  }\n\n  return {\n    useUploadThing,\n    ...clientHelpers,\n    /**\n     * Get the config for a given endpoint outside of React context.\n     * @remarks Can only be used if the NextSSRPlugin is used in the app.\n     */\n    getRouteConfig,\n  } as const;\n};\n"],"names":["noop","callback: TCallback","fetch: FetchEsque","url?: string","options?: RequestInit","initialState: State<T>","state: State<T>","action: Action<T>","initialState","state","fetch: FetchEsque","url: URL","endpoint: string","endpoint: EndpointArg<TRouter, TEndpoint>","opts?: UseUploadthingProps<TRouter[TEndpoint]>","error: UploadThingError<inferErrorShape<TRouter[TEndpoint]>>","initOpts?: GenerateTypedHelpersOptions","uploadthingClientVersion","slug: EndpointArg<TRouter, keyof TRouter>"],"mappings":"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","ignoreList":[0,1,2,3],"debugId":null}},
    {"offset": {"line": 20291, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/tslib/tslib.es6.mjs"],"sourcesContent":["/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;8EAa8E,GAC9E,8DAA8D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE9D,IAAI,gBAAgB,SAAS,CAAC,EAAE,CAAC;IAC/B,gBAAgB,OAAO,cAAc,IAChC,CAAA;QAAE,WAAW,EAAE;IAAC,CAAA,aAAa,SAAS,SAAU,CAAC,EAAE,CAAC;QAAI,EAAE,SAAS,GAAG;IAAG,KAC1E,SAAU,CAAC,EAAE,CAAC;QAAI,IAAK,IAAI,KAAK,EAAG,IAAI,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;IAAE;IACpG,OAAO,cAAc,GAAG;AAC1B;AAEO,SAAS,UAAU,CAAC,EAAE,CAAC;IAC5B,IAAI,OAAO,MAAM,cAAc,MAAM,MACjC,MAAM,IAAI,UAAU,yBAAyB,OAAO,KAAK;IAC7D,cAAc,GAAG;IACjB,SAAS;QAAO,IAAI,CAAC,WAAW,GAAG;IAAG;IACtC,EAAE,SAAS,GAAG,MAAM,OAAO,OAAO,MAAM,CAAC,KAAK,CAAC,GAAG,SAAS,GAAG,EAAE,SAAS,EAAE,IAAI,IAAI;AACrF;AAEO,IAAI,WAAW;IACpB,WAAW,OAAO,MAAM,IAAI,SAAS,SAAS,CAAC;QAC3C,IAAK,IAAI,GAAG,IAAI,GAAG,IAAI,UAAU,MAAM,EAAE,IAAI,GAAG,IAAK;YACjD,IAAI,SAAS,CAAC,EAAE;YAChB,IAAK,IAAI,KAAK,EAAG,IAAI,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;QAChF;QACA,OAAO;IACX;IACA,OAAO,SAAS,KAAK,CAAC,IAAI,EAAE;AAC9B;AAEO,SAAS,OAAO,CAAC,EAAE,CAAC;IACzB,IAAI,IAAI,CAAC;IACT,IAAK,IAAI,KAAK,EAAG,IAAI,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,MAAM,EAAE,OAAO,CAAC,KAAK,GAC9E,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;IACf,IAAI,KAAK,QAAQ,OAAO,OAAO,qBAAqB,KAAK,YACrD,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,qBAAqB,CAAC,IAAI,IAAI,EAAE,MAAM,EAAE,IAAK;QACpE,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,KAAK,OAAO,SAAS,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GACzE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACzB;IACJ,OAAO;AACT;AAEO,SAAS,WAAW,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI;IACtD,IAAI,IAAI,UAAU,MAAM,EAAE,IAAI,IAAI,IAAI,SAAS,SAAS,OAAO,OAAO,OAAO,wBAAwB,CAAC,QAAQ,OAAO,MAAM;IAC3H,IAAI,OAAO,YAAY,YAAY,OAAO,QAAQ,QAAQ,KAAK,YAAY,IAAI,QAAQ,QAAQ,CAAC,YAAY,QAAQ,KAAK;SACpH,IAAK,IAAI,IAAI,WAAW,MAAM,GAAG,GAAG,KAAK,GAAG,IAAK,IAAI,IAAI,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,IAAI,EAAE,KAAK,IAAI,IAAI,EAAE,QAAQ,KAAK,KAAK,EAAE,QAAQ,IAAI,KAAK;IAChJ,OAAO,IAAI,KAAK,KAAK,OAAO,cAAc,CAAC,QAAQ,KAAK,IAAI;AAC9D;AAEO,SAAS,QAAQ,UAAU,EAAE,SAAS;IAC3C,OAAO,SAAU,MAAM,EAAE,GAAG;QAAI,UAAU,QAAQ,KAAK;IAAa;AACtE;AAEO,SAAS,aAAa,IAAI,EAAE,YAAY,EAAE,UAAU,EAAE,SAAS,EAAE,YAAY,EAAE,iBAAiB;IACrG,SAAS,OAAO,CAAC;QAAI,IAAI,MAAM,KAAK,KAAK,OAAO,MAAM,YAAY,MAAM,IAAI,UAAU;QAAsB,OAAO;IAAG;IACtH,IAAI,OAAO,UAAU,IAAI,EAAE,MAAM,SAAS,WAAW,QAAQ,SAAS,WAAW,QAAQ;IACzF,IAAI,SAAS,CAAC,gBAAgB,OAAO,SAAS,CAAC,SAAS,GAAG,OAAO,KAAK,SAAS,GAAG;IACnF,IAAI,aAAa,gBAAgB,CAAC,SAAS,OAAO,wBAAwB,CAAC,QAAQ,UAAU,IAAI,IAAI,CAAC,CAAC;IACvG,IAAI,GAAG,OAAO;IACd,IAAK,IAAI,IAAI,WAAW,MAAM,GAAG,GAAG,KAAK,GAAG,IAAK;QAC7C,IAAI,UAAU,CAAC;QACf,IAAK,IAAI,KAAK,UAAW,OAAO,CAAC,EAAE,GAAG,MAAM,WAAW,CAAC,IAAI,SAAS,CAAC,EAAE;QACxE,IAAK,IAAI,KAAK,UAAU,MAAM,CAAE,QAAQ,MAAM,CAAC,EAAE,GAAG,UAAU,MAAM,CAAC,EAAE;QACvE,QAAQ,cAAc,GAAG,SAAU,CAAC;YAAI,IAAI,MAAM,MAAM,IAAI,UAAU;YAA2D,kBAAkB,IAAI,CAAC,OAAO,KAAK;QAAQ;QAC5K,IAAI,SAAS,CAAC,GAAG,UAAU,CAAC,EAAE,EAAE,SAAS,aAAa;YAAE,KAAK,WAAW,GAAG;YAAE,KAAK,WAAW,GAAG;QAAC,IAAI,UAAU,CAAC,IAAI,EAAE;QACtH,IAAI,SAAS,YAAY;YACrB,IAAI,WAAW,KAAK,GAAG;YACvB,IAAI,WAAW,QAAQ,OAAO,WAAW,UAAU,MAAM,IAAI,UAAU;YACvE,IAAI,IAAI,OAAO,OAAO,GAAG,GAAG,WAAW,GAAG,GAAG;YAC7C,IAAI,IAAI,OAAO,OAAO,GAAG,GAAG,WAAW,GAAG,GAAG;YAC7C,IAAI,IAAI,OAAO,OAAO,IAAI,GAAG,aAAa,OAAO,CAAC;QACtD,OACK,IAAI,IAAI,OAAO,SAAS;YACzB,IAAI,SAAS,SAAS,aAAa,OAAO,CAAC;iBACtC,UAAU,CAAC,IAAI,GAAG;QAC3B;IACJ;IACA,IAAI,QAAQ,OAAO,cAAc,CAAC,QAAQ,UAAU,IAAI,EAAE;IAC1D,OAAO;AACT;;AAEO,SAAS,kBAAkB,OAAO,EAAE,YAAY,EAAE,KAAK;IAC5D,IAAI,WAAW,UAAU,MAAM,GAAG;IAClC,IAAK,IAAI,IAAI,GAAG,IAAI,aAAa,MAAM,EAAE,IAAK;QAC1C,QAAQ,WAAW,YAAY,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,SAAS,YAAY,CAAC,EAAE,CAAC,IAAI,CAAC;IACnF;IACA,OAAO,WAAW,QAAQ,KAAK;AACjC;;AAEO,SAAS,UAAU,CAAC;IACzB,OAAO,OAAO,MAAM,WAAW,IAAI,GAAG,MAAM,CAAC;AAC/C;;AAEO,SAAS,kBAAkB,CAAC,EAAE,IAAI,EAAE,MAAM;IAC/C,IAAI,OAAO,SAAS,UAAU,OAAO,KAAK,WAAW,GAAG,IAAI,MAAM,CAAC,KAAK,WAAW,EAAE,OAAO;IAC5F,OAAO,OAAO,cAAc,CAAC,GAAG,QAAQ;QAAE,cAAc;QAAM,OAAO,SAAS,GAAG,MAAM,CAAC,QAAQ,KAAK,QAAQ;IAAK;AACpH;;AAEO,SAAS,WAAW,WAAW,EAAE,aAAa;IACnD,IAAI,OAAO,YAAY,YAAY,OAAO,QAAQ,QAAQ,KAAK,YAAY,OAAO,QAAQ,QAAQ,CAAC,aAAa;AAClH;AAEO,SAAS,UAAU,OAAO,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS;IACzD,SAAS,MAAM,KAAK;QAAI,OAAO,iBAAiB,IAAI,QAAQ,IAAI,EAAE,SAAU,OAAO;YAAI,QAAQ;QAAQ;IAAI;IAC3G,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,EAAE,SAAU,OAAO,EAAE,MAAM;QACrD,SAAS,UAAU,KAAK;YAAI,IAAI;gBAAE,KAAK,UAAU,IAAI,CAAC;YAAS,EAAE,OAAO,GAAG;gBAAE,OAAO;YAAI;QAAE;QAC1F,SAAS,SAAS,KAAK;YAAI,IAAI;gBAAE,KAAK,SAAS,CAAC,QAAQ,CAAC;YAAS,EAAE,OAAO,GAAG;gBAAE,OAAO;YAAI;QAAE;QAC7F,SAAS,KAAK,MAAM;YAAI,OAAO,IAAI,GAAG,QAAQ,OAAO,KAAK,IAAI,MAAM,OAAO,KAAK,EAAE,IAAI,CAAC,WAAW;QAAW;QAC7G,KAAK,CAAC,YAAY,UAAU,KAAK,CAAC,SAAS,cAAc,EAAE,CAAC,EAAE,IAAI;IACtE;AACF;AAEO,SAAS,YAAY,OAAO,EAAE,IAAI;IACvC,IAAI,IAAI;QAAE,OAAO;QAAG,MAAM;YAAa,IAAI,CAAC,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,CAAC,EAAE;YAAE,OAAO,CAAC,CAAC,EAAE;QAAE;QAAG,MAAM,EAAE;QAAE,KAAK,EAAE;IAAC,GAAG,GAAG,GAAG,GAAG,IAAI,OAAO,MAAM,CAAC,CAAC,OAAO,aAAa,aAAa,WAAW,MAAM,EAAE,SAAS;IAC/L,OAAO,EAAE,IAAI,GAAG,KAAK,IAAI,CAAC,CAAC,QAAQ,GAAG,KAAK,IAAI,CAAC,CAAC,SAAS,GAAG,KAAK,IAAI,OAAO,WAAW,cAAc,CAAC,CAAC,CAAC,OAAO,QAAQ,CAAC,GAAG;QAAa,OAAO,IAAI;IAAE,CAAC,GAAG;;IAC1J,SAAS,KAAK,CAAC;QAAI,OAAO,SAAU,CAAC;YAAI,OAAO,KAAK;gBAAC;gBAAG;aAAE;QAAG;IAAG;IACjE,SAAS,KAAK,EAAE;QACZ,IAAI,GAAG,MAAM,IAAI,UAAU;QAC3B,MAAO,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,EAAG,IAAI;YAC1C,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,SAAS,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,KAAK,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO;YAC3J,IAAI,IAAI,GAAG,GAAG,KAAK;gBAAC,EAAE,CAAC,EAAE,GAAG;gBAAG,EAAE,KAAK;aAAC;YACvC,OAAQ,EAAE,CAAC,EAAE;gBACT,KAAK;gBAAG,KAAK;oBAAG,IAAI;oBAAI;gBACxB,KAAK;oBAAG,EAAE,KAAK;oBAAI,OAAO;wBAAE,OAAO,EAAE,CAAC,EAAE;wBAAE,MAAM;oBAAM;gBACtD,KAAK;oBAAG,EAAE,KAAK;oBAAI,IAAI,EAAE,CAAC,EAAE;oBAAE,KAAK;wBAAC;qBAAE;oBAAE;gBACxC,KAAK;oBAAG,KAAK,EAAE,GAAG,CAAC,GAAG;oBAAI,EAAE,IAAI,CAAC,GAAG;oBAAI;gBACxC;oBACI,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,GAAG,KAAK,CAAC,CAAC,EAAE,MAAM,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,KAAK,KAAK,EAAE,CAAC,EAAE,KAAK,CAAC,GAAG;wBAAE,IAAI;wBAAG;oBAAU;oBAC3G,IAAI,EAAE,CAAC,EAAE,KAAK,KAAK,CAAC,CAAC,KAAM,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,AAAC,GAAG;wBAAE,EAAE,KAAK,GAAG,EAAE,CAAC,EAAE;wBAAE;oBAAO;oBACrF,IAAI,EAAE,CAAC,EAAE,KAAK,KAAK,EAAE,KAAK,GAAG,CAAC,CAAC,EAAE,EAAE;wBAAE,EAAE,KAAK,GAAG,CAAC,CAAC,EAAE;wBAAE,IAAI;wBAAI;oBAAO;oBACpE,IAAI,KAAK,EAAE,KAAK,GAAG,CAAC,CAAC,EAAE,EAAE;wBAAE,EAAE,KAAK,GAAG,CAAC,CAAC,EAAE;wBAAE,EAAE,GAAG,CAAC,IAAI,CAAC;wBAAK;oBAAO;oBAClE,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,GAAG;oBACnB,EAAE,IAAI,CAAC,GAAG;oBAAI;YACtB;YACA,KAAK,KAAK,IAAI,CAAC,SAAS;QAC5B,EAAE,OAAO,GAAG;YAAE,KAAK;gBAAC;gBAAG;aAAE;YAAE,IAAI;QAAG,SAAU;YAAE,IAAI,IAAI;QAAG;QACzD,IAAI,EAAE,CAAC,EAAE,GAAG,GAAG,MAAM,EAAE,CAAC,EAAE;QAAE,OAAO;YAAE,OAAO,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,KAAK;YAAG,MAAM;QAAK;IACnF;AACF;AAEO,IAAI,kBAAkB,OAAO,MAAM,GAAI,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;IAChE,IAAI,OAAO,WAAW,KAAK;IAC3B,IAAI,OAAO,OAAO,wBAAwB,CAAC,GAAG;IAC9C,IAAI,CAAC,QAAQ,CAAC,SAAS,OAAO,CAAC,EAAE,UAAU,GAAG,KAAK,QAAQ,IAAI,KAAK,YAAY,GAAG;QAC/E,OAAO;YAAE,YAAY;YAAM,KAAK;gBAAa,OAAO,CAAC,CAAC,EAAE;YAAE;QAAE;IAChE;IACA,OAAO,cAAc,CAAC,GAAG,IAAI;AAC/B,IAAM,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;IACxB,IAAI,OAAO,WAAW,KAAK;IAC3B,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE;AACd;AAEO,SAAS,aAAa,CAAC,EAAE,CAAC;IAC/B,IAAK,IAAI,KAAK,EAAG,IAAI,MAAM,aAAa,CAAC,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,IAAI,gBAAgB,GAAG,GAAG;AAC7G;AAEO,SAAS,SAAS,CAAC;IACxB,IAAI,IAAI,OAAO,WAAW,cAAc,OAAO,QAAQ,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,IAAI;IAC5E,IAAI,GAAG,OAAO,EAAE,IAAI,CAAC;IACrB,IAAI,KAAK,OAAO,EAAE,MAAM,KAAK,UAAU,OAAO;QAC1C,MAAM;YACF,IAAI,KAAK,KAAK,EAAE,MAAM,EAAE,IAAI,KAAK;YACjC,OAAO;gBAAE,OAAO,KAAK,CAAC,CAAC,IAAI;gBAAE,MAAM,CAAC;YAAE;QAC1C;IACJ;IACA,MAAM,IAAI,UAAU,IAAI,4BAA4B;AACtD;AAEO,SAAS,OAAO,CAAC,EAAE,CAAC;IACzB,IAAI,IAAI,OAAO,WAAW,cAAc,CAAC,CAAC,OAAO,QAAQ,CAAC;IAC1D,IAAI,CAAC,GAAG,OAAO;IACf,IAAI,IAAI,EAAE,IAAI,CAAC,IAAI,GAAG,KAAK,EAAE,EAAE;IAC/B,IAAI;QACA,MAAO,CAAC,MAAM,KAAK,KAAK,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,IAAI,CAAE,GAAG,IAAI,CAAC,EAAE,KAAK;IAC7E,EACA,OAAO,OAAO;QAAE,IAAI;YAAE,OAAO;QAAM;IAAG,SAC9B;QACJ,IAAI;YACA,IAAI,KAAK,CAAC,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,GAAG,EAAE,IAAI,CAAC;QAClD,SACQ;YAAE,IAAI,GAAG,MAAM,EAAE,KAAK;QAAE;IACpC;IACA,OAAO;AACT;AAGO,SAAS;IACd,IAAK,IAAI,KAAK,EAAE,EAAE,IAAI,GAAG,IAAI,UAAU,MAAM,EAAE,IAC3C,KAAK,GAAG,MAAM,CAAC,OAAO,SAAS,CAAC,EAAE;IACtC,OAAO;AACT;AAGO,SAAS;IACd,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,KAAK,UAAU,MAAM,EAAE,IAAI,IAAI,IAAK,KAAK,SAAS,CAAC,EAAE,CAAC,MAAM;IACnF,IAAK,IAAI,IAAI,MAAM,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IACzC,IAAK,IAAI,IAAI,SAAS,CAAC,EAAE,EAAE,IAAI,GAAG,KAAK,EAAE,MAAM,EAAE,IAAI,IAAI,KAAK,IAC1D,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;IACnB,OAAO;AACT;AAEO,SAAS,cAAc,EAAE,EAAE,IAAI,EAAE,IAAI;IAC1C,IAAI,QAAQ,UAAU,MAAM,KAAK,GAAG,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,MAAM,EAAE,IAAI,IAAI,GAAG,IAAK;QACjF,IAAI,MAAM,CAAC,CAAC,KAAK,IAAI,GAAG;YACpB,IAAI,CAAC,IAAI,KAAK,MAAM,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG;YAClD,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE;QACnB;IACJ;IACA,OAAO,GAAG,MAAM,CAAC,MAAM,MAAM,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC;AACpD;AAEO,SAAS,QAAQ,CAAC;IACvB,OAAO,IAAI,YAAY,UAAU,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,IAAI,IAAI,IAAI,QAAQ;AACpE;AAEO,SAAS,iBAAiB,OAAO,EAAE,UAAU,EAAE,SAAS;IAC7D,IAAI,CAAC,OAAO,aAAa,EAAE,MAAM,IAAI,UAAU;IAC/C,IAAI,IAAI,UAAU,KAAK,CAAC,SAAS,cAAc,EAAE,GAAG,GAAG,IAAI,EAAE;IAC7D,OAAO,IAAI,OAAO,MAAM,CAAC,CAAC,OAAO,kBAAkB,aAAa,gBAAgB,MAAM,EAAE,SAAS,GAAG,KAAK,SAAS,KAAK,UAAU,KAAK,UAAU,cAAc,CAAC,CAAC,OAAO,aAAa,CAAC,GAAG;QAAc,OAAO,IAAI;IAAE,GAAG;;IACtN,SAAS,YAAY,CAAC;QAAI,OAAO,SAAU,CAAC;YAAI,OAAO,QAAQ,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG;QAAS;IAAG;IAC9F,SAAS,KAAK,CAAC,EAAE,CAAC;QAAI,IAAI,CAAC,CAAC,EAAE,EAAE;YAAE,CAAC,CAAC,EAAE,GAAG,SAAU,CAAC;gBAAI,OAAO,IAAI,QAAQ,SAAU,CAAC,EAAE,CAAC;oBAAI,EAAE,IAAI,CAAC;wBAAC;wBAAG;wBAAG;wBAAG;qBAAE,IAAI,KAAK,OAAO,GAAG;gBAAI;YAAI;YAAG,IAAI,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE;QAAG;IAAE;IACvK,SAAS,OAAO,CAAC,EAAE,CAAC;QAAI,IAAI;YAAE,KAAK,CAAC,CAAC,EAAE,CAAC;QAAK,EAAE,OAAO,GAAG;YAAE,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;QAAI;IAAE;IACjF,SAAS,KAAK,CAAC;QAAI,EAAE,KAAK,YAAY,UAAU,QAAQ,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,UAAU,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;IAAI;IACvH,SAAS,QAAQ,KAAK;QAAI,OAAO,QAAQ;IAAQ;IACjD,SAAS,OAAO,KAAK;QAAI,OAAO,SAAS;IAAQ;IACjD,SAAS,OAAO,CAAC,EAAE,CAAC;QAAI,IAAI,EAAE,IAAI,EAAE,KAAK,IAAI,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;IAAG;AACnF;AAEO,SAAS,iBAAiB,CAAC;IAChC,IAAI,GAAG;IACP,OAAO,IAAI,CAAC,GAAG,KAAK,SAAS,KAAK,SAAS,SAAU,CAAC;QAAI,MAAM;IAAG,IAAI,KAAK,WAAW,CAAC,CAAC,OAAO,QAAQ,CAAC,GAAG;QAAc,OAAO,IAAI;IAAE,GAAG;;IAC1I,SAAS,KAAK,CAAC,EAAE,CAAC;QAAI,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,SAAU,CAAC;YAAI,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI;gBAAE,OAAO,QAAQ,CAAC,CAAC,EAAE,CAAC;gBAAK,MAAM;YAAM,IAAI,IAAI,EAAE,KAAK;QAAG,IAAI;IAAG;AACvI;AAEO,SAAS,cAAc,CAAC;IAC7B,IAAI,CAAC,OAAO,aAAa,EAAE,MAAM,IAAI,UAAU;IAC/C,IAAI,IAAI,CAAC,CAAC,OAAO,aAAa,CAAC,EAAE;IACjC,OAAO,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,OAAO,aAAa,aAAa,SAAS,KAAK,CAAC,CAAC,OAAO,QAAQ,CAAC,IAAI,IAAI,CAAC,GAAG,KAAK,SAAS,KAAK,UAAU,KAAK,WAAW,CAAC,CAAC,OAAO,aAAa,CAAC,GAAG;QAAc,OAAO,IAAI;IAAE,GAAG,CAAC;;IAC/M,SAAS,KAAK,CAAC;QAAI,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,IAAI,SAAU,CAAC;YAAI,OAAO,IAAI,QAAQ,SAAU,OAAO,EAAE,MAAM;gBAAI,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,OAAO,SAAS,QAAQ,EAAE,IAAI,EAAE,EAAE,KAAK;YAAG;QAAI;IAAG;IAC/J,SAAS,OAAO,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC;QAAI,QAAQ,OAAO,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;YAAI,QAAQ;gBAAE,OAAO;gBAAG,MAAM;YAAE;QAAI,GAAG;IAAS;AAC7H;AAEO,SAAS,qBAAqB,MAAM,EAAE,GAAG;IAC9C,IAAI,OAAO,cAAc,EAAE;QAAE,OAAO,cAAc,CAAC,QAAQ,OAAO;YAAE,OAAO;QAAI;IAAI,OAAO;QAAE,OAAO,GAAG,GAAG;IAAK;IAC9G,OAAO;AACT;;AAEA,IAAI,qBAAqB,OAAO,MAAM,GAAI,SAAS,CAAC,EAAE,CAAC;IACrD,OAAO,cAAc,CAAC,GAAG,WAAW;QAAE,YAAY;QAAM,OAAO;IAAE;AACnE,IAAK,SAAS,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC,UAAU,GAAG;AACjB;AAEA,IAAI,UAAU,SAAS,CAAC;IACtB,UAAU,OAAO,mBAAmB,IAAI,SAAU,CAAC;QACjD,IAAI,KAAK,EAAE;QACX,IAAK,IAAI,KAAK,EAAG,IAAI,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,MAAM,CAAC,GAAG;QACjF,OAAO;IACT;IACA,OAAO,QAAQ;AACjB;AAEO,SAAS,aAAa,GAAG;IAC9B,IAAI,OAAO,IAAI,UAAU,EAAE,OAAO;IAClC,IAAI,SAAS,CAAC;IACd,IAAI,OAAO,MAAM;QAAA,IAAK,IAAI,IAAI,QAAQ,MAAM,IAAI,GAAG,IAAI,EAAE,MAAM,EAAE,IAAK,IAAI,CAAC,CAAC,EAAE,KAAK,WAAW,gBAAgB,QAAQ,KAAK,CAAC,CAAC,EAAE;IAAC;IAChI,mBAAmB,QAAQ;IAC3B,OAAO;AACT;AAEO,SAAS,gBAAgB,GAAG;IACjC,OAAO,AAAC,OAAO,IAAI,UAAU,GAAI,MAAM;QAAE,SAAS;IAAI;AACxD;AAEO,SAAS,uBAAuB,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;IAC7D,IAAI,SAAS,OAAO,CAAC,GAAG,MAAM,IAAI,UAAU;IAC5C,IAAI,OAAO,UAAU,aAAa,aAAa,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,WAAW,MAAM,IAAI,UAAU;IACvG,OAAO,SAAS,MAAM,IAAI,SAAS,MAAM,EAAE,IAAI,CAAC,YAAY,IAAI,EAAE,KAAK,GAAG,MAAM,GAAG,CAAC;AACtF;AAEO,SAAS,uBAAuB,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;IACpE,IAAI,SAAS,KAAK,MAAM,IAAI,UAAU;IACtC,IAAI,SAAS,OAAO,CAAC,GAAG,MAAM,IAAI,UAAU;IAC5C,IAAI,OAAO,UAAU,aAAa,aAAa,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,WAAW,MAAM,IAAI,UAAU;IACvG,OAAO,AAAC,SAAS,MAAM,EAAE,IAAI,CAAC,UAAU,SAAS,IAAI,EAAE,KAAK,GAAG,QAAQ,MAAM,GAAG,CAAC,UAAU,QAAS;AACtG;AAEO,SAAS,sBAAsB,KAAK,EAAE,QAAQ;IACnD,IAAI,aAAa,QAAS,OAAO,aAAa,YAAY,OAAO,aAAa,YAAa,MAAM,IAAI,UAAU;IAC/G,OAAO,OAAO,UAAU,aAAa,aAAa,QAAQ,MAAM,GAAG,CAAC;AACtE;AAEO,SAAS,wBAAwB,GAAG,EAAE,KAAK,EAAE,KAAK;IACvD,IAAI,UAAU,QAAQ,UAAU,KAAK,GAAG;QACtC,IAAI,OAAO,UAAU,YAAY,OAAO,UAAU,YAAY,MAAM,IAAI,UAAU;QAClF,IAAI,SAAS;QACb,IAAI,OAAO;YACT,IAAI,CAAC,OAAO,YAAY,EAAE,MAAM,IAAI,UAAU;YAC9C,UAAU,KAAK,CAAC,OAAO,YAAY,CAAC;QACtC;QACA,IAAI,YAAY,KAAK,GAAG;YACtB,IAAI,CAAC,OAAO,OAAO,EAAE,MAAM,IAAI,UAAU;YACzC,UAAU,KAAK,CAAC,OAAO,OAAO,CAAC;YAC/B,IAAI,OAAO,QAAQ;QACrB;QACA,IAAI,OAAO,YAAY,YAAY,MAAM,IAAI,UAAU;QACvD,IAAI,OAAO,UAAU;YAAa,IAAI;gBAAE,MAAM,IAAI,CAAC,IAAI;YAAG,EAAE,OAAO,GAAG;gBAAE,OAAO,QAAQ,MAAM,CAAC;YAAI;QAAE;QACpG,IAAI,KAAK,CAAC,IAAI,CAAC;YAAE,OAAO;YAAO,SAAS;YAAS,OAAO;QAAM;IAChE,OACK,IAAI,OAAO;QACd,IAAI,KAAK,CAAC,IAAI,CAAC;YAAE,OAAO;QAAK;IAC/B;IACA,OAAO;AACT;AAEA,IAAI,mBAAmB,OAAO,oBAAoB,aAAa,kBAAkB,SAAU,KAAK,EAAE,UAAU,EAAE,OAAO;IACnH,IAAI,IAAI,IAAI,MAAM;IAClB,OAAO,EAAE,IAAI,GAAG,mBAAmB,EAAE,KAAK,GAAG,OAAO,EAAE,UAAU,GAAG,YAAY;AACjF;AAEO,SAAS,mBAAmB,GAAG;IACpC,SAAS,KAAK,CAAC;QACb,IAAI,KAAK,GAAG,IAAI,QAAQ,GAAG,IAAI,iBAAiB,GAAG,IAAI,KAAK,EAAE,8CAA8C;QAC5G,IAAI,QAAQ,GAAG;IACjB;IACA,IAAI,GAAG,IAAI;IACX,SAAS;QACP,MAAO,IAAI,IAAI,KAAK,CAAC,GAAG,GAAI;YAC1B,IAAI;gBACF,IAAI,CAAC,EAAE,KAAK,IAAI,MAAM,GAAG,OAAO,IAAI,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,QAAQ,OAAO,GAAG,IAAI,CAAC;gBACjF,IAAI,EAAE,OAAO,EAAE;oBACb,IAAI,SAAS,EAAE,OAAO,CAAC,IAAI,CAAC,EAAE,KAAK;oBACnC,IAAI,EAAE,KAAK,EAAE,OAAO,KAAK,GAAG,QAAQ,OAAO,CAAC,QAAQ,IAAI,CAAC,MAAM,SAAS,CAAC;wBAAI,KAAK;wBAAI,OAAO;oBAAQ;gBACvG,OACK,KAAK;YACZ,EACA,OAAO,GAAG;gBACR,KAAK;YACP;QACF;QACA,IAAI,MAAM,GAAG,OAAO,IAAI,QAAQ,GAAG,QAAQ,MAAM,CAAC,IAAI,KAAK,IAAI,QAAQ,OAAO;QAC9E,IAAI,IAAI,QAAQ,EAAE,MAAM,IAAI,KAAK;IACnC;IACA,OAAO;AACT;AAEO,SAAS,iCAAiC,IAAI,EAAE,WAAW;IAChE,IAAI,OAAO,SAAS,YAAY,WAAW,IAAI,CAAC,OAAO;QACnD,OAAO,KAAK,OAAO,CAAC,oDAAoD,SAAU,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE;YAChG,OAAO,MAAM,cAAc,SAAS,QAAQ,KAAK,CAAC,CAAC,OAAO,CAAC,EAAE,IAAI,IAAK,IAAI,MAAM,MAAM,GAAG,WAAW,KAAK;QAC7G;IACJ;IACA,OAAO;AACT;uCAEe;IACb;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 20891, "column": 0}, "map": {"version":3,"file":"file.js","sourceRoot":"","sources":["../../src/file.ts"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 21255, "column": 0}, "map": {"version":3,"file":"file-selector.js","sourceRoot":"","sources":["../../src/file-selector.ts"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 21531, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":";AAAA,OAAO,EAAC,SAAS,EAAC,MAAM,iBAAiB,CAAC","debugId":null}},
    {"offset": {"line": 21549, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/%40uploadthing/react/src/utils/usePaste.ts","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/%40uploadthing/react/src/components/shared.tsx","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/%40uploadthing/react/src/components/button.tsx","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/%40uploadthing/react/src/components/dropzone.tsx","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/%40uploadthing/react/src/components/uploader.tsx","file:///C:/Users/user/OneDrive/Desktop/all_dev/traveller/node_modules/%40uploadthing/react/src/components/index.tsx"],"sourcesContent":["import { useEffect } from \"react\";\n\nimport { useEvent } from \"./useEvent\";\n\ntype PasteCallback = (event: ClipboardEvent) => void;\nexport const usePaste = (callback: PasteCallback) => {\n  const stableCallback = useEvent(callback);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    window.addEventListener(\"paste\", stableCallback, {\n      signal: controller.signal,\n    });\n    return () => {\n      controller.abort();\n    };\n  }, [stableCallback]);\n};\n","import type { ClassListMerger } from \"@uploadthing/shared\";\n\nexport function Spinner() {\n  return (\n    <svg\n      className=\"z-10 block h-5 w-5 animate-spin align-middle text-white\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 576 512\"\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M256 32C256 14.33 270.3 0 288 0C429.4 0 544 114.6 544 256C544 302.6 531.5 346.4 509.7 384C500.9 399.3 481.3 404.6 465.1 395.7C450.7 386.9 445.5 367.3 454.3 351.1C470.6 323.8 480 291 480 255.1C480 149.1 394 63.1 288 63.1C270.3 63.1 256 49.67 256 31.1V32z\"\n      />\n    </svg>\n  );\n}\n\nexport function Cancel({\n  className,\n  cn,\n  ...props\n}: React.SVGProps<SVGSVGElement> & { cn: ClassListMerger }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className={cn(\"fill-none stroke-current stroke-2\", className)}\n      {...props}\n    >\n      <circle cx=\"12\" cy=\"12\" r=\"10\" />\n      <path d=\"m4.9 4.9 14.2 14.2\" />\n    </svg>\n  );\n}\n","\"use client\";\n\nimport type { CSSProperties } from \"react\";\nimport { useCallback, useMemo, useRef, useState } from \"react\";\n\nimport {\n  allowedContentTextLabelGenerator,\n  contentFieldToContent,\n  defaultClassListMerger,\n  generateMimeTypes,\n  generatePermittedFileTypes,\n  getFilesFromClipboardEvent,\n  resolveMaybeUrlArg,\n  styleFieldToClassName,\n  styleFieldToCssObject,\n  UploadAbortedError,\n} from \"@uploadthing/shared\";\nimport type {\n  ContentField,\n  ErrorMessage,\n  StyleField,\n} from \"@uploadthing/shared\";\nimport type { FileRouter } from \"uploadthing/types\";\n\nimport type { UploadthingComponentProps } from \"../types\";\nimport { __useUploadThingInternal } from \"../use-uploadthing\";\nimport { usePaste } from \"../utils/usePaste\";\nimport { Cancel, Spinner } from \"./shared\";\n\ntype ButtonStyleFieldCallbackArgs = {\n  __runtime: \"react\";\n  ready: boolean;\n  isUploading: boolean;\n  uploadProgress: number;\n  fileTypes: string[];\n  files: File[];\n};\n\ntype ButtonAppearance = {\n  container?: StyleField<ButtonStyleFieldCallbackArgs>;\n  button?: StyleField<ButtonStyleFieldCallbackArgs>;\n  allowedContent?: StyleField<ButtonStyleFieldCallbackArgs>;\n  clearBtn?: StyleField<ButtonStyleFieldCallbackArgs>;\n};\n\ntype ButtonContent = {\n  button?: ContentField<ButtonStyleFieldCallbackArgs>;\n  allowedContent?: ContentField<ButtonStyleFieldCallbackArgs>;\n  clearBtn?: ContentField<ButtonStyleFieldCallbackArgs>;\n};\n\nexport type UploadButtonProps<\n  TRouter extends FileRouter,\n  TEndpoint extends keyof TRouter,\n> = UploadthingComponentProps<TRouter, TEndpoint> & {\n  /**\n   * @see https://docs.uploadthing.com/theming#style-using-the-classname-prop\n   */\n  className?: string;\n  /**\n   * @see https://docs.uploadthing.com/theming#style-using-the-appearance-prop\n   */\n  appearance?: ButtonAppearance;\n  /**\n   * @see https://docs.uploadthing.com/theming#content-customisation\n   */\n  content?: ButtonContent;\n};\n\n/** These are some internal stuff we use to test the component and for forcing a state in docs */\ntype UploadThingInternalProps = {\n  __internal_state?: \"readying\" | \"ready\" | \"uploading\";\n  __internal_upload_progress?: number;\n  __internal_button_disabled?: boolean;\n};\n\n/**\n * @remarks It is not recommended using this directly as it requires manually binding generics. Instead, use `createUploadButton`.\n * @example\n * <UploadButton<OurFileRouter, \"someEndpoint\">\n *   endpoint=\"someEndpoint\"\n *   onUploadComplete={(res) => console.log(res)}\n *   onUploadError={(err) => console.log(err)}\n * />\n */\nexport function UploadButton<\n  TRouter extends FileRouter,\n  TEndpoint extends keyof TRouter,\n>(\n  props: FileRouter extends TRouter\n    ? ErrorMessage<\"You forgot to pass the generic\">\n    : UploadButtonProps<TRouter, TEndpoint>,\n) {\n  // Cast back to UploadthingComponentProps<TRouter> to get the correct type\n  // since the ErrorMessage messes it up otherwise\n  const $props = props as unknown as UploadButtonProps<TRouter, TEndpoint> &\n    UploadThingInternalProps;\n\n  const {\n    mode = \"auto\",\n    appendOnPaste = false,\n    cn = defaultClassListMerger,\n  } = $props.config ?? {};\n  const acRef = useRef(new AbortController());\n\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const [uploadProgress, setUploadProgress] = useState(\n    $props.__internal_upload_progress ?? 0,\n  );\n  const [files, setFiles] = useState<File[]>([]);\n\n  const { startUpload, isUploading, routeConfig } = __useUploadThingInternal(\n    resolveMaybeUrlArg($props.url),\n    $props.endpoint,\n    $props.fetch ?? globalThis.fetch,\n    {\n      signal: acRef.current.signal,\n      headers: $props.headers,\n      onClientUploadComplete: (res) => {\n        if (fileInputRef.current) {\n          fileInputRef.current.value = \"\";\n        }\n        setFiles([]);\n        void $props.onClientUploadComplete?.(res);\n        setUploadProgress(0);\n      },\n      uploadProgressGranularity: $props.uploadProgressGranularity,\n      onUploadProgress: (p) => {\n        setUploadProgress(p);\n        $props.onUploadProgress?.(p);\n      },\n      onUploadError: $props.onUploadError,\n      onUploadBegin: $props.onUploadBegin,\n      onBeforeUploadBegin: $props.onBeforeUploadBegin,\n    },\n  );\n  const { fileTypes, multiple } = generatePermittedFileTypes(routeConfig);\n\n  const disabled = !!($props.__internal_button_disabled ?? $props.disabled);\n  const state = (() => {\n    const ready = $props.__internal_state === \"ready\" || fileTypes.length > 0;\n\n    if ($props.__internal_state) return $props.__internal_state;\n    if (disabled) return \"disabled\";\n    if (!ready) return \"readying\";\n    if (!isUploading) return \"ready\";\n    return \"uploading\";\n  })();\n\n  const uploadFiles = useCallback(\n    (files: File[]) => {\n      const input = \"input\" in $props ? $props.input : undefined;\n      startUpload(files, input).catch((e) => {\n        if (e instanceof UploadAbortedError) {\n          void $props.onUploadAborted?.();\n        } else {\n          throw e;\n        }\n      });\n    },\n    [$props, startUpload],\n  );\n\n  const onUploadClick = (e: React.MouseEvent) => {\n    if (state === \"uploading\") {\n      e.preventDefault();\n      e.stopPropagation();\n\n      acRef.current.abort();\n      acRef.current = new AbortController();\n      return;\n    }\n    if (mode === \"manual\" && files.length > 0) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      uploadFiles(files);\n    }\n  };\n\n  const inputProps = useMemo(\n    () => ({\n      type: \"file\",\n      ref: fileInputRef,\n      multiple,\n      accept: generateMimeTypes(fileTypes).join(\", \"),\n      onChange: (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (!e.target.files) return;\n        const selectedFiles = Array.from(e.target.files);\n\n        $props.onChange?.(selectedFiles);\n\n        if (mode === \"manual\") {\n          setFiles(selectedFiles);\n          return;\n        }\n\n        uploadFiles(selectedFiles);\n      },\n      disabled,\n      tabIndex: disabled ? -1 : 0,\n    }),\n    [$props, disabled, fileTypes, mode, multiple, uploadFiles],\n  );\n\n  usePaste((event) => {\n    if (!appendOnPaste) return;\n    if (document.activeElement !== fileInputRef.current) return;\n\n    const pastedFiles = getFilesFromClipboardEvent(event);\n    if (!pastedFiles) return;\n\n    let filesToUpload = pastedFiles;\n    setFiles((prev) => {\n      filesToUpload = [...prev, ...pastedFiles];\n\n      $props.onChange?.(filesToUpload);\n\n      return filesToUpload;\n    });\n\n    if (mode === \"auto\") uploadFiles(files);\n  });\n\n  const styleFieldArg = useMemo(\n    () =>\n      ({\n        ready: state !== \"readying\",\n        isUploading: state === \"uploading\",\n        uploadProgress,\n        fileTypes,\n        files,\n      }) as ButtonStyleFieldCallbackArgs,\n    [fileTypes, files, state, uploadProgress],\n  );\n\n  const renderButton = () => {\n    const customContent = contentFieldToContent(\n      $props.content?.button,\n      styleFieldArg,\n    );\n    if (customContent) return customContent;\n\n    switch (state) {\n      case \"readying\": {\n        return \"Loading...\";\n      }\n      case \"uploading\": {\n        if (uploadProgress >= 100) return <Spinner />;\n        return (\n          <span className=\"z-50\">\n            <span className=\"block group-hover:hidden\">\n              {Math.round(uploadProgress)}%\n            </span>\n            <Cancel cn={cn} className=\"hidden size-4 group-hover:block\" />\n          </span>\n        );\n      }\n      case \"disabled\":\n      case \"ready\":\n      default: {\n        if (mode === \"manual\" && files.length > 0) {\n          return `Upload ${files.length} file${files.length === 1 ? \"\" : \"s\"}`;\n        }\n        return `Choose File${inputProps.multiple ? `(s)` : ``}`;\n      }\n    }\n  };\n\n  const renderClearButton = () => (\n    <button\n      onClick={() => {\n        setFiles([]);\n\n        if (fileInputRef.current) {\n          fileInputRef.current.value = \"\";\n        }\n\n        $props.onChange?.([]);\n      }}\n      className={cn(\n        \"h-[1.25rem] cursor-pointer rounded border-none bg-transparent text-gray-500 transition-colors hover:bg-slate-200 hover:text-gray-600\",\n        styleFieldToClassName($props.appearance?.clearBtn, styleFieldArg),\n      )}\n      style={styleFieldToCssObject($props.appearance?.clearBtn, styleFieldArg)}\n      data-state={state}\n      data-ut-element=\"clear-btn\"\n    >\n      {contentFieldToContent($props.content?.clearBtn, styleFieldArg) ??\n        \"Clear\"}\n    </button>\n  );\n\n  const renderAllowedContent = () => (\n    <div\n      className={cn(\n        \"h-[1.25rem] text-xs leading-5 text-gray-600\",\n        styleFieldToClassName($props.appearance?.allowedContent, styleFieldArg),\n      )}\n      style={styleFieldToCssObject(\n        $props.appearance?.allowedContent,\n        styleFieldArg,\n      )}\n      data-state={state}\n      data-ut-element=\"allowed-content\"\n    >\n      {contentFieldToContent($props.content?.allowedContent, styleFieldArg) ??\n        allowedContentTextLabelGenerator(routeConfig)}\n    </div>\n  );\n\n  return (\n    <div\n      className={cn(\n        \"flex flex-col items-center justify-center gap-1\",\n        $props.className,\n        styleFieldToClassName($props.appearance?.container, styleFieldArg),\n      )}\n      style={\n        {\n          \"--progress-width\": `${uploadProgress}%`,\n          ...styleFieldToCssObject($props.appearance?.container, styleFieldArg),\n        } as CSSProperties\n      }\n      data-state={state}\n    >\n      <label\n        className={cn(\n          \"group relative flex h-10 w-36 cursor-pointer items-center justify-center overflow-hidden rounded-md text-white after:transition-[width] after:duration-500 focus-within:ring-2 focus-within:ring-blue-600 focus-within:ring-offset-2\",\n          \"disabled:pointer-events-none\",\n          \"data-[state=disabled]:cursor-not-allowed data-[state=readying]:cursor-not-allowed\",\n          \"data-[state=disabled]:bg-blue-400 data-[state=ready]:bg-blue-600 data-[state=readying]:bg-blue-400 data-[state=uploading]:bg-blue-400\",\n          \"after:absolute after:left-0 after:h-full after:w-[var(--progress-width)] after:content-[''] data-[state=uploading]:after:bg-blue-600\",\n          styleFieldToClassName($props.appearance?.button, styleFieldArg),\n        )}\n        style={styleFieldToCssObject($props.appearance?.button, styleFieldArg)}\n        data-state={state}\n        data-ut-element=\"button\"\n        onClick={onUploadClick}\n      >\n        <input {...inputProps} className=\"sr-only\" />\n        {renderButton()}\n      </label>\n      {mode === \"manual\" && files.length > 0\n        ? renderClearButton()\n        : renderAllowedContent()}\n    </div>\n  );\n}\n","\"use client\";\n\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from \"react\";\nimport type {\n  ChangeEvent,\n  CSSProperties,\n  DragEvent,\n  HTMLProps,\n  KeyboardEvent,\n  MouseEvent,\n} from \"react\";\nimport { fromEvent } from \"file-selector\";\n\nimport {\n  acceptPropAsAcceptAttr,\n  allFilesAccepted,\n  allowedContentTextLabelGenerator,\n  contentFieldToContent,\n  defaultClassListMerger,\n  generateClientDropzoneAccept,\n  generatePermittedFileTypes,\n  getFilesFromClipboardEvent,\n  initialState,\n  isEnterOrSpace,\n  isEventWithFiles,\n  isFileAccepted,\n  isIeOrEdge,\n  isValidQuantity,\n  isValidSize,\n  noop,\n  reducer,\n  resolveMaybeUrlArg,\n  styleFieldToClassName,\n  styleFieldToCssObject,\n  UploadAbortedError,\n} from \"@uploadthing/shared\";\nimport type {\n  ContentField,\n  DropzoneOptions,\n  ErrorMessage,\n  StyleField,\n} from \"@uploadthing/shared\";\nimport type { FileRouter } from \"uploadthing/types\";\n\nimport type { UploadthingComponentProps } from \"../types\";\nimport { __useUploadThingInternal } from \"../use-uploadthing\";\nimport { usePaste } from \"../utils/usePaste\";\nimport { Cancel, Spinner } from \"./shared\";\n\ntype DropzoneStyleFieldCallbackArgs = {\n  __runtime: \"react\";\n  ready: boolean;\n  isUploading: boolean;\n  uploadProgress: number;\n  fileTypes: string[];\n  isDragActive: boolean;\n  files: File[];\n};\n\ntype DropzoneAppearance = {\n  container?: StyleField<DropzoneStyleFieldCallbackArgs>;\n  uploadIcon?: StyleField<DropzoneStyleFieldCallbackArgs>;\n  label?: StyleField<DropzoneStyleFieldCallbackArgs>;\n  allowedContent?: StyleField<DropzoneStyleFieldCallbackArgs>;\n  button?: StyleField<DropzoneStyleFieldCallbackArgs>;\n};\n\ntype DropzoneContent = {\n  uploadIcon?: ContentField<DropzoneStyleFieldCallbackArgs>;\n  label?: ContentField<DropzoneStyleFieldCallbackArgs>;\n  allowedContent?: ContentField<DropzoneStyleFieldCallbackArgs>;\n  button?: ContentField<DropzoneStyleFieldCallbackArgs>;\n};\n\nexport type UploadDropzoneProps<\n  TRouter extends FileRouter,\n  TEndpoint extends keyof TRouter,\n> = UploadthingComponentProps<TRouter, TEndpoint> & {\n  /**\n   * @see https://docs.uploadthing.com/theming#style-using-the-classname-prop\n   */\n  className?: string;\n  /**\n   * @see https://docs.uploadthing.com/theming#style-using-the-appearance-prop\n   */\n  appearance?: DropzoneAppearance;\n  /**\n   * @see https://docs.uploadthing.com/theming#content-customisation\n   */\n  content?: DropzoneContent;\n  /**\n   * Callback called when files are dropped or pasted.\n   *\n   * @param acceptedFiles - The files that were accepted.\n   * @deprecated Use `onChange` instead\n   */\n  onDrop?: (acceptedFiles: File[]) => void;\n};\n\n/** These are some internal stuff we use to test the component and for forcing a state in docs */\ntype UploadThingInternalProps = {\n  __internal_state?: \"readying\" | \"ready\" | \"uploading\";\n  // Allow to set upload progress for testing\n  __internal_upload_progress?: number;\n  // Allow to set ready explicitly and independently of internal state\n  __internal_ready?: boolean;\n  // Allow to show the button even if no files were added\n  __internal_show_button?: boolean;\n  // Allow to disable the button\n  __internal_button_disabled?: boolean;\n  // Allow to disable the dropzone\n  __internal_dropzone_disabled?: boolean;\n};\n\nexport function UploadDropzone<\n  TRouter extends FileRouter,\n  TEndpoint extends keyof TRouter,\n>(\n  props: FileRouter extends TRouter\n    ? ErrorMessage<\"You forgot to pass the generic\">\n    : UploadDropzoneProps<TRouter, TEndpoint>,\n) {\n  // Cast back to UploadthingComponentProps<TRouter> to get the correct type\n  // since the ErrorMessage messes it up otherwise\n  const $props = props as unknown as UploadDropzoneProps<TRouter, TEndpoint> &\n    UploadThingInternalProps;\n\n  const {\n    mode = \"manual\",\n    appendOnPaste = false,\n    cn = defaultClassListMerger,\n  } = $props.config ?? {};\n  const acRef = useRef(new AbortController());\n\n  const [files, setFiles] = useState<File[]>([]);\n  const [uploadProgress, setUploadProgress] = useState(\n    $props.__internal_upload_progress ?? 0,\n  );\n\n  const { startUpload, isUploading, routeConfig } = __useUploadThingInternal(\n    resolveMaybeUrlArg($props.url),\n    $props.endpoint,\n    $props.fetch ?? globalThis.fetch,\n    {\n      signal: acRef.current.signal,\n      headers: $props.headers,\n      onClientUploadComplete: (res) => {\n        setFiles([]);\n        void $props.onClientUploadComplete?.(res);\n        setUploadProgress(0);\n      },\n      uploadProgressGranularity: $props.uploadProgressGranularity,\n      onUploadProgress: (p) => {\n        setUploadProgress(p);\n        $props.onUploadProgress?.(p);\n      },\n      onUploadError: $props.onUploadError,\n      onUploadBegin: $props.onUploadBegin,\n      onBeforeUploadBegin: $props.onBeforeUploadBegin,\n    },\n  );\n  const { fileTypes, multiple } = generatePermittedFileTypes(routeConfig);\n\n  const disabled = !!($props.__internal_dropzone_disabled ?? $props.disabled);\n  const state = (() => {\n    const ready =\n      $props.__internal_ready ??\n      ($props.__internal_state === \"ready\" || fileTypes.length > 0);\n\n    if ($props.__internal_state) return $props.__internal_state;\n    if (disabled) return \"disabled\";\n    if (!ready) return \"readying\";\n    if (!isUploading) return \"ready\";\n    return \"uploading\";\n  })();\n\n  const uploadFiles = useCallback(\n    (files: File[]) => {\n      const input = \"input\" in $props ? $props.input : undefined;\n      startUpload(files, input).catch((e) => {\n        if (e instanceof UploadAbortedError) {\n          void $props.onUploadAborted?.();\n        } else {\n          throw e;\n        }\n      });\n    },\n    [$props, startUpload],\n  );\n\n  const onUploadClick = (e: React.MouseEvent) => {\n    if (state === \"uploading\") {\n      e.preventDefault();\n      e.stopPropagation();\n\n      acRef.current.abort();\n      acRef.current = new AbortController();\n      return;\n    }\n    if (mode === \"manual\" && files.length > 0) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      uploadFiles(files);\n    }\n  };\n\n  const onDrop = useCallback(\n    (acceptedFiles: File[]) => {\n      $props.onDrop?.(acceptedFiles);\n      $props.onChange?.(acceptedFiles);\n\n      setFiles(acceptedFiles);\n\n      // If mode is auto, start upload immediately\n      if (mode === \"auto\") uploadFiles(acceptedFiles);\n    },\n    [$props, mode, uploadFiles],\n  );\n\n  const { getRootProps, getInputProps, isDragActive, rootRef } = useDropzone({\n    onDrop,\n    multiple,\n    accept: generateClientDropzoneAccept(fileTypes),\n    disabled,\n  });\n\n  usePaste((event: ClipboardEvent) => {\n    if (!appendOnPaste) return;\n    if (document.activeElement !== rootRef.current) return;\n\n    const pastedFiles = getFilesFromClipboardEvent(event);\n    if (!pastedFiles?.length) return;\n\n    let filesToUpload = pastedFiles;\n    setFiles((prev) => {\n      filesToUpload = [...prev, ...pastedFiles];\n\n      $props.onChange?.(filesToUpload);\n\n      return filesToUpload;\n    });\n\n    $props.onChange?.(filesToUpload);\n\n    if (mode === \"auto\") uploadFiles(filesToUpload);\n  });\n\n  const styleFieldArg = useMemo(\n    () =>\n      ({\n        ready: state !== \"readying\",\n        isUploading: state === \"uploading\",\n        uploadProgress,\n        fileTypes,\n        files,\n        isDragActive,\n      }) as DropzoneStyleFieldCallbackArgs,\n    [fileTypes, files, state, uploadProgress, isDragActive],\n  );\n\n  const getUploadButtonContents = () => {\n    const customContent = contentFieldToContent(\n      $props.content?.button,\n      styleFieldArg,\n    );\n    if (customContent) return customContent;\n\n    switch (state) {\n      case \"readying\": {\n        return \"Loading...\";\n      }\n      case \"uploading\": {\n        if (uploadProgress >= 100) return <Spinner />;\n        return (\n          <span className=\"z-50\">\n            <span className=\"block group-hover:hidden\">\n              {Math.round(uploadProgress)}%\n            </span>\n            <Cancel cn={cn} className=\"hidden size-4 group-hover:block\" />\n          </span>\n        );\n      }\n      case \"disabled\":\n      case \"ready\":\n      default: {\n        if (mode === \"manual\" && files.length > 0) {\n          return `Upload ${files.length} file${files.length === 1 ? \"\" : \"s\"}`;\n        }\n        return `Choose File${multiple ? `(s)` : ``}`;\n      }\n    }\n  };\n\n  return (\n    <div\n      className={cn(\n        \"mt-2 flex flex-col items-center justify-center rounded-lg border border-dashed border-gray-900/25 px-6 py-10 text-center\",\n        isDragActive && \"bg-blue-600/10\",\n        $props.className,\n        styleFieldToClassName($props.appearance?.container, styleFieldArg),\n      )}\n      {...getRootProps()}\n      style={styleFieldToCssObject($props.appearance?.container, styleFieldArg)}\n      data-state={state}\n    >\n      {contentFieldToContent($props.content?.uploadIcon, styleFieldArg) ?? (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 20 20\"\n          className={cn(\n            \"mx-auto block h-12 w-12 align-middle text-gray-400\",\n            styleFieldToClassName($props.appearance?.uploadIcon, styleFieldArg),\n          )}\n          style={styleFieldToCssObject(\n            $props.appearance?.uploadIcon,\n            styleFieldArg,\n          )}\n          data-ut-element=\"upload-icon\"\n          data-state={state}\n        >\n          <path\n            fill=\"currentColor\"\n            fillRule=\"evenodd\"\n            d=\"M5.5 17a4.5 4.5 0 0 1-1.44-8.765a4.5 4.5 0 0 1 8.302-3.046a3.5 3.5 0 0 1 4.504 4.272A4 4 0 0 1 15 17H5.5Zm3.75-2.75a.75.75 0 0 0 1.5 0V9.66l1.95 2.1a.75.75 0 1 0 1.1-1.02l-3.25-3.5a.75.75 0 0 0-1.1 0l-3.25 3.5a.75.75 0 1 0 1.1 1.02l1.95-2.1v4.59Z\"\n            clipRule=\"evenodd\"\n          ></path>\n        </svg>\n      )}\n      <label\n        className={cn(\n          \"relative mt-4 flex w-64 cursor-pointer items-center justify-center text-sm font-semibold leading-6 text-gray-600 focus-within:outline-none focus-within:ring-2 focus-within:ring-blue-600 focus-within:ring-offset-2 hover:text-blue-500\",\n          state === \"ready\" ? \"text-blue-600\" : \"text-gray-500\",\n          styleFieldToClassName($props.appearance?.label, styleFieldArg),\n        )}\n        style={styleFieldToCssObject($props.appearance?.label, styleFieldArg)}\n        data-ut-element=\"label\"\n        data-state={state}\n      >\n        <input className=\"sr-only\" {...getInputProps()} />\n        {contentFieldToContent($props.content?.label, styleFieldArg) ??\n          (state === \"ready\"\n            ? `Choose ${multiple ? \"file(s)\" : \"a file\"} or drag and drop`\n            : `Loading...`)}\n      </label>\n      <div\n        className={cn(\n          \"m-0 h-[1.25rem] text-xs leading-5 text-gray-600\",\n          styleFieldToClassName(\n            $props.appearance?.allowedContent,\n            styleFieldArg,\n          ),\n        )}\n        style={styleFieldToCssObject(\n          $props.appearance?.allowedContent,\n          styleFieldArg,\n        )}\n        data-ut-element=\"allowed-content\"\n        data-state={state}\n      >\n        {contentFieldToContent($props.content?.allowedContent, styleFieldArg) ??\n          allowedContentTextLabelGenerator(routeConfig)}\n      </div>\n\n      <button\n        className={cn(\n          \"group relative mt-4 flex h-10 w-36 items-center justify-center overflow-hidden rounded-md border-none text-base text-white\",\n          \"after:absolute after:left-0 after:h-full after:w-[var(--progress-width)] after:bg-blue-600 after:transition-[width] after:duration-500 after:content-['']\",\n          \"focus-within:ring-2 focus-within:ring-blue-600 focus-within:ring-offset-2\",\n          \"disabled:pointer-events-none\",\n          \"data-[state=disabled]:cursor-not-allowed data-[state=readying]:cursor-not-allowed\",\n          \"data-[state=disabled]:bg-blue-400 data-[state=ready]:bg-blue-600 data-[state=readying]:bg-blue-400 data-[state=uploading]:bg-blue-400\",\n          styleFieldToClassName($props.appearance?.button, styleFieldArg),\n        )}\n        style={\n          {\n            \"--progress-width\": `${uploadProgress}%`,\n            ...styleFieldToCssObject($props.appearance?.button, styleFieldArg),\n          } as CSSProperties\n        }\n        onClick={onUploadClick}\n        data-ut-element=\"button\"\n        data-state={state}\n        type=\"button\"\n        disabled={files.length === 0 || state === \"disabled\"}\n      >\n        {getUploadButtonContents()}\n      </button>\n    </div>\n  );\n}\n\nexport type DropEvent =\n  | Event\n  | React.DragEvent<HTMLElement>\n  | React.ChangeEvent<HTMLElement>;\n\n/**\n * A React hook that creates a drag 'n' drop area.\n *\n * ### Example\n *\n * ```tsx\n * function MyDropzone() {\n *   const { getRootProps, getInputProps } = useDropzone({\n *     onDrop: acceptedFiles => {\n *       // do something with the File objects, e.g. upload to some server\n *     }\n *   });\n *\n *   return (\n *     <div {...getRootProps()}>\n *       <input {...getInputProps()} />\n *       <p>Drag and drop some files here, or click to select files</p>\n *     </div>\n *   )\n * }\n * ```\n */\nexport function useDropzone({\n  accept,\n  disabled = false,\n  maxSize = Number.POSITIVE_INFINITY,\n  minSize = 0,\n  multiple = true,\n  maxFiles = 0,\n  onDrop,\n}: DropzoneOptions) {\n  const acceptAttr = useMemo(() => acceptPropAsAcceptAttr(accept), [accept]);\n\n  const rootRef = useRef<HTMLDivElement>(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const dragTargetsRef = useRef<EventTarget[]>([]);\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    // Update file dialog active state when the window is focused on\n    const onWindowFocus = () => {\n      // Execute the timeout only if the file dialog is opened in the browser\n      if (state.isFileDialogActive) {\n        setTimeout(() => {\n          if (inputRef.current) {\n            const { files } = inputRef.current;\n\n            if (!files?.length) {\n              dispatch({ type: \"closeDialog\" });\n            }\n          }\n        }, 300);\n      }\n    };\n\n    const controller = new AbortController();\n    window.addEventListener(\"focus\", onWindowFocus, {\n      signal: controller.signal,\n    });\n    return () => {\n      controller.abort();\n    };\n  }, [state.isFileDialogActive]);\n\n  useEffect(() => {\n    const onDocumentDrop = (event: DropEvent) => {\n      // If we intercepted an event for our instance, let it propagate down to the instance's onDrop handler\n      if (rootRef.current?.contains(event.target as Node)) return;\n\n      event.preventDefault();\n      dragTargetsRef.current = [];\n    };\n    const onDocumentDragOver = (e: Pick<Event, \"preventDefault\">) =>\n      e.preventDefault();\n    const controller = new AbortController();\n\n    document.addEventListener(\"dragover\", onDocumentDragOver, {\n      capture: false,\n      signal: controller.signal,\n    });\n    document.addEventListener(\"drop\", onDocumentDrop, {\n      capture: false,\n      signal: controller.signal,\n    });\n\n    return () => {\n      controller.abort();\n    };\n  }, []);\n\n  const onDragEnter = useCallback(\n    (event: DragEvent<HTMLElement>) => {\n      event.preventDefault();\n      event.persist();\n\n      dragTargetsRef.current = [...dragTargetsRef.current, event.target];\n\n      if (isEventWithFiles(event)) {\n        Promise.resolve(fromEvent(event))\n          .then((files) => {\n            if (event.isPropagationStopped()) return;\n\n            const fileCount = files.length;\n            const isDragAccept =\n              fileCount > 0 &&\n              allFilesAccepted({\n                files: files as File[],\n                accept: acceptAttr!,\n                minSize,\n                maxSize,\n                multiple,\n                maxFiles,\n              });\n            const isDragReject = fileCount > 0 && !isDragAccept;\n\n            dispatch({\n              type: \"setDraggedFiles\",\n              payload: {\n                isDragAccept,\n                isDragReject,\n                isDragActive: true,\n              },\n            });\n          })\n          .catch(noop);\n      }\n    },\n    [acceptAttr, maxFiles, maxSize, minSize, multiple],\n  );\n\n  const onDragOver = useCallback((event: DragEvent<HTMLElement>) => {\n    event.preventDefault();\n    event.persist();\n\n    const hasFiles = isEventWithFiles(event);\n    if (hasFiles) {\n      try {\n        event.dataTransfer.dropEffect = \"copy\";\n      } catch {\n        noop();\n      }\n    }\n\n    return false;\n  }, []);\n\n  const onDragLeave = useCallback((event: DragEvent<HTMLElement>) => {\n    event.preventDefault();\n    event.persist();\n\n    // Only deactivate once the dropzone and all children have been left\n    const targets = dragTargetsRef.current.filter((target) =>\n      rootRef.current?.contains(target as Node),\n    );\n\n    // Make sure to remove a target present multiple times only once\n    // (Firefox may fire dragenter/dragleave multiple times on the same element)\n    const targetIdx = targets.indexOf(event.target);\n    if (targetIdx !== -1) targets.splice(targetIdx, 1);\n    dragTargetsRef.current = targets;\n    if (targets.length > 0) return;\n\n    dispatch({\n      type: \"setDraggedFiles\",\n      payload: {\n        isDragActive: false,\n        isDragAccept: false,\n        isDragReject: false,\n      },\n    });\n  }, []);\n\n  const setFiles = useCallback(\n    (files: File[]) => {\n      const acceptedFiles: File[] = [];\n\n      files.forEach((file) => {\n        const accepted = isFileAccepted(file, acceptAttr!);\n        const sizeMatch = isValidSize(file, minSize, maxSize);\n\n        if (accepted && sizeMatch) {\n          acceptedFiles.push(file);\n        }\n      });\n\n      if (!isValidQuantity(acceptedFiles, multiple, maxFiles)) {\n        acceptedFiles.splice(0);\n      }\n\n      dispatch({\n        type: \"setFiles\",\n        payload: {\n          acceptedFiles,\n        },\n      });\n\n      onDrop(acceptedFiles);\n    },\n    [acceptAttr, maxFiles, maxSize, minSize, multiple, onDrop],\n  );\n\n  const onDropCb = useCallback(\n    (event: ChangeEvent<HTMLElement>) => {\n      event.preventDefault();\n      event.persist();\n\n      dragTargetsRef.current = [];\n\n      if (isEventWithFiles(event)) {\n        Promise.resolve(fromEvent(event))\n          .then((files) => {\n            if (event.isPropagationStopped()) return;\n            setFiles(files as File[]);\n          })\n          .catch(noop);\n      }\n      dispatch({ type: \"reset\" });\n    },\n    [setFiles],\n  );\n\n  const openFileDialog = useCallback(() => {\n    if (inputRef.current) {\n      dispatch({ type: \"openDialog\" });\n      inputRef.current.value = \"\";\n      inputRef.current.click();\n    }\n  }, []);\n\n  // Cb to open the file dialog when SPACE/ENTER occurs on the dropzone\n  const onKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      // Ignore keyboard events bubbling up the DOM tree\n      if (!rootRef.current?.isEqualNode(event.target as Node)) return;\n\n      if (isEnterOrSpace(event)) {\n        event.preventDefault();\n        openFileDialog();\n      }\n    },\n    [openFileDialog],\n  );\n\n  const onInputElementClick = useCallback(\n    (e: MouseEvent) => {\n      e.stopPropagation();\n      if (state.isFileDialogActive) {\n        e.preventDefault();\n      }\n    },\n    [state.isFileDialogActive],\n  );\n\n  // Update focus state for the dropzone\n  const onFocus = useCallback(() => dispatch({ type: \"focus\" }), []);\n  const onBlur = useCallback(() => dispatch({ type: \"blur\" }), []);\n\n  const onClick = useCallback(() => {\n    // In IE11/Edge the file-browser dialog is blocking, therefore,\n    // use setTimeout() to ensure React can handle state changes\n    if (isIeOrEdge()) setTimeout(openFileDialog, 0);\n    else openFileDialog();\n  }, [openFileDialog]);\n\n  const getRootProps = useMemo(\n    () => (): HTMLProps<HTMLDivElement> => ({\n      ref: rootRef,\n      role: \"presentation\",\n      ...(!disabled\n        ? {\n            tabIndex: 0,\n            onKeyDown,\n            onFocus,\n            onBlur,\n            onClick,\n            onDragEnter,\n            onDragOver,\n            onDragLeave,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            onDrop: onDropCb as any,\n          }\n        : {}),\n    }),\n    [\n      disabled,\n      onBlur,\n      onClick,\n      onDragEnter,\n      onDragLeave,\n      onDragOver,\n      onDropCb,\n      onFocus,\n      onKeyDown,\n    ],\n  );\n\n  const getInputProps = useMemo(\n    () => (): HTMLProps<HTMLInputElement> => ({\n      ref: inputRef,\n      type: \"file\",\n      style: { display: \"none\" },\n      accept: acceptAttr,\n      multiple,\n      tabIndex: -1,\n      ...(!disabled\n        ? {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            onChange: onDropCb as any,\n            onClick: onInputElementClick,\n          }\n        : {}),\n    }),\n    [acceptAttr, multiple, onDropCb, onInputElementClick, disabled],\n  );\n\n  return {\n    ...state,\n    getRootProps,\n    getInputProps,\n    rootRef,\n  };\n}\n","\"use client\";\n\nimport type { ErrorMessage } from \"@uploadthing/shared\";\nimport type { FileRouter } from \"uploadthing/types\";\n\nimport type { UploadthingComponentProps } from \"../types\";\nimport { UploadButton } from \"./button\";\nimport { UploadDropzone } from \"./dropzone\";\n\nexport function Uploader<\n  TRouter extends FileRouter,\n  TEndpoint extends keyof TRouter,\n>(\n  props: FileRouter extends TRouter\n    ? ErrorMessage<\"You forgot to pass the generic\">\n    : UploadthingComponentProps<TRouter, TEndpoint>,\n) {\n  return (\n    <>\n      <div className=\"flex flex-col items-center justify-center gap-4\">\n        <span className=\"text-center text-4xl font-bold\">\n          {`Upload a file using a button:`}\n        </span>\n        {/* @ts-expect-error - this is validated above */}\n        <UploadButton<TRouter> {...props} />\n      </div>\n      <div className=\"flex flex-col items-center justify-center gap-4\">\n        <span className=\"text-center text-4xl font-bold\">\n          {`...or using a dropzone:`}\n        </span>\n        {/* @ts-expect-error - this is validated above */}\n        <UploadDropzone<TRouter> {...props} />\n      </div>\n    </>\n  );\n}\n","import {\n  resolveMaybeUrlArg,\n  warnIfInvalidPeerDependency,\n} from \"@uploadthing/shared\";\nimport { version as uploadthingClientVersion } from \"uploadthing/client\";\nimport type { FileRouter } from \"uploadthing/types\";\n\nimport { peerDependencies } from \"../../package.json\";\nimport type {\n  GenerateTypedHelpersOptions,\n  UploadthingComponentProps,\n} from \"../types\";\nimport type { UploadButtonProps } from \"./button\";\nimport { UploadButton } from \"./button\";\nimport type { UploadDropzoneProps } from \"./dropzone\";\nimport { UploadDropzone } from \"./dropzone\";\nimport { Uploader } from \"./uploader\";\n\nexport { UploadButton, UploadDropzone, Uploader };\n\nexport const generateUploadButton = <TRouter extends FileRouter>(\n  opts?: GenerateTypedHelpersOptions,\n) => {\n  warnIfInvalidPeerDependency(\n    \"@uploadthing/react\",\n    peerDependencies.uploadthing,\n    uploadthingClientVersion,\n  );\n\n  const url = resolveMaybeUrlArg(opts?.url);\n  const fetch = opts?.fetch ?? globalThis.fetch;\n\n  const TypedButton = <TEndpoint extends keyof TRouter>(\n    props: Omit<\n      UploadButtonProps<TRouter, TEndpoint>,\n      keyof GenerateTypedHelpersOptions\n    >,\n  ) => (\n    <UploadButton<TRouter, TEndpoint>\n      {...(props as any)}\n      url={url}\n      fetch={fetch}\n    />\n  );\n  return TypedButton;\n};\n\nexport const generateUploadDropzone = <TRouter extends FileRouter>(\n  opts?: GenerateTypedHelpersOptions,\n) => {\n  warnIfInvalidPeerDependency(\n    \"@uploadthing/react\",\n    peerDependencies.uploadthing,\n    uploadthingClientVersion,\n  );\n\n  const url = resolveMaybeUrlArg(opts?.url);\n  const fetch = opts?.fetch ?? globalThis.fetch;\n\n  const TypedDropzone = <TEndpoint extends keyof TRouter>(\n    props: Omit<\n      UploadDropzoneProps<TRouter, TEndpoint>,\n      keyof GenerateTypedHelpersOptions\n    >,\n  ) => (\n    <UploadDropzone<TRouter, TEndpoint>\n      {...(props as any)}\n      url={url}\n      fetch={fetch}\n    />\n  );\n  return TypedDropzone;\n};\n\nexport const generateUploader = <TRouter extends FileRouter>(\n  opts?: GenerateTypedHelpersOptions,\n) => {\n  warnIfInvalidPeerDependency(\n    \"@uploadthing/react\",\n    peerDependencies.uploadthing,\n    uploadthingClientVersion,\n  );\n\n  const url = resolveMaybeUrlArg(opts?.url);\n  const fetch = opts?.fetch ?? globalThis.fetch;\n\n  const TypedUploader = <TEndpoint extends keyof TRouter>(\n    props: Omit<\n      UploadthingComponentProps<TRouter, TEndpoint>,\n      keyof GenerateTypedHelpersOptions\n    >,\n  ) => (\n    <Uploader<TRouter, TEndpoint> {...(props as any)} url={url} fetch={fetch} />\n  );\n  return TypedUploader;\n};\n"],"names":["callback: PasteCallback","props: FileRouter extends TRouter\n    ? ErrorMessage<\"You forgot to pass the generic\">\n    : UploadButtonProps<TRouter, TEndpoint>","files: File[]","files","e: React.MouseEvent","e: React.ChangeEvent<HTMLInputElement>","props: FileRouter extends TRouter\n    ? ErrorMessage<\"You forgot to pass the generic\">\n    : UploadDropzoneProps<TRouter, TEndpoint>","files: File[]","files","e: React.MouseEvent","acceptedFiles: File[]","event: ClipboardEvent","event: DropEvent","e: Pick<Event, \"preventDefault\">","event: DragEvent<HTMLElement>","event: ChangeEvent<HTMLElement>","event: KeyboardEvent","e: MouseEvent","props: FileRouter extends TRouter\n    ? ErrorMessage<\"You forgot to pass the generic\">\n    : UploadthingComponentProps<TRouter, TEndpoint>","opts?: GenerateTypedHelpersOptions","uploadthingClientVersion","props: Omit<\n      UploadButtonProps<TRouter, TEndpoint>,\n      keyof GenerateTypedHelpersOptions\n    >","props: Omit<\n      UploadDropzoneProps<TRouter, TEndpoint>,\n      keyof GenerateTypedHelpersOptions\n    >","props: Omit<\n      UploadthingComponentProps<TRouter, TEndpoint>,\n      keyof GenerateTypedHelpersOptions\n    >"],"mappings":"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","ignoreList":[0,1,2,3,4,5],"debugId":null}}]
}